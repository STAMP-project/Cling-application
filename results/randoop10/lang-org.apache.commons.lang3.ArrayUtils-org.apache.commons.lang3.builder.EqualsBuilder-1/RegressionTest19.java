import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest19 {

    public static boolean debug = false;

    @Test
    public void test09501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09501");
        boolean[] booleanArray4 = new boolean[] { false, true, true, true };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray4);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray4);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[true, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, true, true, true]");
    }

    @Test
    public void test09502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09502");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder37.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder37.append((byte) -1, (byte) 100);
        boolean[] booleanArray44 = new boolean[] { true };
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray44, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray49 = new boolean[] { true };
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray49, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray52, (int) '#', (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder42.append(booleanArray44, booleanArray52);
        double[] doubleArray60 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray60);
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.add(doubleArray60, (double) (byte) 10);
        int int66 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray60, (double) 0L, 0);
        double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray60);
        double[] doubleArray70 = new double[] { 4, 0.0f };
        int int72 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray70, (double) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder56.append(doubleArray60, doubleArray70);
        int int75 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray60, (double) 0.0f);
        int int77 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray60, (double) ' ');
        int int80 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray60, (double) '4', (int) 'a');
        int int84 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray60, 0.0d, (int) (short) 100, (-1.0d));
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[4.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
    }

    @Test
    public void test09503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09503");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray8, (short) 0);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray10, (int) ' ', 0);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray13);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray13, (short) 10);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) 0);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray18);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray18);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test09504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09504");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray5, 4, (-1));
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray11, (int) (byte) -1, (int) '4');
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.clone(shortArray14);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray14);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
    }

    @Test
    public void test09505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09505");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, false);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray13, true);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test09506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09506");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray6);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray6);
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray6, (float) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray6);
        java.lang.String str21 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) floatArray6, "{}");
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray6, (float) 10);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray6);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray24, 0.0f);
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray24, (float) (byte) 100, (int) (short) 10);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray24, (float) (short) 10);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{1.0,-1.0}" + "'", str21, "{1.0,-1.0}");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test09507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09507");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 10, (byte) 0);
        java.lang.Boolean boolean8 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder3.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder11.append(true, false);
        float[] floatArray18 = new float[] { (short) 100, 0, 10 };
        float[] floatArray21 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray21);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(floatArray21, (float) 0);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.add(floatArray21, 10.0f);
        float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray18, floatArray21);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray21);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(floatArray21, (float) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray21);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(floatArray21, (float) (byte) 1);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray21, (float) 4);
        java.lang.Float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray36);
        float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray37, (float) 'a');
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray39, (float) 5);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder14.append(floatArray21, floatArray39);
        java.lang.Character[] charArray48 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray48, ' ');
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray50);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray50);
        java.lang.Character[] charArray58 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray58, ' ');
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray60);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray50, charArray60);
        java.lang.Character[] charArray68 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray68, ' ');
        char[] charArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray70);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray71);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray50, charArray71);
        char[] charArray75 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray50, ' ');
        java.lang.Character[] charArray77 = new java.lang.Character[] { '#' };
        char[] charArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray77, ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder14.append(charArray75, charArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder14.append((byte) 100, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(9, (int) (byte) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "4a44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "4a44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[4, a, 4, 4]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[#]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
    }

    @Test
    public void test09508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09508");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((long) (byte) 10, (long) (byte) 10);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean29 = equalsBuilder28.isEquals();
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.String[] strArray34 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray35 = org.apache.commons.lang3.ArrayUtils.addAll(strArray30, strArray34);
        java.lang.String[] strArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray30);
        java.lang.Character[] charArray42 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray42, ' ');
        java.lang.Character[] charArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder28.append((java.lang.Object[]) strArray30, (java.lang.Object[]) charArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder21.append((java.lang.Object[]) byteArray23, (java.lang.Object[]) strArray30);
        java.lang.Byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray23, (java.lang.Object) byteArray48, (int) (byte) 10);
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray48, (byte) 100);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray48, (byte) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
    }

    @Test
    public void test09509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09509");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, (int) (short) 10, (-1));
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray6, (long) (-1));
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.add(longArray11, (long) 'a');
        java.lang.Long[] longArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray14);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray14);
        long[] longArray19 = org.apache.commons.lang3.ArrayUtils.subarray(longArray16, (int) (short) -1, (int) '#');
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray16);
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray20, 0L);
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.add(longArray20, (long) (short) 100);
        long[] longArray25 = org.apache.commons.lang3.ArrayUtils.addAll(longArray13, longArray20);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray20, 0L);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1, 97]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[100]");
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1, 97]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test09510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09510");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean2 = objEntryList0.remove((java.lang.Object) byteArray1);
        byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) -1);
        byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray4, 5, (int) '4');
        byte[] byteArray8 = null;
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.add(byteArray8, (byte) 10);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray10);
        byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray7, byteArray11);
        java.lang.Byte[] byteArray17 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray17, (byte) 100);
        java.lang.Byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray19);
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray20);
        java.lang.Byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray20);
        byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray20);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray20, (byte) 0);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) byteArray7, (java.lang.Object) (byte) 0);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray7, (byte) 0, (int) (short) 0);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray7);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[10]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100, 1, 100]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test09511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09511");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        java.lang.Character[] charArray21 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, 'a');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.clone(charArray24);
        java.lang.Character[] charArray31 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray31, 'a');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.add(charArray33, '#');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.remove(charArray33, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.append(charArray25, charArray33);
        short[] shortArray43 = new short[] { (byte) 0, (byte) 1, (short) -1, (byte) -1 };
        java.lang.Short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray43);
        short[] shortArray45 = null;
        java.lang.Short[] shortArray47 = new java.lang.Short[] { (short) 1 };
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray47);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray47);
        short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray47, (short) (byte) 100);
        short[] shortArray52 = new short[] {};
        java.lang.Short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray52);
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray51, shortArray52);
        java.lang.Short[] shortArray56 = new java.lang.Short[] { (short) 1 };
        short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray56);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray56);
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray56, (short) (byte) 100);
        short[] shortArray61 = new short[] {};
        java.lang.Short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray61);
        short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray60, shortArray61);
        short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray54, shortArray61);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray45, shortArray64);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray65, 3, 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder0.append(shortArray43, shortArray68);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray68);
        int int71 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) shortArray70);
        java.lang.Short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray70);
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray72, (short) (byte) 100);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray74);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[1]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[1]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[1]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[1]");
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[]");
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[1]");
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[1]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[1]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[]");
    }

    @Test
    public void test09512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09512");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        int[] intArray39 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.clone(intArray39);
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.add(intArray39, (int) 'a');
        int[] intArray47 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.clone(intArray47);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray48);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray42, intArray48);
        boolean boolean51 = objEntrySet32.remove((java.lang.Object) intArray42);
        int[] intArray52 = org.apache.commons.lang3.ArrayUtils.clone(intArray42);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray52, (int) (short) 100, (int) (short) 1);
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray52, (int) (short) 10);
        int int60 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray57, (int) '#', (int) 'a');
        int[] intArray62 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray57, 9);
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray62, 13);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test09513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09513");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        float[] floatArray4 = new float[] { (short) 100, 0, 10 };
        float[] floatArray7 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray7);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(floatArray7, (float) 0);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.add(floatArray7, 10.0f);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray4, floatArray7);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(floatArray7, (float) (byte) 10);
        boolean boolean16 = objEntryList0.equals((java.lang.Object) boolean15);
        boolean boolean17 = objEntryList0.isEmpty();
        java.lang.Object[] objArray18 = objEntryList0.toArray();
        java.lang.String str19 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) objEntryList0);
        java.lang.String[][] strArray20 = new java.lang.String[][] {};
        java.lang.String[][] strArray21 = new java.lang.String[][] {};
        java.lang.String[][] strArray22 = new java.lang.String[][] {};
        java.lang.String[][] strArray23 = new java.lang.String[][] {};
        java.lang.String[][] strArray24 = new java.lang.String[][] {};
        java.lang.String[][][] strArray25 = new java.lang.String[][][] { strArray20, strArray21, strArray22, strArray23, strArray24 };
        java.lang.String[][] strArray26 = new java.lang.String[][] {};
        java.lang.String[][] strArray27 = new java.lang.String[][] {};
        java.lang.String[][] strArray28 = new java.lang.String[][] {};
        java.lang.String[][] strArray29 = new java.lang.String[][] {};
        java.lang.String[][] strArray30 = new java.lang.String[][] {};
        java.lang.String[][][] strArray31 = new java.lang.String[][][] { strArray26, strArray27, strArray28, strArray29, strArray30 };
        java.lang.String[][] strArray32 = new java.lang.String[][] {};
        java.lang.String[][] strArray33 = new java.lang.String[][] {};
        java.lang.String[][] strArray34 = new java.lang.String[][] {};
        java.lang.String[][] strArray35 = new java.lang.String[][] {};
        java.lang.String[][] strArray36 = new java.lang.String[][] {};
        java.lang.String[][][] strArray37 = new java.lang.String[][][] { strArray32, strArray33, strArray34, strArray35, strArray36 };
        java.lang.String[][] strArray38 = new java.lang.String[][] {};
        java.lang.String[][] strArray39 = new java.lang.String[][] {};
        java.lang.String[][] strArray40 = new java.lang.String[][] {};
        java.lang.String[][] strArray41 = new java.lang.String[][] {};
        java.lang.String[][] strArray42 = new java.lang.String[][] {};
        java.lang.String[][][] strArray43 = new java.lang.String[][][] { strArray38, strArray39, strArray40, strArray41, strArray42 };
        java.lang.String[][][][] strArray44 = new java.lang.String[][][][] { strArray25, strArray31, strArray37, strArray43 };
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(strArray44);
        java.lang.CharSequence[][][][] charSequenceArray46 = org.apache.commons.lang3.ArrayUtils.toArray((java.lang.CharSequence[][][][]) strArray44);
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray47 = objEntryList0.toArray((java.lang.Comparable<java.lang.String>[][][][]) strArray44);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(strArray44);
        java.lang.String[][] strArray49 = new java.lang.String[][] {};
        java.lang.String[][] strArray50 = new java.lang.String[][] {};
        java.lang.String[][] strArray51 = new java.lang.String[][] {};
        java.lang.String[][] strArray52 = new java.lang.String[][] {};
        java.lang.String[][] strArray53 = new java.lang.String[][] {};
        java.lang.String[][][] strArray54 = new java.lang.String[][][] { strArray49, strArray50, strArray51, strArray52, strArray53 };
        java.lang.String[][] strArray55 = new java.lang.String[][] {};
        java.lang.String[][] strArray56 = new java.lang.String[][] {};
        java.lang.String[][] strArray57 = new java.lang.String[][] {};
        java.lang.String[][] strArray58 = new java.lang.String[][] {};
        java.lang.String[][] strArray59 = new java.lang.String[][] {};
        java.lang.String[][][] strArray60 = new java.lang.String[][][] { strArray55, strArray56, strArray57, strArray58, strArray59 };
        java.lang.String[][] strArray61 = new java.lang.String[][] {};
        java.lang.String[][] strArray62 = new java.lang.String[][] {};
        java.lang.String[][] strArray63 = new java.lang.String[][] {};
        java.lang.String[][] strArray64 = new java.lang.String[][] {};
        java.lang.String[][] strArray65 = new java.lang.String[][] {};
        java.lang.String[][][] strArray66 = new java.lang.String[][][] { strArray61, strArray62, strArray63, strArray64, strArray65 };
        java.lang.String[][] strArray67 = new java.lang.String[][] {};
        java.lang.String[][] strArray68 = new java.lang.String[][] {};
        java.lang.String[][] strArray69 = new java.lang.String[][] {};
        java.lang.String[][] strArray70 = new java.lang.String[][] {};
        java.lang.String[][] strArray71 = new java.lang.String[][] {};
        java.lang.String[][][] strArray72 = new java.lang.String[][][] { strArray67, strArray68, strArray69, strArray70, strArray71 };
        java.lang.String[][][][] strArray73 = new java.lang.String[][][][] { strArray54, strArray60, strArray66, strArray72 };
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(strArray73);
        java.lang.CharSequence[][][][] charSequenceArray76 = org.apache.commons.lang3.ArrayUtils.remove((java.lang.CharSequence[][][][]) strArray73, (int) (short) 1);
        java.lang.String[][][][] strArray77 = org.apache.commons.lang3.ArrayUtils.clone(strArray73);
        java.lang.String[][][][] strArray78 = org.apache.commons.lang3.ArrayUtils.addAll(strArray44, strArray77);
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray79 = org.apache.commons.lang3.ArrayUtils.clone((java.lang.Comparable<java.lang.String>[][][][]) strArray44);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[]" + "'", str19, "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertNotNull(strComparableArray47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(charSequenceArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strComparableArray79);
    }

    @Test
    public void test09514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09514");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream35 = objEntrySet32.parallelStream();
        java.lang.Boolean[][] booleanArray36 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray43 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray50 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray57 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray64 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray65 = new java.lang.Boolean[][] { booleanArray43, booleanArray50, booleanArray57, booleanArray64 };
        java.lang.Boolean[][] booleanArray66 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray36, booleanArray65);
        java.util.Map<java.lang.Object, java.lang.Object> objMap67 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray36);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = objMap67.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList69 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean71 = objEntryList69.remove((java.lang.Object) byteArray70);
        boolean boolean72 = objEntrySet68.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList69);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor73 = objEntrySet68.iterator();
        java.lang.Object[] objArray74 = objEntrySet68.toArray();
        boolean boolean76 = objEntrySet68.remove((java.lang.Object) '4');
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList77 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor78 = objEntryList77.iterator();
        java.lang.String[] strArray79 = new java.lang.String[] {};
        java.lang.String[] strArray83 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray84 = org.apache.commons.lang3.ArrayUtils.addAll(strArray79, strArray83);
        java.lang.Comparable<java.lang.String>[] strComparableArray85 = objEntryList77.toArray((java.lang.Comparable<java.lang.String>[]) strArray79);
        boolean boolean86 = objEntrySet68.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList77);
        boolean boolean87 = objEntrySet32.removeAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntrySet68);
        int int88 = objEntrySet68.size();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor89 = objEntrySet68.iterator();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEntryStream35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNotNull(objMap67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objEntryItor73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objEntryItor78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strComparableArray85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(objEntryItor89);
    }

    @Test
    public void test09515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09515");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray5);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(intArray5, (int) (byte) -1);
        java.lang.Integer[] intArray9 = org.apache.commons.lang3.ArrayUtils.toObject(intArray5);
        int[] intArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray9, 4);
        java.lang.Object obj12 = null;
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) intArray9, obj12);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test09516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09516");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, '#');
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, '4', 100);
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.remove(charArray9, 0);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4, 4, a, 4]");
    }

    @Test
    public void test09517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09517");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.String[] strArray9 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray10 = org.apache.commons.lang3.ArrayUtils.addAll(strArray5, strArray9);
        java.lang.String[] strArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray5);
        java.lang.Character[] charArray17 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17, ' ');
        java.lang.Character[] charArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((java.lang.Object[]) strArray5, (java.lang.Object[]) charArray20);
        java.lang.Character[] charArray27 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray27, 'a');
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.add(charArray29, '#');
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.subarray(charArray29, (int) (byte) -1, (int) '#');
        java.lang.Character[] charArray40 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray40);
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray40, 'a');
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.clone(charArray43);
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.addAll(charArray29, charArray43);
        java.lang.Character[] charArray46 = org.apache.commons.lang3.ArrayUtils.toObject(charArray29);
        org.apache.commons.lang3.ArrayUtils arrayUtils47 = new org.apache.commons.lang3.ArrayUtils();
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray48 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils47 };
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray50 = org.apache.commons.lang3.ArrayUtils.remove(arrayUtilsArray48, (int) (short) 0);
        java.lang.Character[] charArray56 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray56, ' ');
        char[] charArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.String[] strArray64 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray65 = org.apache.commons.lang3.ArrayUtils.addAll(strArray60, strArray64);
        boolean boolean66 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) arrayUtilsArray48, (java.lang.Object) charArray58, strArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder3.append(charArray29, charArray58);
        char[] charArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray29);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertNotNull(arrayUtilsArray48);
        org.junit.Assert.assertNotNull(arrayUtilsArray50);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a,  , a,  , #]");
    }

    @Test
    public void test09518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09518");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.add(booleanArray11, 0, true);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray14, true, (int) ' ');
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray14, 11, 0);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray14, false);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[true, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test09519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09519");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((float) (short) 100, (float) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.append((short) 1, (short) (byte) -1);
        double[] doubleArray13 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray13);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray14, (java.lang.Object) ' ');
        java.lang.Object obj17 = null;
        java.lang.Object[] objArray18 = org.apache.commons.lang3.ArrayUtils.add((java.lang.Object[]) doubleArray14, obj17);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray14, (double) 0);
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray14, (double) (byte) 10);
        boolean boolean24 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder3, (java.lang.Object) (byte) 10, false);
        short[] shortArray25 = new short[] {};
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray26);
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { 10, 3, 10 };
        java.lang.Integer[] intArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray31);
        java.lang.Integer[] intArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray31);
        java.lang.Class<?>[] wildcardClassArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean39 = equalsBuilder38.isEquals();
        java.lang.String[] strArray40 = new java.lang.String[] {};
        java.lang.String[] strArray44 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray45 = org.apache.commons.lang3.ArrayUtils.addAll(strArray40, strArray44);
        java.lang.String[] strArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray40);
        java.lang.Character[] charArray52 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray52, ' ');
        java.lang.Character[] charArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder38.append((java.lang.Object[]) strArray40, (java.lang.Object[]) charArray55);
        char[] charArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray55);
        java.lang.Character[] charArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray55);
        java.lang.Character[] charArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray55);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray34, (java.lang.Object[]) charArray59);
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray33, (java.lang.Object) wildcardClassArray34);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(wildcardClassArray34);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder3.append((java.lang.Object[]) shortArray26, (java.lang.Object[]) wildcardClassArray34);
        java.lang.Short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray26);
        java.lang.Short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray26);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray65);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
    }

    @Test
    public void test09520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09520");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) 0);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, 10.0f);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) (-1));
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray2, (float) 10, 7);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, (float) 3);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) 0);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray2);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray2, (float) (byte) 1);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0, 3.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test09521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09521");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean2 = objEntryList0.remove((java.lang.Object) byteArray1);
        byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) 1);
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) 100);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray6, (byte) 10, (int) (byte) -1);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, (byte) 100);
        byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.clone(byteArray6);
        byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.clone(byteArray6);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray6);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
    }

    @Test
    public void test09522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09522");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray4, (byte) 100);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, (byte) 10);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray6, 0, (int) (short) 1);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList12 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean14 = objEntryList12.remove((java.lang.Object) byteArray13);
        byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 1);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray17);
        byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.clone(byteArray18);
        byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.clone(byteArray19);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray6, byteArray19);
        byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.remove(byteArray6, (int) (short) 1);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray6, (byte) -1);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList26 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean28 = objEntryList26.remove((java.lang.Object) byteArray27);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray27, (byte) 1);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray27);
        byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray27, (byte) 100);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray33, (byte) 0);
        byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.clone(byteArray33);
        byte[] byteArray37 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray6, byteArray33);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray6);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100, 1, 100, 10]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 1, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-1, 100, 1, 100]");
    }

    @Test
    public void test09523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09523");
        byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray0);
        int int3 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) 10);
        java.lang.Byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray0);
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) 100);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
    }

    @Test
    public void test09524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09524");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray6, (short) (byte) 10, (int) (byte) 10);
        java.lang.Short[] shortArray13 = new java.lang.Short[] { (short) 1 };
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray13);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray14, (short) 10);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray14, 1, (short) (byte) -1);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray14);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray14, (short) 10, (int) (short) 10);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray6, shortArray14);
        java.lang.Short[] shortArray26 = new java.lang.Short[] { (short) 1 };
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray26);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray26);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray26, (short) (byte) 100);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(shortArray30, (short) 1);
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray6, shortArray30);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray33, (-1), 0);
        java.lang.Short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray36);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray36, (short) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1, -1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[1]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
    }

    @Test
    public void test09525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09525");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray4, (java.lang.Object) ' ');
        java.lang.Object obj7 = null;
        java.lang.Object[] objArray8 = org.apache.commons.lang3.ArrayUtils.add((java.lang.Object[]) doubleArray4, obj7);
        java.lang.Object obj9 = null;
        java.lang.Object[] objArray10 = org.apache.commons.lang3.ArrayUtils.removeElement((java.lang.Object[]) doubleArray4, obj9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4);
        double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4, (double) (byte) 1);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray13);
        java.lang.Double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray14);
        java.lang.Double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        java.lang.Double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        java.lang.Byte[] byteArray22 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray22, (byte) 100);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.add(byteArray24, (byte) 10);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray17, (java.lang.Object) (byte) 10);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray17);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, 100, 1, 100, 10]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 100.0]");
    }

    @Test
    public void test09526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09526");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray4, (byte) 100);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, (byte) 10);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray6, 0, (int) (short) 1);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList12 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean14 = objEntryList12.remove((java.lang.Object) byteArray13);
        byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 1);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray17);
        byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.clone(byteArray18);
        byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.clone(byteArray19);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray6, byteArray19);
        byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.remove(byteArray6, (int) (short) 1);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray23, (int) (byte) 1, (int) (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray26);
        byte[] byteArray28 = null;
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray28);
        byte[] byteArray33 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray33, (byte) 10, (int) (short) -1);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray33, (byte) 10);
        byte[] byteArray39 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray28, byteArray33);
        byte[] byteArray42 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray33, (int) (byte) 0, (int) (short) 0);
        byte[] byteArray43 = null;
        byte[] byteArray44 = null;
        byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray44);
        byte[] byteArray49 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray49, (byte) 10, (int) (short) -1);
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray49, (byte) 10);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray45, byteArray49);
        byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray45, 100, 10);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray43, byteArray45);
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray43);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.add(byteArray60, (byte) 10);
        byte[] byteArray63 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray42, byteArray62);
        java.lang.String str64 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) byteArray63);
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.clone(byteArray63);
        int int67 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray63, (byte) 0);
        java.lang.Byte[] byteArray68 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray68);
        byte[] byteArray72 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray69, 6, 11);
        byte[] byteArray73 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray63, byteArray69);
        byte[] byteArray74 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray26, byteArray69);
        int int77 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray74, (byte) 100, 5);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100, 1, 100, 10]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[10]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[10]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{10}" + "'", str64, "{10}");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[10]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[10]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
    }

    @Test
    public void test09527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09527");
        float[][][][][][][] floatArray0 = new float[][][][][][][] {};
        double[] doubleArray4 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray4);
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.add(doubleArray4, (double) (byte) 10);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray4, (double) 0L, 0);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray4);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray4, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.add(doubleArray4, (double) 4);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray4, 100.0d, (int) ' ', (double) 0L);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray4, (double) 0.0f, 10);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray4, 100.0d, (-1.0d));
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray4, 0.0d);
        float[][][][][][][] floatArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray0, (java.lang.Object) doubleArray4);
        float[][][][][][][] floatArray30 = org.apache.commons.lang3.ArrayUtils.clone(floatArray0);
        int int31 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) floatArray0);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray0);
        org.junit.Assert.assertNotNull(floatArray0);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0, 4.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test09528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09528");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.lang.Character[] charArray38 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray38, 'a');
        char[] charArray42 = org.apache.commons.lang3.ArrayUtils.add(charArray40, '#');
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.remove(charArray40, (int) (short) 0);
        java.lang.Object obj45 = objMap31.remove((java.lang.Object) charArray44);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = objMap31.entrySet();
        java.lang.Boolean[][] booleanArray47 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray54 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray61 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray68 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray75 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray76 = new java.lang.Boolean[][] { booleanArray54, booleanArray61, booleanArray68, booleanArray75 };
        java.lang.Boolean[][] booleanArray77 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray47, booleanArray76);
        java.util.Map<java.lang.Object, java.lang.Object> objMap78 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray47);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet79 = objMap78.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList80 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray81 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean82 = objEntryList80.remove((java.lang.Object) byteArray81);
        boolean boolean83 = objEntrySet79.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList80);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor84 = objEntrySet79.iterator();
        boolean boolean85 = objEntrySet46.remove((java.lang.Object) objEntrySet79);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream86 = objEntrySet79.parallelStream();
        java.lang.Object[] objArray87 = objEntrySet79.toArray();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream88 = objEntrySet79.stream();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream89 = objEntrySet79.stream();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ , a,  , #]");
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertNotNull(objMap78);
        org.junit.Assert.assertNotNull(objEntrySet79);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objEntryItor84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objEntryStream86);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertNotNull(objEntryStream88);
        org.junit.Assert.assertNotNull(objEntryStream89);
    }

    @Test
    public void test09529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09529");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (short) 0);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray10);
        long[] longArray17 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.clone(longArray17);
        java.lang.Long[] longArray19 = org.apache.commons.lang3.ArrayUtils.toObject(longArray18);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.clone(longArray18);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray20, (long) (short) 0);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.addAll(longArray11, longArray20);
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.clone(longArray11);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray24);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray24);
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray24, 1L, (int) (byte) 100);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray24);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[0, 1, 10, 10, 100, 32]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test09530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09530");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor1 = objEntryList0.iterator();
        java.lang.String[] strArray2 = new java.lang.String[] {};
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray7 = org.apache.commons.lang3.ArrayUtils.addAll(strArray2, strArray6);
        java.lang.Comparable<java.lang.String>[] strComparableArray8 = objEntryList0.toArray((java.lang.Comparable<java.lang.String>[]) strArray2);
        java.lang.Boolean[][] booleanArray9 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray23 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray30 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray37 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray38 = new java.lang.Boolean[][] { booleanArray16, booleanArray23, booleanArray30, booleanArray37 };
        java.lang.Boolean[][] booleanArray39 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray9, booleanArray38);
        java.util.Map<java.lang.Object, java.lang.Object> objMap40 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray9);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = objMap40.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList42 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean44 = objEntryList42.remove((java.lang.Object) byteArray43);
        boolean boolean45 = objEntrySet41.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList42);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor46 = objEntrySet41.iterator();
        java.lang.Object[] objArray47 = objEntrySet41.toArray();
        boolean boolean49 = objEntrySet41.remove((java.lang.Object) '4');
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList50 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor51 = objEntryList50.iterator();
        java.lang.String[] strArray52 = new java.lang.String[] {};
        java.lang.String[] strArray56 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray57 = org.apache.commons.lang3.ArrayUtils.addAll(strArray52, strArray56);
        java.lang.Comparable<java.lang.String>[] strComparableArray58 = objEntryList50.toArray((java.lang.Comparable<java.lang.String>[]) strArray52);
        boolean boolean59 = objEntrySet41.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList50);
        boolean boolean60 = objEntryList0.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList50);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream61 = objEntryList50.stream();
        int int62 = objEntryList50.size();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList63 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Object[] objArray64 = objEntryList63.toArray();
        int int65 = objEntryList63.size();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList66 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList67 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor68 = objEntryList67.iterator();
        java.lang.String[] strArray69 = new java.lang.String[] {};
        java.lang.String[] strArray73 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray74 = org.apache.commons.lang3.ArrayUtils.addAll(strArray69, strArray73);
        java.lang.Comparable<java.lang.String>[] strComparableArray75 = objEntryList67.toArray((java.lang.Comparable<java.lang.String>[]) strArray69);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream76 = objEntryList67.parallelStream();
        boolean boolean77 = objEntryList66.addAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList67);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream78 = objEntryList67.stream();
        boolean boolean79 = objEntryList63.removeAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList67);
        objEntryList67.clear();
        boolean boolean81 = objEntryList50.removeAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList67);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream82 = objEntryList50.stream();
        org.junit.Assert.assertNotNull(objEntryItor1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strComparableArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(objMap40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objEntryItor46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objEntryItor51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strComparableArray58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objEntryStream61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(objEntryItor68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strComparableArray75);
        org.junit.Assert.assertNotNull(objEntryStream76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objEntryStream78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(objEntryStream82);
    }

    @Test
    public void test09531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09531");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList1 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean3 = objEntryList1.remove((java.lang.Object) byteArray2);
        boolean[] booleanArray8 = new boolean[] { false, false, false, false };
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray8, false);
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray8);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray8, true, 0);
        boolean boolean16 = objEntryList1.contains((java.lang.Object) int15);
        java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        java.lang.reflect.Type[] typeArray18 = objEntryList1.toArray((java.lang.reflect.Type[]) wildcardClassArray17);
        java.lang.reflect.Type[] typeArray21 = org.apache.commons.lang3.ArrayUtils.subarray(typeArray18, (int) (short) -1, (int) (short) 100);
        boolean boolean22 = objEntryList0.contains((java.lang.Object) typeArray21);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream23 = objEntryList0.stream();
        java.util.Map.Entry<java.lang.Object, java.lang.Object> objEntry24 = null;
        boolean boolean25 = objEntryList0.add(objEntry24);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList26 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor27 = objEntryList26.iterator();
        java.util.Map.Entry<java.lang.Object, java.lang.Object> objEntry28 = null;
        boolean boolean29 = objEntryList26.add(objEntry28);
        int int30 = objEntryList26.size();
        java.lang.Boolean[][] booleanArray31 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray38 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray45 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray52 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray59 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray60 = new java.lang.Boolean[][] { booleanArray38, booleanArray45, booleanArray52, booleanArray59 };
        java.lang.Boolean[][] booleanArray61 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray31, booleanArray60);
        java.util.Map<java.lang.Object, java.lang.Object> objMap62 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray31);
        java.lang.Short[] shortArray65 = new java.lang.Short[] { (short) 1 };
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray65);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray65, (short) 10);
        java.lang.Object obj69 = objMap62.replace((java.lang.Object) 2, (java.lang.Object) shortArray68);
        objMap62.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet71 = objMap62.entrySet();
        java.lang.Object obj72 = null;
        boolean boolean73 = objEntrySet71.remove(obj72);
        boolean boolean74 = objEntryList26.removeAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntrySet71);
        java.lang.Object[] objArray75 = objEntrySet71.toArray();
        boolean boolean76 = objEntryList0.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntrySet71);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEntryStream23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objEntryItor27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNotNull(objMap62);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[1]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[1]");
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEntrySet71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test09532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09532");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 100, (byte) 0 };
        byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6);
        int int8 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) byteArray6);
        java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9, (byte) 0);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray11);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray11, (byte) 0);
        byte[] byteArray21 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray21, (byte) 10);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray21);
        byte[] byteArray26 = null;
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray32 = new double[] {};
        double[] doubleArray36 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray36);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (double) (byte) 10);
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray36, (double) 0L, 0);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray36);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray36, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder28.append(doubleArray32, doubleArray36);
        double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray52 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray52);
        double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.add(doubleArray52, (double) (byte) 10);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray55, (double) 10.0f);
        double[] doubleArray61 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray61);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.add(doubleArray61, (double) (byte) 10);
        int int67 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray61, (double) 0L, 0);
        double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray61);
        int int71 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray61, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray55, doubleArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder47.append(doubleArray48, doubleArray61);
        byte[] byteArray74 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray74);
        byte[] byteArray76 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray78 = org.apache.commons.lang3.ArrayUtils.add(byteArray76, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder73.append(byteArray74, byteArray76);
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray26, byteArray76);
        byte[] byteArray81 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray82 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray81);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray26, byteArray81);
        byte[] byteArray84 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray21, byteArray81);
        byte[] byteArray85 = org.apache.commons.lang3.ArrayUtils.clone(byteArray81);
        int int88 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray85, (byte) 100, (int) (short) 1);
        java.lang.String str90 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) byteArray85, "{ ,4,4,a,4,a, ,a, ,#,#}");
        boolean boolean91 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray14, byteArray85);
        int int94 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray14, (byte) 1, (int) '4');
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 6 + "'", int8 == 6);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 100, -1, 10, 100]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[]");
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[]");
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "{}" + "'", str90, "{}");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
    }

    @Test
    public void test09533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09533");
        int[] intArray0 = new int[] {};
        int[] intArray3 = org.apache.commons.lang3.ArrayUtils.add(intArray0, 0, 100);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray3);
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray3);
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray3);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray3);
        java.lang.Integer[] intArray8 = org.apache.commons.lang3.ArrayUtils.toObject(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray8);
        int[] intArray11 = org.apache.commons.lang3.ArrayUtils.add(intArray9, 0);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray11, (int) (short) 1);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray11);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[100]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[100, 0]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test09534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09534");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor1 = objEntryList0.iterator();
        java.lang.String[] strArray2 = new java.lang.String[] {};
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray7 = org.apache.commons.lang3.ArrayUtils.addAll(strArray2, strArray6);
        java.lang.Comparable<java.lang.String>[] strComparableArray8 = objEntryList0.toArray((java.lang.Comparable<java.lang.String>[]) strArray2);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream9 = objEntryList0.parallelStream();
        int int10 = objEntryList0.size();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor11 = objEntryList0.iterator();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor12 = objEntryList0.iterator();
        float[] floatArray16 = new float[] { (short) 100, 0, 10 };
        float[] floatArray19 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray19);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(floatArray19, (float) 0);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.add(floatArray19, 10.0f);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray16, floatArray19);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray16, 3, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray16);
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray16);
        java.lang.Float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray30);
        boolean boolean32 = objEntryList0.remove((java.lang.Object) floatArray31);
        java.lang.Boolean[][] booleanArray33 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray40 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray47 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray54 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray61 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray62 = new java.lang.Boolean[][] { booleanArray40, booleanArray47, booleanArray54, booleanArray61 };
        java.lang.Boolean[][] booleanArray63 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray33, booleanArray62);
        java.util.Map<java.lang.Object, java.lang.Object> objMap64 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray33);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = objMap64.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList66 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean68 = objEntryList66.remove((java.lang.Object) byteArray67);
        boolean boolean69 = objEntrySet65.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList66);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream70 = objEntryList66.parallelStream();
        java.lang.Object[] objArray71 = objEntryList66.toArray();
        double[] doubleArray75 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray75);
        double[] doubleArray78 = org.apache.commons.lang3.ArrayUtils.add(doubleArray75, (double) (byte) 10);
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray78, (double) 10.0f);
        double[] doubleArray81 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray78);
        double[] doubleArray83 = org.apache.commons.lang3.ArrayUtils.add(doubleArray81, (double) 1.0f);
        java.lang.Double[] doubleArray84 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray83);
        double[] doubleArray85 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray84);
        boolean[] booleanArray87 = new boolean[] { true };
        boolean[] booleanArray90 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray87, (int) (short) 100, (int) (short) 0);
        int int91 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray84, (java.lang.Object) booleanArray87);
        boolean boolean92 = objEntryList66.equals((java.lang.Object) doubleArray84);
        boolean boolean93 = objEntryList0.contains((java.lang.Object) boolean92);
        org.junit.Assert.assertNotNull(objEntryItor1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strComparableArray8);
        org.junit.Assert.assertNotNull(objEntryStream9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(objEntryItor11);
        org.junit.Assert.assertNotNull(objEntryItor12);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[10.0, 0.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertNotNull(objMap64);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objEntryStream70);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(booleanArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray87), "[true]");
        org.junit.Assert.assertNotNull(booleanArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray90), "[]");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test09535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09535");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray13);
        boolean[] booleanArray19 = new boolean[] { false, false, false, false };
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray19);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray19, false);
        java.lang.Boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray19);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray19);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray19);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray19);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray13, booleanArray19);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray19);
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray19, (int) (byte) -1, (int) (short) 1);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray19, (int) (byte) 0, (int) (byte) 10);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray19, true);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray19, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test09536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09536");
        float[][][][][][][][][] floatArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            float[][][][][][][][][] floatArray2 = org.apache.commons.lang3.ArrayUtils.remove(floatArray0, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09537");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean2 = objEntryList0.remove((java.lang.Object) byteArray1);
        boolean[] booleanArray7 = new boolean[] { false, false, false, false };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray7);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray7, false);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray7);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray7, true, 0);
        boolean boolean15 = objEntryList0.contains((java.lang.Object) int14);
        java.lang.Object[] objArray16 = objEntryList0.toArray();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream17 = objEntryList0.stream();
        boolean boolean18 = objEntryList0.isEmpty();
        float[][][][][][][] floatArray19 = new float[][][][][][][] {};
        double[] doubleArray23 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray23);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.add(doubleArray23, (double) (byte) 10);
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray23, (double) 0L, 0);
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray23);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray23, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.add(doubleArray23, (double) 4);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray23, 100.0d, (int) ' ', (double) 0L);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray23, (double) 0.0f, 10);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray23, 100.0d, (-1.0d));
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray23, 0.0d);
        float[][][][][][][] floatArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray19, (java.lang.Object) doubleArray23);
        boolean boolean49 = objEntryList0.equals((java.lang.Object) floatArray48);
        // The following exception was thrown during execution in test generation
        try {
            float[][][][][][][] floatArray51 = org.apache.commons.lang3.ArrayUtils.remove(floatArray48, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objEntryStream17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 100.0, 4.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test09538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09538");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.clone(floatArray6);
        int int12 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) floatArray11);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray11, (float) 9, (int) '4');
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.clone(floatArray11);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray16);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray17, 100.0f, 0);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test09539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09539");
        char[] charArray1 = new char[] { 'a' };
        java.lang.Character[] charArray2 = org.apache.commons.lang3.ArrayUtils.toObject(charArray1);
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray2);
        java.lang.Boolean[][] booleanArray5 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray19 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray26 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray33 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray34 = new java.lang.Boolean[][] { booleanArray12, booleanArray19, booleanArray26, booleanArray33 };
        java.lang.Boolean[][] booleanArray35 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray5, booleanArray34);
        java.util.Map<java.lang.Object, java.lang.Object> objMap36 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray5);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = objMap36.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList38 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean39 = objEntrySet37.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList38);
        byte[] byteArray43 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray43, (byte) 10, (int) (short) -1);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray43);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray43, (byte) 1, (int) ' ');
        byte[] byteArray57 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray57);
        int int60 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray57, (byte) 10);
        byte[] byteArray61 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray43, byteArray57);
        boolean boolean62 = objEntrySet37.equals((java.lang.Object) byteArray43);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray64);
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray64, (byte) 0);
        byte[] byteArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray64);
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray43, byteArray68);
        byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.clone(byteArray69);
        byte[] byteArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray70);
        boolean boolean72 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray4, (java.lang.Object) byteArray71);
        byte[] byteArray73 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray71);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(objMap36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 4 + "'", int60 == 4);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[1]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0, 0, 10, 1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 0, 10, 1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 0, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[0, 0, 10, 1]");
    }

    @Test
    public void test09540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09540");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0.0d);
        char[] charArray10 = new char[] { 'a' };
        java.lang.Character[] charArray11 = org.apache.commons.lang3.ArrayUtils.toObject(charArray10);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) 0.0d, (java.lang.Object) charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.clone(charArray10);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray10, '#');
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test09541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09541");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray4);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4);
        float[] floatArray12 = new float[] { 1L, 100L, 100 };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray12, (float) (-1L), (int) (short) 100);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray12, (float) 'a', (int) (byte) 10);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) intArray4, (java.lang.Object) floatArray12);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(intArray4, (int) (byte) 1);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 10 };
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23, (int) (byte) 10);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(intArray25, (int) (short) 1);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.subarray(intArray25, (int) (short) 100, 4);
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.addAll(intArray4, intArray30);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(intArray4, (int) (short) 100);
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray4, 8);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray4, (-1));
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
    }

    @Test
    public void test09542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09542");
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { 10, 3, 10 };
        java.lang.Integer[] intArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray3);
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray4, (int) (byte) -1);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4);
        boolean[] booleanArray12 = new boolean[] { false, false, false, false };
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray12, false);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.add(booleanArray12, true);
        boolean[] booleanArray18 = null;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray12, booleanArray18);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray18);
        boolean[] booleanArray25 = new boolean[] { false, false, false, false };
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray25, false);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.add(booleanArray25, true);
        boolean[] booleanArray31 = null;
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray25, booleanArray31);
        boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray18, booleanArray25);
        boolean[] booleanArray34 = null;
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray33, booleanArray34);
        boolean[] booleanArray37 = new boolean[] { true };
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray37, (int) (short) 100, (int) (short) 0);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray40, false);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray35, booleanArray40);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) intArray4, (java.lang.Object) booleanArray35);
        java.lang.Long[] longArray45 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray45);
        long[] longArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray45);
        long[] longArray48 = org.apache.commons.lang3.ArrayUtils.clone(longArray47);
        java.lang.Long[] longArray49 = org.apache.commons.lang3.ArrayUtils.toObject(longArray47);
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray49, (long) (byte) 1);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray51);
        java.util.Map<java.lang.Object, java.lang.Object> objMap53 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) longArray52);
        java.lang.Object obj54 = null;
        java.lang.Object obj55 = objMap53.get(obj54);
        java.util.Set<java.lang.Object> objSet56 = objMap53.keySet();
        boolean boolean58 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) int44, (java.lang.Object) objMap53, false);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 3, 10]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, false, true]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false, true]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[]");
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(objMap53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test09543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09543");
        int[] intArray0 = new int[] {};
        int[] intArray1 = org.apache.commons.lang3.ArrayUtils.clone(intArray0);
        java.lang.Integer[] intArray2 = org.apache.commons.lang3.ArrayUtils.toObject(intArray1);
        java.lang.Integer[] intArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray2);
        int[] intArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2);
        int[] intArray5 = new int[] {};
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.add(intArray5, 0, 100);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray8);
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.clone(intArray8);
        int[] intArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray12);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.addAll(intArray4, intArray13);
        int[] intArray16 = org.apache.commons.lang3.ArrayUtils.add(intArray4, 13);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[100]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[100]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[13]");
    }

    @Test
    public void test09544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09544");
        boolean[] booleanArray4 = new boolean[] { false, true, true, true };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray4);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test09545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09545");
        java.lang.Float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray0);
        float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray1, (float) 'a');
        float[] floatArray7 = new float[] { 1L, 100L, 100 };
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray7, (float) (-1L), (int) (short) 100);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray3, floatArray7);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray3);
        float[] floatArray15 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray15);
        float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray15, (float) (short) 1);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray19);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 5, (int) (byte) 10);
        org.junit.Assert.assertNotNull(floatArray0);
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test09546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09546");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray4);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7, (int) (byte) 100);
        java.lang.Integer[] intArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        int[] intArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        java.lang.Integer[] intArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
    }

    @Test
    public void test09547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09547");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList1 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor2 = objEntryList1.iterator();
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.String[] strArray7 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray8 = org.apache.commons.lang3.ArrayUtils.addAll(strArray3, strArray7);
        java.lang.Comparable<java.lang.String>[] strComparableArray9 = objEntryList1.toArray((java.lang.Comparable<java.lang.String>[]) strArray3);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream10 = objEntryList1.parallelStream();
        boolean boolean11 = objEntryList0.addAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList1);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream12 = objEntryList1.stream();
        java.lang.Boolean[][] booleanArray13 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray20 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray27 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray34 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray42 = new java.lang.Boolean[][] { booleanArray20, booleanArray27, booleanArray34, booleanArray41 };
        java.lang.Boolean[][] booleanArray43 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray13, booleanArray42);
        java.util.Map<java.lang.Object, java.lang.Object> objMap44 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray13);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = objMap44.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList46 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean47 = objEntrySet45.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList46);
        boolean boolean48 = objEntryList46.isEmpty();
        java.lang.Boolean[][] booleanArray49 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray56 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray63 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray70 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray77 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray78 = new java.lang.Boolean[][] { booleanArray56, booleanArray63, booleanArray70, booleanArray77 };
        java.lang.Boolean[][] booleanArray79 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray49, booleanArray78);
        java.util.Map<java.lang.Object, java.lang.Object> objMap80 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray49);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet81 = objMap80.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList82 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray83 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean84 = objEntryList82.remove((java.lang.Object) byteArray83);
        boolean boolean85 = objEntrySet81.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList82);
        java.lang.Object[] objArray86 = objEntryList82.toArray();
        java.lang.Object[] objArray87 = objEntryList82.toArray();
        boolean boolean88 = objEntryList46.removeAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList82);
        int int89 = objEntryList46.size();
        boolean boolean90 = objEntryList1.removeAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList46);
        java.lang.Object[] objArray91 = objEntryList1.toArray();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream92 = objEntryList1.parallelStream();
        org.junit.Assert.assertNotNull(objEntryItor2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strComparableArray9);
        org.junit.Assert.assertNotNull(objEntryStream10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEntryStream12);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertNotNull(objMap44);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(objMap80);
        org.junit.Assert.assertNotNull(objEntrySet81);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[]");
        org.junit.Assert.assertNotNull(objEntryStream92);
    }

    @Test
    public void test09548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09548");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean35 = objEntryList33.remove((java.lang.Object) byteArray34);
        boolean boolean36 = objEntrySet32.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        boolean boolean37 = objEntryList33.isEmpty();
        byte[][][] byteArray38 = new byte[][][] {};
        byte[][][] byteArray39 = new byte[][][] {};
        byte[][][] byteArray40 = new byte[][][] {};
        byte[][][] byteArray41 = new byte[][][] {};
        byte[][][] byteArray42 = new byte[][][] {};
        byte[][][][] byteArray43 = new byte[][][][] { byteArray38, byteArray39, byteArray40, byteArray41, byteArray42 };
        byte[][][][] byteArray44 = org.apache.commons.lang3.ArrayUtils.clone(byteArray43);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray43);
        byte[][][][] byteArray46 = org.apache.commons.lang3.ArrayUtils.toArray(byteArray43);
        byte[][][][] byteArray47 = objEntryList33.toArray(byteArray46);
        int int48 = objEntryList33.size();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test09549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09549");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 10, (byte) 0);
        java.lang.Boolean boolean8 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder3.append(true, false);
        float[] floatArray14 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray14);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(floatArray14, (float) 0);
        float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.add(floatArray14, 10.0f);
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray14);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.add(floatArray14, (int) (byte) 0, (float) 100);
        float[] floatArray26 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray26);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(floatArray26, (float) 0);
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.add(floatArray26, 10.0f);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(floatArray26, (float) (-1));
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder3.append(floatArray14, floatArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder3.append((long) (short) 10, (long) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder3.append(false, true);
        long[] longArray45 = new long[] { 4, 'a', (byte) 0 };
        long[] longArray47 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray45, (long) 'a');
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray47, (long) (short) 0, (int) (short) 10);
        long[] longArray56 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray57 = org.apache.commons.lang3.ArrayUtils.clone(longArray56);
        java.lang.Long[] longArray58 = org.apache.commons.lang3.ArrayUtils.toObject(longArray57);
        long[] longArray64 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray65 = org.apache.commons.lang3.ArrayUtils.clone(longArray64);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray57, longArray65);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder3.append(longArray47, longArray57);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray47);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[100.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[4, 97, 0]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[4, 0]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test09550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09550");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray13 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray14);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray14, (long) 7);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test09551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09551");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((long) (byte) 10, (long) (byte) 10);
        boolean boolean22 = equalsBuilder21.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder21.append(11, 3);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder21.append(false, false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
    }

    @Test
    public void test09552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09552");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        java.lang.Character[] charArray44 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray44, 'a');
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.add(charArray46, '#');
        boolean boolean49 = objMap31.equals((java.lang.Object) '#');
        double[] doubleArray55 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray55);
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray55);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray55, (double) (short) 100, (double) 3);
        java.lang.Object obj61 = objMap31.get((java.lang.Object) doubleArray55);
        long[] longArray67 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray68 = org.apache.commons.lang3.ArrayUtils.clone(longArray67);
        java.lang.Long[] longArray69 = org.apache.commons.lang3.ArrayUtils.toObject(longArray68);
        long[] longArray70 = org.apache.commons.lang3.ArrayUtils.clone(longArray68);
        boolean boolean71 = objMap31.containsValue((java.lang.Object) longArray68);
        long[] longArray73 = org.apache.commons.lang3.ArrayUtils.add(longArray68, (long) (byte) -1);
        long[] longArray74 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray68);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray77 = org.apache.commons.lang3.ArrayUtils.add(longArray68, (int) '#', (long) 7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a,  , a,  , #, #]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertNotNull(longArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray70), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[32, 100, 10, 10, 1, -1]");
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[32, 100, 10, 10, 1]");
    }

    @Test
    public void test09553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09553");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 100.0f, (double) 0);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray3, (int) (byte) 0);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 4, 100);
        double[] doubleArray18 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray18);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.add(doubleArray18, (double) (byte) 10);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray18, (double) 0L, 0);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray18, (double) (short) -1, (int) (byte) -1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.add(doubleArray18, (double) 2);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray18, (double) 1L);
        double[] doubleArray35 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray35);
        double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.add(doubleArray35, (double) (byte) 10);
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray35, (double) (short) 0, (int) ' ', (double) 1L);
        double[] doubleArray46 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray46);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.add(doubleArray46, (double) (byte) 10);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray46, (double) 0L, 0);
        double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray46);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray46, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.add(doubleArray46, (double) 4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder59.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray63 = new double[] {};
        double[] doubleArray67 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray67);
        double[] doubleArray70 = org.apache.commons.lang3.ArrayUtils.add(doubleArray67, (double) (byte) 10);
        int int73 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray67, (double) 0L, 0);
        double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray67);
        int int77 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray67, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder59.append(doubleArray63, doubleArray67);
        int int81 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray63, (double) 'a', (int) '4');
        double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray46, doubleArray63);
        double[] doubleArray85 = org.apache.commons.lang3.ArrayUtils.add(doubleArray46, 0, (double) 100);
        double[] doubleArray86 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray46);
        double[] doubleArray87 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray35, doubleArray46);
        double[] doubleArray88 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray31, doubleArray46);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray3, doubleArray88);
        int int92 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) 5, (double) 100);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 100.0, 2.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 10.0, 100.0, 4.0]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
    }

    @Test
    public void test09554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09554");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        boolean[] booleanArray14 = new boolean[] { false, false, false, false };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray14);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray14, false);
        java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray14);
        java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14);
        int[] intArray25 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.clone(intArray25);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray25);
        java.lang.Integer[] intArray28 = org.apache.commons.lang3.ArrayUtils.toObject(intArray25);
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray28);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray29, (int) (byte) 100, 4);
        int[] intArray35 = org.apache.commons.lang3.ArrayUtils.add(intArray29, (int) (short) 0, (-1));
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.subarray(intArray29, (-1), (int) 'a');
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) booleanArray20, (java.lang.Object) (-1), 5);
        boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray20, false);
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray20, true);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false]");
    }

    @Test
    public void test09555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09555");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0, (long) (byte) 10);
        java.lang.Long[] longArray4 = org.apache.commons.lang3.ArrayUtils.toObject(longArray3);
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.subarray(longArray3, 5, 4);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray7, (long) 11, 8);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[]");
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test09556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09556");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10, 3, 10 };
        java.lang.Integer[] intArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray15);
        java.lang.Integer[] intArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray15);
        java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder19.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean23 = equalsBuilder22.isEquals();
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.String[] strArray28 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray29 = org.apache.commons.lang3.ArrayUtils.addAll(strArray24, strArray28);
        java.lang.String[] strArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray24);
        java.lang.Character[] charArray36 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray36, ' ');
        java.lang.Character[] charArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder22.append((java.lang.Object[]) strArray24, (java.lang.Object[]) charArray39);
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray39);
        java.lang.Character[] charArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray39);
        java.lang.Character[] charArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray39);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray18, (java.lang.Object[]) charArray43);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray17, (java.lang.Object) wildcardClassArray18);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) charArray8, (java.lang.Object[]) wildcardClassArray18);
        java.util.Map<java.lang.Object, java.lang.Object> objMap47 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) wildcardClassArray18);
        java.lang.Character[] charArray53 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray53, 'a');
        char[] charArray57 = org.apache.commons.lang3.ArrayUtils.add(charArray55, '#');
        char[] charArray59 = org.apache.commons.lang3.ArrayUtils.remove(charArray57, 2);
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray59);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray59);
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.add(charArray59, (int) (byte) 1, ' ');
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray64);
        int int67 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray64, ' ');
        char[] charArray68 = org.apache.commons.lang3.ArrayUtils.clone(charArray64);
        boolean boolean69 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) objMap47, (java.lang.Object) charArray64);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objMap47);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a,  ,  , #, #]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a   ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a   ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a,  ,  ,  , #, #]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 3 + "'", int67 == 3);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a   ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a   ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a,  ,  ,  , #, #]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test09557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09557");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        byte[] byteArray7 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray7, (byte) 10, (int) (short) -1);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray7);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray7, (byte) 1, (int) ' ');
        byte[] byteArray21 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray21, (byte) 10);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray7, byteArray21);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray26, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder0.append(byteArray7, byteArray26);
        short[] shortArray31 = new short[] {};
        java.lang.Short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray31);
        int int33 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) shortArray31);
        short[] shortArray36 = new short[] { (short) 100, (short) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder0.append(shortArray31, shortArray36);
        java.lang.Double[] doubleArray42 = new java.lang.Double[] { 1.0d, 0.0d, 0.0d, 1.0d };
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray42, (double) '#');
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray42);
        boolean[] booleanArray50 = new boolean[] { false, false, false, false };
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray50);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray50, false);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.add(booleanArray50, true);
        double[] doubleArray61 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray61);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray55, (java.lang.Object) doubleArray61);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray61, 3, 1);
        int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray66, (double) (byte) 10, (double) ' ');
        double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray66, (int) (short) 0, (int) (byte) 0);
        double[] doubleArray78 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray78);
        double[] doubleArray80 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray78);
        java.lang.Object obj81 = null;
        boolean boolean83 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray80, obj81, false);
        double[] doubleArray85 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray80, (double) 3);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray72, doubleArray85);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray72, (double) (short) -1);
        int int91 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray72, (double) 7, (int) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder37.append(doubleArray45, doubleArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder37.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder95.append((double) 4, (double) (-1L));
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[100, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 0.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test09558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09558");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        java.lang.Character[] charArray15 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray15);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, 'a');
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray9, charArray18);
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray18, 'a', (int) (byte) -1);
        java.lang.Character[] charArray23 = org.apache.commons.lang3.ArrayUtils.toObject(charArray18);
        java.lang.Character[] charArray29 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray29, 'a');
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.add(charArray31, '#');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.remove(charArray31, (int) (short) 0);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray31, 'a');
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.addAll(charArray18, charArray31);
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray18, '#', 1);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , a,  , #]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4## aa a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4## aa a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4, #, #,  , a, a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
    }

    @Test
    public void test09559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09559");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 10);
        java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray7);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray7);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test09560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09560");
        byte[] byteArray3 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 10, (int) (short) -1);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray3, (byte) 1, (int) ' ');
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray11);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray12, (byte) -1);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray3, byteArray12);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray19, (byte) 10, (int) (short) -1);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray19, (byte) 10);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray19, (byte) 1);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(byteArray19, (byte) 100);
        byte[] byteArray32 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray32, (byte) 10, (int) (short) -1);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray32);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray32, (byte) 1, (int) ' ');
        byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray19, byteArray32);
        byte[] byteArray47 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray47);
        int int50 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray47, (byte) 10);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray47, (byte) 10);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray19, byteArray47);
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray19, (int) (byte) -1, (int) '#');
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(byteArray19, (byte) 0);
        byte[] byteArray59 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray12, byteArray19);
        java.lang.String str60 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) byteArray12);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray12, (byte) 0);
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) (short) 1, (int) (byte) -1);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[0, 0, 10, 0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 4 + "'", int50 == 4);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[0, 0, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "{}" + "'", str60, "{}");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
    }

    @Test
    public void test09561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09561");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        java.lang.Boolean[][] booleanArray39 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray46 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray53 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray60 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray67 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray68 = new java.lang.Boolean[][] { booleanArray46, booleanArray53, booleanArray60, booleanArray67 };
        java.lang.Boolean[][] booleanArray69 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray39, booleanArray68);
        java.util.Map<java.lang.Object, java.lang.Object> objMap70 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray39);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet71 = objMap70.entrySet();
        java.util.Set<java.lang.Object> objSet72 = objMap70.keySet();
        objMap31.putAll(objMap70);
        boolean boolean74 = objMap70.isEmpty();
        java.lang.Short[][] shortArray75 = new java.lang.Short[][] {};
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray75);
        boolean boolean77 = objMap70.containsKey((java.lang.Object) shortArray75);
        short[] shortArray78 = new short[] {};
        java.lang.Short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray78);
        short[] shortArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray79, (short) 1);
        java.lang.Short[] shortArray82 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray79);
        java.lang.Short[] shortArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray82);
        java.lang.Short[][] shortArray84 = org.apache.commons.lang3.ArrayUtils.add(shortArray75, shortArray83);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Short[][] shortArray86 = org.apache.commons.lang3.ArrayUtils.remove(shortArray75, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(objMap70);
        org.junit.Assert.assertNotNull(objEntrySet71);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[]");
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray81), "[]");
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertNotNull(shortArray84);
    }

    @Test
    public void test09562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09562");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((long) (byte) 10, (long) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder3.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder24.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray36 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray37 = org.apache.commons.lang3.ArrayUtils.clone(longArray36);
        long[] longArray43 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.clone(longArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder30.append(longArray37, longArray43);
        long[] longArray48 = org.apache.commons.lang3.ArrayUtils.add(longArray37, (int) (byte) 0, (long) 2);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.add(longArray48, (long) 2);
        long[] longArray53 = org.apache.commons.lang3.ArrayUtils.subarray(longArray48, 100, 5);
        java.lang.Long[] longArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray54);
        java.lang.Double[] doubleArray57 = new java.lang.Double[] { 100.0d };
        java.lang.Double[] doubleArray59 = new java.lang.Double[] { 100.0d };
        java.lang.Double[][] doubleArray60 = new java.lang.Double[][] { doubleArray57, doubleArray59 };
        java.lang.Double[][] doubleArray63 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray60, (int) (byte) 100, (int) '4');
        int int65 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray55, (java.lang.Object) '4', (int) (byte) -1);
        long[] longArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray55);
        long[] longArray67 = org.apache.commons.lang3.ArrayUtils.clone(longArray66);
        long[] longArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder26.append(longArray53, longArray68);
        java.lang.Long[] longArray70 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray70);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray71);
        java.lang.Long[] longArray73 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray71);
        long[] longArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray71);
        java.lang.Long[] longArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray71);
        long[] longArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray75);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray68, longArray76);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[2, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[2, 32, 100, 10, 10, 1, 2]");
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[]");
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[]");
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray70);
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[]");
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertNotNull(longArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test09563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09563");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 100, (byte) 0 };
        byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6);
        java.lang.Byte[] byteArray9 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray9);
        java.lang.Byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray9);
        byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray11);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (byte) 0);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray7, byteArray12);
        byte[] byteArray16 = null;
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray7, byteArray16);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray16);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test09564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09564");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        java.lang.Boolean[][] booleanArray39 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray46 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray53 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray60 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray67 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray68 = new java.lang.Boolean[][] { booleanArray46, booleanArray53, booleanArray60, booleanArray67 };
        java.lang.Boolean[][] booleanArray69 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray39, booleanArray68);
        java.util.Map<java.lang.Object, java.lang.Object> objMap70 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray39);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet71 = objMap70.entrySet();
        java.util.Set<java.lang.Object> objSet72 = objMap70.keySet();
        objMap31.putAll(objMap70);
        java.util.Collection<java.lang.Object> objCollection74 = objMap70.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet75 = objMap70.entrySet();
        long[] longArray81 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray82 = org.apache.commons.lang3.ArrayUtils.clone(longArray81);
        java.lang.Long[] longArray83 = org.apache.commons.lang3.ArrayUtils.toObject(longArray82);
        long[] longArray89 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray90 = org.apache.commons.lang3.ArrayUtils.clone(longArray89);
        java.lang.Long[] longArray91 = org.apache.commons.lang3.ArrayUtils.toObject(longArray90);
        long[] longArray92 = org.apache.commons.lang3.ArrayUtils.clone(longArray90);
        long[] longArray93 = org.apache.commons.lang3.ArrayUtils.addAll(longArray82, longArray92);
        int int95 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray93, (long) 1);
        boolean boolean96 = objMap70.containsValue((java.lang.Object) longArray93);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet97 = objMap70.entrySet();
        boolean boolean98 = objMap70.isEmpty();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(objMap70);
        org.junit.Assert.assertNotNull(objEntrySet71);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertNotNull(objCollection74);
        org.junit.Assert.assertNotNull(objEntrySet75);
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray82), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray83);
        org.junit.Assert.assertNotNull(longArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray89), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray90), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray91);
        org.junit.Assert.assertNotNull(longArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray92), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray93), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 4 + "'", int95 == 4);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(objEntrySet97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test09565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09565");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean35 = objEntryList33.remove((java.lang.Object) byteArray34);
        boolean boolean36 = objEntrySet32.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.lang.Object[] objArray37 = objEntryList33.toArray();
        java.lang.Object[] objArray38 = objEntryList33.toArray();
        java.lang.Boolean[][] booleanArray39 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray46 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray53 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray60 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray67 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray68 = new java.lang.Boolean[][] { booleanArray46, booleanArray53, booleanArray60, booleanArray67 };
        java.lang.Boolean[][] booleanArray69 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray39, booleanArray68);
        java.util.Map<java.lang.Object, java.lang.Object> objMap70 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray39);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet71 = objMap70.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList72 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray73 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean74 = objEntryList72.remove((java.lang.Object) byteArray73);
        boolean boolean75 = objEntrySet71.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList72);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor76 = objEntrySet71.iterator();
        java.lang.Object[] objArray77 = objEntrySet71.toArray();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream78 = objEntrySet71.parallelStream();
        boolean boolean79 = objEntryList33.removeAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntrySet71);
        java.util.Spliterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySpliterator80 = objEntrySet71.spliterator();
        boolean boolean81 = objEntrySet71.isEmpty();
        objEntrySet71.clear();
        int int83 = objEntrySet71.size();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(objMap70);
        org.junit.Assert.assertNotNull(objEntrySet71);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objEntryItor76);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertNotNull(objEntryStream78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objEntrySpliterator80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }

    @Test
    public void test09566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09566");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean2 = objEntryList0.remove((java.lang.Object) byteArray1);
        long[] longArray8 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.clone(longArray8);
        java.lang.Long[] longArray10 = org.apache.commons.lang3.ArrayUtils.toObject(longArray9);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.add(longArray11, (long) (short) 0);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray13, (long) '4');
        boolean boolean16 = objEntryList0.contains((java.lang.Object) int15);
        java.util.Spliterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySpliterator17 = objEntryList0.spliterator();
        objEntryList0.clear();
        boolean boolean19 = objEntryList0.isEmpty();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream20 = objEntryList0.stream();
        java.lang.Short[] shortArray22 = new java.lang.Short[] { (short) 1 };
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray22);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22, (short) (byte) 100);
        short[] shortArray27 = new short[] {};
        java.lang.Short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray27);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray26, shortArray27);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray27, (short) (byte) 10, (int) (byte) 10);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.add(shortArray27, (short) (byte) -1);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray34, 3, (int) (byte) 1);
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray34, (int) (byte) -1, (int) (short) 100);
        boolean boolean41 = objEntryList0.remove((java.lang.Object) shortArray40);
        int int42 = objEntryList0.size();
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objEntrySpliterator17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objEntryStream20);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[-1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test09567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09567");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        objMap31.clear();
        java.lang.Object obj40 = null;
        long[] longArray46 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray47 = org.apache.commons.lang3.ArrayUtils.clone(longArray46);
        java.lang.Long[] longArray48 = org.apache.commons.lang3.ArrayUtils.toObject(longArray47);
        long[] longArray49 = org.apache.commons.lang3.ArrayUtils.clone(longArray47);
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.add(longArray49, (long) (short) 0);
        long[] longArray52 = org.apache.commons.lang3.ArrayUtils.clone(longArray51);
        long[] longArray58 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.clone(longArray58);
        java.lang.Long[] longArray60 = org.apache.commons.lang3.ArrayUtils.toObject(longArray59);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.clone(longArray59);
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.add(longArray61, (long) (short) 0);
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.addAll(longArray52, longArray61);
        long[] longArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray52, (long) 10);
        java.lang.Object obj67 = objMap31.putIfAbsent(obj40, (java.lang.Object) longArray52);
        long[] longArray71 = new long[] { 4, 'a', (byte) 0 };
        long[] longArray73 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray71, (long) 'a');
        long[] longArray75 = org.apache.commons.lang3.ArrayUtils.remove(longArray73, (int) (byte) 1);
        long[] longArray77 = org.apache.commons.lang3.ArrayUtils.add(longArray73, (long) 10);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray77);
        long[] longArray80 = org.apache.commons.lang3.ArrayUtils.add(longArray77, (long) 10);
        long[] longArray81 = org.apache.commons.lang3.ArrayUtils.addAll(longArray52, longArray77);
        long[] longArray83 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray52, (long) (byte) 0);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[32, 100, 10, 1, 0]");
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray71), "[4, 97, 0]");
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[4, 0]");
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[4]");
        org.junit.Assert.assertNotNull(longArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray77), "[4, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[4, 0, 10, 10]");
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[32, 100, 10, 10, 1, 0, 4, 0, 10]");
        org.junit.Assert.assertNotNull(longArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray83), "[32, 100, 10, 10, 1]");
    }

    @Test
    public void test09568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09568");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) (byte) 100);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(shortArray2, (short) 1);
        short[] shortArray7 = new short[] {};
        java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray7);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray10);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.add(shortArray10, (short) (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray2, shortArray13);
        java.lang.Short[] shortArray17 = new java.lang.Short[] { (short) 1 };
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray17);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray17);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray17, (short) (byte) 100);
        short[] shortArray22 = new short[] {};
        java.lang.Short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray22);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray21, shortArray22);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.add(shortArray21, (short) 1);
        java.lang.Short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray26);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(shortArray26, (short) (byte) -1);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray13, shortArray26);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1, 1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test09569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09569");
        java.lang.Object obj0 = null;
        java.lang.Boolean[][] booleanArray1 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray15 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray22 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray29 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray30 = new java.lang.Boolean[][] { booleanArray8, booleanArray15, booleanArray22, booleanArray29 };
        java.lang.Boolean[][] booleanArray31 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray1, booleanArray30);
        java.util.Map<java.lang.Object, java.lang.Object> objMap32 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = objMap32.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList34 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean35 = objEntrySet33.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList34);
        int[] intArray40 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray41 = org.apache.commons.lang3.ArrayUtils.clone(intArray40);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.add(intArray40, (int) 'a');
        int[] intArray48 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray49 = org.apache.commons.lang3.ArrayUtils.clone(intArray48);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray43, intArray49);
        boolean boolean52 = objEntrySet33.remove((java.lang.Object) intArray43);
        int[] intArray53 = org.apache.commons.lang3.ArrayUtils.clone(intArray43);
        int int56 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray53, (int) (short) 100, (int) (short) 1);
        int int59 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray53, 11, (int) (byte) 100);
        java.lang.Short[] shortArray61 = new java.lang.Short[] { (short) 1 };
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray61);
        short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray61);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.contains(shortArray63, (short) (byte) -1);
        java.lang.Short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray63);
        java.lang.Object obj67 = null;
        java.lang.Character[] charArray73 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray75 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray73, ' ');
        char[] charArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray75);
        java.lang.String[] strArray77 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.lang.Comparable<java.lang.String>[]) strArray77);
        java.lang.String[] strArray79 = org.apache.commons.lang3.ArrayUtils.clone(strArray77);
        java.lang.String[] strArray80 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray79);
        java.lang.String[] strArray84 = new java.lang.String[] { "{}", "", "{}" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        boolean boolean87 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray76, (java.lang.Object) strArray80, (java.util.Collection<java.lang.String>) strList85);
        boolean boolean88 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray63, obj67, (java.util.Collection<java.lang.String>) strList85);
        boolean boolean89 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) intArray53, (java.util.Collection<java.lang.String>) strList85);
        int int91 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray53, (-1));
        org.junit.Assert.assertNotNull(booleanArray1);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(objMap32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[1]");
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[1]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
    }

    @Test
    public void test09570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09570");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) floatArray3);
        java.lang.Float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray3);
        boolean[] booleanArray10 = new boolean[] { false, false, false, false };
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray10, false);
        java.lang.Boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray15);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray15);
        boolean boolean19 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) floatArray5, (java.lang.Object) booleanArray15, false);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray5);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
    }

    @Test
    public void test09571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09571");
        byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray3 = org.apache.commons.lang3.ArrayUtils.add(byteArray0, (int) (byte) 0, (byte) 100);
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray3, 7, (int) (short) 1);
        byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.clone(byteArray6);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray7, (byte) 0, (int) (short) 10);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test09572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09572");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray13, (int) (short) 0, 100);
        boolean[] booleanArray21 = new boolean[] { false, false, false, false };
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray21);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray21, false);
        java.lang.Boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray21);
        java.lang.Boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27, true);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray30);
        boolean[] booleanArray36 = new boolean[] { false, false, false, false };
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray36, false);
        java.lang.Boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray36);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray36);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray36);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray30, booleanArray36);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray36);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray13, booleanArray36);
        boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.add(booleanArray13, true);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray13);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, false, true]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test09573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09573");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray7);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        int[] intArray22 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.clone(intArray22);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.addAll(intArray7, intArray22);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, (int) ' ');
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray22, 1);
        java.lang.Integer[] intArray31 = org.apache.commons.lang3.ArrayUtils.toObject(intArray30);
        long[] longArray37 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.clone(longArray37);
        java.lang.Long[] longArray39 = org.apache.commons.lang3.ArrayUtils.toObject(longArray38);
        long[] longArray45 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray46 = org.apache.commons.lang3.ArrayUtils.clone(longArray45);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray38, longArray46);
        long[] longArray49 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray38, (long) 1);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray50, (long) (byte) 10);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) intArray31, (java.lang.Object) int52);
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray31, (int) ' ');
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.add(intArray55, (int) (short) 100);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray57);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, -1, -1, 0, 97, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, -1, -1, 0, 100]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test09574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09574");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((long) (byte) 10, (long) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder3.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder3.append((byte) 1, (byte) 0);
        java.lang.Short[] shortArray29 = new java.lang.Short[] { (short) 1 };
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray29);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray29);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray29);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray29, (short) 0);
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray29);
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray35, (short) 0);
        java.lang.Short[] shortArray39 = new java.lang.Short[] { (short) 1 };
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray39);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39, (short) (byte) 100);
        short[] shortArray44 = new short[] {};
        java.lang.Short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray44);
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray43, shortArray44);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(shortArray46, (short) 100);
        java.lang.Short[] shortArray50 = new java.lang.Short[] { (short) 1 };
        short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray50);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray50);
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray50, (short) (byte) 100);
        short[] shortArray55 = new short[] {};
        java.lang.Short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray55);
        short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray54, shortArray55);
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray54, 4, (-1));
        short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray60, (int) (byte) -1, (int) '4');
        short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.clone(shortArray60);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray46, shortArray60);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.add(shortArray60, 0, (short) (byte) 10);
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder27.append(shortArray35, shortArray68);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[1]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[1]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[1]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[1]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[1]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[1]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[1]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[1]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[1]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[]");
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[10]");
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
    }

    @Test
    public void test09575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09575");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.clone(floatArray6);
        float[] floatArray15 = new float[] { (short) 100, 0, 10 };
        float[] floatArray18 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(floatArray18, (float) 0);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.add(floatArray18, 10.0f);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray15, floatArray18);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray6, floatArray15);
        float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray25, (float) (short) 100);
        float[] floatArray30 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray30);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(floatArray30, (float) 0);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.add(floatArray30, 10.0f);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray27, floatArray30);
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray30);
        float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray37, (float) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.remove(floatArray39, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 5, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[-1.0, 1.0]");
    }

    @Test
    public void test09576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09576");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder37.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder37.append((byte) -1, (byte) 100);
        boolean[] booleanArray44 = new boolean[] { true };
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray44, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray49 = new boolean[] { true };
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray49, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray52, (int) '#', (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder42.append(booleanArray44, booleanArray52);
        double[] doubleArray60 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray60);
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.add(doubleArray60, (double) (byte) 10);
        int int66 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray60, (double) 0L, 0);
        double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray60);
        double[] doubleArray70 = new double[] { 4, 0.0f };
        int int72 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray70, (double) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder56.append(doubleArray60, doubleArray70);
        int int75 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray60, (double) 0.0f);
        int int77 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray60, (double) 4);
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray60, (double) (-1), 3, 0.0d);
        double[] doubleArray83 = org.apache.commons.lang3.ArrayUtils.add(doubleArray60, (double) 0L);
        int int86 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray83, (double) (byte) 1, (int) ' ');
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray83);
        double[] doubleArray88 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray83);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[4.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[0.0, 10.0, 100.0, 0.0]");
    }

    @Test
    public void test09577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09577");
        byte[] byteArray3 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 10, (int) (short) -1);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray3);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray3, (byte) 100);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray3);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray3);
        byte[] byteArray15 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray15, (byte) 10, (int) (short) -1);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray15);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray15, (byte) 1, (int) ' ');
        byte[] byteArray29 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray29);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray29, (byte) 10);
        byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray15, byteArray29);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(byteArray33, (byte) 1);
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray33, (byte) -1);
        byte[] byteArray38 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray11, byteArray33);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(byteArray11, (byte) 10);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, 10, 0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test09578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09578");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.add(charArray7, '#');
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.remove(charArray9, 2);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray11);
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.add(charArray11, (int) (byte) 1, ' ');
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray16, '4');
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray16, ' ');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a,  ,  , #, #]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a   ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a   ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a,  ,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a   ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a   ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a,  ,  ,  , #, #]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
    }

    @Test
    public void test09579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09579");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        java.lang.Character[] charArray44 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray44, 'a');
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.add(charArray46, '#');
        boolean boolean49 = objMap31.equals((java.lang.Object) '#');
        int int50 = objMap31.size();
        objMap31.clear();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a,  , a,  , #, #]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
    }

    @Test
    public void test09580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09580");
        short[] shortArray4 = new short[] { (byte) 0, (byte) 1, (short) -1, (byte) -1 };
        java.lang.Short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4);
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) (byte) 1);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray4, (short) 1, 100);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray4, (short) (byte) -1);
        java.lang.Short[] shortArray14 = new java.lang.Short[] { (short) 1 };
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray14);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14, (short) (byte) 100);
        short[] shortArray19 = new short[] {};
        java.lang.Short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray19);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray18, shortArray19);
        short[] shortArray22 = new short[] {};
        java.lang.Short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray22);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray21, shortArray22);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray4, shortArray21);
        java.lang.Short[] shortArray27 = new java.lang.Short[] { (short) 1 };
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray27);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray27, (short) 10);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray30, (short) (byte) 1);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray30, (short) -1);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray4, shortArray30);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray30, 6, 7);
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray30, (short) 0);
        java.lang.Short[] shortArray42 = new java.lang.Short[] { (short) 1 };
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray43, (short) 10);
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.add(shortArray43, 1, (short) (byte) -1);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray43, (short) 100);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray30, shortArray50);
        java.lang.Object obj52 = null;
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) shortArray30, obj52);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0, 1, -1, -1, 1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[1]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[1, -1]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test09581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09581");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray2);
        float[] floatArray15 = new float[] { (short) 100, 0, 10 };
        float[] floatArray18 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(floatArray18, (float) 0);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.add(floatArray18, 10.0f);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray15, floatArray18);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray18);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(floatArray18, (float) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray18);
        float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray2, floatArray18);
        float[] floatArray33 = new float[] { (short) 100, 0, 10 };
        float[] floatArray36 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray36);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.contains(floatArray36, (float) 0);
        float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.add(floatArray36, 10.0f);
        float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray33, floatArray36);
        float[] floatArray45 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray45);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(floatArray45, (float) 0);
        float[] floatArray50 = org.apache.commons.lang3.ArrayUtils.add(floatArray45, 10.0f);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray33, floatArray45);
        float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray29, floatArray33);
        float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.clone(floatArray33);
        int int56 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray53, (float) 5, (int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.remove(floatArray53, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 3, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 1.0, -1.0, 1.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test09582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09582");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean2 = objEntryList0.remove((java.lang.Object) byteArray1);
        byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) 1);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1);
        byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) 100);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray7, (byte) 0);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.clone(byteArray7);
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray15, (byte) 100);
        byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.add(byteArray17, (byte) 10);
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray17, 0, (int) (short) 1);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList23 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean25 = objEntryList23.remove((java.lang.Object) byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray24, (byte) 1);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray24);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray28);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.clone(byteArray29);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.clone(byteArray30);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray17, byteArray30);
        byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.remove(byteArray17, (int) (short) 1);
        byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray7, byteArray17);
        float[] floatArray38 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray38);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) floatArray39);
        java.lang.Object[] objArray41 = org.apache.commons.lang3.ArrayUtils.clone((java.lang.Object[]) floatArray39);
        java.lang.Byte[] byteArray48 = new java.lang.Byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 100, (byte) 0 };
        byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray48);
        byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray48);
        java.lang.Object[] objArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) byteArray48);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) objArray41, (java.lang.Object) byteArray48);
        java.lang.Byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray48);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray48);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray17, byteArray54);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray17);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100, 1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100, 1, 100, 10]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-1, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[-1.0, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test09583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09583");
        byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray3 = org.apache.commons.lang3.ArrayUtils.add(byteArray0, (int) (byte) 0, (byte) 100);
        java.lang.Byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray0);
        java.lang.Byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray4);
        java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 0);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
    }

    @Test
    public void test09584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09584");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.Set<java.lang.Object> objSet33 = objMap31.keySet();
        java.util.Set<java.lang.Object> objSet34 = objMap31.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = objMap31.entrySet();
        boolean boolean36 = objEntrySet35.isEmpty();
        int int37 = objEntrySet35.size();
        java.util.Spliterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySpliterator38 = objEntrySet35.spliterator();
        java.lang.Boolean[] booleanArray42 = new java.lang.Boolean[] { false, false, true };
        java.lang.Boolean[] booleanArray46 = new java.lang.Boolean[] { false, false, true };
        java.lang.Boolean[][] booleanArray47 = new java.lang.Boolean[][] { booleanArray42, booleanArray46 };
        java.lang.Boolean[] booleanArray51 = new java.lang.Boolean[] { false, false, true };
        java.lang.Boolean[] booleanArray55 = new java.lang.Boolean[] { false, false, true };
        java.lang.Boolean[][] booleanArray56 = new java.lang.Boolean[][] { booleanArray51, booleanArray55 };
        java.lang.Boolean[][][] booleanArray57 = new java.lang.Boolean[][][] { booleanArray47, booleanArray56 };
        java.lang.Boolean[] booleanArray61 = new java.lang.Boolean[] { true, false, false };
        java.lang.Boolean[] booleanArray65 = new java.lang.Boolean[] { true, false, false };
        java.lang.Boolean[] booleanArray69 = new java.lang.Boolean[] { true, false, false };
        java.lang.Boolean[][] booleanArray70 = new java.lang.Boolean[][] { booleanArray61, booleanArray65, booleanArray69 };
        java.lang.Boolean[] booleanArray74 = new java.lang.Boolean[] { true, false, false };
        java.lang.Boolean[] booleanArray78 = new java.lang.Boolean[] { true, false, false };
        java.lang.Boolean[] booleanArray82 = new java.lang.Boolean[] { true, false, false };
        java.lang.Boolean[][] booleanArray83 = new java.lang.Boolean[][] { booleanArray74, booleanArray78, booleanArray82 };
        java.lang.Boolean[][][] booleanArray84 = new java.lang.Boolean[][][] { booleanArray70, booleanArray83 };
        java.lang.Boolean[][][] booleanArray85 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray57, booleanArray84);
        boolean boolean86 = objEntrySet35.remove((java.lang.Object) booleanArray57);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream87 = objEntrySet35.parallelStream();
        java.lang.Cloneable[][][][][][][] cloneableArray88 = new java.lang.Cloneable[][][][][][][] {};
        java.lang.Cloneable[][][][][][][][] cloneableArray89 = new java.lang.Cloneable[][][][][][][][] { cloneableArray88 };
        java.lang.Cloneable[][][][][][][][] cloneableArray92 = org.apache.commons.lang3.ArrayUtils.subarray(cloneableArray89, (int) '#', (int) (byte) 10);
        java.lang.Cloneable[][][][][][][] cloneableArray93 = objEntrySet35.toArray((java.lang.Cloneable[][][][][][][]) cloneableArray92);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(objEntrySpliterator38);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertNotNull(booleanArray82);
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertNotNull(booleanArray85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objEntryStream87);
        org.junit.Assert.assertNotNull(cloneableArray88);
        org.junit.Assert.assertNotNull(cloneableArray89);
        org.junit.Assert.assertNotNull(cloneableArray92);
        org.junit.Assert.assertNotNull(cloneableArray93);
    }

    @Test
    public void test09585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09585");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((float) (short) 100, (float) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.append((short) 1, (short) (byte) -1);
        long[] longArray15 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.clone(longArray15);
        java.lang.Long[] longArray17 = org.apache.commons.lang3.ArrayUtils.toObject(longArray16);
        long[] longArray23 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.clone(longArray23);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray16, longArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder26.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray35 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray36 = org.apache.commons.lang3.ArrayUtils.clone(longArray35);
        long[] longArray42 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray43 = org.apache.commons.lang3.ArrayUtils.clone(longArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder29.append(longArray36, longArray42);
        long[] longArray47 = org.apache.commons.lang3.ArrayUtils.add(longArray36, (int) (byte) 0, (long) 2);
        long[] longArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder9.append(longArray24, longArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder49.append((byte) 0, (byte) 10);
        equalsBuilder52.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[2, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(equalsBuilder52);
    }

    @Test
    public void test09586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09586");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        java.lang.Character[] charArray44 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray44, 'a');
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.add(charArray46, '#');
        boolean boolean49 = objMap31.equals((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet50 = objMap31.keySet();
        java.lang.Short[] shortArray52 = new java.lang.Short[] { (short) 1 };
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray52);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray52);
        short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray52, (short) (byte) 100);
        short[] shortArray57 = new short[] {};
        java.lang.Short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray57);
        short[] shortArray59 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray56, shortArray57);
        java.lang.Short[] shortArray61 = new java.lang.Short[] { (short) 1 };
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray61);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray61);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray61, (short) (byte) 100);
        short[] shortArray66 = new short[] {};
        java.lang.Short[] shortArray67 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray66);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray65, shortArray66);
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray59, shortArray66);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.add(shortArray69, (short) (byte) 10);
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray71, 2, (int) '4');
        java.lang.Object obj75 = objMap31.remove((java.lang.Object) 2);
        short[] shortArray80 = new short[] { (byte) 0, (byte) 1, (short) -1, (byte) -1 };
        java.lang.Short[] shortArray81 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray80);
        short[] shortArray84 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray80, (int) (short) 1, 100);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray84);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray84);
        java.lang.Short[] shortArray87 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray84);
        int int89 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray84, (short) 0);
        short[] shortArray92 = org.apache.commons.lang3.ArrayUtils.add(shortArray84, (int) (short) 0, (short) 1);
        boolean boolean93 = objMap31.equals((java.lang.Object) shortArray92);
        short[] shortArray95 = org.apache.commons.lang3.ArrayUtils.add(shortArray92, (short) -1);
        int int97 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray92, (short) (byte) 0);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a,  , a,  , #, #]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[1]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[1]");
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[1]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[1]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[1]");
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[1]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[]");
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray80), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertNotNull(shortArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray84), "[1, -1, -1]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(shortArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray92), "[1, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(shortArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray95), "[1, 1, -1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
    }

    @Test
    public void test09587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09587");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        java.lang.Character[] charArray10 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray10, ' ');
        java.lang.Character[] charArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray10);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray1, (java.lang.Object[]) charArray10);
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray10);
        java.lang.Character[] charArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray10);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray16);
    }

    @Test
    public void test09588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09588");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray5, 4, (-1));
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray11, (int) (byte) -1, (int) '4');
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray11, (int) (byte) -1, (int) (byte) -1);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
    }

    @Test
    public void test09589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09589");
        java.lang.Character[] charArray5 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        boolean[] booleanArray13 = new boolean[] { false, true, true, true };
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray5, (java.lang.Object) booleanArray13);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '4');
        java.lang.Short[] shortArray20 = new java.lang.Short[] { (short) 1 };
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray20);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray20);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray20, (short) (byte) 100);
        short[] shortArray25 = new short[] {};
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray24, shortArray25);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray25, (short) (byte) 10, (int) (byte) 10);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray25);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.clone(shortArray25);
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) charArray5, (java.lang.Object) shortArray32, 0);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.add(shortArray32, (short) (byte) 10);
        java.lang.Short[] shortArray38 = new java.lang.Short[] { (short) 1 };
        short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray38);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray38);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray38, (short) (byte) 100);
        short[] shortArray43 = new short[] {};
        java.lang.Short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray43);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray42, shortArray43);
        short[] shortArray46 = new short[] {};
        java.lang.Short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray46);
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray45, shortArray46);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.add(shortArray46, (short) -1);
        java.lang.Short[] shortArray52 = new java.lang.Short[] { (short) 1 };
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray52);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray52);
        short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray52, (short) (byte) 100);
        short[] shortArray57 = new short[] {};
        java.lang.Short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray57);
        short[] shortArray59 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray56, shortArray57);
        java.lang.Short[] shortArray61 = new java.lang.Short[] { (short) 1 };
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray61);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray61);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray61, (short) (byte) 100);
        short[] shortArray66 = new short[] {};
        java.lang.Short[] shortArray67 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray66);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray65, shortArray66);
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray59, shortArray66);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.add(shortArray69, (short) (byte) 10);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray46, shortArray69);
        java.lang.Short[] shortArray74 = new java.lang.Short[] { (short) 1 };
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray74);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray74);
        short[] shortArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray74, (short) (byte) 100);
        short[] shortArray79 = new short[] {};
        java.lang.Short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray79);
        short[] shortArray81 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray78, shortArray79);
        short[] shortArray83 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray81, (short) 0);
        short[] shortArray85 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray81, (short) (byte) 10);
        int int87 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray81, (short) -1);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray46, shortArray81);
        short[] shortArray90 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray81, (short) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray90);
        short[] shortArray93 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray90, (short) 10);
        java.lang.Short[] shortArray94 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray93);
        short[] shortArray95 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray93);
        short[] shortArray96 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray32, shortArray95);
        short[] shortArray99 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray32, 5, (int) ' ');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[10]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[1]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[1]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[1]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[1]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[-1]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[1]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[1]");
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[1]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[1]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[1]");
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[1]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[1]");
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[1]");
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[1]");
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray81), "[1]");
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[1]");
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray85), "[1]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(shortArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray90), "[1]");
        org.junit.Assert.assertNotNull(shortArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray93), "[1]");
        org.junit.Assert.assertNotNull(shortArray94);
        org.junit.Assert.assertNotNull(shortArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray95), "[1]");
        org.junit.Assert.assertNotNull(shortArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray96), "[1]");
        org.junit.Assert.assertNotNull(shortArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray99), "[]");
    }

    @Test
    public void test09590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09590");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        boolean boolean2 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray1);
        java.lang.Long[] longArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray1);
        long[] longArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray3);
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray4, 1L, 5);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test09591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09591");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        int[] intArray14 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.clone(intArray14);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.add(intArray14, (int) 'a');
        int[] intArray22 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.clone(intArray22);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray23);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray23);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray17);
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray17);
        int[] intArray32 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.clone(intArray32);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray32);
        int[] intArray35 = org.apache.commons.lang3.ArrayUtils.addAll(intArray17, intArray32);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray32, (int) ' ');
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray32);
        boolean boolean40 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray9, (java.lang.Object) intArray38, true);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray9, 'a', (-1));
        org.apache.commons.lang3.ArrayUtils.reverse(charArray9);
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) ' ', 4);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(charArray9, ' ');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, -1, -1, 0, 97, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test09592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09592");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        java.lang.Short[] shortArray12 = new java.lang.Short[] { (short) 1 };
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray12);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12, (short) (byte) 100);
        short[] shortArray17 = new short[] {};
        java.lang.Short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray17);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray16, shortArray17);
        float[] floatArray22 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray22);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(floatArray22, (float) 0);
        float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.add(floatArray22, 10.0f);
        java.lang.Float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray22);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray16, (java.lang.Object) floatArray28, false);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray10, (java.lang.Object[]) floatArray28);
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray28);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray32);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray32);
        int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray34, (float) (byte) 0);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray34, (float) (-1L), 0);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test09593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09593");
        byte[] byteArray0 = null;
        byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray0);
        byte[] byteArray5 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray5, (byte) 10, (int) (short) -1);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray5, (byte) 10);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray0, byteArray5);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray5, (byte) 0, 3);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray5, (byte) 1);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray5, (byte) 1, (int) ' ');
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(byteArray5, (byte) 0);
        byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray5, (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.remove(byteArray5, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0, 0, 10]");
    }

    @Test
    public void test09594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09594");
        short[] shortArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY;
        boolean boolean1 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray0);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.add(shortArray0, 8, (short) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 8, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray0), "[]");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test09595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09595");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        java.lang.Short[] shortArray10 = new java.lang.Short[] { (short) 1 };
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray10);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10, (short) (byte) 100);
        short[] shortArray15 = new short[] {};
        java.lang.Short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray15);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray14, shortArray15);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray8, shortArray15);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.add(shortArray18, (short) (byte) 10);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray20, (int) (short) 0, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray33 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray33);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray33);
        double[] doubleArray36 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder24.append(doubleArray33, doubleArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder24.appendSuper(true);
        java.lang.Character[] charArray45 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray45);
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray45, 'a');
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.clone(charArray48);
        java.lang.Character[] charArray55 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray55, 'a');
        char[] charArray59 = org.apache.commons.lang3.ArrayUtils.add(charArray57, '#');
        char[] charArray61 = org.apache.commons.lang3.ArrayUtils.remove(charArray57, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder24.append(charArray49, charArray57);
        short[] shortArray67 = new short[] { (byte) 0, (byte) 1, (short) -1, (byte) -1 };
        java.lang.Short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray67);
        short[] shortArray69 = null;
        java.lang.Short[] shortArray71 = new java.lang.Short[] { (short) 1 };
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray71);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray71);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray71, (short) (byte) 100);
        short[] shortArray76 = new short[] {};
        java.lang.Short[] shortArray77 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray76);
        short[] shortArray78 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray75, shortArray76);
        java.lang.Short[] shortArray80 = new java.lang.Short[] { (short) 1 };
        short[] shortArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray80);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray80);
        short[] shortArray84 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray80, (short) (byte) 100);
        short[] shortArray85 = new short[] {};
        java.lang.Short[] shortArray86 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray85);
        short[] shortArray87 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray84, shortArray85);
        short[] shortArray88 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray78, shortArray85);
        short[] shortArray89 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray69, shortArray88);
        short[] shortArray92 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray89, 3, 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder24.append(shortArray67, shortArray92);
        boolean boolean94 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray23, shortArray67);
        short[] shortArray96 = org.apache.commons.lang3.ArrayUtils.add(shortArray23, (short) -1);
        short[] shortArray97 = org.apache.commons.lang3.ArrayUtils.clone(shortArray23);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[1]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[1, 10]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[1]");
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[1]");
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[]");
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[1]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray81), "[1]");
        org.junit.Assert.assertNotNull(shortArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray84), "[1]");
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray85), "[]");
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[1]");
        org.junit.Assert.assertNotNull(shortArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray88), "[1]");
        org.junit.Assert.assertNotNull(shortArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray89), "[1]");
        org.junit.Assert.assertNotNull(shortArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray92), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(shortArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray96), "[1, 10, -1]");
        org.junit.Assert.assertNotNull(shortArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray97), "[1, 10]");
    }

    @Test
    public void test09596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09596");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        float[] floatArray15 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(floatArray15, (float) 0);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.add(floatArray15, 10.0f);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray3, floatArray15);
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray22);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean28 = equalsBuilder27.isEquals();
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray34 = org.apache.commons.lang3.ArrayUtils.addAll(strArray29, strArray33);
        java.lang.String[] strArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray29);
        java.lang.Character[] charArray41 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray41, ' ');
        java.lang.Character[] charArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder27.append((java.lang.Object[]) strArray29, (java.lang.Object[]) charArray44);
        java.lang.String str47 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) strArray29, "{32,100,10,10,1}");
        java.lang.String[] strArray49 = org.apache.commons.lang3.ArrayUtils.add(strArray29, "");
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) floatArray22, (java.lang.Object[]) strArray49);
        float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray22, (float) (short) -1);
        int int54 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray52, (float) (byte) 10);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "{}" + "'", str47, "{}");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
    }

    @Test
    public void test09597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09597");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList35 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Object[] objArray36 = objEntryList35.toArray();
        boolean boolean37 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList35);
        objEntrySet32.clear();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream39 = objEntrySet32.stream();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objEntryStream39);
    }

    @Test
    public void test09598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09598");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        java.lang.Character[] charArray21 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, 'a');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.clone(charArray24);
        java.lang.Character[] charArray31 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray31, 'a');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.add(charArray33, '#');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.remove(charArray33, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.append(charArray25, charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder0.append((short) (byte) 10, (short) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder0.append((long) (short) 10, (long) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append((int) ' ', 6);
        boolean boolean48 = equalsBuilder47.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test09599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09599");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        java.lang.Short[] shortArray10 = new java.lang.Short[] { (short) 1 };
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray10);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10, (short) (byte) 100);
        short[] shortArray15 = new short[] {};
        java.lang.Short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray15);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray14, shortArray15);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray8, shortArray15);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.add(shortArray18, (short) (byte) 10);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray20, (int) (short) 0, (int) (short) 100);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray20, (short) (byte) 1, 0);
        java.lang.Short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray20);
        java.lang.Short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray27);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[1]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[1, 10]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray28);
    }

    @Test
    public void test09600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09600");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray6, (short) (byte) 10, (int) (byte) 10);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.add(shortArray6, (short) (byte) -1);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(shortArray6, (short) 1);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test09601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09601");
        short[] shortArray0 = new short[] {};
        java.lang.Short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray3);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.add(shortArray3, (short) (byte) 1);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray6, (short) 0);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray6, (short) 10);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray6, (short) (byte) 100);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray6, (short) (byte) 10, 4);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray0), "[]");
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test09602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09602");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        short[] shortArray9 = new short[] {};
        java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray9);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray8, shortArray9);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.add(shortArray9, (short) -1);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 1 };
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray15);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray15);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray15, (short) (byte) 100);
        short[] shortArray20 = new short[] {};
        java.lang.Short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray20);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray19, shortArray20);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray24);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24, (short) (byte) 100);
        short[] shortArray29 = new short[] {};
        java.lang.Short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray29);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray28, shortArray29);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray22, shortArray29);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.add(shortArray32, (short) (byte) 10);
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray9, shortArray32);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray32, (short) 100);
        java.lang.Short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray37);
        java.lang.Short[] shortArray40 = new java.lang.Short[] { (short) 1 };
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray40);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray40);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray40, (short) (byte) 100);
        short[] shortArray45 = new short[] {};
        java.lang.Short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray45);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray44, shortArray45);
        java.lang.Short[] shortArray49 = new java.lang.Short[] { (short) 1 };
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray49);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray49);
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray49, (short) -1);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray45, shortArray53);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray45);
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray45, (short) 10, (-1));
        short[] shortArray59 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray37, shortArray45);
        java.lang.Short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray45);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[-1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[1]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[1]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[1]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[1]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[1]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[1]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[1]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[1]");
        org.junit.Assert.assertNotNull(shortArray60);
    }

    @Test
    public void test09603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09603");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        double[] doubleArray36 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray36);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (double) (byte) 10);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray39, (double) 10.0f);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 1L);
        java.lang.Object obj44 = objMap31.get((java.lang.Object) 1L);
        java.lang.Boolean[][] booleanArray45 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray52 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray59 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray66 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray73 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray74 = new java.lang.Boolean[][] { booleanArray52, booleanArray59, booleanArray66, booleanArray73 };
        java.lang.Boolean[][] booleanArray75 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray45, booleanArray74);
        java.util.Map<java.lang.Object, java.lang.Object> objMap76 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray45);
        java.lang.Short[] shortArray79 = new java.lang.Short[] { (short) 1 };
        short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray79);
        short[] shortArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray79, (short) 10);
        java.lang.Object obj83 = objMap76.replace((java.lang.Object) 2, (java.lang.Object) shortArray82);
        objMap76.clear();
        java.util.Collection<java.lang.Object> objCollection85 = objMap76.values();
        objMap31.putAll(objMap76);
        boolean boolean87 = objMap76.isEmpty();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertNotNull(objMap76);
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray80), "[1]");
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[1]");
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(objCollection85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test09604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09604");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        objMap31.clear();
        java.util.Collection<java.lang.Object> objCollection40 = objMap31.values();
        boolean[] booleanArray45 = new boolean[] { false, false, false, false };
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray45);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray45, false);
        boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.add(booleanArray45, true);
        double[] doubleArray56 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray56);
        boolean boolean58 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray50, (java.lang.Object) doubleArray56);
        double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray56, 3, 1);
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray61, (double) 100, (double) 100.0f);
        boolean boolean65 = objMap31.containsValue((java.lang.Object) 100);
        long[] longArray71 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray72 = org.apache.commons.lang3.ArrayUtils.clone(longArray71);
        java.lang.Long[] longArray73 = org.apache.commons.lang3.ArrayUtils.toObject(longArray72);
        long[] longArray74 = org.apache.commons.lang3.ArrayUtils.clone(longArray72);
        long[] longArray76 = org.apache.commons.lang3.ArrayUtils.add(longArray74, (long) (short) 0);
        long[] longArray77 = org.apache.commons.lang3.ArrayUtils.clone(longArray76);
        long[] longArray83 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray84 = org.apache.commons.lang3.ArrayUtils.clone(longArray83);
        java.lang.Long[] longArray85 = org.apache.commons.lang3.ArrayUtils.toObject(longArray84);
        long[] longArray86 = org.apache.commons.lang3.ArrayUtils.clone(longArray84);
        long[] longArray88 = org.apache.commons.lang3.ArrayUtils.add(longArray86, (long) (short) 0);
        long[] longArray89 = org.apache.commons.lang3.ArrayUtils.addAll(longArray77, longArray86);
        boolean boolean90 = objMap31.containsKey((java.lang.Object) longArray86);
        int int93 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray86, (long) (short) 1, 1);
        long[] longArray96 = org.apache.commons.lang3.ArrayUtils.subarray(longArray86, 4, (int) '#');
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray71), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray77), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray83), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray84), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray85);
        org.junit.Assert.assertNotNull(longArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray86), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray88), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray89), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(longArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray96), "[1]");
    }

    @Test
    public void test09605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09605");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        boolean[] booleanArray27 = new boolean[] { false, true, true, true };
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray27);
        boolean[] booleanArray33 = new boolean[] { false, false, false, false };
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray33);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray33, false);
        boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.add(booleanArray33, true);
        boolean[] booleanArray43 = new boolean[] { false, false, false, false };
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray43, false);
        java.lang.Boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray43);
        boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray33, booleanArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder0.append(booleanArray28, booleanArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append((short) 10, (short) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder0.append((int) (short) 10, (int) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder0.append(false, true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder58);
    }

    @Test
    public void test09606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09606");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) 10);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.add(shortArray2, (int) (byte) 1, (short) (byte) 10);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.clone(shortArray2);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray2);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.remove(shortArray2, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
    }

    @Test
    public void test09607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09607");
        double[] doubleArray5 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray5);
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray5);
        java.lang.Object obj8 = null;
        boolean boolean10 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray7, obj8, false);
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray7, (double) 3);
        double[] doubleArray16 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray16);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.add(doubleArray16, (double) (byte) 10);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray19, (double) 10.0f);
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray19, (double) 1, (int) ' ', (double) '4');
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray19, 4, (double) 6);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray12, doubleArray19);
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray19);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.add(doubleArray19, (double) 'a');
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray32, (double) 100L, 10);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 3 + "'", int25 == 3);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 100.0, 10.0, 6.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 100.0, 10.0, 97.0]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test09608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09608");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        float[] floatArray11 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray11);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains(floatArray11, (float) 0);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.add(floatArray11, 10.0f);
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray11);
        boolean boolean19 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray5, (java.lang.Object) floatArray17, false);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.add(shortArray5, (short) (byte) 100);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray21, (short) 1, 5);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray21, 7, (int) '#');
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.add(shortArray27, (short) -1);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1, 100]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[-1]");
    }

    @Test
    public void test09609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09609");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Object[] objArray1 = objEntryList0.toArray();
        java.lang.Boolean[][] booleanArray2 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray23 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray30 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray31 = new java.lang.Boolean[][] { booleanArray9, booleanArray16, booleanArray23, booleanArray30 };
        java.lang.Boolean[][] booleanArray32 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray2, booleanArray31);
        java.util.Map<java.lang.Object, java.lang.Object> objMap33 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray2);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = objMap33.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList35 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean37 = objEntryList35.remove((java.lang.Object) byteArray36);
        boolean boolean38 = objEntrySet34.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList35);
        java.lang.Boolean[][] booleanArray39 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray46 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray53 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray60 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray67 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray68 = new java.lang.Boolean[][] { booleanArray46, booleanArray53, booleanArray60, booleanArray67 };
        java.lang.Boolean[][] booleanArray69 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray39, booleanArray68);
        java.util.Map<java.lang.Object, java.lang.Object> objMap70 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray39);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet71 = objMap70.entrySet();
        objEntrySet71.clear();
        boolean boolean73 = objEntrySet34.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntrySet71);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream74 = objEntrySet71.parallelStream();
        byte[] byteArray75 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray75);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.contains(byteArray75, (byte) 10);
        byte[] byteArray80 = org.apache.commons.lang3.ArrayUtils.add(byteArray75, (byte) 100);
        boolean boolean81 = objEntrySet71.contains((java.lang.Object) (byte) 100);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList82 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray83 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean84 = objEntryList82.remove((java.lang.Object) byteArray83);
        java.lang.reflect.Type[] typeArray85 = new java.lang.reflect.Type[] {};
        java.lang.reflect.Type[] typeArray86 = new java.lang.reflect.Type[] {};
        java.lang.reflect.Type[] typeArray87 = new java.lang.reflect.Type[] {};
        java.lang.reflect.Type[] typeArray88 = new java.lang.reflect.Type[] {};
        java.lang.reflect.Type[] typeArray89 = new java.lang.reflect.Type[] {};
        java.lang.reflect.Type[] typeArray90 = new java.lang.reflect.Type[] {};
        java.lang.reflect.Type[][] typeArray91 = new java.lang.reflect.Type[][] { typeArray85, typeArray86, typeArray87, typeArray88, typeArray89, typeArray90 };
        java.lang.reflect.Type[][] typeArray92 = objEntryList82.toArray(typeArray91);
        boolean boolean93 = objEntrySet71.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList82);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor94 = objEntrySet71.iterator();
        java.lang.Object[] objArray95 = objEntrySet71.toArray();
        boolean boolean96 = objEntryList0.equals((java.lang.Object) objArray95);
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertNotNull(objMap33);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(objMap70);
        org.junit.Assert.assertNotNull(objEntrySet71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(objEntryStream74);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[100]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertNotNull(typeArray86);
        org.junit.Assert.assertNotNull(typeArray87);
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertNotNull(typeArray90);
        org.junit.Assert.assertNotNull(typeArray91);
        org.junit.Assert.assertNotNull(typeArray92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(objEntryItor94);
        org.junit.Assert.assertNotNull(objArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray95), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray95), "[]");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test09610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09610");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((long) (short) 0, (long) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((byte) 100, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder6.append(true, false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
    }

    @Test
    public void test09611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09611");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray6, (double) 1, (int) ' ', (double) '4');
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray6);
        double[] doubleArray17 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray17);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.add(doubleArray17, (double) (byte) 10);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 10.0f);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray20);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.add(doubleArray23, (double) 1.0f);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray25, (double) 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray25, (double) 8);
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray6, doubleArray29);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray30);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray30);
        double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.add(doubleArray30, (double) (short) 10);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray30);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0, 10.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test09612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09612");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((long) (byte) 10, (long) (byte) 10);
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY;
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray22, false, 10);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray22, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray37 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.clone(longArray37);
        long[] longArray44 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.clone(longArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder31.append(longArray38, longArray44);
        boolean[] booleanArray51 = new boolean[] { false, false, false, false };
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray51);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray51, false);
        java.lang.Boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray51);
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray51);
        java.lang.Boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray51);
        boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray57);
        boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.add(booleanArray58, 0, true);
        boolean[] booleanArray66 = new boolean[] { false, false, false, false };
        boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray66);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray66, false);
        java.lang.Boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray66);
        int int73 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray66, true, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder31.append(booleanArray58, booleanArray66);
        boolean[] booleanArray76 = org.apache.commons.lang3.ArrayUtils.add(booleanArray66, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder3.append(booleanArray22, booleanArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder3.append((short) 10, (short) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[true, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
    }

    @Test
    public void test09613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09613");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((long) (short) 10, (long) '#');
        boolean boolean9 = equalsBuilder5.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder5.append((short) (byte) 10, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder5.append(false, true);
        java.lang.Boolean boolean16 = equalsBuilder15.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + false + "'", boolean16, false);
    }

    @Test
    public void test09614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09614");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 100.0d };
        java.lang.Double[] doubleArray3 = new java.lang.Double[] { 100.0d };
        java.lang.Double[][] doubleArray4 = new java.lang.Double[][] { doubleArray1, doubleArray3 };
        java.lang.Double[][] doubleArray7 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray4, (int) (byte) 100, (int) '4');
        java.lang.Boolean[][] booleanArray8 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray15 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray22 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray29 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray36 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray37 = new java.lang.Boolean[][] { booleanArray15, booleanArray22, booleanArray29, booleanArray36 };
        java.lang.Boolean[][] booleanArray38 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray8, booleanArray37);
        java.util.Map<java.lang.Object, java.lang.Object> objMap39 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray8);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = objMap39.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList41 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray42 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean43 = objEntryList41.remove((java.lang.Object) byteArray42);
        boolean boolean44 = objEntrySet40.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList41);
        java.lang.Object[] objArray45 = objEntryList41.toArray();
        java.lang.Double[] doubleArray46 = new java.lang.Double[] {};
        java.lang.Double[] doubleArray47 = new java.lang.Double[] {};
        java.lang.Double[][] doubleArray48 = new java.lang.Double[][] { doubleArray46, doubleArray47 };
        java.lang.Double[][] doubleArray49 = objEntryList41.toArray(doubleArray48);
        double[] doubleArray53 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray53);
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.add(doubleArray53, (double) (byte) 10);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.add(doubleArray53, 0.0d);
        java.lang.Double[][] doubleArray59 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray49, (java.lang.Object) 0.0d);
        java.lang.Double[][] doubleArray60 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray7, doubleArray49);
        boolean[] booleanArray65 = new boolean[] { false, false, false, false };
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray65);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray65, false);
        java.lang.Boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray65);
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray65);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray70, false);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray60, (java.lang.Object) booleanArray70, 3);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray70, true);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray70);
        boolean[] booleanArray80 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray70, (int) (byte) 1, 11);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNotNull(objMap39);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray80), "[false, false, false]");
    }

    @Test
    public void test09615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09615");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray13, (int) (short) 0, 100);
        boolean[] booleanArray21 = new boolean[] { false, false, false, false };
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray21);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray21, false);
        java.lang.Boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray21);
        java.lang.Boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27, true);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray30);
        boolean[] booleanArray36 = new boolean[] { false, false, false, false };
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray36, false);
        java.lang.Boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray36);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray36);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray36);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray30, booleanArray36);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray36);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray13, booleanArray36);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray13, true);
        boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray13, false);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, false, false]");
    }

    @Test
    public void test09616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09616");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray42, longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder19.append(longArray26, longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder19.append((byte) 1, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder19.append((double) 11, (-1.0d));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder19.append((int) (byte) 100, (int) (short) -1);
        equalsBuilder62.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder62);
    }

    @Test
    public void test09617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09617");
        short[] shortArray2 = new short[] { (short) 0, (byte) 10 };
        short[][] shortArray3 = new short[][] { shortArray2 };
        short[] shortArray6 = new short[] { (short) 0, (byte) 10 };
        short[][] shortArray7 = new short[][] { shortArray6 };
        short[][][] shortArray8 = new short[][][] { shortArray3, shortArray7 };
        short[][][] shortArray11 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray8, (int) (byte) 10, (int) 'a');
        long[] longArray17 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.clone(longArray17);
        java.lang.Long[] longArray19 = org.apache.commons.lang3.ArrayUtils.toObject(longArray18);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.clone(longArray18);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray20, (long) (short) 0);
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.add(longArray20, (long) 10);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) shortArray8, (java.lang.Object) longArray20);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[0, 10]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[0, 10]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, 100, 10, 10, 1, 10]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test09618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09618");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray5);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.toObject(intArray5);
        java.lang.Integer[] intArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray8, 3);
        int[] intArray15 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray16 = org.apache.commons.lang3.ArrayUtils.clone(intArray15);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray16);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.subarray(intArray16, (int) ' ', (int) (byte) 100);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray10, intArray16);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray16, 7);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test09619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09619");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray5);
        java.lang.Short[] shortArray8 = new java.lang.Short[] { (short) 1 };
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray8);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) (byte) 100);
        short[] shortArray13 = new short[] {};
        java.lang.Short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray13);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray12, shortArray13);
        java.lang.Short[] shortArray17 = new java.lang.Short[] { (short) 1 };
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray17);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray17);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray17, (short) (byte) 100);
        short[] shortArray22 = new short[] {};
        java.lang.Short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray22);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray21, shortArray22);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray15, shortArray22);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.add(shortArray25, (short) (byte) 10);
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray25, (short) -1);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray25);
        java.lang.Short[] shortArray32 = new java.lang.Short[] { (short) 1 };
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray32);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray32);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray32, (short) (byte) 100);
        java.lang.Short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray36);
        short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray37, (short) 1);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray25, shortArray39);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray39, (short) (byte) 100, (int) '4');
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray39, (short) (byte) 100, 13);
        java.lang.Short[] shortArray48 = new java.lang.Short[] { (short) 1 };
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray48);
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray49, (short) 10);
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray49, (short) 100, (int) (byte) 1);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray49);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray55);
        short[] shortArray59 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray55, 1, (int) (short) 0);
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray55);
        int int63 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray55, (short) (byte) 10, 2);
        java.lang.Short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray55);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray39, shortArray55);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1, 10]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[1]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[1]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[1]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[1]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test09620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09620");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        byte[] byteArray7 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray7, (byte) 10, (int) (short) -1);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray7);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray7, (byte) 1, (int) ' ');
        byte[] byteArray21 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray21, (byte) 10);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray7, byteArray21);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray26, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder0.append(byteArray7, byteArray26);
        java.lang.Byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray26);
        java.lang.Byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray31);
        byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray31);
        byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray31, (byte) 100);
        byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray35);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
    }

    @Test
    public void test09621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09621");
        char[] charArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray0, 'a', (int) ' ');
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test09622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09622");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        double[] doubleArray15 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray9, (java.lang.Object) doubleArray15);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray15);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray15, (double) (short) 1);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray15, (double) (byte) 0, (double) 'a');
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) 10.0f, (double) 7);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray15, (double) '4');
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 10.0, 10.0, 0.0]");
    }

    @Test
    public void test09623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09623");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        java.lang.Short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) 100);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5);
        short[] shortArray7 = null;
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray6, shortArray7);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test09624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09624");
        double[] doubleArray5 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray5);
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray5);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.add(doubleArray7, (double) 7);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray7, (double) '4');
        double[] doubleArray15 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray16, (java.lang.Object) ' ');
        boolean[] booleanArray23 = new boolean[] { false, true, true, true };
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray23);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray16, (java.lang.Object) booleanArray24, (int) (byte) 10);
        java.lang.Double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray16);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray16, (double) 100L);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray29);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.add(doubleArray29, (double) 6);
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray32, (double) (-1.0f), (int) (short) 1);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray7, doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0, 7.0]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 10.0, 0.0, 6.0]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test09625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09625");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray5);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray7);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test09626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09626");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0);
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray2);
        long[] longArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        long[] longArray10 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray10);
        java.lang.Long[] longArray12 = org.apache.commons.lang3.ArrayUtils.toObject(longArray11);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.clone(longArray11);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray13);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.subarray(longArray13, 1, 7);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.addAll(longArray2, longArray17);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray18);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray18, (int) '#', (long) 5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[1, 10, 10, 100, 32]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[10, 10, 100, 32]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[10, 10, 100, 32]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test09627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09627");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((long) (short) 10, (long) '#');
        boolean boolean9 = equalsBuilder8.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder8.append(true, true);
        java.lang.Short[] shortArray14 = new java.lang.Short[] { (short) 1 };
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray14);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14, (short) (byte) 100);
        short[] shortArray19 = new short[] {};
        java.lang.Short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray19);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray18, shortArray19);
        java.lang.Short[] shortArray23 = new java.lang.Short[] { (short) 1 };
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray23);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray23);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray23, (short) (byte) 100);
        short[] shortArray28 = new short[] {};
        java.lang.Short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray28);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray27, shortArray28);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray21, shortArray28);
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.add(shortArray31, (short) (byte) 10);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray33, 2, (int) '4');
        short[] shortArray41 = new short[] { (byte) 0, (byte) 1, (short) -1, (byte) -1 };
        java.lang.Short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray41);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray41, (int) (short) 1, 100);
        int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray41, (short) 100, 9);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder12.append(shortArray36, shortArray41);
        java.lang.Boolean boolean50 = equalsBuilder12.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder12.append(1L, (long) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder12.append((float) 0, (float) (-1));
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[1]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertEquals("'" + boolean50 + "' != '" + false + "'", boolean50, false);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
    }

    @Test
    public void test09628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09628");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        boolean[] booleanArray14 = new boolean[] { false, false, false, false };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray14);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray14, false);
        java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray14);
        java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14);
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray20);
        java.lang.Boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray21);
        boolean[] booleanArray28 = new boolean[] { false, false, false, false };
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray28);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray28, false);
        java.lang.Boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray28);
        boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray28);
        java.lang.Boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray28);
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray34);
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray34, true);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray37);
        boolean[] booleanArray43 = new boolean[] { false, false, false, false };
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray43, false);
        java.lang.Boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray43);
        boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray43);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray43);
        boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray43);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray37, booleanArray43);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray43);
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray43, true);
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray54, true, 2);
        boolean[] booleanArray60 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray54, (int) (byte) -1, 0);
        boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray23, booleanArray60);
        boolean[] booleanArray63 = org.apache.commons.lang3.ArrayUtils.add(booleanArray60, false);
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray60, 9, 6);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.add(booleanArray60, 9, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 9, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[]");
    }

    @Test
    public void test09629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09629");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (short) 0);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray10);
        java.lang.Long[] longArray12 = org.apache.commons.lang3.ArrayUtils.toObject(longArray10);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray12);
    }

    @Test
    public void test09630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09630");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (short) 0);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(longArray10, (long) (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray10);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[0, 1, 10, 10, 100, 32]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test09631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09631");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 100, (byte) 0 };
        byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6);
        int int8 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) byteArray6);
        java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9, (byte) 0);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray11);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray11, (byte) 0);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray14, (byte) 1, 5);
        byte[] byteArray18 = null;
        byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray24 = new double[] {};
        double[] doubleArray28 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.add(doubleArray28, (double) (byte) 10);
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray28, (double) 0L, 0);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray28);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder20.append(doubleArray24, doubleArray28);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray44 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray44);
        double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.add(doubleArray44, (double) (byte) 10);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray47, (double) 10.0f);
        double[] doubleArray53 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray53);
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.add(doubleArray53, (double) (byte) 10);
        int int59 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray53, (double) 0L, 0);
        double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray53);
        int int63 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray53, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray47, doubleArray53);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder39.append(doubleArray40, doubleArray53);
        byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray66);
        byte[] byteArray68 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.add(byteArray68, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder65.append(byteArray66, byteArray68);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray18, byteArray68);
        byte[] byteArray73 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray74 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray73);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray18, byteArray73);
        byte[] byteArray76 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray78 = org.apache.commons.lang3.ArrayUtils.add(byteArray76, (byte) -1);
        byte[] byteArray79 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray73, byteArray76);
        byte[] byteArray82 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray73, (int) (byte) 10, 3);
        byte[] byteArray83 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray14, byteArray73);
        byte[] byteArray85 = org.apache.commons.lang3.ArrayUtils.add(byteArray73, (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray88 = org.apache.commons.lang3.ArrayUtils.add(byteArray85, (-1), (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 6 + "'", int8 == 6);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 100, -1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[]");
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[-1]");
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[]");
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[1, 100, -1, 10, 100]");
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[1]");
    }

    @Test
    public void test09632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09632");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) 0);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, 10.0f);
        java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        java.lang.Float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertNotNull(floatArray9);
    }

    @Test
    public void test09633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09633");
        java.lang.Byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray0);
        byte[] byteArray2 = null;
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray1, byteArray2);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray1, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray1);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray18 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray19 = org.apache.commons.lang3.ArrayUtils.clone(longArray18);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder12.append(longArray19, longArray25);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder12.append((long) (byte) 10, (long) (byte) 10);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean38 = equalsBuilder37.isEquals();
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.String[] strArray43 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray44 = org.apache.commons.lang3.ArrayUtils.addAll(strArray39, strArray43);
        java.lang.String[] strArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray39);
        java.lang.Character[] charArray51 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray51, ' ');
        java.lang.Character[] charArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray51);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder37.append((java.lang.Object[]) strArray39, (java.lang.Object[]) charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder30.append((java.lang.Object[]) byteArray32, (java.lang.Object[]) strArray39);
        java.lang.Byte[] byteArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray32);
        java.lang.Byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray57);
        int int59 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) byteArray57);
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray57);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray60, (byte) -1);
        byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.add(byteArray60, (byte) 10);
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray1, byteArray64);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[1]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[1]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, 10]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, 10]");
    }

    @Test
    public void test09634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09634");
        java.lang.Byte[] byteArray1 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray1);
        java.lang.Byte[] byteArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray1);
        java.lang.Byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray1);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(byteArray4);
    }

    @Test
    public void test09635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09635");
        java.lang.Integer[] intArray1 = new java.lang.Integer[] { 0 };
        java.lang.Integer[] intArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray1);
        java.lang.Character[] charArray8 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8, ' ');
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8, '#');
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray2, (java.lang.Object) '#', (int) (short) 100);
        java.lang.Integer[] intArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray2);
        java.lang.Integer[] intArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray2);
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2, (int) (short) -1);
        java.lang.Integer[] intArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray2);
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2, 2);
        java.lang.Integer[] intArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray2);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0]");
        org.junit.Assert.assertNotNull(intArray22);
    }

    @Test
    public void test09636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09636");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        java.lang.Character[] charArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray10, 'a');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[ , 4, 4, a, 4]");
    }

    @Test
    public void test09637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09637");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList1 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor2 = objEntryList1.iterator();
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.String[] strArray7 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray8 = org.apache.commons.lang3.ArrayUtils.addAll(strArray3, strArray7);
        java.lang.Comparable<java.lang.String>[] strComparableArray9 = objEntryList1.toArray((java.lang.Comparable<java.lang.String>[]) strArray3);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream10 = objEntryList1.parallelStream();
        boolean boolean11 = objEntryList0.addAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList1);
        java.lang.Boolean[][] booleanArray12 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray19 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray26 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray33 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray40 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray41 = new java.lang.Boolean[][] { booleanArray19, booleanArray26, booleanArray33, booleanArray40 };
        java.lang.Boolean[][] booleanArray42 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray12, booleanArray41);
        java.util.Map<java.lang.Object, java.lang.Object> objMap43 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray12);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet44 = objMap43.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList45 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean47 = objEntryList45.remove((java.lang.Object) byteArray46);
        boolean boolean48 = objEntrySet44.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList45);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor49 = objEntrySet44.iterator();
        java.lang.Object[] objArray50 = objEntrySet44.toArray();
        boolean boolean52 = objEntrySet44.remove((java.lang.Object) '4');
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList53 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor54 = objEntryList53.iterator();
        java.lang.String[] strArray55 = new java.lang.String[] {};
        java.lang.String[] strArray59 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray60 = org.apache.commons.lang3.ArrayUtils.addAll(strArray55, strArray59);
        java.lang.Comparable<java.lang.String>[] strComparableArray61 = objEntryList53.toArray((java.lang.Comparable<java.lang.String>[]) strArray55);
        boolean boolean62 = objEntrySet44.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList53);
        boolean boolean63 = objEntrySet44.isEmpty();
        boolean boolean64 = objEntryList0.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntrySet44);
        java.util.Spliterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySpliterator65 = objEntryList0.spliterator();
        org.junit.Assert.assertNotNull(objEntryItor2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strComparableArray9);
        org.junit.Assert.assertNotNull(objEntryStream10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertNotNull(objMap43);
        org.junit.Assert.assertNotNull(objEntrySet44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objEntryItor49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEntryItor54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strComparableArray61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objEntrySpliterator65);
    }

    @Test
    public void test09638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09638");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray9, (long) (short) 1);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray9, (long) '4');
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray13, (long) (byte) 1);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 4 + "'", int15 == 4);
    }

    @Test
    public void test09639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09639");
        // The following exception was thrown during execution in test generation
        try {
            int int1 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) "{1,100,-1,10,100,0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Argument is not an array");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09640");
        int[] intArray0 = new int[] {};
        int[] intArray3 = org.apache.commons.lang3.ArrayUtils.add(intArray0, 0, 100);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray3);
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray3);
        int[] intArray10 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray11 = org.apache.commons.lang3.ArrayUtils.clone(intArray10);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.add(intArray10, (int) 'a');
        int[] intArray18 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray19 = org.apache.commons.lang3.ArrayUtils.clone(intArray18);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray19);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray13, intArray19);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray13);
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray13);
        int[] intArray28 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.clone(intArray28);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray28);
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.addAll(intArray13, intArray28);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray3, intArray13);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.add(intArray3, (int) (short) 10);
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.add(intArray34, 6);
        java.lang.Integer[] intArray37 = org.apache.commons.lang3.ArrayUtils.toObject(intArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder38.append(true, true);
        java.lang.Short[] shortArray43 = new java.lang.Short[] { (short) 1 };
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray43);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray43);
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray43);
        boolean[] booleanArray51 = new boolean[] { false, false, false, false };
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray51);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray51, false);
        java.lang.Boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray51);
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray51);
        java.lang.Boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray51);
        java.lang.Short[] shortArray59 = new java.lang.Short[] { (short) 1 };
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray59);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray59);
        short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray59, (short) (byte) 100);
        short[] shortArray64 = new short[] {};
        java.lang.Short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray64);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray63, shortArray64);
        float[] floatArray69 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray70 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray69);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.contains(floatArray69, (float) 0);
        float[] floatArray74 = org.apache.commons.lang3.ArrayUtils.add(floatArray69, 10.0f);
        java.lang.Float[] floatArray75 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray69);
        boolean boolean77 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray63, (java.lang.Object) floatArray75, false);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray57, (java.lang.Object[]) floatArray75);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray43, (java.lang.Object[]) floatArray75);
        int int82 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray75, (java.lang.Object) 1, 0);
        java.lang.Float[] floatArray86 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f };
        java.lang.Float[] floatArray87 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder38.append((java.lang.Object[]) floatArray75, (java.lang.Object[]) floatArray87);
        float[] floatArray89 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray75);
        float[] floatArray91 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray75, (float) 2);
        java.lang.Float[] floatArray92 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray75);
        java.lang.Float[] floatArray93 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray75);
        boolean boolean94 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) intArray37, (java.lang.Object) floatArray75);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[100]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, -1, -1, 0, 97, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 10, 6]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[1]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[1]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[1]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[1]");
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[1]");
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[1]");
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(floatArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray74), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(floatArray86);
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(floatArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray89), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray91), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray92);
        org.junit.Assert.assertNotNull(floatArray93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test09641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09641");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.io.Serializable[]) booleanArray10);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray21 = org.apache.commons.lang3.ArrayUtils.subarray((java.lang.reflect.GenericDeclaration[]) wildcardClassArray18, 10, (int) (byte) 10);
        double[] doubleArray25 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, (double) (byte) 10);
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0.0d);
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray25, (double) (-1), (int) (short) 10, (double) (-1.0f));
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray25);
        java.lang.reflect.AnnotatedElement[] annotatedElementArray36 = org.apache.commons.lang3.ArrayUtils.removeElement((java.lang.reflect.AnnotatedElement[]) wildcardClassArray18, (java.lang.Object) boolean35);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) booleanArray17, (java.lang.Object) boolean35);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray17, true);
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray17, false);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertNotNull(genericDeclarationArray21);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(annotatedElementArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test09642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09642");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0);
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray2);
        java.lang.Long[] longArray4 = org.apache.commons.lang3.ArrayUtils.toObject(longArray2);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_ARRAY;
        long[] longArray11 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.clone(longArray11);
        java.lang.Long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toObject(longArray12);
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray12);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.add(longArray14, (long) (short) 0);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray16, (long) '4');
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray5, longArray16);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(longArray16, (long) (-1));
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray16, 0L);
        long[] longArray25 = org.apache.commons.lang3.ArrayUtils.add(longArray23, (long) (short) 10);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray2, longArray23);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1, 10]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test09643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09643");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean2 = objEntryList0.remove((java.lang.Object) byteArray1);
        byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) 1);
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) 100);
        java.util.Map<java.lang.Object, java.lang.Object> objMap7 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) byteArray1);
        boolean boolean8 = objMap7.isEmpty();
        boolean[] booleanArray13 = new boolean[] { false, false, false, false };
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray13, false);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.add(booleanArray13, true);
        double[] doubleArray24 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray24);
        boolean boolean26 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray18, (java.lang.Object) doubleArray24);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray24, 3, 1);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) (byte) 10, (double) ' ');
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (short) 0, (int) (byte) 0);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray29);
        java.lang.Boolean[][] booleanArray37 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray44 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray51 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray58 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray65 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray66 = new java.lang.Boolean[][] { booleanArray44, booleanArray51, booleanArray58, booleanArray65 };
        java.lang.Boolean[][] booleanArray67 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray37, booleanArray66);
        java.util.Map<java.lang.Object, java.lang.Object> objMap68 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray37);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet69 = objMap68.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList70 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray71 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean72 = objEntryList70.remove((java.lang.Object) byteArray71);
        boolean boolean73 = objEntrySet69.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList70);
        java.lang.Object[] objArray74 = objEntryList70.toArray();
        java.util.Map.Entry<java.lang.Object, java.lang.Object> objEntry75 = null;
        boolean boolean76 = objEntryList70.add(objEntry75);
        java.util.Map.Entry<java.lang.Object, java.lang.Object> objEntry77 = null;
        boolean boolean78 = objEntryList70.add(objEntry77);
        java.util.Spliterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySpliterator79 = objEntryList70.spliterator();
        boolean boolean81 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray29, (java.lang.Object) objEntrySpliterator79, true);
        boolean boolean82 = objMap7.containsValue((java.lang.Object) true);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(objMap7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(objMap68);
        org.junit.Assert.assertNotNull(objEntrySet69);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objEntrySpliterator79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test09644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09644");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        java.lang.Character[] charArray9 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray9, 'a');
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) floatArray2, (java.lang.Object) 'a');
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, (float) 3);
        java.lang.Float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) ' ');
        boolean[] booleanArray22 = new boolean[] { false, false, false, false };
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray22);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray22, false);
        java.lang.Boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray22);
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray22);
        java.lang.Boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray22);
        java.lang.Short[] shortArray30 = new java.lang.Short[] { (short) 1 };
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray30);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray30);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray30, (short) (byte) 100);
        short[] shortArray35 = new short[] {};
        java.lang.Short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray35);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray34, shortArray35);
        float[] floatArray40 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(floatArray40, (float) 0);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.add(floatArray40, 10.0f);
        java.lang.Float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray40);
        boolean boolean48 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray34, (java.lang.Object) floatArray46, false);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray28, (java.lang.Object[]) floatArray46);
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray28, false);
        java.lang.Boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray28);
        java.lang.Character[] charArray58 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray58, ' ');
        java.lang.Character[] charArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray58);
        char[] charArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray61);
        char[] charArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray61);
        boolean[] booleanArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY;
        int int67 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray64, false, 10);
        int int69 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray64, true);
        java.lang.Character[] charArray75 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray75, ' ');
        char[] charArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray77);
        java.lang.String[] strArray79 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.lang.Comparable<java.lang.String>[]) strArray79);
        java.lang.String[] strArray81 = org.apache.commons.lang3.ArrayUtils.clone(strArray79);
        java.lang.String[] strArray82 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray81);
        java.lang.String[] strArray86 = new java.lang.String[] { "{}", "", "{}" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        boolean boolean89 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray78, (java.lang.Object) strArray82, (java.util.Collection<java.lang.String>) strList87);
        boolean boolean90 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray63, (java.lang.Object) booleanArray64, (java.util.Collection<java.lang.String>) strList87);
        boolean boolean91 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) floatArray2, (java.lang.Object) booleanArray52, (java.util.Collection<java.lang.String>) strList87);
        float[] floatArray93 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, (float) (-1));
        float[] floatArray94 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray93);
        float[] floatArray95 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray93);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0, 3.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[1]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[1]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(floatArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray93), "[-1.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray94), "[-1.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray95), "[-1.0, 1.0, -1.0]");
    }

    @Test
    public void test09645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09645");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (short) 0);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray10);
        long[] longArray17 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.clone(longArray17);
        java.lang.Long[] longArray19 = org.apache.commons.lang3.ArrayUtils.toObject(longArray18);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.clone(longArray18);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray20, (long) (short) 0);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.addAll(longArray11, longArray20);
        long[] longArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray11, (long) 10);
        long[] longArray28 = org.apache.commons.lang3.ArrayUtils.add(longArray25, 0, (long) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray30 = org.apache.commons.lang3.ArrayUtils.remove(longArray28, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[100, 32, 100, 10, 1, 0]");
    }

    @Test
    public void test09646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09646");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray13, (int) (short) 0, 100);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray13, false);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.add(booleanArray13, true);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray13, true);
        double[] doubleArray26 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray26);
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray27, (java.lang.Object) ' ');
        java.lang.Object obj30 = null;
        java.lang.Object[] objArray31 = org.apache.commons.lang3.ArrayUtils.add((java.lang.Object[]) doubleArray27, obj30);
        java.lang.Object obj32 = null;
        java.lang.Object[] objArray33 = org.apache.commons.lang3.ArrayUtils.removeElement((java.lang.Object[]) doubleArray27, obj32);
        double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray27);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray27, (double) (byte) 1);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray36);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (int) (byte) 0, (double) 1);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (double) 100L);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray42, 2);
        double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray44, 0, (int) 'a');
        boolean boolean49 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) true, (java.lang.Object) 'a', true);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, false, false, true]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test09647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09647");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(shortArray8, (short) 100);
        java.lang.Short[] shortArray12 = new java.lang.Short[] { (short) 1 };
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray12);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12, (short) (byte) 100);
        short[] shortArray17 = new short[] {};
        java.lang.Short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray17);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray16, shortArray17);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray16, 4, (-1));
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray22, (int) (byte) -1, (int) '4');
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.clone(shortArray22);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray8, shortArray22);
        java.lang.Short[] shortArray29 = new java.lang.Short[] { (short) 1 };
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray29);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray29);
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray29, (short) (byte) 100);
        short[] shortArray34 = new short[] {};
        java.lang.Short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray34);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray33, shortArray34);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray36, (short) 0);
        java.lang.Short[] shortArray40 = new java.lang.Short[] { (short) 1 };
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray40);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray40);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray40, (short) (byte) 100);
        short[] shortArray45 = new short[] {};
        java.lang.Short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray45);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray44, shortArray45);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray44, 4, (-1));
        short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray38, shortArray50);
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray22, shortArray51);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray22, (short) (byte) 1, 0);
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray22, (short) (byte) 100, 13);
        java.lang.String str59 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) shortArray22);
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray22, 5, 100);
        int int64 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray22, (short) 0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[1]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[1]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[1]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[1]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[1]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[1]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "{}" + "'", str59, "{}");
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test09648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09648");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        java.lang.Character[] charArray21 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, 'a');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.clone(charArray24);
        java.lang.Character[] charArray31 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray31, 'a');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.add(charArray33, '#');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.remove(charArray33, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.append(charArray25, charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder0.append((short) (byte) 10, (short) (byte) 0);
        boolean[] booleanArray46 = new boolean[] { false, false, false, false };
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray46);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray46, false);
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.add(booleanArray46, true);
        boolean[] booleanArray56 = new boolean[] { false, false, false, false };
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray56);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray56, false);
        java.lang.Boolean[] booleanArray60 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray56);
        boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray46, booleanArray56);
        boolean[] booleanArray66 = new boolean[] { false, true, true, true };
        boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray66);
        int int70 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray67, true, (int) (short) 100);
        boolean[] booleanArray71 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray46, booleanArray67);
        boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray71);
        boolean[] booleanArray77 = new boolean[] { false, false, false, false };
        boolean[] booleanArray78 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray77);
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray77, false);
        boolean[] booleanArray82 = org.apache.commons.lang3.ArrayUtils.add(booleanArray77, true);
        boolean[] booleanArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray77);
        boolean[] booleanArray86 = org.apache.commons.lang3.ArrayUtils.add(booleanArray77, 3, false);
        boolean[] booleanArray91 = new boolean[] { false, true, true, true };
        boolean[] booleanArray92 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray91);
        boolean boolean93 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray86, booleanArray91);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder0.append(booleanArray72, booleanArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder0.append((short) (byte) -1, (short) 0);
        boolean boolean98 = equalsBuilder0.isEquals();
        boolean boolean99 = equalsBuilder0.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 3 + "'", int70 == 3);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, false, false, false, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[false, false, false, false, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray77), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(booleanArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray82), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray83), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray86), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray91), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray92), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(equalsBuilder97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test09649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09649");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray7 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray7);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray8, (java.lang.Object) ' ');
        boolean[] booleanArray15 = new boolean[] { false, true, true, true };
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray15);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray8, (java.lang.Object) booleanArray16, (int) (byte) 10);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.add(booleanArray16, true);
        boolean[] booleanArray25 = new boolean[] { false, true, true, true };
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray25);
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray26, true, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder0.append(booleanArray20, booleanArray26);
        java.lang.Byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray31);
        byte[] byteArray33 = null;
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray32, byteArray33);
        byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray32, (byte) 1);
        byte[] byteArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray36, (byte) -1);
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray38, (byte) 1, (int) (short) -1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray38);
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.add(byteArray38, (byte) 1);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray49, (byte) 100);
        java.lang.Byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray51);
        byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray52);
        java.lang.Byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray52);
        byte[] byteArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray52);
        byte[] byteArray57 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray55, (byte) 10);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList58 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray59 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean60 = objEntryList58.remove((java.lang.Object) byteArray59);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray59, (byte) 1);
        byte[] byteArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray59);
        byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray63);
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.clone(byteArray64);
        byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.clone(byteArray65);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray55, byteArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder30.append(byteArray44, byteArray55);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.contains(byteArray44, (byte) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3 + "'", int29 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test09650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09650");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray4);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4);
        float[] floatArray12 = new float[] { 1L, 100L, 100 };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray12, (float) (-1L), (int) (short) 100);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray12, (float) 'a', (int) (byte) 10);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) intArray4, (java.lang.Object) floatArray12);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.subarray(intArray4, 9, 10);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
    }

    @Test
    public void test09651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09651");
        java.lang.Class<?>[] wildcardClassArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = equalsBuilder1.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean5 = equalsBuilder4.isEquals();
        java.lang.String[] strArray6 = new java.lang.String[] {};
        java.lang.String[] strArray10 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray11 = org.apache.commons.lang3.ArrayUtils.addAll(strArray6, strArray10);
        java.lang.String[] strArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray6);
        java.lang.Character[] charArray18 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray18, ' ');
        java.lang.Character[] charArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder4.append((java.lang.Object[]) strArray6, (java.lang.Object[]) charArray21);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21);
        java.lang.Character[] charArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        java.lang.Character[] charArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray0, (java.lang.Object[]) charArray25);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) wildcardClassArray0);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.lang.reflect.Type[]) wildcardClassArray0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray34 = new double[] {};
        double[] doubleArray38 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray38);
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.add(doubleArray38, (double) (byte) 10);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray38, (double) 0L, 0);
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray38);
        int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray38, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder30.append(doubleArray34, doubleArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder30.append((long) ' ', (long) (short) 10);
        boolean[] booleanArray57 = new boolean[] { false, true, true, true };
        boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray57);
        boolean[] booleanArray63 = new boolean[] { false, false, false, false };
        boolean[] booleanArray64 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray63);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray63, false);
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.add(booleanArray63, true);
        boolean[] booleanArray73 = new boolean[] { false, false, false, false };
        boolean[] booleanArray74 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray73);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray73, false);
        java.lang.Boolean[] booleanArray77 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray73);
        boolean[] booleanArray78 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray63, booleanArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder30.append(booleanArray58, booleanArray63);
        int int82 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray58, true, 1);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray58);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray58);
        java.lang.Class<?> wildcardClass85 = booleanArray58.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Type[] typeArray86 = org.apache.commons.lang3.ArrayUtils.add((java.lang.reflect.Type[]) wildcardClassArray0, (int) '4', (java.lang.reflect.Type) wildcardClass85);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClassArray0);
        org.junit.Assert.assertNotNull(equalsBuilder4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[true, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test09652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09652");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray13 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray14);
        java.lang.Long[] longArray16 = org.apache.commons.lang3.ArrayUtils.toObject(longArray14);
        java.lang.Short[] shortArray18 = new java.lang.Short[] { (short) 1 };
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray18);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray18);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray18, (short) (byte) 100);
        short[] shortArray23 = new short[] {};
        java.lang.Short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray23);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray22, shortArray23);
        float[] floatArray28 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray28);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(floatArray28, (float) 0);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.add(floatArray28, 10.0f);
        java.lang.Float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray28);
        boolean boolean36 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray22, (java.lang.Object) floatArray34, false);
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) longArray16, (java.lang.Object) floatArray34);
        java.lang.Long[] longArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray16);
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray16, 0L);
        java.lang.Long[] longArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray16);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray41);
    }

    @Test
    public void test09653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09653");
        boolean[] booleanArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY;
        int int3 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray0, false, 10);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray0);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray0);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray0);
        double[] doubleArray10 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray10);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray11, (java.lang.Object) ' ');
        boolean[] booleanArray18 = new boolean[] { false, true, true, true };
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray18);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray11, (java.lang.Object) booleanArray19, (int) (byte) 10);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.add(booleanArray19, true);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray19, (int) (short) 10, 3);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) booleanArray6, (java.lang.Object) booleanArray19);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray6, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray0), "[]");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test09654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09654");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.String[] strArray4 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray5 = org.apache.commons.lang3.ArrayUtils.addAll(strArray0, strArray4);
        java.lang.String[] strArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray0);
        java.lang.Boolean[][] booleanArray7 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray36 = new java.lang.Boolean[][] { booleanArray14, booleanArray21, booleanArray28, booleanArray35 };
        java.lang.Boolean[][] booleanArray37 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray7, booleanArray36);
        java.util.Map<java.lang.Object, java.lang.Object> objMap38 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray7);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = objMap38.entrySet();
        objMap38.clear();
        long[] longArray46 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray47 = org.apache.commons.lang3.ArrayUtils.clone(longArray46);
        java.lang.Long[] longArray48 = org.apache.commons.lang3.ArrayUtils.toObject(longArray47);
        long[] longArray49 = org.apache.commons.lang3.ArrayUtils.clone(longArray47);
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.add(longArray49, (long) (short) 0);
        long[] longArray52 = org.apache.commons.lang3.ArrayUtils.clone(longArray51);
        long[] longArray58 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.clone(longArray58);
        java.lang.Long[] longArray60 = org.apache.commons.lang3.ArrayUtils.toObject(longArray59);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.clone(longArray59);
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.add(longArray61, (long) (short) 0);
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.addAll(longArray52, longArray61);
        java.lang.Object obj65 = objMap38.get((java.lang.Object) longArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder66.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean70 = equalsBuilder69.isEquals();
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String[] strArray75 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray76 = org.apache.commons.lang3.ArrayUtils.addAll(strArray71, strArray75);
        java.lang.String[] strArray77 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray71);
        java.lang.Character[] charArray83 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray85 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray83, ' ');
        java.lang.Character[] charArray86 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder69.append((java.lang.Object[]) strArray71, (java.lang.Object[]) charArray86);
        java.lang.String str89 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) strArray71, "{32,100,10,10,1}");
        java.lang.String[] strArray91 = org.apache.commons.lang3.ArrayUtils.add(strArray71, "");
        java.lang.String[] strArray92 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray71);
        boolean boolean93 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) strArray6, (java.lang.Object) longArray52, strArray92);
        java.lang.String[] strArray94 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray6);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNotNull(objMap38);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "{}" + "'", str89, "{}");
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(strArray94);
    }

    @Test
    public void test09655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09655");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray4);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4);
        float[] floatArray12 = new float[] { 1L, 100L, 100 };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray12, (float) (-1L), (int) (short) 100);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray12, (float) 'a', (int) (byte) 10);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) intArray4, (java.lang.Object) floatArray12);
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.add(intArray4, 4);
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray4, 4);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray29 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.clone(intArray29);
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.add(intArray29, (int) 'a');
        int[] intArray37 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.clone(intArray37);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray38);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray32, intArray38);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray32);
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray32);
        int[] intArray47 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.clone(intArray47);
        int[] intArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray47);
        int[] intArray50 = org.apache.commons.lang3.ArrayUtils.addAll(intArray32, intArray47);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray47, (int) ' ');
        int[] intArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray47);
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray47, 1);
        int[] intArray60 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray61 = org.apache.commons.lang3.ArrayUtils.clone(intArray60);
        int[] intArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray60);
        int[] intArray63 = org.apache.commons.lang3.ArrayUtils.addAll(intArray47, intArray62);
        int int65 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray62, 2);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray4, intArray62);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, -1, -1, 0, 4]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, -1, -1, 0, 97, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, -1, -1, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test09656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09656");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Long[] longArray32 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray32);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray33, (long) (short) 100);
        java.lang.Object obj36 = objMap31.get((java.lang.Object) longArray33);
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray33, (long) 4);
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray38, (long) 0);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[]");
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
    }

    @Test
    public void test09657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09657");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) 10);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.add(shortArray2, (int) (byte) 1, (short) (byte) 10);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.clone(shortArray2);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray2);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) 0, 100);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test09658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09658");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray9);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray9);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray9);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray9, (int) (short) 1);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray9, 3, 10);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.add(booleanArray17, 9, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 9, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false]");
    }

    @Test
    public void test09659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09659");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder37.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder37.append((byte) -1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append((float) (byte) 0, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder45.appendSuper(true);
        equalsBuilder45.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder50);
    }

    @Test
    public void test09660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09660");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        boolean[] booleanArray14 = new boolean[] { false, false, false, false };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray14);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray14, false);
        java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray14);
        boolean[] booleanArray24 = new boolean[] { false, true, true, true };
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray24);
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray25, true, (int) (short) 100);
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray25);
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray25, 1);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray31, true);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray31, false, (int) (byte) -1);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, false, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test09661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09661");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        java.lang.Short[] shortArray5 = new java.lang.Short[] { (short) 1 };
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        boolean[] booleanArray13 = new boolean[] { false, false, false, false };
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray13, false);
        java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray13);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray13);
        java.lang.Boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray13);
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) 1 };
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray21);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21, (short) (byte) 100);
        short[] shortArray26 = new short[] {};
        java.lang.Short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray26);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray25, shortArray26);
        float[] floatArray31 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(floatArray31, (float) 0);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.add(floatArray31, 10.0f);
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        boolean boolean39 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray25, (java.lang.Object) floatArray37, false);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray19, (java.lang.Object[]) floatArray37);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray5, (java.lang.Object[]) floatArray37);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray37, (java.lang.Object) 1, 0);
        java.lang.Float[] floatArray48 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f };
        java.lang.Float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder0.append((java.lang.Object[]) floatArray37, (java.lang.Object[]) floatArray49);
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray37);
        float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray37, (float) 2);
        float[] floatArray56 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray56);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.contains(floatArray56, (float) 0);
        float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.add(floatArray56, 10.0f);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains(floatArray56, (float) (-1));
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray56);
        float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray53, floatArray56);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray53);
        int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray53, (float) (byte) -1, (-1));
        float[] floatArray71 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray53, (float) '4');
        float[] floatArray74 = org.apache.commons.lang3.ArrayUtils.add(floatArray71, 0, (float) (-1L));
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray74);
        float[] floatArray77 = org.apache.commons.lang3.ArrayUtils.remove(floatArray74, (int) (byte) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray65), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray74), "[-1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray77), "[-1.0, 1.0]");
    }

    @Test
    public void test09662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09662");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.Set<java.lang.Object> objSet33 = objMap31.keySet();
        java.util.Set<java.lang.Object> objSet34 = objMap31.keySet();
        int[] intArray38 = new int[] { 1, (byte) 1 };
        int[] intArray41 = org.apache.commons.lang3.ArrayUtils.add(intArray38, (int) (short) 0, (int) '4');
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray38);
        java.lang.Object obj43 = objMap31.put((java.lang.Object) 10.0d, (java.lang.Object) intArray42);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet44 = objMap31.entrySet();
        java.util.Set<java.lang.Object> objSet45 = objMap31.keySet();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[52, 1, 1]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1, 1]");
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEntrySet44);
        org.junit.Assert.assertNotNull(objSet45);
    }

    @Test
    public void test09663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09663");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[][][][] objEntryListArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[][][][] objEntryListArray2 = org.apache.commons.lang3.ArrayUtils.remove(objEntryListArray0, 13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 13, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09664");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.add(charArray7, '#');
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray7);
        java.lang.Character[] charArray16 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray16);
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16, 'a');
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.clone(charArray19);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray19, ' ');
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray19, '4');
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray7, charArray19);
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray19, '#');
        org.apache.commons.lang3.ArrayUtils.reverse(charArray19);
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.add(charArray19, 0, ' ');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a ##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a ##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a,  , #, #, 4]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4# a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4# a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #,  , a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), " a ##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), " a ##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[ , a,  , #, #, 4]");
    }

    @Test
    public void test09665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09665");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray13 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray14);
        java.lang.Long[] longArray16 = org.apache.commons.lang3.ArrayUtils.toObject(longArray14);
        java.lang.Long[] longArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray16);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray17);
        java.lang.Long[] longArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray17);
        java.lang.Byte[] byteArray21 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray21);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray21, (byte) 0);
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) longArray17, (java.lang.Object) (byte) 0);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray17);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray17);
        java.lang.Long[] longArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray27);
        long[] longArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray28, (long) 13);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[32, 100, 10, 10, 1]");
    }

    @Test
    public void test09666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09666");
        java.lang.Float[] floatArray3 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f };
        java.lang.Float[] floatArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray3);
        java.lang.Float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray4);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray4);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray6, (float) 2, 1);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray6, (float) 5);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray6, (float) '#');
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[10.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test09667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09667");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray7);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        int[] intArray22 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.clone(intArray22);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.addAll(intArray7, intArray22);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, (int) ' ');
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray22);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray22);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(intArray22, 6);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, -1, -1, 0, 97, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test09668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09668");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.add(charArray9, 2, ' ');
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.add(charArray9, (int) (byte) 1, '#');
        java.lang.String str17 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) '#', "false");
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), " 4 4a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), " 4 4a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[ , 4,  , 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), " #44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), " #44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[ , #, 4, 4, a, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#" + "'", str17, "#");
    }

    @Test
    public void test09669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09669");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        float[] floatArray4 = new float[] { (short) 100, 0, 10 };
        float[] floatArray7 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray7);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(floatArray7, (float) 0);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.add(floatArray7, 10.0f);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray4, floatArray7);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(floatArray7, (float) (byte) 10);
        boolean boolean16 = objEntryList0.equals((java.lang.Object) boolean15);
        objEntryList0.clear();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream18 = objEntryList0.stream();
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objEntryStream18);
    }

    @Test
    public void test09670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09670");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean35 = objEntryList33.remove((java.lang.Object) byteArray34);
        boolean boolean36 = objEntrySet32.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.lang.Object[] objArray37 = objEntryList33.toArray();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor38 = objEntryList33.iterator();
        long[] longArray39 = new long[] {};
        long[] longArray40 = new long[] {};
        long[][] longArray41 = new long[][] { longArray39, longArray40 };
        long[][][] longArray42 = new long[][][] { longArray41 };
        long[][][][] longArray43 = new long[][][][] { longArray42 };
        java.lang.Short[] shortArray45 = new java.lang.Short[] { (short) 1 };
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray45);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45, (short) (byte) 100);
        short[] shortArray50 = new short[] {};
        java.lang.Short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray50);
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray49, shortArray50);
        java.lang.Short[] shortArray54 = new java.lang.Short[] { (short) 1 };
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray54);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray54);
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray54, (short) (byte) 100);
        short[] shortArray59 = new short[] {};
        java.lang.Short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray58, shortArray59);
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray52, shortArray59);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray52);
        long[][][][] longArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray43, (java.lang.Object) boolean63);
        boolean boolean65 = objEntryList33.contains((java.lang.Object) longArray43);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objEntryItor38);
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[1]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[1]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[1]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[1]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[1]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[1]");
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[1]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test09671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09671");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10);
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10);
        java.lang.Boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray12);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray13, false);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray15, true, (int) (short) 10);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray15);
        java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray15);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray15, true, 3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test09672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09672");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) -1, (int) (byte) -1);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) 2);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, (double) (byte) 100, (double) 'a');
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0, 2.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
    }

    @Test
    public void test09673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09673");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean35 = objEntryList33.remove((java.lang.Object) byteArray34);
        boolean boolean36 = objEntrySet32.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor37 = objEntrySet32.iterator();
        java.lang.Object[] objArray38 = objEntrySet32.toArray();
        boolean boolean40 = objEntrySet32.remove((java.lang.Object) '4');
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList41 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor42 = objEntryList41.iterator();
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.String[] strArray47 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray48 = org.apache.commons.lang3.ArrayUtils.addAll(strArray43, strArray47);
        java.lang.Comparable<java.lang.String>[] strComparableArray49 = objEntryList41.toArray((java.lang.Comparable<java.lang.String>[]) strArray43);
        boolean boolean50 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList41);
        char[] charArray56 = new char[] { '#', 'a', '4', 'a', ' ' };
        char[] charArray62 = new char[] { '#', 'a', '4', 'a', ' ' };
        char[] charArray68 = new char[] { '#', 'a', '4', 'a', ' ' };
        char[] charArray74 = new char[] { '#', 'a', '4', 'a', ' ' };
        char[] charArray80 = new char[] { '#', 'a', '4', 'a', ' ' };
        char[] charArray86 = new char[] { '#', 'a', '4', 'a', ' ' };
        char[][] charArray87 = new char[][] { charArray56, charArray62, charArray68, charArray74, charArray80, charArray86 };
        char[][] charArray88 = new char[][] {};
        char[][] charArray89 = org.apache.commons.lang3.ArrayUtils.addAll(charArray87, charArray88);
        char[][] charArray90 = objEntryList41.toArray(charArray89);
        boolean boolean91 = objEntryList41.isEmpty();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEntryItor37);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objEntryItor42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strComparableArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#a4a ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#a4a ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, a, 4, a,  ]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#a4a ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#a4a ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, a, 4, a,  ]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#a4a ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#a4a ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, a, 4, a,  ]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "#a4a ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "#a4a ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[#, a, 4, a,  ]");
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "#a4a ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "#a4a ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[#, a, 4, a,  ]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "#a4a ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "#a4a ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[#, a, 4, a,  ]");
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test09674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09674");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray42, longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder19.append(longArray26, longArray50);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray26);
        int int57 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray26, (long) 7, 4);
        long[] longArray63 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.clone(longArray63);
        java.lang.Long[] longArray65 = org.apache.commons.lang3.ArrayUtils.toObject(longArray64);
        long[] longArray71 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray72 = org.apache.commons.lang3.ArrayUtils.clone(longArray71);
        java.lang.Long[] longArray73 = org.apache.commons.lang3.ArrayUtils.toObject(longArray72);
        long[] longArray74 = org.apache.commons.lang3.ArrayUtils.clone(longArray72);
        long[] longArray75 = org.apache.commons.lang3.ArrayUtils.addAll(longArray64, longArray74);
        long[] longArray76 = org.apache.commons.lang3.ArrayUtils.addAll(longArray26, longArray75);
        java.lang.Long[] longArray77 = org.apache.commons.lang3.ArrayUtils.toObject(longArray76);
        java.lang.Long[] longArray78 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray78);
        long[] longArray80 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray78);
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray80);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.contains(longArray80, (long) 10);
        long[] longArray84 = org.apache.commons.lang3.ArrayUtils.addAll(longArray76, longArray80);
        long[] longArray87 = org.apache.commons.lang3.ArrayUtils.subarray(longArray76, (int) (byte) -1, (int) (short) 10);
        long[] longArray88 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray76);
        int int90 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray76, (long) 9);
        int int92 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray76, (long) (byte) 0);
        long[] longArray95 = org.apache.commons.lang3.ArrayUtils.subarray(longArray76, 0, 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray71), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray77);
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(longArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray84), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray87), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray88), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(longArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray95), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
    }

    @Test
    public void test09675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09675");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean2 = objEntryList0.remove((java.lang.Object) byteArray1);
        byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) 1);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray5);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray5);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray5);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test09676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09676");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        boolean[] booleanArray10 = null;
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray4, booleanArray10);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10);
        boolean[] booleanArray17 = new boolean[] { false, false, false, false };
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray17);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray17, false);
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.add(booleanArray17, true);
        boolean[] booleanArray23 = null;
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray17, booleanArray23);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray10, booleanArray17);
        boolean[] booleanArray26 = null;
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray25, booleanArray26);
        java.lang.Boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray27);
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray28);
        java.lang.Boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false, true]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray30);
    }

    @Test
    public void test09677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09677");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray7);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        int[] intArray22 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.clone(intArray22);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.addAll(intArray7, intArray22);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, (int) ' ');
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray22, 1);
        java.lang.Integer[] intArray31 = org.apache.commons.lang3.ArrayUtils.toObject(intArray30);
        long[] longArray37 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.clone(longArray37);
        java.lang.Long[] longArray39 = org.apache.commons.lang3.ArrayUtils.toObject(longArray38);
        long[] longArray45 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray46 = org.apache.commons.lang3.ArrayUtils.clone(longArray45);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray38, longArray46);
        long[] longArray49 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray38, (long) 1);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray50, (long) (byte) 10);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) intArray31, (java.lang.Object) int52);
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray31, 4);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray55);
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.remove(intArray55, 1);
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray55, 2, (int) (short) 1);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, -1, -1, 0, 97, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, -1, 0]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
    }

    @Test
    public void test09678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09678");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray4, (java.lang.Object) ' ');
        boolean[] booleanArray11 = new boolean[] { false, true, true, true };
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray11);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray4, (java.lang.Object) booleanArray12, (int) (byte) 10);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.add(booleanArray12, true);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray16, 2);
        java.lang.Boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray18);
        java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray19);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(booleanArray20);
    }

    @Test
    public void test09679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09679");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        java.lang.Float[] floatArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray3);
        float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray3);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.add(floatArray5, 0.0f);
        float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.add(floatArray5, 0.0f);
        float[] floatArray16 = new float[] { 10.0f, 100, (short) -1, (short) 0, 100L, (short) 10 };
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray16);
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray17);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray18);
        float[] floatArray22 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray22);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray22);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray22, (float) 5);
        float[] floatArray29 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        java.lang.Character[] charArray36 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray36, 'a');
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) floatArray29, (java.lang.Object) 'a');
        float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray29, (int) (byte) 1, (int) (byte) 1);
        float[] floatArray45 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray45);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(floatArray45, (float) 0);
        float[] floatArray50 = org.apache.commons.lang3.ArrayUtils.add(floatArray45, 10.0f);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.contains(floatArray45, (float) (-1));
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray45);
        float[] floatArray54 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray29, floatArray45);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray45);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray22, floatArray45);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray45);
        float[] floatArray60 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray60);
        float[] floatArray64 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray64);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(floatArray64, (float) 0);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray60, floatArray64);
        float[] floatArray69 = org.apache.commons.lang3.ArrayUtils.clone(floatArray64);
        float[] floatArray72 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray73 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray72);
        float[] floatArray76 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray77 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray76);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.contains(floatArray76, (float) 0);
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray72, floatArray76);
        float[] floatArray81 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray72);
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray72);
        float[] floatArray83 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray64, floatArray72);
        float[] floatArray84 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray45, floatArray64);
        float[] floatArray85 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray5, floatArray84);
        java.lang.Float[] floatArray86 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray84);
        java.lang.Float[] floatArray87 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray84);
        float[] floatArray88 = org.apache.commons.lang3.ArrayUtils.clone(floatArray84);
        int int91 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray88, 100.0f, 2);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[-1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[10.0, 100.0, -1.0, 0.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[10.0, 100.0, -1.0, 0.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[10.0, 100.0, -1.0, 0.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray72), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(floatArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray81), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(floatArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray83), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray84), "[1.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[-1.0, 1.0, 1.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray86);
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertNotNull(floatArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray88), "[1.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
    }

    @Test
    public void test09680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09680");
        double[] doubleArray0 = null;
        double[] doubleArray4 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray4);
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.add(doubleArray4, (double) (byte) 10);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray4, (double) 0L, 0);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray4, (double) (short) -1, (int) (byte) -1);
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray4);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray14, (double) 1);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray0, doubleArray16);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray16);
        java.lang.Double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray16);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 100.0]");
    }

    @Test
    public void test09681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09681");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray13);
        boolean[] booleanArray19 = new boolean[] { false, false, false, false };
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray19);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray19, false);
        java.lang.Boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray19);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray19);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray19);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray19);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray13, booleanArray19);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray19);
        java.lang.Boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray19);
        java.lang.Boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray19);
        int[] intArray34 = new int[] { '#', (byte) -1, (short) 0 };
        int[] intArray37 = org.apache.commons.lang3.ArrayUtils.subarray(intArray34, (int) '#', (int) (short) 0);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray34, (int) (byte) 1);
        int[] intArray41 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray34, (int) (short) 100);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) booleanArray30, (java.lang.Object) intArray41, 10);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray41);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, -1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[35, -1, 0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test09682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09682");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray7 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray7);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray8, (java.lang.Object) ' ');
        boolean[] booleanArray15 = new boolean[] { false, true, true, true };
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray15);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray8, (java.lang.Object) booleanArray16, (int) (byte) 10);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.add(booleanArray16, true);
        boolean[] booleanArray25 = new boolean[] { false, true, true, true };
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray25);
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray26, true, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder0.append(booleanArray20, booleanArray26);
        boolean[] booleanArray35 = new boolean[] { false, false, false, false };
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray35);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray35, false);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.add(booleanArray35, true);
        double[] doubleArray46 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray46);
        boolean boolean48 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray40, (java.lang.Object) doubleArray46);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray40);
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray20, booleanArray40);
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray51, (int) '#', 0);
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray54, false);
        boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.add(booleanArray54, false);
        int int61 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray54, true, (int) (short) 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3 + "'", int29 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true, true, true, true, false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
    }

    @Test
    public void test09683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09683");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 100, (byte) 0 };
        byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6);
        int int8 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) byteArray6);
        java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9, (byte) 0);
        double[] doubleArray15 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15);
        double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.add(doubleArray15, (double) (byte) 10);
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray15, (double) (short) 0, (int) ' ', (double) 1L);
        double[] doubleArray26 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray26);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.add(doubleArray26, (double) (byte) 10);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray26, (double) 0L, 0);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray26);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray26, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.add(doubleArray26, (double) 4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder39.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray43 = new double[] {};
        double[] doubleArray47 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray47);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.add(doubleArray47, (double) (byte) 10);
        int int53 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray47, (double) 0L, 0);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray47);
        int int57 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray47, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder39.append(doubleArray43, doubleArray47);
        int int61 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray43, (double) 'a', (int) '4');
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray26, doubleArray43);
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.add(doubleArray26, 0, (double) 100);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray26);
        double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray15, doubleArray26);
        int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray26, 0.0d);
        int int72 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray26, (double) 0.0f, (int) ' ');
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray9, (java.lang.Object) ' ');
        java.lang.Byte[] byteArray74 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray9);
        java.lang.Byte[] byteArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray9);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 6 + "'", int8 == 6);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 100.0, 4.0]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertNotNull(byteArray75);
    }

    @Test
    public void test09684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09684");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        double[] doubleArray15 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray9, (java.lang.Object) doubleArray15);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray15, 3, 1);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (byte) 10, (double) ' ');
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray20);
        boolean[] booleanArray29 = new boolean[] { false, false, false, false };
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray29);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray29, false);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.add(booleanArray29, true);
        double[] doubleArray40 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray40);
        boolean boolean42 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray34, (java.lang.Object) doubleArray40);
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray40, 3, 1);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray20, doubleArray40);
        double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray46);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray46, (double) 100.0f);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test09685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09685");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray24 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray24);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray24, (double) (byte) 10);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) 10.0f);
        double[] doubleArray33 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray33);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, (double) (byte) 10);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, (double) 0L, 0);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray33);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray33, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray27, doubleArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder19.append(doubleArray20, doubleArray33);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray33);
        double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray46, (double) 'a');
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray48);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray48, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 100.0]");
    }

    @Test
    public void test09686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09686");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 10, (byte) 0);
        java.lang.Boolean boolean8 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder3.append(true, false);
        float[] floatArray14 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray14);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(floatArray14, (float) 0);
        float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.add(floatArray14, 10.0f);
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray14);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.add(floatArray14, (int) (byte) 0, (float) 100);
        float[] floatArray26 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray26);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(floatArray26, (float) 0);
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.add(floatArray26, 10.0f);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(floatArray26, (float) (-1));
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder3.append(floatArray14, floatArray26);
        float[] floatArray38 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray38);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(floatArray38, (float) 0);
        float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.add(floatArray38, 10.0f);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray43, 0.0f);
        float[] floatArray49 = new float[] { (short) 100, 0, 10 };
        float[] floatArray52 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray52);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(floatArray52, (float) 0);
        float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.add(floatArray52, 10.0f);
        float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray49, floatArray52);
        float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray49, 3, 0);
        int int63 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray61, (float) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder3.append(floatArray43, floatArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder66.append(11, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder66.append((double) 7, (double) (short) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[100.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
    }

    @Test
    public void test09687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09687");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor1 = objEntryList0.iterator();
        java.lang.String[] strArray2 = new java.lang.String[] {};
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray7 = org.apache.commons.lang3.ArrayUtils.addAll(strArray2, strArray6);
        java.lang.Comparable<java.lang.String>[] strComparableArray8 = objEntryList0.toArray((java.lang.Comparable<java.lang.String>[]) strArray2);
        java.lang.Object[] objArray9 = objEntryList0.toArray();
        objEntryList0.clear();
        org.junit.Assert.assertNotNull(objEntryItor1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strComparableArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
    }

    @Test
    public void test09688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09688");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        int[] intArray39 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.clone(intArray39);
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.add(intArray39, (int) 'a');
        int[] intArray47 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.clone(intArray47);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray48);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray42, intArray48);
        boolean boolean51 = objEntrySet32.remove((java.lang.Object) intArray42);
        int[] intArray52 = org.apache.commons.lang3.ArrayUtils.clone(intArray42);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray52, (int) (short) 100, (int) (short) 1);
        int int58 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray52, 11, (int) (byte) 100);
        int[] intArray61 = org.apache.commons.lang3.ArrayUtils.subarray(intArray52, 8, 8);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray52);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
    }

    @Test
    public void test09689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09689");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray5);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(intArray5, (int) (byte) -1);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray5, 4, 10);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.subarray(intArray5, 1, 5);
        int[] intArray16 = org.apache.commons.lang3.ArrayUtils.add(intArray14, 4);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(intArray16, (int) (byte) -1);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray16, (int) 'a');
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, -1, 0, 4]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test09690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09690");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray10, '#');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 4 + "'", int12 == 4);
    }

    @Test
    public void test09691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09691");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        int[] intArray23 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.clone(intArray23);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray23, 100);
        long[] longArray32 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray33 = org.apache.commons.lang3.ArrayUtils.clone(longArray32);
        java.lang.Long[] longArray34 = org.apache.commons.lang3.ArrayUtils.toObject(longArray33);
        long[] longArray40 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        java.lang.Long[] longArray42 = org.apache.commons.lang3.ArrayUtils.toObject(longArray41);
        long[] longArray43 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.addAll(longArray33, longArray43);
        int[] intArray49 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray50 = org.apache.commons.lang3.ArrayUtils.clone(intArray49);
        int[] intArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray49);
        boolean boolean53 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray43, (java.lang.Object) intArray51, false);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(intArray51, (int) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder18.append(intArray23, intArray51);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray51);
        int int60 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray51, (int) (short) 10, 4);
        int[] intArray62 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray51, (int) (byte) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, -1, 0]");
    }

    @Test
    public void test09692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09692");
        byte[] byteArray3 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 10, (int) (short) -1);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray3, (byte) 1, (int) ' ');
        byte[] byteArray17 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray17);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray17, (byte) 10);
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray3, byteArray17);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(byteArray21, (byte) 1);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray21);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, 5, (int) (short) 1);
        java.lang.Byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray28);
        byte[] byteArray30 = null;
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray29, byteArray30);
        byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray29, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray38 = new double[] {};
        double[] doubleArray42 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray42);
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.add(doubleArray42, (double) (byte) 10);
        int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray42, (double) 0L, 0);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray42);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray42, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder34.append(doubleArray38, doubleArray42);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray58 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray58);
        double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.add(doubleArray58, (double) (byte) 10);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray61, (double) 10.0f);
        double[] doubleArray67 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray67);
        double[] doubleArray70 = org.apache.commons.lang3.ArrayUtils.add(doubleArray67, (double) (byte) 10);
        int int73 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray67, (double) 0L, 0);
        double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray67);
        int int77 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray67, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray78 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray61, doubleArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder53.append(doubleArray54, doubleArray67);
        byte[] byteArray80 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray80);
        byte[] byteArray82 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray84 = org.apache.commons.lang3.ArrayUtils.add(byteArray82, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder79.append(byteArray80, byteArray82);
        byte[] byteArray86 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray80);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray86);
        byte[] byteArray88 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray29, byteArray86);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray29);
        byte[] byteArray90 = org.apache.commons.lang3.ArrayUtils.clone(byteArray29);
        byte[] byteArray93 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray90, (-1), (int) '#');
        byte[] byteArray95 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray90, (byte) -1);
        byte[] byteArray97 = org.apache.commons.lang3.ArrayUtils.add(byteArray90, (byte) -1);
        boolean boolean98 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray27, byteArray97);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[]");
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[]");
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[]");
        org.junit.Assert.assertNotNull(byteArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray93), "[]");
        org.junit.Assert.assertNotNull(byteArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray95), "[]");
        org.junit.Assert.assertNotNull(byteArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray97), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test09693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09693");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((double) (byte) 0, (double) (short) 10);
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray11, (byte) 100);
        java.lang.Byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray13);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray14);
        java.lang.Byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray14);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray14);
        byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray14, (byte) -1);
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray14, (byte) -1);
        byte[] byteArray25 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray25, (byte) 10, (int) (short) -1);
        java.lang.Byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray25);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray25);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append(true, true);
        byte[] byteArray38 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray38, (byte) 10, (int) (short) -1);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray38);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) 1, (int) ' ');
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray52);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray52, (byte) 10);
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray38, byteArray52);
        byte[] byteArray57 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.add(byteArray57, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder31.append(byteArray38, byteArray57);
        java.lang.Byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray57);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray57);
        byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray30, byteArray57);
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray30);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(byteArray30, (byte) 1);
        byte[] byteArray68 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray68);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.contains(byteArray68, (byte) 10);
        byte[] byteArray73 = org.apache.commons.lang3.ArrayUtils.add(byteArray68, (byte) 100);
        java.lang.Byte[] byteArray74 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray73);
        byte[] byteArray75 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray74);
        byte[] byteArray76 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray30, byteArray75);
        byte[] byteArray78 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray75, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder6.append(byteArray21, byteArray75);
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray75);
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray75);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 0, 10]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4 + "'", int55 == 4);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[100]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[100]");
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[0, 0, 10, 100]");
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test09694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09694");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        java.lang.String str5 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) equalsBuilder3, "0");
        boolean[] booleanArray10 = new boolean[] { false, false, false, false };
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray10, false);
        java.lang.Boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10);
        java.lang.Boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray16);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray16, true);
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray19, (int) (short) 0, 100);
        boolean[] booleanArray27 = new boolean[] { false, false, false, false };
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray27);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray27, false);
        java.lang.Boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray27);
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray27);
        java.lang.Boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray27);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray33);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray33, true);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray36);
        boolean[] booleanArray42 = new boolean[] { false, false, false, false };
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray42);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray42, false);
        java.lang.Boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray42);
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray42);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray42);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray42);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray36, booleanArray42);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray42);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray19, booleanArray42);
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.add(booleanArray19, true);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray54);
        boolean[] booleanArray60 = new boolean[] { false, false, false, false };
        boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray60);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray60, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder3.append(booleanArray54, booleanArray60);
        boolean[] booleanArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray54);
        boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray54, 2);
        int int70 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray54, true, (int) (short) 100);
        boolean[] booleanArray75 = new boolean[] { false, false, false, false };
        boolean[] booleanArray76 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray75);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray75, false);
        boolean[] booleanArray80 = org.apache.commons.lang3.ArrayUtils.add(booleanArray75, true);
        boolean[] booleanArray85 = new boolean[] { false, false, false, false };
        boolean[] booleanArray86 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray85);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray85, false);
        java.lang.Boolean[] booleanArray89 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray85);
        boolean[] booleanArray90 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray75, booleanArray85);
        boolean[] booleanArray92 = org.apache.commons.lang3.ArrayUtils.add(booleanArray90, true);
        boolean boolean93 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray54, booleanArray90);
        boolean[] booleanArray95 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray54, true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, false, false, true]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 4 + "'", int70 == 4);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray75), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray80), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray85), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray86), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertNotNull(booleanArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray90), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray92), "[false, false, false, false, false, false, false, false, true]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(booleanArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray95), "[false, false, false, false]");
    }

    @Test
    public void test09695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09695");
        java.lang.Boolean[] booleanArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY;
        java.lang.Boolean[] booleanArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray0);
        boolean[] booleanArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray0);
        java.lang.Boolean[] booleanArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray0);
        java.lang.Character[] charArray9 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray9, 'a');
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray9, ' ');
        java.lang.Character[] charArray19 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray19, 'a');
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.add(charArray21, '#');
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.subarray(charArray21, (int) (byte) -1, (int) '#');
        java.lang.Character[] charArray32 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray32);
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray32, 'a');
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.clone(charArray35);
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.addAll(charArray21, charArray35);
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray35, 'a');
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.clone(charArray35);
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.addAll(charArray13, charArray40);
        char[] charArray42 = org.apache.commons.lang3.ArrayUtils.clone(charArray41);
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.subarray(charArray42, (int) (byte) 10, (int) '#');
        boolean boolean47 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray3, (java.lang.Object) charArray42, true);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3, true);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray1);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[]");
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, #, #,  ]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[]");
    }

    @Test
    public void test09696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09696");
        java.lang.Float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray0);
        float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray1, (float) 'a');
        float[] floatArray7 = new float[] { 1L, 100L, 100 };
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray7, (float) (-1L), (int) (short) 100);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray3, floatArray7);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray3);
        float[] floatArray15 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray15);
        float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray15, (float) (short) 1);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray19);
        float[] floatArray23 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray23);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray23);
        float[] floatArray29 = new float[] { (short) 100, 0, 10 };
        float[] floatArray32 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray32);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(floatArray32, (float) 0);
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.add(floatArray32, 10.0f);
        float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray29, floatArray32);
        float[] floatArray41 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray41);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains(floatArray41, (float) 0);
        float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.add(floatArray41, 10.0f);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray29, floatArray41);
        java.lang.Float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray41);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) floatArray48);
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray48, (float) (short) 100);
        float[] floatArray54 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray54);
        float[] floatArray58 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray59 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray58);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.contains(floatArray58, (float) 0);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray54, floatArray58);
        float[] floatArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray54);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray54);
        java.lang.Float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray65);
        float[] floatArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray66, (float) 'a');
        float[] floatArray72 = new float[] { 1L, 100L, 100 };
        int int75 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray72, (float) (-1L), (int) (short) 100);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray68, floatArray72);
        float[] floatArray77 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray54, floatArray72);
        float[] floatArray80 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray72, (int) ' ', (int) (byte) 100);
        float[] floatArray82 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray72, (float) 10L);
        float[] floatArray86 = new float[] { 1L, 100L, 100 };
        int int89 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray86, (float) (-1L), (int) (short) 100);
        java.lang.Float[] floatArray90 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray86);
        boolean boolean91 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray86);
        float[] floatArray92 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray82, floatArray86);
        boolean boolean93 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) (short) 100, (java.lang.Object) floatArray92);
        boolean boolean94 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray23, floatArray92);
        boolean boolean95 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray20, floatArray92);
        org.junit.Assert.assertNotNull(floatArray0);
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[]");
        org.junit.Assert.assertNotNull(floatArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray72), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray77), "[-1.0, 1.0, 1.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray80), "[]");
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray82), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray86), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(floatArray90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(floatArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray92), "[1.0, 100.0, 100.0, 1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test09697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09697");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.Set<java.lang.Object> objSet33 = objMap31.keySet();
        java.util.Set<java.lang.Object> objSet34 = objMap31.keySet();
        double[] doubleArray40 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray40);
        double[] doubleArray45 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray45);
        double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.add(doubleArray45, (double) (byte) 10);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.add(doubleArray45, 0.0d);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray40, doubleArray45);
        boolean boolean52 = objMap31.containsKey((java.lang.Object) doubleArray40);
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray40, 0.0d);
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray40, (double) 1L, 6);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray40, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 10.0, 10.0, -1.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
    }

    @Test
    public void test09698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09698");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray6, (short) 10);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray6, 10, 0);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.remove(shortArray6, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 8, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
    }

    @Test
    public void test09699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09699");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4);
        java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4);
        java.lang.Double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6);
        java.lang.Short[] shortArray9 = new java.lang.Short[] { (short) 1 };
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 0);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray7, (java.lang.Object) shortArray9, 7);
        double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray7);
        java.lang.Double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[1]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
    }

    @Test
    public void test09700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09700");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { (-1.0d), 100.0d, 1.0d, 10.0d, (-1.0d), 100.0d };
        java.lang.Double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6);
        java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6);
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray9);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray11, (double) (short) 100, (double) 10);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray11, (double) 1, 100);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test09701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09701");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        double[] doubleArray15 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray9, (java.lang.Object) doubleArray15);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray15, 3, 1);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (byte) 10, (double) ' ');
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, (int) (short) 0, (int) (byte) 0);
        double[] doubleArray32 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray32);
        double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray32);
        java.lang.Object obj35 = null;
        boolean boolean37 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray34, obj35, false);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray34, (double) 3);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray26, doubleArray39);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray26, (double) (short) -1);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray26, (double) 7);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test09702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09702");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((long) (byte) 10, (long) (byte) 10);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean29 = equalsBuilder28.isEquals();
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.String[] strArray34 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray35 = org.apache.commons.lang3.ArrayUtils.addAll(strArray30, strArray34);
        java.lang.String[] strArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray30);
        java.lang.Character[] charArray42 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray42, ' ');
        java.lang.Character[] charArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder28.append((java.lang.Object[]) strArray30, (java.lang.Object[]) charArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder21.append((java.lang.Object[]) byteArray23, (java.lang.Object[]) strArray30);
        java.lang.Byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray23);
        java.lang.Byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray48);
        int int50 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) byteArray48);
        byte[] byteArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray48);
        byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray51, (byte) -1);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray51, (byte) 0);
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray51);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray51);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[1]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test09703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09703");
        short[] shortArray0 = new short[] {};
        java.lang.Short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray0);
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray3);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray0), "[]");
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
    }

    @Test
    public void test09704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09704");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray2);
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray2, (float) (short) 100);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test09705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09705");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 10L, 100L, 0L, (-1L), 0L };
        java.lang.Long[] longArray11 = new java.lang.Long[] { 10L, 100L, 0L, (-1L), 0L };
        java.lang.Long[] longArray17 = new java.lang.Long[] { 10L, 100L, 0L, (-1L), 0L };
        java.lang.Long[][] longArray18 = new java.lang.Long[][] { longArray5, longArray11, longArray17 };
        java.lang.Long[][] longArray19 = org.apache.commons.lang3.ArrayUtils.toArray(longArray18);
        java.lang.Character[] charArray25 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray25, ' ');
        java.lang.Character[] charArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray25);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28);
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28);
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28);
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28, ' ');
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) longArray19, (java.lang.Object) ' ');
        double[] doubleArray38 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray38);
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.add(doubleArray38, (double) (byte) 10);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray38, (double) 0L, 0);
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray38, (double) (short) -1, (int) (byte) -1);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.add(doubleArray38, (double) 2);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.add(doubleArray49, 0.0d);
        double[] doubleArray55 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray55);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.add(doubleArray55, (double) (byte) 10);
        int int62 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray55, (double) (short) 0, (int) ' ', (double) 1L);
        int int66 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray55, (double) 2, (int) (short) 100, (double) 10L);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray51, doubleArray55);
        double[] doubleArray71 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray71);
        double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.add(doubleArray71, (double) (byte) 10);
        double[] doubleArray77 = org.apache.commons.lang3.ArrayUtils.add(doubleArray74, 4, (double) (byte) 0);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray55, doubleArray77);
        java.lang.Double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray77);
        java.lang.Long[][] longArray80 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray19, (java.lang.Object) doubleArray79);
        double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray79, (double) (short) 1);
        java.lang.Object[] objArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) doubleArray79);
        java.lang.Double[] doubleArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray79);
        double[] doubleArray85 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray79);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 100.0, 2.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 10.0, 100.0, 2.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, 10.0, 100.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 10.0, 100.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[0.0, 10.0, 100.0, 10.0, 0.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[0.0, 10.0, 100.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[0.0, 10.0, 100.0, 10.0, 0.0]");
    }

    @Test
    public void test09706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09706");
        short[] shortArray4 = new short[] { (byte) 0, (byte) 1, (short) -1, (byte) -1 };
        java.lang.Short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5, (short) 10);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray7, 10, 100);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
    }

    @Test
    public void test09707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09707");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) 0);
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) 10L);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray2, (float) (-1));
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.remove(floatArray2, (int) (byte) 0);
        java.lang.Float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray2, 5, 0);
        java.lang.String str17 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) floatArray15, "{{10,10,0,52},{10,10,0,52},{10,10,0,52},{10,10,0,52},{10,10,0,52},{10,10,0,52}}");
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray15);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[1.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test09708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09708");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        java.lang.Character[] charArray10 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray10, ' ');
        java.lang.Character[] charArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray10);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray1, (java.lang.Object[]) charArray10);
        java.lang.Short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        java.lang.Character[] charArray21 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, ' ');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, '#');
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.clone(charArray25);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) shortArray1, (java.lang.Object) charArray25);
        java.lang.Short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 10);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray30);
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray30, (short) -1);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[1]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[1]");
    }

    @Test
    public void test09709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09709");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray4);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4);
        float[] floatArray12 = new float[] { 1L, 100L, 100 };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray12, (float) (-1L), (int) (short) 100);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray12, (float) 'a', (int) (byte) 10);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) intArray4, (java.lang.Object) floatArray12);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(intArray4, (int) (byte) 1);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 10 };
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23, (int) (byte) 10);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(intArray25, (int) (short) 1);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.subarray(intArray25, (int) (short) 100, 4);
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.addAll(intArray4, intArray30);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test09710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09710");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray8, (short) 0);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray10, (int) ' ', 0);
        short[] shortArray14 = new short[] {};
        java.lang.Short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray14);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray14);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray10, shortArray14);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(shortArray10, (short) (byte) 100);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.clone(shortArray10);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[1]");
    }

    @Test
    public void test09711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09711");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        float[] floatArray15 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(floatArray15, (float) 0);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.add(floatArray15, 10.0f);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray3, floatArray15);
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray22);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray23, 1.0f);
        float[] floatArray28 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray28);
        float[] floatArray32 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray32);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(floatArray32, (float) 0);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray28, floatArray32);
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.clone(floatArray32);
        float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.clone(floatArray37);
        float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray25, floatArray37);
        float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray37);
        float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray40, 0, 0);
        float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray40, 2, 10);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.add(floatArray46, (int) (short) 1, 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[-1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[]");
    }

    @Test
    public void test09712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09712");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Long[] longArray32 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray32);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray33, (long) (short) 100);
        java.lang.Object obj36 = objMap31.get((java.lang.Object) longArray33);
        int int37 = objMap31.size();
        java.lang.Boolean[][] booleanArray38 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray45 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray52 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray59 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray66 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray67 = new java.lang.Boolean[][] { booleanArray45, booleanArray52, booleanArray59, booleanArray66 };
        java.lang.Boolean[][] booleanArray68 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray38, booleanArray67);
        java.util.Map<java.lang.Object, java.lang.Object> objMap69 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray38);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet70 = objMap69.entrySet();
        java.util.Set<java.lang.Object> objSet71 = objMap69.keySet();
        java.util.Set<java.lang.Object> objSet72 = objMap69.keySet();
        objMap69.clear();
        long[] longArray79 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray80 = org.apache.commons.lang3.ArrayUtils.clone(longArray79);
        java.lang.Long[] longArray81 = org.apache.commons.lang3.ArrayUtils.toObject(longArray80);
        long[] longArray87 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray88 = org.apache.commons.lang3.ArrayUtils.clone(longArray87);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray80, longArray88);
        java.lang.Long[] longArray90 = org.apache.commons.lang3.ArrayUtils.toObject(longArray88);
        java.lang.Long[] longArray91 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray90);
        long[] longArray92 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray91);
        java.lang.Long[] longArray93 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray91);
        long[] longArray94 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray93);
        long[] longArray96 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray93, (long) (short) 1);
        boolean boolean97 = objMap69.containsKey((java.lang.Object) longArray93);
        objMap31.putAll(objMap69);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet99 = objMap31.entrySet();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[]");
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(objMap69);
        org.junit.Assert.assertNotNull(objEntrySet70);
        org.junit.Assert.assertNotNull(objSet71);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertNotNull(longArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray87), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray88), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(longArray90);
        org.junit.Assert.assertNotNull(longArray91);
        org.junit.Assert.assertNotNull(longArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray92), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray93);
        org.junit.Assert.assertNotNull(longArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray94), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray96), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(objEntrySet99);
    }

    @Test
    public void test09713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09713");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((long) (short) 10, (long) '#');
        boolean boolean9 = equalsBuilder5.isEquals();
        java.lang.Character[] charArray15 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray15);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, 'a');
        boolean[] booleanArray23 = new boolean[] { false, true, true, true };
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray23);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray23);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray15, (java.lang.Object) booleanArray23);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder29.append(true, true);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        boolean[] booleanArray42 = new boolean[] { false, false, false, false };
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray42);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray42, false);
        java.lang.Boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray42);
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray42);
        java.lang.Boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray42);
        java.lang.Short[] shortArray50 = new java.lang.Short[] { (short) 1 };
        short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray50);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray50);
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray50, (short) (byte) 100);
        short[] shortArray55 = new short[] {};
        java.lang.Short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray55);
        short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray54, shortArray55);
        float[] floatArray60 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray60);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains(floatArray60, (float) 0);
        float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.add(floatArray60, 10.0f);
        java.lang.Float[] floatArray66 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray60);
        boolean boolean68 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray54, (java.lang.Object) floatArray66, false);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray48, (java.lang.Object[]) floatArray66);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray34, (java.lang.Object[]) floatArray66);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray66, (java.lang.Object) 1, 0);
        java.lang.Float[] floatArray77 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f };
        java.lang.Float[] floatArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder29.append((java.lang.Object[]) floatArray66, (java.lang.Object[]) floatArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder5.append((java.lang.Object[]) charArray15, (java.lang.Object[]) floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((byte) 1, (byte) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[1]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[1]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[1]");
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray65), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
    }

    @Test
    public void test09714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09714");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0.0d);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, 0.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test09715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09715");
        int[] intArray0 = new int[] {};
        int[] intArray1 = org.apache.commons.lang3.ArrayUtils.clone(intArray0);
        int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray1, 1, (int) (byte) 1);
        int[] intArray9 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.clone(intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray10, (int) (short) 0);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray10, (int) '#');
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray1, intArray10);
        java.lang.Boolean[][] booleanArray16 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray23 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray30 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray37 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray44 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray45 = new java.lang.Boolean[][] { booleanArray23, booleanArray30, booleanArray37, booleanArray44 };
        java.lang.Boolean[][] booleanArray46 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray16, booleanArray45);
        java.util.Map<java.lang.Object, java.lang.Object> objMap47 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray16);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = objMap47.entrySet();
        double[] doubleArray52 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray52);
        double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.add(doubleArray52, (double) (byte) 10);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray55, (double) 10.0f);
        int int59 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray55, (double) 1L);
        java.lang.Object obj60 = objMap47.get((java.lang.Object) 1L);
        java.lang.Byte[] byteArray61 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray61);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains(byteArray62, (byte) 10);
        boolean boolean65 = objMap47.containsValue((java.lang.Object) (byte) 10);
        int[] intArray70 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray71 = org.apache.commons.lang3.ArrayUtils.clone(intArray70);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray71);
        java.lang.Integer[] intArray73 = org.apache.commons.lang3.ArrayUtils.toObject(intArray71);
        boolean boolean74 = objMap47.containsValue((java.lang.Object) intArray71);
        int[] intArray75 = new int[] {};
        int[] intArray78 = org.apache.commons.lang3.ArrayUtils.add(intArray75, 0, 100);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray78);
        int[] intArray80 = org.apache.commons.lang3.ArrayUtils.clone(intArray78);
        int[] intArray81 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray78);
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray78);
        int[] intArray83 = org.apache.commons.lang3.ArrayUtils.addAll(intArray71, intArray78);
        int[] intArray84 = org.apache.commons.lang3.ArrayUtils.addAll(intArray1, intArray78);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = org.apache.commons.lang3.ArrayUtils.add(intArray1, (-1), (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(objMap47);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, -1, -1, 100, 100]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100]");
    }

    @Test
    public void test09716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09716");
        short[] shortArray0 = null;
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.add(shortArray0, (short) (byte) 10);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.add(shortArray2, (short) 1);
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder7.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray16 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray16);
        double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray16);
        double[] doubleArray19 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder7.append(doubleArray16, doubleArray19);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder7.appendSuper(true);
        java.lang.Character[] charArray28 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray28);
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28, 'a');
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.clone(charArray31);
        java.lang.Character[] charArray38 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray38, 'a');
        char[] charArray42 = org.apache.commons.lang3.ArrayUtils.add(charArray40, '#');
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.remove(charArray40, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder7.append(charArray32, charArray40);
        float[] floatArray48 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray48);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.contains(floatArray48, (float) 0);
        float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.add(floatArray48, 10.0f);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(floatArray48, (float) (short) -1);
        float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.add(floatArray48, (float) (byte) 1);
        float[] floatArray60 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray60);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains(floatArray60, (float) 0);
        int int65 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray60, (float) 10L);
        int int67 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray60, (float) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder7.append(floatArray57, floatArray60);
        java.lang.Short[] shortArray70 = new java.lang.Short[] { (short) 1 };
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray70);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray70);
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray70, (short) (byte) 100);
        short[] shortArray75 = new short[] {};
        java.lang.Short[] shortArray76 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray75);
        short[] shortArray77 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray74, shortArray75);
        java.lang.Short[] shortArray79 = new java.lang.Short[] { (short) 1 };
        short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray79);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray79);
        short[] shortArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray79, (short) (byte) 100);
        short[] shortArray84 = new short[] {};
        java.lang.Short[] shortArray85 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray84);
        short[] shortArray86 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray83, shortArray84);
        short[] shortArray87 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray77, shortArray84);
        short[] shortArray89 = org.apache.commons.lang3.ArrayUtils.add(shortArray87, (short) (byte) 10);
        short[] shortArray92 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray87, 0, 1);
        short[] shortArray93 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder7.append(shortArray87, shortArray93);
        boolean boolean95 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray87);
        short[] shortArray98 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray87, 5, (int) '4');
        boolean boolean99 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray4, shortArray87);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[10]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[10, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[1]");
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[1]");
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[]");
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[1]");
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray80), "[1]");
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[1]");
        org.junit.Assert.assertNotNull(shortArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray84), "[]");
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[1]");
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[1]");
        org.junit.Assert.assertNotNull(shortArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray89), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray92), "[1]");
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(shortArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray98), "[]");
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test09717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09717");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        java.lang.Float[] floatArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray3);
        float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray3);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.add(floatArray5, 0.0f);
        float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.add(floatArray5, 0.0f);
        float[] floatArray16 = new float[] { 10.0f, 100, (short) -1, (short) 0, 100L, (short) 10 };
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray16);
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray17);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray18);
        float[] floatArray22 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray22);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray22);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray22, (float) 5);
        float[] floatArray29 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        java.lang.Character[] charArray36 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray36, 'a');
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) floatArray29, (java.lang.Object) 'a');
        float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray29, (int) (byte) 1, (int) (byte) 1);
        float[] floatArray45 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray45);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(floatArray45, (float) 0);
        float[] floatArray50 = org.apache.commons.lang3.ArrayUtils.add(floatArray45, 10.0f);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.contains(floatArray45, (float) (-1));
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray45);
        float[] floatArray54 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray29, floatArray45);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray45);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray22, floatArray45);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray45);
        float[] floatArray60 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray60);
        float[] floatArray64 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray64);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(floatArray64, (float) 0);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray60, floatArray64);
        float[] floatArray69 = org.apache.commons.lang3.ArrayUtils.clone(floatArray64);
        float[] floatArray72 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray73 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray72);
        float[] floatArray76 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray77 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray76);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.contains(floatArray76, (float) 0);
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray72, floatArray76);
        float[] floatArray81 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray72);
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray72);
        float[] floatArray83 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray64, floatArray72);
        float[] floatArray84 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray45, floatArray64);
        float[] floatArray85 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray5, floatArray84);
        java.lang.Float[] floatArray86 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray84);
        java.lang.Float[] floatArray87 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray84);
        float[] floatArray88 = org.apache.commons.lang3.ArrayUtils.clone(floatArray84);
        float[] floatArray90 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray88, 10.0f);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[-1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[10.0, 100.0, -1.0, 0.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[10.0, 100.0, -1.0, 0.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[10.0, 100.0, -1.0, 0.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray72), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(floatArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray81), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(floatArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray83), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray84), "[1.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[-1.0, 1.0, 1.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray86);
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertNotNull(floatArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray88), "[1.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray90), "[1.0, -1.0, -1.0, 1.0]");
    }

    @Test
    public void test09718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09718");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0);
        long[] longArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray2, (long) (short) 10);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray4);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test09719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09719");
        short[] shortArray0 = new short[] {};
        java.lang.Short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) 1);
        java.lang.Short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        java.lang.Short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray4);
        java.lang.Short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) shortArray5);
        java.lang.Boolean[][] booleanArray8 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray15 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray22 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray29 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray36 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray37 = new java.lang.Boolean[][] { booleanArray15, booleanArray22, booleanArray29, booleanArray36 };
        java.lang.Boolean[][] booleanArray38 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray8, booleanArray37);
        java.util.Map<java.lang.Object, java.lang.Object> objMap39 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray8);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = objMap39.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList41 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean42 = objEntrySet40.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList41);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor43 = objEntryList41.iterator();
        boolean[] booleanArray48 = new boolean[] { false, false, false, false };
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray48);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray48, false);
        java.lang.Boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray48);
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray48);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray53);
        boolean boolean55 = objEntryList41.remove((java.lang.Object) booleanArray53);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.add(booleanArray53, false);
        int int60 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray57, false, 0);
        boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray57, true);
        int int64 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray5, (java.lang.Object) booleanArray57, (int) (short) 100);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray0), "[]");
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNotNull(objMap39);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objEntryItor43);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test09720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09720");
        java.lang.Float[] floatArray0 = null;
        float[] floatArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray0, (float) 10L);
        org.junit.Assert.assertNull(floatArray2);
    }

    @Test
    public void test09721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09721");
        byte[] byteArray3 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 10, (int) (short) -1);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray3, (byte) 10);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray3, (byte) 100);
        byte[] byteArray16 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray16, (byte) 10, (int) (short) -1);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray16);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray16, (byte) 1, (int) ' ');
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray3, byteArray16);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray16, (int) (short) 100, (int) '#');
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(byteArray27, (byte) 0);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray27);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, 10, 0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test09722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09722");
        java.lang.Character[] charArray5 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        boolean[] booleanArray13 = new boolean[] { false, true, true, true };
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray5, (java.lang.Object) booleanArray13);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '4');
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '4');
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray26 = new double[] {};
        double[] doubleArray30 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray30);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.add(doubleArray30, (double) (byte) 10);
        int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray30, (double) 0L, 0);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray30);
        int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray30, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder22.append(doubleArray26, doubleArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder22.append((byte) 100, (byte) 1);
        java.lang.String[] strArray45 = new java.lang.String[] {};
        java.lang.String[] strArray49 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray50 = org.apache.commons.lang3.ArrayUtils.addAll(strArray45, strArray49);
        java.lang.Short[] shortArray52 = new java.lang.Short[] { (short) 1 };
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray52);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray52);
        short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray52, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder22.append((java.lang.Object[]) strArray50, (java.lang.Object[]) shortArray52);
        java.lang.String[] strArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray50);
        java.lang.Character[] charArray64 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray64);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) strArray50, (java.lang.Object[]) charArray65);
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray65);
        char[] charArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray65);
        char[] charArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray65);
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.addAll(charArray21, charArray69);
        int int72 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray21, 'a');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[1]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "4## a4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "4## a4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[4, #, #,  , a, 4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 4 + "'", int72 == 4);
    }

    @Test
    public void test09723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09723");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray2);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray2);
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray13);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray14, (float) 'a');
        float[] floatArray20 = new float[] { 1L, 100L, 100 };
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) (-1L), (int) (short) 100);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray16, floatArray20);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray2, floatArray20);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray25);
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray25, 0.0f);
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray25, (int) '4', 8);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0, 1.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 1.0, 1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[]");
    }

    @Test
    public void test09724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09724");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray6);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray6);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) (byte) 1);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, (float) '4');
        float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray6, (float) 7);
        float[] floatArray25 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray25);
        float[] floatArray29 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(floatArray29, (float) 0);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray25, floatArray29);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.clone(floatArray29);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray34);
        float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray34, 4, 0);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray6, floatArray34);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray6, (float) (short) 0, 0);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test09725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09725");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray8, (short) 0);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray10, (int) ' ', 0);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.add(shortArray10, (short) (byte) -1);
        java.lang.Short[] shortArray17 = new java.lang.Short[] { (short) 1 };
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray17);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray17);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray17);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray17, (short) 0);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray17);
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray23, (short) 0);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray15, shortArray23);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.clone(shortArray23);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(shortArray27, (short) 0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1, -1]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1, -1, 1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test09726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09726");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        double[] doubleArray15 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray9, (java.lang.Object) doubleArray15);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray15);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray15, (double) (short) 1);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray15, (double) (byte) 0, (double) 'a');
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) 10.0f, (double) 7);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray15, (double) (short) 10, (double) '#');
        double[] doubleArray31 = null;
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray15, doubleArray31);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, -1.0, 10.0, 10.0, 0.0]");
    }

    @Test
    public void test09727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09727");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((byte) 100, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder23.append(true, true);
        byte[] byteArray30 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray30, (byte) 10, (int) (short) -1);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray30);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray30, (byte) 1, (int) ' ');
        byte[] byteArray44 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray44);
        int int47 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray44, (byte) 10);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray30, byteArray44);
        byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.add(byteArray49, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder23.append(byteArray30, byteArray49);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray54);
        byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray54, 100, (int) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder0.append(byteArray49, byteArray54);
        byte[] byteArray61 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray54, (byte) -1);
        java.lang.Byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray61);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
    }

    @Test
    public void test09728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09728");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray42, longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder19.append(longArray26, longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder19.append((byte) 1, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder19.append((double) 11, (-1.0d));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder19.append('4', '#');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder62);
    }

    @Test
    public void test09729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09729");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0);
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray2);
        long[] longArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray2, (long) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray8 = org.apache.commons.lang3.ArrayUtils.remove(longArray2, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[]");
    }

    @Test
    public void test09730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09730");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean2 = objEntryList0.remove((java.lang.Object) byteArray1);
        java.util.Map.Entry<java.lang.Object, java.lang.Object> objEntry3 = null;
        boolean boolean4 = objEntryList0.add(objEntry3);
        java.lang.Short[][][] shortArray5 = new java.lang.Short[][][] {};
        java.lang.Boolean[][] booleanArray6 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray13 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray20 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray27 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray34 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray35 = new java.lang.Boolean[][] { booleanArray13, booleanArray20, booleanArray27, booleanArray34 };
        java.lang.Boolean[][] booleanArray36 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray6, booleanArray35);
        java.util.Map<java.lang.Object, java.lang.Object> objMap37 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray6);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = objMap37.entrySet();
        java.lang.Boolean[][] booleanArray39 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray46 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray53 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray60 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray67 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray68 = new java.lang.Boolean[][] { booleanArray46, booleanArray53, booleanArray60, booleanArray67 };
        java.lang.Boolean[][] booleanArray69 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray39, booleanArray68);
        java.util.Map<java.lang.Object, java.lang.Object> objMap70 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray39);
        int[] intArray73 = new int[] { 1, (byte) 1 };
        int[] intArray76 = org.apache.commons.lang3.ArrayUtils.add(intArray73, (int) (short) 0, (int) '4');
        java.lang.Object obj77 = objMap37.getOrDefault((java.lang.Object) booleanArray39, (java.lang.Object) intArray76);
        java.lang.Short[][][] shortArray78 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (java.lang.Object) intArray76);
        java.lang.Cloneable[][] cloneableArray79 = org.apache.commons.lang3.ArrayUtils.toArray((java.lang.Cloneable[][]) shortArray78);
        java.lang.Cloneable[][] cloneableArray80 = objEntryList0.toArray((java.lang.Cloneable[][]) shortArray78);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream81 = objEntryList0.parallelStream();
        boolean boolean82 = objEntryList0.isEmpty();
        boolean boolean83 = objEntryList0.isEmpty();
        java.lang.Double[] doubleArray88 = new java.lang.Double[] { 1.0d, 0.0d, 0.0d, 1.0d };
        double[] doubleArray90 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray88, (double) '#');
        double[] doubleArray91 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray88);
        double[] doubleArray94 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray91, 7, (int) (short) 1);
        boolean boolean95 = objEntryList0.remove((java.lang.Object) doubleArray94);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor96 = objEntryList0.iterator();
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(objMap37);
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(objMap70);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[1, 1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[52, 1, 1]");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertNotNull(cloneableArray79);
        org.junit.Assert.assertNotNull(cloneableArray80);
        org.junit.Assert.assertNotNull(objEntryStream81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, 0.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[1.0, 0.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(objEntryItor96);
    }

    @Test
    public void test09731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09731");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((long) (short) 10, (long) '#');
        boolean boolean9 = equalsBuilder5.isEquals();
        java.lang.Character[] charArray15 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray15);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, 'a');
        boolean[] booleanArray23 = new boolean[] { false, true, true, true };
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray23);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray23);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray15, (java.lang.Object) booleanArray23);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder29.append(true, true);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        boolean[] booleanArray42 = new boolean[] { false, false, false, false };
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray42);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray42, false);
        java.lang.Boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray42);
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray42);
        java.lang.Boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray42);
        java.lang.Short[] shortArray50 = new java.lang.Short[] { (short) 1 };
        short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray50);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray50);
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray50, (short) (byte) 100);
        short[] shortArray55 = new short[] {};
        java.lang.Short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray55);
        short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray54, shortArray55);
        float[] floatArray60 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray60);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains(floatArray60, (float) 0);
        float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.add(floatArray60, 10.0f);
        java.lang.Float[] floatArray66 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray60);
        boolean boolean68 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray54, (java.lang.Object) floatArray66, false);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray48, (java.lang.Object[]) floatArray66);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray34, (java.lang.Object[]) floatArray66);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray66, (java.lang.Object) 1, 0);
        java.lang.Float[] floatArray77 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f };
        java.lang.Float[] floatArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder29.append((java.lang.Object[]) floatArray66, (java.lang.Object[]) floatArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder5.append((java.lang.Object[]) charArray15, (java.lang.Object[]) floatArray66);
        java.lang.Float[] floatArray81 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray66);
        float[] floatArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray81);
        boolean boolean84 = org.apache.commons.lang3.ArrayUtils.contains(floatArray82, (float) 9);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[1]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[1]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[1]");
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray65), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(floatArray81);
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray82), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test09732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09732");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray8, (short) 0);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray10, (int) ' ', 0);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray13);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray13, (short) 10);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray13);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test09733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09733");
        byte[] byteArray0 = null;
        byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder2 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder2.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray6 = new double[] {};
        double[] doubleArray10 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray10);
        double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.add(doubleArray10, (double) (byte) 10);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray10, (double) 0L, 0);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray10);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray10, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder2.append(doubleArray6, doubleArray10);
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray26 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray26);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.add(doubleArray26, (double) (byte) 10);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray29, (double) 10.0f);
        double[] doubleArray35 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray35);
        double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.add(doubleArray35, (double) (byte) 10);
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray35, (double) 0L, 0);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray35);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray35, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray29, doubleArray35);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder21.append(doubleArray22, doubleArray35);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray48);
        byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.add(byteArray50, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder47.append(byteArray48, byteArray50);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray50);
        byte[] byteArray55 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray55);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray55);
        byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.add(byteArray58, (byte) -1);
        byte[] byteArray61 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray55, byteArray58);
        byte[] byteArray63 = org.apache.commons.lang3.ArrayUtils.add(byteArray55, (byte) 0);
        int int65 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray63, (byte) 100);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-1]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
    }

    @Test
    public void test09734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09734");
        java.lang.String[][][][][] strArray0 = new java.lang.String[][][][][] {};
        java.lang.String[][][][][] strArray1 = new java.lang.String[][][][][] {};
        java.lang.String[][][][][] strArray2 = new java.lang.String[][][][][] {};
        java.lang.String[][][][][] strArray3 = new java.lang.String[][][][][] {};
        java.lang.String[][][][][] strArray4 = new java.lang.String[][][][][] {};
        java.lang.String[][][][][][] strArray5 = new java.lang.String[][][][][][] { strArray0, strArray1, strArray2, strArray3, strArray4 };
        java.lang.String[][][][][][] strArray8 = org.apache.commons.lang3.ArrayUtils.subarray(strArray5, (int) (byte) 1, 10);
        java.lang.Character[] charArray14 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray14, ' ');
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray14, '#');
        java.lang.Character[] charArray24 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray24);
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray24, 'a');
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray18, charArray27);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.clone(charArray18);
        java.lang.Character[] charArray30 = org.apache.commons.lang3.ArrayUtils.toObject(charArray29);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.remove(charArray29, (int) (byte) 1);
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray32);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray32, '4', (int) (byte) 100);
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.remove(charArray32, (int) (short) 0);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) strArray8, (java.lang.Object) charArray32);
        char[] charArray42 = org.apache.commons.lang3.ArrayUtils.subarray(charArray32, 0, (int) ' ');
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), " 4a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), " 4a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[ , 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), " 4a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), " 4a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[ , 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4, a, 4]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), " 4a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), " 4a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[ , 4, a, 4]");
    }

    @Test
    public void test09735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09735");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) -1, (int) (byte) -1);
        java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray13, (double) 1);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) 1.0f, (int) (byte) 10);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray15);
        java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray15, 0.0d, (int) '#', (double) 10.0f);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test09736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09736");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0.0d);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) (-1), (int) (short) 10, (double) (-1.0f));
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, (-1), (int) ' ');
        boolean[] booleanArray20 = new boolean[] { false, false, false, false };
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray20);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray20, false);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.add(booleanArray20, true);
        double[] doubleArray31 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray31);
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray25, (java.lang.Object) doubleArray31);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray31);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray31);
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray35, (double) 10);
        double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray35);
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.add(doubleArray35, 2, (double) (short) 0);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray15, doubleArray35);
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.add(doubleArray15, (int) (short) 1, (double) 8);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray15, (double) 1L, (double) 10.0f);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37 == 3);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0, 0.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 100.0, 10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 8.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test09737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09737");
        java.lang.Byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray0);
        byte[] byteArray2 = null;
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray1, byteArray2);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray1, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray10 = new double[] {};
        double[] doubleArray14 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray14);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, (double) (byte) 10);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, (double) 0L, 0);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray14);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder6.append(doubleArray10, doubleArray14);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray30 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray30);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.add(doubleArray30, (double) (byte) 10);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray33, (double) 10.0f);
        double[] doubleArray39 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray39);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.add(doubleArray39, (double) (byte) 10);
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 0L, 0);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray39);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray39, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray33, doubleArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder25.append(doubleArray26, doubleArray39);
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray52);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.add(byteArray54, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder51.append(byteArray52, byteArray54);
        byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray52);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray58);
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray1, byteArray58);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray1);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.clone(byteArray1);
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray62, (-1), (int) '#');
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray65, (byte) 10);
        java.lang.Byte[] byteArray68 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray68);
        byte[] byteArray70 = null;
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray69, byteArray70);
        byte[] byteArray73 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray69, (byte) 1);
        byte[] byteArray75 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray73, (byte) -1);
        byte[] byteArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray73);
        byte[] byteArray77 = org.apache.commons.lang3.ArrayUtils.clone(byteArray73);
        int int79 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray77, (byte) -1);
        byte[] byteArray80 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray67, byteArray77);
        byte[] byteArray81 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray67);
        byte[] byteArray83 = org.apache.commons.lang3.ArrayUtils.add(byteArray67, (byte) -1);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[]");
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[]");
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[]");
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[-1]");
    }

    @Test
    public void test09738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09738");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray6, (short) 10);
        java.lang.Short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(shortArray11);
    }

    @Test
    public void test09739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09739");
        java.lang.Character[] charArray5 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        boolean[] booleanArray13 = new boolean[] { false, true, true, true };
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray5, (java.lang.Object) booleanArray13);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '4');
        java.lang.Double[] doubleArray23 = new java.lang.Double[] { 100.0d, (-1.0d), 1.0d, 1.0d };
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 100.0d, (-1.0d), 1.0d, 1.0d };
        java.lang.Double[] doubleArray33 = new java.lang.Double[] { 100.0d, (-1.0d), 1.0d, 1.0d };
        java.lang.Double[][] doubleArray34 = new java.lang.Double[][] { doubleArray23, doubleArray28, doubleArray33 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray44 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray44);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray44);
        double[] doubleArray47 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder35.append(doubleArray44, doubleArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder35.appendSuper(true);
        java.lang.Character[] charArray56 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray56);
        char[] charArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray56, 'a');
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.clone(charArray59);
        java.lang.Character[] charArray66 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray66, 'a');
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.add(charArray68, '#');
        char[] charArray72 = org.apache.commons.lang3.ArrayUtils.remove(charArray68, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder35.append(charArray60, charArray68);
        java.lang.Double[][] doubleArray74 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray34, (java.lang.Object) equalsBuilder73);
        boolean boolean76 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray5, (java.lang.Object) doubleArray34, false);
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5);
        char[] charArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5);
        java.lang.Character[] charArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray80 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray79);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[4, #, #,  , a]");
    }

    @Test
    public void test09740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09740");
        int[] intArray0 = new int[] {};
        int[] intArray3 = org.apache.commons.lang3.ArrayUtils.add(intArray0, 0, 100);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray3);
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray3);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.remove(intArray3, 0);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray3);
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.add(intArray3, 9);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[100]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 9]");
    }

    @Test
    public void test09741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09741");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, 0);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY;
        boolean boolean12 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray3, (java.lang.Object) booleanArray11);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray11, false);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray11, false);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray11, false);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[]");
    }

    @Test
    public void test09742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09742");
        boolean[] booleanArray1 = new boolean[] { true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray1, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.add(booleanArray1, false);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray7);
        java.lang.Boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray7);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray9);
        org.junit.Assert.assertNotNull(booleanArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray1), "[true]");
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true, false]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[true, false]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertNotNull(booleanArray10);
    }

    @Test
    public void test09743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09743");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray13);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray13, 0);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray13, 1, (int) (short) -1);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.add(intArray13, (int) (byte) 100);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.remove(intArray13, 3);
        int[] intArray25 = new int[] {};
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.clone(intArray25);
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.addAll(intArray13, intArray25);
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.add(intArray13, 13);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray32 = org.apache.commons.lang3.ArrayUtils.add(intArray13, 100, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, -1, -1, 100, 100]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, -1, -1]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, -1, -1, 100, 13]");
    }

    @Test
    public void test09744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09744");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        equalsBuilder3.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append(false, true);
        double[] doubleArray13 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray13);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray13);
        java.lang.Object obj16 = null;
        boolean boolean18 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray15, obj16, false);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray15, (double) 3);
        boolean[] booleanArray25 = new boolean[] { false, false, false, false };
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray25, false);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.add(booleanArray25, true);
        double[] doubleArray36 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray36);
        boolean boolean38 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray30, (java.lang.Object) doubleArray36);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray36);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray36);
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray40, (double) 10);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray40);
        java.lang.Double[] doubleArray48 = new java.lang.Double[] { 1.0d, 0.0d, 0.0d, 1.0d };
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray48, (double) '#');
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray40, doubleArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder7.append(doubleArray15, doubleArray50);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray50, (double) 11, 10);
        int int58 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray50, (double) 7, 1);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray50, 0.0d, (int) '4', (double) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.add(doubleArray50, (int) '4', (double) 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 3 + "'", int42 == 3);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 0.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    }

    @Test
    public void test09745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09745");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8, ' ');
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8, 'a');
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.add(charArray15, ' ');
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.add(charArray17, ' ');
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.subarray(charArray19, 11, 5);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray22);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), " 44a4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), " 44a4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[ , 4, 4, a, 4,  ]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 44a4  ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 44a4  ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, 4, a, 4,  ,  ]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
    }

    @Test
    public void test09746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09746");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        double[] doubleArray15 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray9, (java.lang.Object) doubleArray15);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray15);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray19, (double) 10);
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray19);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.add(doubleArray19, 2, (double) (short) 0);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, 10.0d, 10);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, -1.0, 0.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test09747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09747");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, 0);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) 4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder16.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray20 = new double[] {};
        double[] doubleArray24 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray24);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray24, (double) (byte) 10);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray24, (double) 0L, 0);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray24);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray24, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder16.append(doubleArray20, doubleArray24);
        int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) 'a', (int) '4');
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray20);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0, (double) 100);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray3);
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray43, (double) (byte) 10);
        boolean[] booleanArray50 = new boolean[] { false, false, false, false };
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray50);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray50, false);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.add(booleanArray50, true);
        double[] doubleArray61 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray61);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray55, (java.lang.Object) doubleArray61);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray61, 3, 1);
        int int69 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) 100, (double) 100.0f);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray43, doubleArray66);
        double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.add(doubleArray43, (double) 1);
        int int75 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray72, (double) (byte) 100, (double) (byte) 1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 4.0]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0, 10.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
    }

    @Test
    public void test09748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09748");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        java.lang.Character[] charArray21 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, 'a');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.clone(charArray24);
        java.lang.Character[] charArray31 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray31, 'a');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.add(charArray33, '#');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.remove(charArray33, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.append(charArray25, charArray33);
        java.lang.Character[] charArray39 = org.apache.commons.lang3.ArrayUtils.toObject(charArray25);
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray25, 'a');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 4 + "'", int41 == 4);
    }

    @Test
    public void test09749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09749");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0);
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, (long) 10);
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray2, (long) (short) 10);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray2, (long) 2, (int) (short) 10);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        java.lang.Long[] longArray18 = org.apache.commons.lang3.ArrayUtils.toObject(longArray17);
        long[] longArray24 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray25 = org.apache.commons.lang3.ArrayUtils.clone(longArray24);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray17, longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray25);
        java.lang.Long[] longArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray27);
        long[] longArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray28);
        java.lang.Long[] longArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray28);
        long[] longArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray30, (long) 7);
        java.lang.Long[] longArray33 = org.apache.commons.lang3.ArrayUtils.toObject(longArray32);
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.addAll(longArray2, longArray32);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray34);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray37 = org.apache.commons.lang3.ArrayUtils.remove(longArray34, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test09750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09750");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray13);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray13, 0);
        java.lang.Integer[] intArray18 = org.apache.commons.lang3.ArrayUtils.toObject(intArray13);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray13, (int) '4', (int) (short) 100);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray13, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test09751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09751");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        java.lang.String str5 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) equalsBuilder3, "0");
        boolean[] booleanArray10 = new boolean[] { false, false, false, false };
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray10, false);
        java.lang.Boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10);
        java.lang.Boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray16);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray16, true);
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray19, (int) (short) 0, 100);
        boolean[] booleanArray27 = new boolean[] { false, false, false, false };
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray27);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray27, false);
        java.lang.Boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray27);
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray27);
        java.lang.Boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray27);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray33);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray33, true);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray36);
        boolean[] booleanArray42 = new boolean[] { false, false, false, false };
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray42);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray42, false);
        java.lang.Boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray42);
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray42);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray42);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray42);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray36, booleanArray42);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray42);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray19, booleanArray42);
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.add(booleanArray19, true);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray54);
        boolean[] booleanArray60 = new boolean[] { false, false, false, false };
        boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray60);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray60, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder3.append(booleanArray54, booleanArray60);
        boolean[] booleanArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray54);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray65);
        java.lang.Boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray65);
        java.lang.Boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray67);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray68);
        int int72 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray69, false, (int) (short) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[true, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[true, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[true, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[true, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
    }

    @Test
    public void test09752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09752");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean2 = objEntryList0.remove((java.lang.Object) byteArray1);
        long[] longArray8 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.clone(longArray8);
        java.lang.Long[] longArray10 = org.apache.commons.lang3.ArrayUtils.toObject(longArray9);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.add(longArray11, (long) (short) 0);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray13, (long) '4');
        boolean boolean16 = objEntryList0.contains((java.lang.Object) int15);
        java.util.Spliterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySpliterator17 = objEntryList0.spliterator();
        int int18 = objEntryList0.size();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList19 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor20 = objEntryList19.iterator();
        java.util.Map.Entry<java.lang.Object, java.lang.Object> objEntry21 = null;
        boolean boolean22 = objEntryList19.add(objEntry21);
        int int23 = objEntryList19.size();
        int int24 = objEntryList19.size();
        java.lang.Boolean[][] booleanArray25 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray32 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray39 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray46 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray53 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray54 = new java.lang.Boolean[][] { booleanArray32, booleanArray39, booleanArray46, booleanArray53 };
        java.lang.Boolean[][] booleanArray55 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray25, booleanArray54);
        java.util.Map<java.lang.Object, java.lang.Object> objMap56 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray25);
        java.lang.Short[] shortArray59 = new java.lang.Short[] { (short) 1 };
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray59);
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray59, (short) 10);
        java.lang.Object obj63 = objMap56.replace((java.lang.Object) 2, (java.lang.Object) shortArray62);
        objMap56.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = objMap56.entrySet();
        java.util.Spliterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySpliterator66 = objEntrySet65.spliterator();
        boolean boolean67 = objEntryList19.removeAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntrySet65);
        boolean boolean68 = objEntryList0.addAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList19);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objEntrySpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objEntryItor20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertNotNull(objMap56);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[1]");
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[1]");
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertNotNull(objEntrySpliterator66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test09753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09753");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean35 = objEntryList33.remove((java.lang.Object) byteArray34);
        boolean boolean36 = objEntrySet32.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.lang.Object[] objArray37 = objEntryList33.toArray();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder38.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray42 = new double[] {};
        double[] doubleArray46 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray46);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.add(doubleArray46, (double) (byte) 10);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray46, (double) 0L, 0);
        double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray46);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray46, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder38.append(doubleArray42, doubleArray46);
        int int59 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(objArray37, (java.lang.Object) equalsBuilder57, 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder57.append((double) 1L, (double) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append('4', '#');
        java.lang.Boolean boolean66 = equalsBuilder62.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append(2, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append(9, (int) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder69.append((short) 10, (short) 0);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertEquals("'" + boolean66 + "' != '" + false + "'", boolean66, false);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
    }

    @Test
    public void test09754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09754");
        byte[] byteArray0 = null;
        byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray0);
        byte[] byteArray5 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray5, (byte) 10, (int) (short) -1);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray5, (byte) 10);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray0, byteArray5);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray5, (int) (byte) 0, (int) (short) 0);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray5, (byte) 1, (int) 'a');
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test09755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09755");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray5);
        java.lang.Short[] shortArray8 = new java.lang.Short[] { (short) 1 };
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray8);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) (byte) 100);
        short[] shortArray13 = new short[] {};
        java.lang.Short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray13);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray12, shortArray13);
        java.lang.Short[] shortArray17 = new java.lang.Short[] { (short) 1 };
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray17);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray17);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray17, (short) (byte) 100);
        short[] shortArray22 = new short[] {};
        java.lang.Short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray22);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray21, shortArray22);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray15, shortArray22);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.add(shortArray25, (short) (byte) 10);
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray25, (short) -1);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray25);
        java.lang.Short[] shortArray32 = new java.lang.Short[] { (short) 1 };
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray32);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray32);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray32, (short) (byte) 100);
        java.lang.Short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray36);
        short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray37, (short) 1);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray25, shortArray39);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray39, (short) (byte) 100, (int) '4');
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray39, (short) (byte) 100, 13);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.clone(shortArray39);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.add(shortArray47, (short) 0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1, 10]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[1]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[1]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[1]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[1, 0]");
    }

    @Test
    public void test09756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09756");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        java.lang.Character[] charArray21 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, 'a');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.clone(charArray24);
        java.lang.Character[] charArray31 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray31, 'a');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.add(charArray33, '#');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.remove(charArray33, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.append(charArray25, charArray33);
        java.lang.Byte[] byteArray39 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray39);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.contains(byteArray40, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean47 = equalsBuilder46.isEquals();
        java.lang.String[] strArray48 = new java.lang.String[] {};
        java.lang.String[] strArray52 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray53 = org.apache.commons.lang3.ArrayUtils.addAll(strArray48, strArray52);
        java.lang.String[] strArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray48);
        java.lang.Character[] charArray60 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray60, ' ');
        java.lang.Character[] charArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder46.append((java.lang.Object[]) strArray48, (java.lang.Object[]) charArray63);
        java.lang.String str66 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) strArray48, "{32,100,10,10,1}");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder0.append((java.lang.Object) byteArray40, (java.lang.Object) "{32,100,10,10,1}");
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray40);
        int int71 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray40, (byte) 1, 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "{}" + "'", str66, "{}");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
    }

    @Test
    public void test09757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09757");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10);
        java.lang.Boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10);
        java.lang.Boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray13);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray14);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray15, false, 7);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test09758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09758");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        java.lang.Character[] charArray44 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray44, 'a');
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.add(charArray46, '#');
        boolean boolean49 = objMap31.equals((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet50 = objMap31.keySet();
        objMap31.clear();
        int int52 = objMap31.size();
        java.util.Set<java.lang.Object> objSet53 = objMap31.keySet();
        java.util.Collection<java.lang.Object> objCollection54 = objMap31.values();
        byte[] byteArray58 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int61 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray58, (byte) 10, (int) (short) -1);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray58);
        int int65 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray58, (byte) 1, (int) ' ');
        byte[] byteArray72 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray72);
        int int75 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray72, (byte) 10);
        byte[] byteArray76 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray58, byteArray72);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.contains(byteArray76, (byte) 1);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray76);
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray76, (byte) -1);
        int int83 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray76, (byte) -1);
        java.lang.Object obj84 = objMap31.remove((java.lang.Object) (byte) -1);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a,  , a,  , #, #]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 4 + "'", int75 == 4);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNull(obj84);
    }

    @Test
    public void test09759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09759");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append((double) (byte) 100, (double) 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder37.append((byte) 100, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder46.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder49.append(false, false);
        java.lang.String str54 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) false, "{1,1}");
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "false" + "'", str54, "false");
    }

    @Test
    public void test09760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09760");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder0.append((long) (byte) 10, (long) ' ');
        int[] intArray21 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.clone(intArray21);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.subarray(intArray22, (int) ' ', (int) (byte) 100);
        int[] intArray30 = new int[] { '#', (byte) -1, (short) 0 };
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.subarray(intArray30, (int) '#', (int) (short) 0);
        java.lang.Integer[] intArray34 = org.apache.commons.lang3.ArrayUtils.toObject(intArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder0.append(intArray26, intArray33);
        int[] intArray39 = new int[] { '#', (byte) -1, (short) 0 };
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.subarray(intArray39, (int) '#', (int) (short) 0);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray39, (int) (byte) 1);
        int[] intArray46 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray39, (int) (short) 100);
        int[] intArray51 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray52 = org.apache.commons.lang3.ArrayUtils.clone(intArray51);
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.add(intArray51, (int) 'a');
        int[] intArray59 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray60 = org.apache.commons.lang3.ArrayUtils.clone(intArray59);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray60);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray54, intArray60);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray54);
        int[] intArray64 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray54);
        int[] intArray69 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray70 = org.apache.commons.lang3.ArrayUtils.clone(intArray69);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray69);
        java.lang.Integer[] intArray72 = org.apache.commons.lang3.ArrayUtils.toObject(intArray69);
        int[] intArray73 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray69);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray73);
        boolean boolean76 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) intArray64, (java.lang.Object) intArray73, false);
        int[] intArray78 = org.apache.commons.lang3.ArrayUtils.remove(intArray73, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder35.append(intArray39, intArray78);
        int int81 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray78, (int) ' ');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[35, -1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[35, -1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[35, -1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, -1, 0]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
    }

    @Test
    public void test09761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09761");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 1 };
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray6);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray6, (short) 10);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray4, shortArray9);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray10, (short) 100, 3);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray10);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray10);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray10, 7, (int) (byte) 10);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1, 1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[]");
    }

    @Test
    public void test09762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09762");
        long[] longArray1 = new long[] { '#' };
        int int3 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray1, 0L);
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray1, 100L);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[35]");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test09763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09763");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        java.lang.Character[] charArray15 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray15);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, 'a');
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray9, charArray18);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray18, '4');
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray18);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test09764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09764");
        byte[] byteArray3 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 10, (int) (short) -1);
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray3);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray3);
        byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.clone(byteArray8);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.remove(byteArray9, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[0, 0, 10]");
    }

    @Test
    public void test09765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09765");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY;
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray11, false, 10);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray11, true);
        java.lang.Character[] charArray22 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray22, ' ');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray24);
        java.lang.String[] strArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.lang.Comparable<java.lang.String>[]) strArray26);
        java.lang.String[] strArray28 = org.apache.commons.lang3.ArrayUtils.clone(strArray26);
        java.lang.String[] strArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray28);
        java.lang.String[] strArray33 = new java.lang.String[] { "{}", "", "{}" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        boolean boolean36 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray25, (java.lang.Object) strArray29, (java.util.Collection<java.lang.String>) strList34);
        boolean boolean37 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray10, (java.lang.Object) booleanArray11, (java.util.Collection<java.lang.String>) strList34);
        boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray11);
        boolean[] booleanArray43 = new boolean[] { false, false, false, false };
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray43);
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray44);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray45);
        int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray45, false);
        boolean[] booleanArray53 = new boolean[] { false, false, false, false };
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray53);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray53, false);
        java.lang.Boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray53);
        boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray53);
        java.lang.Boolean[] booleanArray59 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray53);
        boolean[] booleanArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray59);
        boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray59, true);
        boolean[] booleanArray65 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray62, (int) (short) 0, 100);
        boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray65, true);
        int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray65, false);
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray45, booleanArray65);
        boolean[] booleanArray73 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray65, (int) (byte) 0, (int) '4');
        boolean[] booleanArray74 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray38, booleanArray65);
        boolean[] booleanArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray65);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 3 + "'", int48 == 3);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 3 + "'", int69 == 3);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray75), "[false, false, false, false]");
    }

    @Test
    public void test09766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09766");
        java.util.Set[][][] setArray1 = new java.util.Set[0][][];
        @SuppressWarnings("unchecked")
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[][][] objEntrySetArray2 = (java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[][][]) setArray1;
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[][][] objEntrySetArray3 = org.apache.commons.lang3.ArrayUtils.toArray(objEntrySetArray2);
        org.junit.Assert.assertNotNull(setArray1);
        org.junit.Assert.assertNotNull(objEntrySetArray2);
        org.junit.Assert.assertNotNull(objEntrySetArray3);
    }

    @Test
    public void test09767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09767");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY;
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray11, false, 10);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray11, true);
        java.lang.Character[] charArray22 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray22, ' ');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray24);
        java.lang.String[] strArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.lang.Comparable<java.lang.String>[]) strArray26);
        java.lang.String[] strArray28 = org.apache.commons.lang3.ArrayUtils.clone(strArray26);
        java.lang.String[] strArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray28);
        java.lang.String[] strArray33 = new java.lang.String[] { "{}", "", "{}" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        boolean boolean36 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray25, (java.lang.Object) strArray29, (java.util.Collection<java.lang.String>) strList34);
        boolean boolean37 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray10, (java.lang.Object) booleanArray11, (java.util.Collection<java.lang.String>) strList34);
        boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray11);
        boolean[] booleanArray43 = new boolean[] { false, false, false, false };
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray43);
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray44);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray45);
        int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray45, false);
        boolean[] booleanArray53 = new boolean[] { false, false, false, false };
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray53);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray53, false);
        java.lang.Boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray53);
        boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray53);
        java.lang.Boolean[] booleanArray59 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray53);
        boolean[] booleanArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray59);
        boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray59, true);
        boolean[] booleanArray65 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray62, (int) (short) 0, 100);
        boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray65, true);
        int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray65, false);
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray45, booleanArray65);
        boolean[] booleanArray73 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray65, (int) (byte) 0, (int) '4');
        boolean[] booleanArray74 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray38, booleanArray65);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray65);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 3 + "'", int48 == 3);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 3 + "'", int69 == 3);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test09768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09768");
        byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray0);
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.contains(byteArray0, (byte) 10);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.add(byteArray0, (byte) 100);
        java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray5);
        byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6);
        byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
    }

    @Test
    public void test09769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09769");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray6);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray6);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) (byte) 1);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray6, (float) ' ');
        float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray20, (float) 9);
        float[] floatArray26 = new float[] { (short) 100, 0, 10 };
        float[] floatArray29 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(floatArray29, (float) 0);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.add(floatArray29, 10.0f);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray26, floatArray29);
        float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray26, 3, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray26);
        java.lang.Float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray26);
        float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray20, floatArray26);
        float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray20);
        float[] floatArray45 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray45);
        float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray45, 0, 100);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray45);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray45, (float) (byte) 10);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray45);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray20, floatArray45);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[10.0, 0.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[]");
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 1.0, 10.0, 0.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test09770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09770");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f);
        double[] doubleArray12 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray12);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray12, (double) (byte) 10);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray12, (double) 0L, 0);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray12);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray6, doubleArray12);
        java.lang.Double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray12);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray12);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray25, (double) 9, 100.0d);
        byte[] byteArray32 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray32, (byte) 10, (int) (short) -1);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray32, (byte) 10);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray32, (byte) 1);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(byteArray32, (byte) 100);
        byte[] byteArray45 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray45, (byte) 10, (int) (short) -1);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray45);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray45, (byte) 1, (int) ' ');
        byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray32, byteArray45);
        short[] shortArray54 = new short[] {};
        java.lang.Short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray54);
        boolean boolean56 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) byteArray53, (java.lang.Object) shortArray55);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray55);
        java.lang.Long[] longArray64 = new java.lang.Long[] { 1L, 10L, 0L, (-1L), (-1L), (-1L) };
        long[] longArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray64, (long) (short) 10);
        java.lang.String[] strArray67 = new java.lang.String[] {};
        java.lang.String[] strArray71 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray72 = org.apache.commons.lang3.ArrayUtils.addAll(strArray67, strArray71);
        java.lang.String[] strArray73 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray71);
        byte[] byteArray74 = null;
        byte[] byteArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray74);
        byte[] byteArray79 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int82 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray79, (byte) 10, (int) (short) -1);
        int int84 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray79, (byte) 10);
        byte[] byteArray85 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray74, byteArray79);
        int int88 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray79, (byte) 0, 3);
        int int90 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray79, (byte) 1);
        boolean boolean91 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) strArray73, (java.lang.Object) int90);
        int int92 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) longArray64, (java.lang.Object) strArray73);
        boolean boolean93 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 100.0d, (java.lang.Object) shortArray55, strArray73);
        short[] shortArray95 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray55, (short) -1);
        boolean boolean96 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray95);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0, 0, 10, 0, 0, 10]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[1, 10, 0, -1, -1, -1]");
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[]");
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(shortArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray95), "[]");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test09771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09771");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        byte[] byteArray7 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray7, (byte) 10, (int) (short) -1);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray7);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray7, (byte) 1, (int) ' ');
        byte[] byteArray21 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray21, (byte) 10);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray7, byteArray21);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray26, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder0.append(byteArray7, byteArray26);
        java.lang.Byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray26);
        java.lang.Byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray31);
        byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray32, (byte) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
    }

    @Test
    public void test09772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09772");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        boolean[] booleanArray27 = new boolean[] { false, true, true, true };
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray27);
        boolean[] booleanArray33 = new boolean[] { false, false, false, false };
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray33);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray33, false);
        boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.add(booleanArray33, true);
        boolean[] booleanArray43 = new boolean[] { false, false, false, false };
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray43, false);
        java.lang.Boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray43);
        boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray33, booleanArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder0.append(booleanArray28, booleanArray33);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray28, true, 1);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray28);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray28, true, (int) (short) -1);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray28);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true, true, true]");
    }

    @Test
    public void test09773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09773");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray7);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray8);
        java.lang.Character[] charArray10 = org.apache.commons.lang3.ArrayUtils.toObject(charArray8);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) charArray10);
        java.lang.Character[] charArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray10);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) charArray10);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertNotNull(charArray12);
    }

    @Test
    public void test09774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09774");
        boolean[] booleanArray1 = new boolean[] { true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray1, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray1);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray1);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray1);
        org.junit.Assert.assertNotNull(booleanArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray1), "[true]");
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test09775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09775");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean2 = objEntryList0.remove((java.lang.Object) byteArray1);
        byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) 1);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1);
        byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) 100);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray7, (byte) 0);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.clone(byteArray7);
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray15, (byte) 100);
        byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.add(byteArray17, (byte) 10);
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray17, 0, (int) (short) 1);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList23 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean25 = objEntryList23.remove((java.lang.Object) byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray24, (byte) 1);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray24);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray28);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.clone(byteArray29);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.clone(byteArray30);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray17, byteArray30);
        byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.remove(byteArray17, (int) (short) 1);
        byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray7, byteArray17);
        java.lang.Character[] charArray41 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray41, ' ');
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray41, '#');
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.clone(charArray45);
        int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray45, ' ');
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray45);
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.add(charArray45, 'a');
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.clone(charArray51);
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.subarray(charArray52, 5, (int) (byte) 0);
        char[] charArray57 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray55, '#');
        boolean boolean59 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) byteArray35, (java.lang.Object) charArray55, false);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100, 1, 100, 10]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-1, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), " 44a4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), " 44a4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[ , 4, 4, a, 4, a]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), " 44a4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), " 44a4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[ , 4, 4, a, 4, a]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test09776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09776");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, '#', (int) ' ');
        org.apache.commons.lang3.ArrayUtils.reverse(charArray9);
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.add(charArray9, 1, 'a');
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray9, ' ', 100);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray9);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4aa44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4aa44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4, a, a, 4, 4,  ]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test09777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09777");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder0.append((long) (byte) 10, (long) ' ');
        long[] longArray22 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.clone(longArray22);
        java.lang.Long[] longArray24 = org.apache.commons.lang3.ArrayUtils.toObject(longArray23);
        long[] longArray25 = org.apache.commons.lang3.ArrayUtils.clone(longArray23);
        long[] longArray27 = org.apache.commons.lang3.ArrayUtils.add(longArray25, (long) (short) 0);
        long[] longArray28 = org.apache.commons.lang3.ArrayUtils.clone(longArray27);
        long[] longArray34 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.clone(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.toObject(longArray35);
        long[] longArray37 = org.apache.commons.lang3.ArrayUtils.clone(longArray35);
        long[] longArray39 = org.apache.commons.lang3.ArrayUtils.add(longArray37, (long) (short) 0);
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.addAll(longArray28, longArray37);
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.clone(longArray28);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray41);
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.add(longArray41, (-1L));
        long[] longArray50 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.clone(longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray51);
        long[] longArray53 = org.apache.commons.lang3.ArrayUtils.clone(longArray51);
        long[] longArray55 = org.apache.commons.lang3.ArrayUtils.add(longArray53, (long) (short) 0);
        long[] longArray56 = org.apache.commons.lang3.ArrayUtils.clone(longArray55);
        long[] longArray62 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.clone(longArray62);
        java.lang.Long[] longArray64 = org.apache.commons.lang3.ArrayUtils.toObject(longArray63);
        long[] longArray65 = org.apache.commons.lang3.ArrayUtils.clone(longArray63);
        long[] longArray67 = org.apache.commons.lang3.ArrayUtils.add(longArray65, (long) (short) 0);
        long[] longArray68 = org.apache.commons.lang3.ArrayUtils.addAll(longArray56, longArray65);
        long[] longArray69 = org.apache.commons.lang3.ArrayUtils.clone(longArray56);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray69);
        long[] longArray72 = org.apache.commons.lang3.ArrayUtils.add(longArray69, (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder0.append(longArray44, longArray69);
        int int76 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray69, 0L, 4);
        long[] longArray77 = org.apache.commons.lang3.ArrayUtils.clone(longArray69);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[0, 1, 10, 10, 100, 32]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[0, 1, 10, 10, 100, 32, -1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray62), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray69), "[0, 1, 10, 10, 100, 32]");
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[0, 1, 10, 10, 100, 32, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(longArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray77), "[0, 1, 10, 10, 100, 32]");
    }

    @Test
    public void test09778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09778");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder0.append((double) 5, 0.0d);
        boolean boolean19 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append(true, false);
        java.lang.Boolean boolean23 = equalsBuilder22.build();
        boolean boolean24 = equalsBuilder22.isEquals();
        int[] intArray25 = null;
        java.lang.Integer[] intArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_INTEGER_OBJECT_ARRAY;
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray26, (-1));
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray28, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder22.append(intArray25, intArray28);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray28);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray28, (int) '#');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]");
    }

    @Test
    public void test09779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09779");
        short[] shortArray0 = null;
        java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 1 };
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray2);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2, (short) (byte) 100);
        short[] shortArray7 = new short[] {};
        java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray7);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray6, shortArray7);
        java.lang.Short[] shortArray11 = new java.lang.Short[] { (short) 1 };
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray11);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray11);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray11, (short) (byte) 100);
        short[] shortArray16 = new short[] {};
        java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray15, shortArray16);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray9, shortArray16);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray0, shortArray19);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray20, 3, 1);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.add(shortArray23, (short) 0);
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray23, (short) (byte) 10, (int) (short) -1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[1]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test09780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09780");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 10, (byte) 0);
        java.lang.Boolean boolean8 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder3.append((byte) 100, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder11.append((byte) 1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder11.append((byte) 100, (byte) 0);
        boolean boolean18 = equalsBuilder11.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test09781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09781");
        short[] shortArray0 = null;
        java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 1 };
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray2);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2, (short) (byte) 100);
        short[] shortArray7 = new short[] {};
        java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray7);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray6, shortArray7);
        java.lang.Short[] shortArray11 = new java.lang.Short[] { (short) 1 };
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray11);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray11);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray11, (short) (byte) 100);
        short[] shortArray16 = new short[] {};
        java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray15, shortArray16);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray9, shortArray16);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray0, shortArray19);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray20, 3, 1);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.add(shortArray23, (short) 0);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.clone(shortArray25);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray26, (short) -1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[1]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test09782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09782");
        java.util.stream.BaseStream[][] baseStreamArray1 = new java.util.stream.BaseStream[0][];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][] objEntryBaseStreamArray2 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][]) baseStreamArray1;
        java.util.stream.BaseStream[][] baseStreamArray4 = new java.util.stream.BaseStream[0][];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][] objEntryBaseStreamArray5 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][]) baseStreamArray4;
        java.util.stream.BaseStream[][] baseStreamArray7 = new java.util.stream.BaseStream[0][];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][] objEntryBaseStreamArray8 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][]) baseStreamArray7;
        java.util.stream.BaseStream[][] baseStreamArray10 = new java.util.stream.BaseStream[0][];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][] objEntryBaseStreamArray11 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][]) baseStreamArray10;
        java.util.stream.BaseStream[][] baseStreamArray13 = new java.util.stream.BaseStream[0][];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][] objEntryBaseStreamArray14 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][]) baseStreamArray13;
        java.util.stream.BaseStream[][][] baseStreamArray16 = new java.util.stream.BaseStream[5][][];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][][] objEntryBaseStreamArray17 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][][]) baseStreamArray16;
        objEntryBaseStreamArray17[0] = objEntryBaseStreamArray2;
        objEntryBaseStreamArray17[1] = objEntryBaseStreamArray5;
        objEntryBaseStreamArray17[2] = objEntryBaseStreamArray8;
        objEntryBaseStreamArray17[3] = objEntryBaseStreamArray11;
        objEntryBaseStreamArray17[4] = objEntryBaseStreamArray14;
        java.util.stream.BaseStream[] baseStreamArray30 = new java.util.stream.BaseStream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[] objEntryBaseStreamArray31 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[]) baseStreamArray30;
        java.util.stream.BaseStream[] baseStreamArray33 = new java.util.stream.BaseStream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[] objEntryBaseStreamArray34 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[]) baseStreamArray33;
        java.util.stream.BaseStream[] baseStreamArray36 = new java.util.stream.BaseStream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[] objEntryBaseStreamArray37 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[]) baseStreamArray36;
        java.util.stream.BaseStream[] baseStreamArray39 = new java.util.stream.BaseStream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[] objEntryBaseStreamArray40 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[]) baseStreamArray39;
        java.util.stream.BaseStream[] baseStreamArray42 = new java.util.stream.BaseStream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[] objEntryBaseStreamArray43 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[]) baseStreamArray42;
        java.util.stream.BaseStream[][] baseStreamArray45 = new java.util.stream.BaseStream[5][];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][] objEntryBaseStreamArray46 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][]) baseStreamArray45;
        objEntryBaseStreamArray46[0] = baseStreamArray30;
        objEntryBaseStreamArray46[1] = objEntryBaseStreamArray34;
        objEntryBaseStreamArray46[2] = objEntryBaseStreamArray37;
        objEntryBaseStreamArray46[3] = baseStreamArray39;
        objEntryBaseStreamArray46[4] = baseStreamArray42;
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][] objEntryBaseStreamArray57 = org.apache.commons.lang3.ArrayUtils.clone(objEntryBaseStreamArray46);
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][][] objEntryBaseStreamArray58 = org.apache.commons.lang3.ArrayUtils.add(objEntryBaseStreamArray17, (int) (byte) 1, objEntryBaseStreamArray57);
        java.lang.AutoCloseable[][][] autoCloseableArray59 = org.apache.commons.lang3.ArrayUtils.clone((java.lang.AutoCloseable[][][]) objEntryBaseStreamArray58);
        java.util.stream.BaseStream[] baseStreamArray62 = new java.util.stream.BaseStream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[] objEntryBaseStreamArray63 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[]) baseStreamArray62;
        java.util.stream.BaseStream[] baseStreamArray65 = new java.util.stream.BaseStream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[] objEntryBaseStreamArray66 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[]) baseStreamArray65;
        java.util.stream.BaseStream[] baseStreamArray68 = new java.util.stream.BaseStream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[] objEntryBaseStreamArray69 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[]) baseStreamArray68;
        java.util.stream.BaseStream[] baseStreamArray71 = new java.util.stream.BaseStream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[] objEntryBaseStreamArray72 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[]) baseStreamArray71;
        java.util.stream.BaseStream[] baseStreamArray74 = new java.util.stream.BaseStream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[] objEntryBaseStreamArray75 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[]) baseStreamArray74;
        java.util.stream.BaseStream[][] baseStreamArray77 = new java.util.stream.BaseStream[5][];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][] objEntryBaseStreamArray78 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][]) baseStreamArray77;
        objEntryBaseStreamArray78[0] = baseStreamArray62;
        objEntryBaseStreamArray78[1] = objEntryBaseStreamArray66;
        objEntryBaseStreamArray78[2] = objEntryBaseStreamArray69;
        objEntryBaseStreamArray78[3] = baseStreamArray71;
        objEntryBaseStreamArray78[4] = baseStreamArray74;
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][] objEntryBaseStreamArray89 = org.apache.commons.lang3.ArrayUtils.clone(objEntryBaseStreamArray78);
        java.lang.AutoCloseable[][] autoCloseableArray92 = org.apache.commons.lang3.ArrayUtils.subarray((java.lang.AutoCloseable[][]) objEntryBaseStreamArray78, 5, 4);
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][][] objEntryBaseStreamArray93 = org.apache.commons.lang3.ArrayUtils.add(objEntryBaseStreamArray58, 100, objEntryBaseStreamArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(baseStreamArray1);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray2);
        org.junit.Assert.assertNotNull(baseStreamArray4);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray5);
        org.junit.Assert.assertNotNull(baseStreamArray7);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray8);
        org.junit.Assert.assertNotNull(baseStreamArray10);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray11);
        org.junit.Assert.assertNotNull(baseStreamArray13);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray14);
        org.junit.Assert.assertNotNull(baseStreamArray16);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray17);
        org.junit.Assert.assertNotNull(baseStreamArray30);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray31);
        org.junit.Assert.assertNotNull(baseStreamArray33);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray34);
        org.junit.Assert.assertNotNull(baseStreamArray36);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray37);
        org.junit.Assert.assertNotNull(baseStreamArray39);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray40);
        org.junit.Assert.assertNotNull(baseStreamArray42);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray43);
        org.junit.Assert.assertNotNull(baseStreamArray45);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray46);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray57);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray58);
        org.junit.Assert.assertNotNull(autoCloseableArray59);
        org.junit.Assert.assertNotNull(baseStreamArray62);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray63);
        org.junit.Assert.assertNotNull(baseStreamArray65);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray66);
        org.junit.Assert.assertNotNull(baseStreamArray68);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray69);
        org.junit.Assert.assertNotNull(baseStreamArray71);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray72);
        org.junit.Assert.assertNotNull(baseStreamArray74);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray75);
        org.junit.Assert.assertNotNull(baseStreamArray77);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray78);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray89);
        org.junit.Assert.assertNotNull(autoCloseableArray92);
    }

    @Test
    public void test09783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09783");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        boolean[] booleanArray27 = new boolean[] { false, true, true, true };
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray27);
        boolean[] booleanArray33 = new boolean[] { false, false, false, false };
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray33);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray33, false);
        boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.add(booleanArray33, true);
        boolean[] booleanArray43 = new boolean[] { false, false, false, false };
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray43, false);
        java.lang.Boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray43);
        boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray33, booleanArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder0.append(booleanArray28, booleanArray33);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray33, false, (int) (byte) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
    }

    @Test
    public void test09784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09784");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean2 = objEntryList0.remove((java.lang.Object) byteArray1);
        java.util.Map.Entry<java.lang.Object, java.lang.Object> objEntry3 = null;
        boolean boolean4 = objEntryList0.add(objEntry3);
        java.lang.Short[][][] shortArray5 = new java.lang.Short[][][] {};
        java.lang.Boolean[][] booleanArray6 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray13 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray20 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray27 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray34 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray35 = new java.lang.Boolean[][] { booleanArray13, booleanArray20, booleanArray27, booleanArray34 };
        java.lang.Boolean[][] booleanArray36 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray6, booleanArray35);
        java.util.Map<java.lang.Object, java.lang.Object> objMap37 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray6);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = objMap37.entrySet();
        java.lang.Boolean[][] booleanArray39 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray46 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray53 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray60 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray67 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray68 = new java.lang.Boolean[][] { booleanArray46, booleanArray53, booleanArray60, booleanArray67 };
        java.lang.Boolean[][] booleanArray69 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray39, booleanArray68);
        java.util.Map<java.lang.Object, java.lang.Object> objMap70 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray39);
        int[] intArray73 = new int[] { 1, (byte) 1 };
        int[] intArray76 = org.apache.commons.lang3.ArrayUtils.add(intArray73, (int) (short) 0, (int) '4');
        java.lang.Object obj77 = objMap37.getOrDefault((java.lang.Object) booleanArray39, (java.lang.Object) intArray76);
        java.lang.Short[][][] shortArray78 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (java.lang.Object) intArray76);
        java.lang.Cloneable[][] cloneableArray79 = org.apache.commons.lang3.ArrayUtils.toArray((java.lang.Cloneable[][]) shortArray78);
        java.lang.Cloneable[][] cloneableArray80 = objEntryList0.toArray((java.lang.Cloneable[][]) shortArray78);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream81 = objEntryList0.parallelStream();
        boolean boolean82 = objEntryList0.isEmpty();
        boolean boolean83 = objEntryList0.isEmpty();
        java.lang.Double[] doubleArray88 = new java.lang.Double[] { 1.0d, 0.0d, 0.0d, 1.0d };
        double[] doubleArray90 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray88, (double) '#');
        double[] doubleArray91 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray88);
        double[] doubleArray94 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray91, 7, (int) (short) 1);
        boolean boolean95 = objEntryList0.remove((java.lang.Object) doubleArray94);
        java.lang.String str96 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) boolean95);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(objMap37);
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(objMap70);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[1, 1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[52, 1, 1]");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertNotNull(cloneableArray79);
        org.junit.Assert.assertNotNull(cloneableArray80);
        org.junit.Assert.assertNotNull(objEntryStream81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, 0.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[1.0, 0.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "false" + "'", str96, "false");
    }

    @Test
    public void test09785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09785");
        byte[] byteArray3 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 10, (int) (short) -1);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray3);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray3, (byte) 100);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.add(byteArray3, 100, (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test09786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09786");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray16 = new boolean[] { false, false, false, false };
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray16);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray16, false);
        java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray16);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray11, booleanArray16);
        java.lang.Boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray16);
        java.lang.Boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray16);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray23, false);
        java.lang.Object[] objArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) booleanArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean31 = equalsBuilder30.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder30.append((byte) 10, (byte) 0);
        java.lang.Boolean boolean35 = equalsBuilder30.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder30.append('a', 'a');
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(objArray26, (java.lang.Object) equalsBuilder30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder30.appendSuper(false);
        java.lang.Boolean boolean42 = equalsBuilder30.build();
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[false, false, false, false]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + false + "'", boolean35, false);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertEquals("'" + boolean42 + "' != '" + false + "'", boolean42, false);
    }

    @Test
    public void test09787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09787");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray6, (long) 11, 9);
        long[] longArray15 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.clone(longArray15);
        java.lang.Long[] longArray17 = org.apache.commons.lang3.ArrayUtils.toObject(longArray16);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.add(longArray18, (long) (short) 0);
        long[] longArray21 = org.apache.commons.lang3.ArrayUtils.clone(longArray20);
        long[] longArray27 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray28 = org.apache.commons.lang3.ArrayUtils.clone(longArray27);
        java.lang.Long[] longArray29 = org.apache.commons.lang3.ArrayUtils.toObject(longArray28);
        long[] longArray30 = org.apache.commons.lang3.ArrayUtils.clone(longArray28);
        long[] longArray32 = org.apache.commons.lang3.ArrayUtils.add(longArray30, (long) (short) 0);
        long[] longArray33 = org.apache.commons.lang3.ArrayUtils.addAll(longArray21, longArray30);
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray21);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray34);
        long[] longArray37 = org.apache.commons.lang3.ArrayUtils.add(longArray34, (-1L));
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.add(longArray34, 0, (long) 0);
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray40);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray40, (long) 13);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[0, 1, 10, 10, 100, 32]");
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[0, 1, 10, 10, 100, 32, -1]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[0, 0, 1, 10, 10, 100, 32]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[0, 0, 1, 10, 10, 100, 32]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1, 0, 0, 1, 10, 10, 100, 32]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test09788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09788");
        char[] charArray1 = new char[] { 'a' };
        java.lang.Character[] charArray2 = org.apache.commons.lang3.ArrayUtils.toObject(charArray1);
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray1);
        java.lang.Character[] charArray9 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray9, 'a');
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray11, 'a', (-1));
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray1, charArray11);
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray11);
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.subarray(charArray16, (int) '4', 2);
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.subarray(charArray19, 1, 1);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
    }

    @Test
    public void test09789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09789");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.Set<java.lang.Object> objSet33 = objMap31.keySet();
        boolean[] booleanArray38 = new boolean[] { false, false, false, false };
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray38);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray38, false);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.add(booleanArray38, true);
        boolean[] booleanArray48 = new boolean[] { false, false, false, false };
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray48);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray48, false);
        java.lang.Boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray48);
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray38, booleanArray48);
        java.lang.Boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray48);
        boolean boolean55 = objMap31.containsValue((java.lang.Object) booleanArray48);
        double[] doubleArray59 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray59);
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.add(doubleArray59, (double) (byte) 10);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray62, (double) 10.0f);
        double[] doubleArray68 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray68);
        double[] doubleArray71 = org.apache.commons.lang3.ArrayUtils.add(doubleArray68, (double) (byte) 10);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray68, (double) 0L, 0);
        double[] doubleArray75 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray68);
        int int78 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray68, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray62, doubleArray68);
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray79);
        double[] doubleArray81 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray79);
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray81);
        int int85 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray81, (double) (byte) -1, 7);
        double[] doubleArray88 = org.apache.commons.lang3.ArrayUtils.add(doubleArray81, 2, (double) 6);
        double[] doubleArray89 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray81);
        boolean boolean90 = objMap31.containsValue((java.lang.Object) doubleArray89);
        double[] doubleArray91 = null;
        boolean boolean92 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray89, doubleArray91);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[0.0, 10.0, 6.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test09790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09790");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        boolean[] booleanArray27 = new boolean[] { false, true, true, true };
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray27);
        boolean[] booleanArray33 = new boolean[] { false, false, false, false };
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray33);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray33, false);
        boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.add(booleanArray33, true);
        boolean[] booleanArray43 = new boolean[] { false, false, false, false };
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray43, false);
        java.lang.Boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray43);
        boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray33, booleanArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder0.append(booleanArray28, booleanArray33);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray33);
        int int53 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray33, true, 4);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray33);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray33);
        int int58 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray33, true, (int) (byte) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
    }

    @Test
    public void test09791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09791");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        java.lang.Boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY;
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray9);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) booleanArray10);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) charArray8, (java.lang.Object[]) booleanArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray13);
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.add(charArray13, '#');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), " 44a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), " 44a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[ , 4, 4, a, 4, #]");
    }

    @Test
    public void test09792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09792");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.clone(floatArray6);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.clone(floatArray11);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray12, (float) 4);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray12, (float) (byte) -1);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray12, (float) (short) 1);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(floatArray12, (float) ' ');
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray12, (int) (byte) 1, 2);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.clone(floatArray23);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[1.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[1.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[1.0]");
    }

    @Test
    public void test09793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09793");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray7);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        int[] intArray22 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.clone(intArray22);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.addAll(intArray7, intArray22);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, (int) ' ');
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray22, 1);
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.remove(intArray22, 0);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray22, 0, (int) (byte) 10);
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.subarray(intArray22, 9, (-1));
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(intArray38, (int) ' ');
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, -1, -1, 0, 97, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 3 + "'", int35 == 3);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test09794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09794");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((byte) 100, (byte) 1);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder0.append((float) 1, (float) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder0.append((int) (byte) 0, 13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder29.append((short) (byte) -1, (short) (byte) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder32);
    }

    @Test
    public void test09795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09795");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 1 };
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray6);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray6);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray6, (short) (byte) 100);
        short[] shortArray11 = new short[] {};
        java.lang.Short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray11);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray10, shortArray11);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray13, (short) 0);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray15, (short) 1, (int) (byte) 100);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray4, shortArray15);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.add(shortArray19, 9, (short) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 9, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[1]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1, 1]");
    }

    @Test
    public void test09796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09796");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(intArray4, (int) (byte) 1);
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(intArray13, (int) (byte) -1);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.addAll(intArray4, intArray13);
        int[] intArray19 = org.apache.commons.lang3.ArrayUtils.add(intArray17, (int) (byte) 100);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray17);
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray17, (int) (short) 100);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, -1, -1, 0, 100, -1, -1, 0, 100]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, -1, -1, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
    }

    @Test
    public void test09797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09797");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        java.lang.Character[] charArray21 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, 'a');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.clone(charArray24);
        java.lang.Character[] charArray31 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray31, 'a');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.add(charArray33, '#');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.remove(charArray33, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.append(charArray25, charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder38.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder38.appendSuper(true);
        boolean boolean43 = equalsBuilder38.isEquals();
        byte[] byteArray47 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int50 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray47, (byte) 10, (int) (short) -1);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray47);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(byteArray47, (byte) -1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder55.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean59 = equalsBuilder58.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder58.append((byte) 10, (byte) 0);
        byte[] byteArray66 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray66, (byte) 10, (int) (short) -1);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray66);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray66, (byte) 1, (int) ' ');
        byte[] byteArray80 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray80);
        int int83 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray80, (byte) 10);
        byte[] byteArray84 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray66, byteArray80);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.contains(byteArray84, (byte) 1);
        java.lang.Byte[] byteArray88 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray89 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray88);
        byte[] byteArray91 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray88, (byte) 0);
        boolean boolean92 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray91);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder62.append(byteArray84, byteArray91);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder38.append(byteArray47, byteArray91);
        java.lang.Boolean boolean95 = equalsBuilder94.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder94.append((byte) -1, (byte) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[10, 0, 0]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 4 + "'", int83 == 4);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[1]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertEquals("'" + boolean95 + "' != '" + false + "'", boolean95, false);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test09798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09798");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 10 };
        int[] intArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2, (int) (byte) 10);
        java.lang.Byte[] byteArray9 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append((java.lang.Object[]) intArray2, (java.lang.Object[]) byteArray9);
        long[] longArray18 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray19 = org.apache.commons.lang3.ArrayUtils.clone(longArray18);
        java.lang.Long[] longArray20 = org.apache.commons.lang3.ArrayUtils.toObject(longArray19);
        long[] longArray26 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray27 = org.apache.commons.lang3.ArrayUtils.clone(longArray26);
        java.lang.Long[] longArray28 = org.apache.commons.lang3.ArrayUtils.toObject(longArray27);
        long[] longArray29 = org.apache.commons.lang3.ArrayUtils.clone(longArray27);
        long[] longArray30 = org.apache.commons.lang3.ArrayUtils.addAll(longArray19, longArray29);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray19);
        long[] longArray37 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.clone(longArray37);
        java.lang.Long[] longArray39 = org.apache.commons.lang3.ArrayUtils.toObject(longArray38);
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.clone(longArray38);
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.add(longArray40, (long) (short) 0);
        long[] longArray43 = org.apache.commons.lang3.ArrayUtils.clone(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        java.lang.Long[] longArray51 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        long[] longArray52 = org.apache.commons.lang3.ArrayUtils.clone(longArray50);
        long[] longArray54 = org.apache.commons.lang3.ArrayUtils.add(longArray52, (long) (short) 0);
        long[] longArray55 = org.apache.commons.lang3.ArrayUtils.addAll(longArray43, longArray52);
        long[] longArray58 = org.apache.commons.lang3.ArrayUtils.subarray(longArray43, (int) (short) -1, (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder0.append(longArray19, longArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder0.append((byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder0.appendSuper(true);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[1, 10, 10, 100, 32]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
    }

    @Test
    public void test09799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09799");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray24 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray24);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray24, (double) (byte) 10);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) 10.0f);
        double[] doubleArray33 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray33);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, (double) (byte) 10);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, (double) 0L, 0);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray33);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray33, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray27, doubleArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder19.append(doubleArray20, doubleArray33);
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray46);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.add(byteArray48, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder45.append(byteArray46, byteArray48);
        double[] doubleArray55 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray55);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.add(doubleArray55, (double) (byte) 10);
        double[] doubleArray62 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray62);
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.add(doubleArray62, (double) (byte) 10);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray65, (double) 10.0f);
        double[] doubleArray71 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray71);
        double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.add(doubleArray71, (double) (byte) 10);
        int int77 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray71, (double) 0L, 0);
        double[] doubleArray78 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray71);
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray71, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray65, doubleArray71);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray82);
        double[] doubleArray86 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray82, 0, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder51.append(doubleArray58, doubleArray82);
        equalsBuilder51.reset();
        boolean boolean89 = equalsBuilder51.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test09800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09800");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        java.lang.Short[] shortArray5 = new java.lang.Short[] { (short) 1 };
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        boolean[] booleanArray13 = new boolean[] { false, false, false, false };
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray13, false);
        java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray13);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray13);
        java.lang.Boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray13);
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) 1 };
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray21);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21, (short) (byte) 100);
        short[] shortArray26 = new short[] {};
        java.lang.Short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray26);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray25, shortArray26);
        float[] floatArray31 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(floatArray31, (float) 0);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.add(floatArray31, 10.0f);
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        boolean boolean39 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray25, (java.lang.Object) floatArray37, false);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray19, (java.lang.Object[]) floatArray37);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray5, (java.lang.Object[]) floatArray37);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray37, (java.lang.Object) 1, 0);
        java.lang.Float[] floatArray48 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f };
        java.lang.Float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder0.append((java.lang.Object[]) floatArray37, (java.lang.Object[]) floatArray49);
        java.lang.Boolean boolean51 = equalsBuilder50.build();
        short[] shortArray52 = null;
        java.lang.Short[] shortArray54 = new java.lang.Short[] { (short) 1 };
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray54);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray54);
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray54, (short) (byte) 100);
        short[] shortArray59 = new short[] {};
        java.lang.Short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray58, shortArray59);
        short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray61, (short) 0);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray63, (int) ' ', 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder50.append(shortArray52, shortArray66);
        java.lang.Boolean boolean68 = equalsBuilder67.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertEquals("'" + boolean51 + "' != '" + false + "'", boolean51, false);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[1]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[1]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[1]");
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[1]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertEquals("'" + boolean68 + "' != '" + false + "'", boolean68, false);
    }

    @Test
    public void test09801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09801");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 10, (byte) 0);
        java.lang.Boolean boolean8 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder3.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder11.append(true, false);
        float[] floatArray18 = new float[] { (short) 100, 0, 10 };
        float[] floatArray21 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray21);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(floatArray21, (float) 0);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.add(floatArray21, 10.0f);
        float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray18, floatArray21);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray21);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(floatArray21, (float) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray21);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(floatArray21, (float) (byte) 1);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray21, (float) 4);
        java.lang.Float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray36);
        float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray37, (float) 'a');
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray39, (float) 5);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder14.append(floatArray21, floatArray39);
        java.lang.Character[] charArray48 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray48, ' ');
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray50);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray50);
        java.lang.Character[] charArray58 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray58, ' ');
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray60);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray50, charArray60);
        java.lang.Character[] charArray68 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray68, ' ');
        char[] charArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray70);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray71);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray50, charArray71);
        char[] charArray75 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray50, ' ');
        java.lang.Character[] charArray77 = new java.lang.Character[] { '#' };
        char[] charArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray77, ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder14.append(charArray75, charArray79);
        equalsBuilder14.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "4a44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "4a44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[4, a, 4, 4]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[#]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
    }

    @Test
    public void test09802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09802");
        int[] intArray3 = new int[] { '#', (byte) -1, (short) 0 };
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.subarray(intArray3, (int) '#', (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder7.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        long[] longArray23 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.clone(longArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder10.append(longArray17, longArray23);
        boolean[] booleanArray30 = new boolean[] { false, false, false, false };
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray30);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray30, false);
        java.lang.Boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray30);
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray30);
        java.lang.Boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray30);
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray36);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.add(booleanArray37, 0, true);
        boolean[] booleanArray45 = new boolean[] { false, false, false, false };
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray45);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray45, false);
        java.lang.Boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray45);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray45, true, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder10.append(booleanArray37, booleanArray45);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.String[] strArray58 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray59 = org.apache.commons.lang3.ArrayUtils.addAll(strArray54, strArray58);
        java.lang.String[] strArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray54);
        java.lang.CharSequence[] charSequenceArray61 = org.apache.commons.lang3.ArrayUtils.clone((java.lang.CharSequence[]) strArray60);
        boolean boolean62 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) intArray6, (java.lang.Object) booleanArray45, strArray60);
        java.lang.String[] strArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray60);
        java.lang.String[] strArray64 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray60);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, -1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[true, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(charSequenceArray61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
    }

    @Test
    public void test09803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09803");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray7);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        int[] intArray22 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.clone(intArray22);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.addAll(intArray7, intArray22);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray25);
        java.lang.Integer[] intArray27 = org.apache.commons.lang3.ArrayUtils.toObject(intArray25);
        java.lang.Integer[] intArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray27);
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray28);
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray28, 8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder32.append((double) (byte) 1, (double) (byte) 0);
        equalsBuilder35.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder35.append((byte) 100, (byte) -1);
        int[] intArray40 = new int[] {};
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.add(intArray40, 0, 100);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray43);
        int[] intArray45 = org.apache.commons.lang3.ArrayUtils.clone(intArray43);
        int[] intArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray43);
        int[] intArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray43);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray43, (int) ' ');
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray43);
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { 4, 4, (-1), 0 };
        java.lang.Integer[] intArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray55);
        boolean[] booleanArray61 = new boolean[] { false, false, false, false };
        boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray61);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray61, false);
        java.lang.Boolean[] booleanArray65 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray61);
        int int67 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray56, (java.lang.Object) booleanArray65, (int) '#');
        int[] intArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray56);
        int[] intArray71 = org.apache.commons.lang3.ArrayUtils.add(intArray68, 3, (int) (byte) 100);
        int[] intArray72 = org.apache.commons.lang3.ArrayUtils.clone(intArray71);
        int[] intArray73 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder39.append(intArray43, intArray71);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray31, intArray43);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray31);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, -1, -1, 100, 97, 0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, -1, -1, 100, 97, 0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, -1, -1, 100, 97, 0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[4, 4, -1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[4, 4, -1, 100, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[4, 4, -1, 100, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[4, 4, -1, 100, 0]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test09804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09804");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        objMap31.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = objMap31.entrySet();
        int int41 = objEntrySet40.size();
        java.util.Spliterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySpliterator42 = objEntrySet40.spliterator();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor43 = objEntrySet40.iterator();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream44 = objEntrySet40.parallelStream();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(objEntrySpliterator42);
        org.junit.Assert.assertNotNull(objEntryItor43);
        org.junit.Assert.assertNotNull(objEntryStream44);
    }

    @Test
    public void test09805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09805");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.String[] strArray9 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray10 = org.apache.commons.lang3.ArrayUtils.addAll(strArray5, strArray9);
        java.lang.String[] strArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray5);
        java.lang.Character[] charArray17 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17, ' ');
        java.lang.Character[] charArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((java.lang.Object[]) strArray5, (java.lang.Object[]) charArray20);
        java.lang.Character[] charArray27 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray27, 'a');
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.add(charArray29, '#');
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.subarray(charArray29, (int) (byte) -1, (int) '#');
        java.lang.Character[] charArray40 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray40);
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray40, 'a');
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.clone(charArray43);
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.addAll(charArray29, charArray43);
        java.lang.Character[] charArray46 = org.apache.commons.lang3.ArrayUtils.toObject(charArray29);
        org.apache.commons.lang3.ArrayUtils arrayUtils47 = new org.apache.commons.lang3.ArrayUtils();
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray48 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils47 };
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray50 = org.apache.commons.lang3.ArrayUtils.remove(arrayUtilsArray48, (int) (short) 0);
        java.lang.Character[] charArray56 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray56, ' ');
        char[] charArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.String[] strArray64 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray65 = org.apache.commons.lang3.ArrayUtils.addAll(strArray60, strArray64);
        boolean boolean66 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) arrayUtilsArray48, (java.lang.Object) charArray58, strArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder3.append(charArray29, charArray58);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.contains(charArray58, ' ');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertNotNull(arrayUtilsArray48);
        org.junit.Assert.assertNotNull(arrayUtilsArray50);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test09806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09806");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray13 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray13);
        java.lang.Long[] longArray15 = org.apache.commons.lang3.ArrayUtils.toObject(longArray14);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.clone(longArray14);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray16);
        int[] intArray22 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.clone(intArray22);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        boolean boolean26 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray16, (java.lang.Object) intArray24, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray36 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray37 = org.apache.commons.lang3.ArrayUtils.clone(longArray36);
        long[] longArray43 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.clone(longArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder30.append(longArray37, longArray43);
        long[] longArray48 = org.apache.commons.lang3.ArrayUtils.add(longArray37, (int) (byte) 0, (long) 2);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.add(longArray48, (long) 2);
        long[] longArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray48, (long) (short) 100);
        long[] longArray53 = org.apache.commons.lang3.ArrayUtils.addAll(longArray16, longArray48);
        java.lang.Long[] longArray54 = org.apache.commons.lang3.ArrayUtils.toObject(longArray48);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[2, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[2, 32, 100, 10, 10, 1, 2]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[2, 32, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[32, 100, 10, 10, 1, 2, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray54);
    }

    @Test
    public void test09807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09807");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 1 };
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray6);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray6, (short) 10);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray4, shortArray9);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray10, (short) 100, 3);
        java.lang.Short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray10);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1, 1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(shortArray14);
    }

    @Test
    public void test09808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09808");
        byte[] byteArray3 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 10, (int) (short) -1);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray3);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray3, (byte) 100);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray3);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 0);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 1);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test09809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09809");
        int[] intArray0 = new int[] {};
        int[] intArray3 = org.apache.commons.lang3.ArrayUtils.add(intArray0, 0, 100);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray3);
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray3);
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray3);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray3);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray3, (int) ' ');
        int[] intArray11 = org.apache.commons.lang3.ArrayUtils.add(intArray3, 2);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(intArray3, (int) (short) 100);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[100]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[100, 2]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test09810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09810");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) 0);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, 10.0f);
        java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray11 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray11);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray12);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) floatArray8, (java.lang.Object) floatArray12);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray8, (float) 13);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.remove(floatArray16, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 9, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 1.0]");
    }

    @Test
    public void test09811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09811");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append((double) (byte) 100, (double) 100.0f);
        java.lang.String str42 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) equalsBuilder37, "{-1.0,1.0,3.0,0.0}");
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
    }

    @Test
    public void test09812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09812");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        int[] intArray39 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.clone(intArray39);
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.add(intArray39, (int) 'a');
        int[] intArray47 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.clone(intArray47);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray48);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray42, intArray48);
        boolean boolean51 = objEntrySet32.remove((java.lang.Object) intArray42);
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.subarray(intArray42, 10, (int) (byte) 10);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray54, (int) '#');
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.clone(intArray54);
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray57);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
    }

    @Test
    public void test09813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09813");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray8, (short) 0);
        java.lang.Short[] shortArray12 = new java.lang.Short[] { (short) 1 };
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray12);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12, (short) (byte) 100);
        short[] shortArray17 = new short[] {};
        java.lang.Short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray17);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray16, shortArray17);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray16, 4, (-1));
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray10, shortArray22);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray23);
        java.lang.Short[] shortArray26 = new java.lang.Short[] { (short) 1 };
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray26);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray26, (short) 10);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray29, 7, (int) 'a');
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray29, (short) 1);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray23, shortArray29);
        long[] longArray40 = new long[] { 10L, 10, (short) 0, '4' };
        long[] longArray45 = new long[] { 10L, 10, (short) 0, '4' };
        long[] longArray50 = new long[] { 10L, 10, (short) 0, '4' };
        long[] longArray55 = new long[] { 10L, 10, (short) 0, '4' };
        long[] longArray60 = new long[] { 10L, 10, (short) 0, '4' };
        long[] longArray65 = new long[] { 10L, 10, (short) 0, '4' };
        long[][] longArray66 = new long[][] { longArray40, longArray45, longArray50, longArray55, longArray60, longArray65 };
        long[][] longArray67 = org.apache.commons.lang3.ArrayUtils.clone(longArray66);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) shortArray23, (java.lang.Object) longArray67);
        int int70 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray23, (short) (byte) 100);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[1]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[1]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[10, 10, 0, 52]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[10, 10, 0, 52]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[10, 10, 0, 52]");
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[10, 10, 0, 52]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[10, 10, 0, 52]");
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[10, 10, 0, 52]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
    }

    @Test
    public void test09814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09814");
        int[] intArray0 = new int[] {};
        int[] intArray3 = org.apache.commons.lang3.ArrayUtils.add(intArray0, 0, 100);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray3);
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray3);
        int[] intArray10 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray11 = org.apache.commons.lang3.ArrayUtils.clone(intArray10);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.add(intArray10, (int) 'a');
        int[] intArray18 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray19 = org.apache.commons.lang3.ArrayUtils.clone(intArray18);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray19);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray13, intArray19);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray13);
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray13);
        int[] intArray28 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.clone(intArray28);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray28);
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.addAll(intArray13, intArray28);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray3, intArray13);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.add(intArray3, (int) (short) 10);
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.add(intArray34, 6);
        java.lang.Integer[] intArray37 = org.apache.commons.lang3.ArrayUtils.toObject(intArray36);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray39 = org.apache.commons.lang3.ArrayUtils.remove(intArray36, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[100]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, -1, -1, 0, 97, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 10, 6]");
        org.junit.Assert.assertNotNull(intArray37);
    }

    @Test
    public void test09815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09815");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray6);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray6);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) (byte) 1);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, (float) (short) 1);
        float[] floatArray23 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray23);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(floatArray23, (float) 0);
        float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray6, floatArray23);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.remove(floatArray6, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 1.0, -1.0, 1.0]");
    }

    @Test
    public void test09816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09816");
        char[] charArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray3 = org.apache.commons.lang3.ArrayUtils.add(charArray0, 2, '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09817");
        float[] floatArray6 = new float[] { 10.0f, 100, (short) -1, (short) 0, 100L, (short) 10 };
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray6);
        float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray7, (float) 0L);
        java.lang.Float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray9);
        java.lang.Float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray9);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray11, 10.0f);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray13, (float) 3, (int) (byte) 10);
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        java.lang.Float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray17);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[10.0, 100.0, -1.0, 0.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[10.0, 100.0, -1.0, 0.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[10.0, 100.0, -1.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[10.0, 100.0, -1.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertNotNull(floatArray18);
    }

    @Test
    public void test09818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09818");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray16 = new boolean[] { false, false, false, false };
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray16);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray16, false);
        java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray16);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray11, booleanArray16);
        java.lang.Boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray16);
        java.lang.Boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray16);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) booleanArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray29 = new double[] {};
        double[] doubleArray33 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray33);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, (double) (byte) 10);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, (double) 0L, 0);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray33);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray33, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder25.append(doubleArray29, doubleArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder25.append((byte) 100, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append('a', '4');
        int[] intArray53 = new int[] { 1, (byte) 1 };
        int[] intArray56 = org.apache.commons.lang3.ArrayUtils.add(intArray53, (int) (short) 0, (int) '4');
        int[] intArray60 = new int[] { 'a', 0, 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder50.append(intArray53, intArray60);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) booleanArray23, (java.lang.Object) intArray53);
        boolean[] booleanArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[1, 1]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[52, 1, 1]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 0, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, false, false, false]");
    }

    @Test
    public void test09819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09819");
        java.lang.Byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray0);
        byte[] byteArray2 = null;
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray1, byteArray2);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray1, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray10 = new double[] {};
        double[] doubleArray14 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray14);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, (double) (byte) 10);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, (double) 0L, 0);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray14);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder6.append(doubleArray10, doubleArray14);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray30 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray30);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.add(doubleArray30, (double) (byte) 10);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray33, (double) 10.0f);
        double[] doubleArray39 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray39);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.add(doubleArray39, (double) (byte) 10);
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 0L, 0);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray39);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray39, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray33, doubleArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder25.append(doubleArray26, doubleArray39);
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray52);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.add(byteArray54, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder51.append(byteArray52, byteArray54);
        byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray52);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray58);
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray1, byteArray58);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.add(byteArray60, (byte) 0);
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray62, 2, 8);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
    }

    @Test
    public void test09820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09820");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder37.appendSuper(true);
        float[] floatArray42 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray42);
        java.lang.Float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray43);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray43);
        float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.add(floatArray45, 0.0f);
        float[] floatArray50 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray50);
        float[] floatArray54 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray54);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(floatArray54, (float) 0);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray50, floatArray54);
        float[] floatArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray50);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray50);
        java.lang.Float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray61);
        float[] floatArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray62, (float) 'a');
        float[] floatArray68 = new float[] { 1L, 100L, 100 };
        int int71 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray68, (float) (-1L), (int) (short) 100);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray64, floatArray68);
        float[] floatArray73 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray50, floatArray68);
        float[] floatArray76 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray68, (int) ' ', (int) (byte) 100);
        float[] floatArray78 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray68, (float) 10L);
        int int81 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray68, (float) 6, (int) 'a');
        int int84 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray68, (float) (byte) 10, 0);
        float[] floatArray85 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder39.append(floatArray45, floatArray85);
        equalsBuilder86.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray59), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[]");
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray73), "[-1.0, 1.0, 1.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[]");
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray78), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder86);
    }

    @Test
    public void test09821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09821");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (short) 0);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray10);
        long[] longArray17 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.clone(longArray17);
        java.lang.Long[] longArray19 = org.apache.commons.lang3.ArrayUtils.toObject(longArray18);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.clone(longArray18);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray20, (long) (short) 0);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.addAll(longArray11, longArray20);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray11, (long) ' ', (int) ' ');
        org.apache.commons.lang3.ArrayUtils.reverse(longArray11);
        java.lang.Long[] longArray28 = org.apache.commons.lang3.ArrayUtils.toObject(longArray11);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray11, (long) 2);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[0, 1, 10, 10, 100, 32]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test09822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09822");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        boolean boolean35 = objEntrySet32.isEmpty();
        java.lang.Object[] objArray36 = objEntrySet32.toArray();
        java.util.Map<java.lang.Object, java.lang.Object> objMap37 = org.apache.commons.lang3.ArrayUtils.toMap(objArray36);
        int[] intArray42 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.clone(intArray42);
        int[] intArray45 = org.apache.commons.lang3.ArrayUtils.add(intArray42, (int) 'a');
        int[] intArray50 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray51 = org.apache.commons.lang3.ArrayUtils.clone(intArray50);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray51);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray45, intArray51);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray51);
        int[] intArray56 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray51, 0);
        java.lang.Integer[] intArray57 = org.apache.commons.lang3.ArrayUtils.toObject(intArray51);
        int[] intArray59 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray51, 11);
        java.lang.Object obj60 = null;
        java.lang.Object obj61 = objMap37.put((java.lang.Object) intArray59, obj60);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = objMap37.entrySet();
        java.lang.Character[] charArray68 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray68, ' ');
        char[] charArray72 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray68, '#');
        java.lang.Character[] charArray78 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray78);
        char[] charArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray78, 'a');
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray72, charArray81);
        char[] charArray85 = org.apache.commons.lang3.ArrayUtils.subarray(charArray81, 5, 3);
        int int88 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray81, '4', (int) (short) 10);
        char[] charArray89 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray81);
        char[] charArray91 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray89, ' ');
        java.lang.Character[] charArray92 = org.apache.commons.lang3.ArrayUtils.toObject(charArray91);
        java.lang.Object obj93 = objMap37.remove((java.lang.Object) charArray91);
        java.util.Collection<java.lang.Object> objCollection94 = objMap37.values();
        objMap37.clear();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(objMap37);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, -1, -1, 100]");
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "4##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "4##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[4, #, #, a]");
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNotNull(objCollection94);
    }

    @Test
    public void test09823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09823");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        java.lang.Object[] objArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) booleanArray8);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[false, false, false, false]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, false]");
    }

    @Test
    public void test09824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09824");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray16 = new boolean[] { false, false, false, false };
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray16);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray16, false);
        java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray16);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray11, booleanArray16);
        java.lang.Boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray16);
        java.lang.Boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray22);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray23, false);
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray23, false);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false, false]");
    }

    @Test
    public void test09825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09825");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.Set<java.lang.Object> objSet33 = objMap31.keySet();
        boolean boolean36 = objMap31.remove((java.lang.Object) 0.0f, (java.lang.Object) '#');
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray37, (double) 10.0f);
        double[] doubleArray45 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray45);
        double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray45);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.add(doubleArray47, (double) 7);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray49);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray49);
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray51, (double) ' ', (double) 9);
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray51, (int) (short) 1, 9);
        java.lang.Double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray51);
        boolean boolean59 = objMap31.equals((java.lang.Object) doubleArray51);
        java.util.Collection<java.lang.Object> objCollection60 = objMap31.values();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 10.0, -1.0, 10.0, 7.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 10.0, 10.0, -1.0, 10.0, 7.0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, -1.0, 10.0, 7.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objCollection60);
    }

    @Test
    public void test09826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09826");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.add(charArray7, '#');
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.add(charArray9, 4, '#');
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.subarray(charArray12, 100, (int) 'a');
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.add(charArray12, ' ');
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(charArray17, ' ');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a a ###");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a a ###");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a,  , a,  , #, #, #]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a a ### ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a a ### ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a,  , a,  , #, #, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test09827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09827");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 10, (byte) 0);
        java.lang.Boolean boolean8 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder3.append((byte) 100, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder11.append((byte) 1, (byte) 100);
        int[] intArray18 = new int[] { '#', (byte) -1, (short) 0 };
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.subarray(intArray18, (int) '#', (int) (short) 0);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray18, (int) (byte) 1);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.clone(intArray18);
        int[] intArray29 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.clone(intArray29);
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.add(intArray29, (int) 'a');
        int[] intArray37 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.clone(intArray37);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray38);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray32, intArray38);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray32);
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray32);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.addAll(intArray24, intArray42);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.contains(intArray42, (int) (short) 10);
        int[] intArray47 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray42, (int) (short) 1);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray47);
        int[] intArray52 = new int[] { '#', (byte) -1, (short) 0 };
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.subarray(intArray52, (int) '#', (int) (short) 0);
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray52, (int) (byte) 1);
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.clone(intArray52);
        long[] longArray64 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray65 = org.apache.commons.lang3.ArrayUtils.clone(longArray64);
        java.lang.Long[] longArray66 = org.apache.commons.lang3.ArrayUtils.toObject(longArray65);
        long[] longArray72 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray73 = org.apache.commons.lang3.ArrayUtils.clone(longArray72);
        java.lang.Long[] longArray74 = org.apache.commons.lang3.ArrayUtils.toObject(longArray73);
        long[] longArray75 = org.apache.commons.lang3.ArrayUtils.clone(longArray73);
        long[] longArray76 = org.apache.commons.lang3.ArrayUtils.addAll(longArray65, longArray75);
        int[] intArray81 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray82 = org.apache.commons.lang3.ArrayUtils.clone(intArray81);
        int[] intArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray81);
        boolean boolean85 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray75, (java.lang.Object) intArray83, false);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray58, intArray83);
        int int88 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray83, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder11.append(intArray47, intArray83);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[35, -1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[35, -1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[35, -1, 0, 100, -1, -1, 0, 97]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[35, -1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[35, -1, 0]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertNotNull(equalsBuilder89);
    }

    @Test
    public void test09828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09828");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        java.lang.Boolean[][] booleanArray39 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray46 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray53 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray60 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray67 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray68 = new java.lang.Boolean[][] { booleanArray46, booleanArray53, booleanArray60, booleanArray67 };
        java.lang.Boolean[][] booleanArray69 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray39, booleanArray68);
        java.util.Map<java.lang.Object, java.lang.Object> objMap70 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray39);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet71 = objMap70.entrySet();
        java.util.Set<java.lang.Object> objSet72 = objMap70.keySet();
        objMap31.putAll(objMap70);
        boolean boolean74 = objMap70.isEmpty();
        objMap70.clear();
        java.util.Collection<java.lang.Object> objCollection76 = objMap70.values();
        boolean[] booleanArray81 = new boolean[] { false, false, false, false };
        boolean[] booleanArray82 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray81);
        boolean[] booleanArray83 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray82);
        boolean[] booleanArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray82);
        boolean[] booleanArray86 = new boolean[] { true };
        boolean[] booleanArray89 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray86, (int) (short) 100, (int) (short) 0);
        boolean boolean91 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray86, false);
        boolean[] booleanArray92 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray86);
        boolean[] booleanArray93 = null;
        boolean[] booleanArray94 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray92, booleanArray93);
        boolean[] booleanArray95 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray94);
        boolean boolean96 = objMap70.remove((java.lang.Object) booleanArray84, (java.lang.Object) booleanArray94);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(objMap70);
        org.junit.Assert.assertNotNull(objEntrySet71);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(objCollection76);
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray81), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray82), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray83), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray84), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray86), "[true]");
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray89), "[]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(booleanArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray92), "[true]");
        org.junit.Assert.assertNotNull(booleanArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray94), "[true]");
        org.junit.Assert.assertNotNull(booleanArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray95), "[true]");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test09829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09829");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray8, (short) 0);
        java.lang.Short[] shortArray12 = new java.lang.Short[] { (short) 1 };
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray12);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12, (short) (byte) 100);
        short[] shortArray17 = new short[] {};
        java.lang.Short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray17);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray16, shortArray17);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray16, 4, (-1));
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray10, shortArray22);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray23);
        java.lang.Short[] shortArray26 = new java.lang.Short[] { (short) 1 };
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray26);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray26, (short) 10);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray29, 7, (int) 'a');
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray29, (short) 1);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray23, shortArray29);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.clone(shortArray23);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray36, (short) (byte) 100);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray36);
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.clone(shortArray36);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[1]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[1]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[1]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[1]");
    }

    @Test
    public void test09830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09830");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        java.lang.Character[] charArray15 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray15);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, 'a');
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray9, charArray18);
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        java.lang.Character[] charArray21 = org.apache.commons.lang3.ArrayUtils.toObject(charArray20);
        double[] doubleArray25 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, (double) (byte) 10);
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0.0d);
        char[] charArray32 = new char[] { 'a' };
        java.lang.Character[] charArray33 = org.apache.commons.lang3.ArrayUtils.toObject(charArray32);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) 0.0d, (java.lang.Object) charArray32);
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.clone(charArray32);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray32, '4');
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.remove(charArray32, (int) (short) 0);
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.addAll(charArray20, charArray39);
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.clone(charArray20);
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.remove(charArray20, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray45 = org.apache.commons.lang3.ArrayUtils.remove(charArray43, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 5, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, 4, a, 4]");
    }

    @Test
    public void test09831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09831");
        int[] intArray0 = new int[] {};
        int[] intArray3 = org.apache.commons.lang3.ArrayUtils.add(intArray0, 0, 100);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray3);
        int[] intArray5 = null;
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.addAll(intArray3, intArray5);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.remove(intArray6, 0);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.clone(intArray9);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[100]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[]");
    }

    @Test
    public void test09832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09832");
        java.lang.reflect.Type[][] typeArray0 = new java.lang.reflect.Type[][] {};
        boolean boolean1 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(typeArray0);
        boolean boolean2 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(typeArray0);
        java.lang.reflect.Type[][] typeArray3 = org.apache.commons.lang3.ArrayUtils.toArray(typeArray0);
        double[] doubleArray7 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray7);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.add(doubleArray7, (double) (byte) 10);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray10, (double) 10.0f);
        double[] doubleArray16 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray16);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.add(doubleArray16, (double) (byte) 10);
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray16, (double) 0L, 0);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray16);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray10, doubleArray16);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        java.lang.Long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toObject(longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray34, longArray42);
        java.lang.Long[] longArray44 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        java.lang.Long[] longArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray44);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) doubleArray16, (java.lang.Object) longArray45);
        long[] longArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray45);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray45);
        long[] longArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray45);
        java.lang.Long[] longArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray45);
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray45);
        java.lang.reflect.Type[][] typeArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray3, (java.lang.Object) longArray51);
        long[] longArray54 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray51, (long) (short) 10);
        int int55 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) longArray54);
        org.junit.Assert.assertNotNull(typeArray0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[32, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4 + "'", int55 == 4);
    }

    @Test
    public void test09833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09833");
        java.lang.Boolean[] booleanArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY;
        boolean[] booleanArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray0, true);
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray0, false);
        java.util.Map<java.lang.Object, java.lang.Object> objMap5 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        long[] longArray11 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.clone(longArray11);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.subarray(longArray12, (int) (short) 10, (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder16.append(true, true);
        byte[] byteArray23 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray23, (byte) 10, (int) (short) -1);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray23);
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray23, (byte) 1, (int) ' ');
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray37);
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray37, (byte) 10);
        byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray23, byteArray37);
        byte[] byteArray42 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.add(byteArray42, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder16.append(byteArray23, byteArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder16.append(true, true);
        java.lang.Long[] longArray50 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray51);
        long[] longArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray51);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder54.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray63 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.clone(longArray63);
        long[] longArray70 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray71 = org.apache.commons.lang3.ArrayUtils.clone(longArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder57.append(longArray64, longArray70);
        long[] longArray75 = org.apache.commons.lang3.ArrayUtils.add(longArray64, (int) (byte) 0, (long) 2);
        long[] longArray77 = org.apache.commons.lang3.ArrayUtils.add(longArray75, (long) 2);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder16.append(longArray53, longArray75);
        long[] longArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray53);
        long[] longArray80 = org.apache.commons.lang3.ArrayUtils.addAll(longArray15, longArray53);
        long[] longArray82 = org.apache.commons.lang3.ArrayUtils.add(longArray80, (long) (byte) 1);
        long[] longArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray80);
        boolean boolean85 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray0, (java.lang.Object) longArray83, true);
        java.lang.Boolean[] booleanArray86 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[]");
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[]");
        org.junit.Assert.assertNotNull(objMap5);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 4 + "'", int40 == 4);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray70), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray71), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[2, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray77), "[2, 32, 100, 10, 10, 1, 2]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[]");
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[]");
        org.junit.Assert.assertNotNull(longArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray82), "[1]");
        org.junit.Assert.assertNotNull(longArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray83), "[]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(booleanArray86);
    }

    @Test
    public void test09834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09834");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.add(longArray6, (long) (short) 1);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray6, 100L, (int) ' ');
        java.lang.Long[] longArray15 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1, 1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
    }

    @Test
    public void test09835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09835");
        double[] doubleArray0 = null;
        double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray0, 5, (int) ' ');
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test09836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09836");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray42, longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder19.append(longArray26, longArray50);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray26);
        long[] longArray57 = org.apache.commons.lang3.ArrayUtils.subarray(longArray26, 0, (int) 'a');
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.contains(longArray57, (long) '#');
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.add(longArray57, (long) 1);
        int int63 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray61, (long) 11);
        long[] longArray66 = org.apache.commons.lang3.ArrayUtils.subarray(longArray61, (int) (byte) -1, (int) (byte) 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[32, 100, 10, 10, 1, 1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[]");
    }

    @Test
    public void test09837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09837");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray2);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray2);
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray13);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray14, (float) 'a');
        float[] floatArray20 = new float[] { 1L, 100L, 100 };
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) (-1L), (int) (short) 100);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray16, floatArray20);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray2, floatArray20);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray20, (int) ' ', (int) (byte) 100);
        float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray20, (float) 10L);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray20, (float) 6, (int) 'a');
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) (byte) 10, 0);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(floatArray20, (-1.0f));
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0, 1.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test09838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09838");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray4, (java.lang.Object) ' ');
        boolean[] booleanArray11 = new boolean[] { false, true, true, true };
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray11);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray4, (java.lang.Object) booleanArray12, (int) (byte) 10);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.add(booleanArray12, true);
        java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray16);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray17, false);
        java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray17);
        java.lang.Boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray20);
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray20);
        java.lang.Boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray20);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray23);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray23, true);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, true, true, true, true]");
    }

    @Test
    public void test09839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09839");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, false, false };
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { false, false, false };
        java.lang.Boolean[] booleanArray11 = new java.lang.Boolean[] { false, false, false };
        java.lang.Boolean[] booleanArray15 = new java.lang.Boolean[] { false, false, false };
        java.lang.Boolean[] booleanArray19 = new java.lang.Boolean[] { false, false, false };
        java.lang.Boolean[][] booleanArray20 = new java.lang.Boolean[][] { booleanArray3, booleanArray7, booleanArray11, booleanArray15, booleanArray19 };
        java.lang.Boolean[][][] booleanArray21 = new java.lang.Boolean[][][] { booleanArray20 };
        java.lang.Boolean[][][][] booleanArray22 = new java.lang.Boolean[][][][] { booleanArray21 };
        double[] doubleArray26 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray26);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.add(doubleArray26, (double) (byte) 10);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray26, (double) 0L, 0);
        double[] doubleArray36 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray36);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (double) (byte) 10);
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray36, (double) 0L, 0);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray36);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray36, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray26, doubleArray36);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray36);
        double[] doubleArray52 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray52);
        double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.add(doubleArray52, (double) (byte) 10);
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray52, 0.0d);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray52);
        double[] doubleArray62 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray62);
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.add(doubleArray62, (double) (byte) 10);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray65, (double) 10.0f);
        double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray65);
        double[] doubleArray70 = org.apache.commons.lang3.ArrayUtils.add(doubleArray68, (double) 1.0f);
        java.lang.Double[] doubleArray71 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray70);
        double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray52, doubleArray70);
        double[] doubleArray75 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray70, 1, 0);
        double[] doubleArray79 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray80 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray79);
        double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.add(doubleArray79, (double) (byte) 10);
        int int86 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray79, (double) (short) 0, (int) ' ', (double) 1L);
        int int88 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray79, (double) 'a');
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray70, doubleArray79);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray36, doubleArray79);
        java.lang.Boolean[][][][] booleanArray91 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray22, (java.lang.Object) boolean90);
        boolean boolean92 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(booleanArray91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test09840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09840");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        java.lang.Character[] charArray9 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray9, 'a');
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) floatArray2, (java.lang.Object) 'a');
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray2, (int) (byte) 1, (int) (byte) 1);
        float[] floatArray18 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(floatArray18, (float) 0);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.add(floatArray18, 10.0f);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(floatArray18, (float) (-1));
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray18);
        float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray2, floatArray18);
        java.lang.Float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray27);
        java.lang.Float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray28);
        float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray28);
        java.lang.Float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray28);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray31);
    }

    @Test
    public void test09841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09841");
        int[] intArray0 = new int[] {};
        int[] intArray1 = org.apache.commons.lang3.ArrayUtils.clone(intArray0);
        java.lang.Integer[] intArray2 = org.apache.commons.lang3.ArrayUtils.toObject(intArray1);
        java.lang.Integer[] intArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray2);
        int[] intArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2);
        int[] intArray5 = new int[] {};
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.add(intArray5, 0, 100);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray8);
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.clone(intArray8);
        int[] intArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray12);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.addAll(intArray4, intArray13);
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.clone(intArray14);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray15, 13);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[100]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[100]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100]");
    }

    @Test
    public void test09842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09842");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        byte[] byteArray7 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray7, (byte) 10, (int) (short) -1);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray7);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray7, (byte) 1, (int) ' ');
        byte[] byteArray21 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray21, (byte) 10);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray7, byteArray21);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray26, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder0.append(byteArray7, byteArray26);
        short[] shortArray31 = new short[] {};
        java.lang.Short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray31);
        int int33 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) shortArray31);
        short[] shortArray36 = new short[] { (short) 100, (short) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder0.append(shortArray31, shortArray36);
        java.lang.Double[] doubleArray42 = new java.lang.Double[] { 1.0d, 0.0d, 0.0d, 1.0d };
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray42, (double) '#');
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray42);
        boolean[] booleanArray50 = new boolean[] { false, false, false, false };
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray50);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray50, false);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.add(booleanArray50, true);
        double[] doubleArray61 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray61);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray55, (java.lang.Object) doubleArray61);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray61, 3, 1);
        int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray66, (double) (byte) 10, (double) ' ');
        double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray66, (int) (short) 0, (int) (byte) 0);
        double[] doubleArray78 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray78);
        double[] doubleArray80 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray78);
        java.lang.Object obj81 = null;
        boolean boolean83 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray80, obj81, false);
        double[] doubleArray85 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray80, (double) 3);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray72, doubleArray85);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray72, (double) (short) -1);
        int int91 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray72, (double) 7, (int) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder37.append(doubleArray45, doubleArray72);
        int int95 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray72, (double) 0, 4);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[100, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 0.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test09843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09843");
        short[] shortArray4 = new short[] { (byte) 0, (byte) 1, (short) -1, (byte) -1 };
        java.lang.Short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray4, (int) (short) 1, 100);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray8);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray8);
        java.lang.Short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray8);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray8, (short) (byte) 100);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray8);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[-1, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test09844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09844");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray8 = org.apache.commons.lang3.ArrayUtils.remove(intArray4, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 4, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test09845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09845");
        java.lang.Float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray0);
        float[] floatArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray0);
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray0);
        float[] floatArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray0);
        java.lang.Float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray0);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray5);
        org.junit.Assert.assertNotNull(floatArray0);
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[]");
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[]");
    }

    @Test
    public void test09846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09846");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) -1);
        java.lang.Character[] charArray6 = null;
        java.lang.Character[] charArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray6);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray1, (java.lang.Object[]) charArray6);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray9, (short) 10);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test09847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09847");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((long) (short) 10, (long) '#');
        java.lang.Character[] charArray14 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray14, ' ');
        java.lang.Character[] charArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray14);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17);
        java.lang.Character[] charArray19 = org.apache.commons.lang3.ArrayUtils.toObject(charArray18);
        java.lang.Character[] charArray25 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray25);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray25, 'a');
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.clone(charArray28);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray28, ' ');
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.addAll(charArray18, charArray28);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray18, '4');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray18);
        char[] charArray36 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder8.append(charArray35, charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append((long) 5, (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append('#', ' ');
        equalsBuilder40.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), " 44a44## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), " 44a44## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[ , 4, 4, a, 4, 4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
    }

    @Test
    public void test09848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09848");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray13);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray13, 0);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray13, 1, (int) (short) -1);
        java.lang.Integer[] intArray21 = org.apache.commons.lang3.ArrayUtils.toObject(intArray13);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray13);
        int int23 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) intArray13);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 4 + "'", int23 == 4);
    }

    @Test
    public void test09849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09849");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.clone(floatArray6);
        float[] floatArray15 = new float[] { (short) 100, 0, 10 };
        float[] floatArray18 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(floatArray18, (float) 0);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.add(floatArray18, 10.0f);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray15, floatArray18);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray6, floatArray15);
        float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray25, (float) (short) 100);
        float[] floatArray30 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray30);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(floatArray30, (float) 0);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.add(floatArray30, 10.0f);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray27, floatArray30);
        float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray30, 0, 0);
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray30, (float) 13);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray30, (float) 10L, (int) (byte) 1);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test09850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09850");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray24 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray24);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray24, (double) (byte) 10);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) 10.0f);
        double[] doubleArray33 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray33);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, (double) (byte) 10);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, (double) 0L, 0);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray33);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray33, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray27, doubleArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder19.append(doubleArray20, doubleArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((long) 2, 0L);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
    }

    @Test
    public void test09851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09851");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        boolean[] booleanArray14 = new boolean[] { false, false, false, false };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray14);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray14, false);
        java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray14);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray19);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray19, false);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray19, false);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray19, false, 1);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test09852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09852");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray2);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray2);
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray13);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray14, (float) 'a');
        float[] floatArray20 = new float[] { 1L, 100L, 100 };
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) (-1L), (int) (short) 100);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray16, floatArray20);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray2, floatArray20);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray20, (int) ' ', (int) (byte) 100);
        float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.clone(floatArray20);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0, 1.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[1.0, 100.0, 100.0]");
    }

    @Test
    public void test09853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09853");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) -1);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 0, 9);
        java.lang.Short[] shortArray10 = new java.lang.Short[] { (short) 1 };
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray11, (short) 10);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray11, (short) 100, (int) (byte) 1);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.clone(shortArray11);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray17, (short) 10);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray17, 9, (int) (byte) 10);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray22);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray22, (short) -1);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test09854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09854");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        java.lang.Character[] charArray10 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray10, ' ');
        java.lang.Character[] charArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray10);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray1, (java.lang.Object[]) charArray10);
        java.lang.Short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        java.lang.Character[] charArray21 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, ' ');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, '#');
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.clone(charArray25);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) shortArray1, (java.lang.Object) charArray25);
        java.lang.Character[] charArray28 = org.apache.commons.lang3.ArrayUtils.toObject(charArray25);
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28, '4');
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28, '#');
        java.lang.Character[] charArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray28);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray33);
    }

    @Test
    public void test09855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09855");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean35 = objEntryList33.remove((java.lang.Object) byteArray34);
        boolean boolean36 = objEntrySet32.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor37 = objEntrySet32.iterator();
        java.lang.Object[] objArray38 = objEntrySet32.toArray();
        boolean boolean40 = objEntrySet32.remove((java.lang.Object) '4');
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList41 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor42 = objEntryList41.iterator();
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.String[] strArray47 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray48 = org.apache.commons.lang3.ArrayUtils.addAll(strArray43, strArray47);
        java.lang.Comparable<java.lang.String>[] strComparableArray49 = objEntryList41.toArray((java.lang.Comparable<java.lang.String>[]) strArray43);
        boolean boolean50 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList41);
        objEntrySet32.clear();
        boolean boolean52 = objEntrySet32.isEmpty();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream53 = objEntrySet32.parallelStream();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream54 = objEntrySet32.parallelStream();
        int int55 = objEntrySet32.size();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEntryItor37);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objEntryItor42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strComparableArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objEntryStream53);
        org.junit.Assert.assertNotNull(objEntryStream54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test09856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09856");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        boolean[] booleanArray9 = new boolean[] { false, false, false, false };
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray9);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray9, false);
        java.lang.Boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray9);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray9);
        java.lang.Boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray9);
        java.lang.Short[] shortArray17 = new java.lang.Short[] { (short) 1 };
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray17);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray17);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray17, (short) (byte) 100);
        short[] shortArray22 = new short[] {};
        java.lang.Short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray22);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray21, shortArray22);
        float[] floatArray27 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray27);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(floatArray27, (float) 0);
        float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.add(floatArray27, 10.0f);
        java.lang.Float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray27);
        boolean boolean35 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray21, (java.lang.Object) floatArray33, false);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray15, (java.lang.Object[]) floatArray33);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray1, (java.lang.Object[]) floatArray33);
        int int40 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray33, (java.lang.Object) 1, 0);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) floatArray33);
        float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray33, (float) 8);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray33, 0.0f);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[1]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1]");
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 1.0]");
    }

    @Test
    public void test09857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09857");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray4, (java.lang.Object) ' ');
        boolean[] booleanArray11 = new boolean[] { false, true, true, true };
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray11);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray4, (java.lang.Object) booleanArray12, (int) (byte) 10);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.add(booleanArray12, true);
        java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray12);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray12);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray18, true);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test09858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09858");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        float[] floatArray15 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(floatArray15, (float) 0);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.add(floatArray15, 10.0f);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray3, floatArray15);
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) floatArray22);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray22, (float) (short) 100);
        java.lang.Float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray22);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray22, (float) 1L);
        float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray22, (float) (-1L));
        java.lang.Float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray30);
        float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray31);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 1.0]");
    }

    @Test
    public void test09859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09859");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (short) 0);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray10);
        long[] longArray17 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.clone(longArray17);
        java.lang.Long[] longArray19 = org.apache.commons.lang3.ArrayUtils.toObject(longArray18);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.clone(longArray18);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray20, (long) (short) 0);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.addAll(longArray11, longArray20);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.subarray(longArray11, (int) (short) -1, (int) '4');
        org.apache.commons.lang3.ArrayUtils.reverse(longArray26);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray26, (long) (short) -1);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray26, (long) (short) 1);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[0, 1, 10, 10, 100, 32]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
    }

    @Test
    public void test09860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09860");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f);
        double[] doubleArray12 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray12);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray12, (double) (byte) 10);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray12, (double) 0L, 0);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray12);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray6, doubleArray12);
        double[] doubleArray27 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray27);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray12, doubleArray27);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray27, 0, (int) (short) -1);
        double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray27);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.add(doubleArray27, (int) (byte) 100, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 100.0]");
    }

    @Test
    public void test09861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09861");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        byte[] byteArray7 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray7, (byte) 10, (int) (short) -1);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray7);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray7, (byte) 1, (int) ' ');
        byte[] byteArray21 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray21, (byte) 10);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray7, byteArray21);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray26, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder0.append(byteArray7, byteArray26);
        byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.add(byteArray7, 2, (byte) 100);
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray37, (byte) 10, (int) (short) -1);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray37, (byte) 10);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray37, (byte) 1);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(byteArray37, (byte) 100);
        byte[] byteArray50 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int53 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray50, (byte) 10, (int) (short) -1);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray50);
        int int57 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray50, (byte) 1, (int) ' ');
        byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray37, byteArray50);
        byte[] byteArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray37);
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray7, byteArray37);
        int int63 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray37, (byte) 0, 13);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray37);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.add(byteArray37, (int) 'a', (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0, 0, 100, 10]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[10, 0, 0]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0, 0, 10, 0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[10, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0, 0, 10, 0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
    }

    @Test
    public void test09862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09862");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray4);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4);
        float[] floatArray12 = new float[] { 1L, 100L, 100 };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray12, (float) (-1L), (int) (short) 100);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray12, (float) 'a', (int) (byte) 10);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) intArray4, (java.lang.Object) floatArray12);
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.add(intArray4, 4);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.subarray(intArray21, 100, (int) (short) 100);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray24, 6, (int) (byte) -1);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.subarray(intArray24, 100, 2);
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.subarray(intArray24, (int) 'a', (int) (short) 1);
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray24, 5);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, -1, -1, 0, 4]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test09863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09863");
        java.lang.Cloneable[] cloneableArray0 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray1 = new java.lang.Cloneable[][] { cloneableArray0 };
        java.lang.Cloneable[] cloneableArray2 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray3 = new java.lang.Cloneable[][] { cloneableArray2 };
        java.lang.Cloneable[] cloneableArray4 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray5 = new java.lang.Cloneable[][] { cloneableArray4 };
        java.lang.Cloneable[] cloneableArray6 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray7 = new java.lang.Cloneable[][] { cloneableArray6 };
        java.lang.Cloneable[] cloneableArray8 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray9 = new java.lang.Cloneable[][] { cloneableArray8 };
        java.lang.Cloneable[] cloneableArray10 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray11 = new java.lang.Cloneable[][] { cloneableArray10 };
        java.lang.Cloneable[][][] cloneableArray12 = new java.lang.Cloneable[][][] { cloneableArray1, cloneableArray3, cloneableArray5, cloneableArray7, cloneableArray9, cloneableArray11 };
        java.lang.Cloneable[] cloneableArray13 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray14 = new java.lang.Cloneable[][] { cloneableArray13 };
        java.lang.Cloneable[] cloneableArray15 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray16 = new java.lang.Cloneable[][] { cloneableArray15 };
        java.lang.Cloneable[] cloneableArray17 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray18 = new java.lang.Cloneable[][] { cloneableArray17 };
        java.lang.Cloneable[] cloneableArray19 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray20 = new java.lang.Cloneable[][] { cloneableArray19 };
        java.lang.Cloneable[] cloneableArray21 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray22 = new java.lang.Cloneable[][] { cloneableArray21 };
        java.lang.Cloneable[] cloneableArray23 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray24 = new java.lang.Cloneable[][] { cloneableArray23 };
        java.lang.Cloneable[][][] cloneableArray25 = new java.lang.Cloneable[][][] { cloneableArray14, cloneableArray16, cloneableArray18, cloneableArray20, cloneableArray22, cloneableArray24 };
        java.lang.Cloneable[][][][] cloneableArray26 = new java.lang.Cloneable[][][][] { cloneableArray12, cloneableArray25 };
        java.lang.Cloneable[] cloneableArray27 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray28 = new java.lang.Cloneable[][] { cloneableArray27 };
        java.lang.Cloneable[] cloneableArray29 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray30 = new java.lang.Cloneable[][] { cloneableArray29 };
        java.lang.Cloneable[] cloneableArray31 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray32 = new java.lang.Cloneable[][] { cloneableArray31 };
        java.lang.Cloneable[] cloneableArray33 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray34 = new java.lang.Cloneable[][] { cloneableArray33 };
        java.lang.Cloneable[] cloneableArray35 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray36 = new java.lang.Cloneable[][] { cloneableArray35 };
        java.lang.Cloneable[] cloneableArray37 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray38 = new java.lang.Cloneable[][] { cloneableArray37 };
        java.lang.Cloneable[][][] cloneableArray39 = new java.lang.Cloneable[][][] { cloneableArray28, cloneableArray30, cloneableArray32, cloneableArray34, cloneableArray36, cloneableArray38 };
        java.lang.Cloneable[] cloneableArray40 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray41 = new java.lang.Cloneable[][] { cloneableArray40 };
        java.lang.Cloneable[] cloneableArray42 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray43 = new java.lang.Cloneable[][] { cloneableArray42 };
        java.lang.Cloneable[] cloneableArray44 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray45 = new java.lang.Cloneable[][] { cloneableArray44 };
        java.lang.Cloneable[] cloneableArray46 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray47 = new java.lang.Cloneable[][] { cloneableArray46 };
        java.lang.Cloneable[] cloneableArray48 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray49 = new java.lang.Cloneable[][] { cloneableArray48 };
        java.lang.Cloneable[] cloneableArray50 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray51 = new java.lang.Cloneable[][] { cloneableArray50 };
        java.lang.Cloneable[][][] cloneableArray52 = new java.lang.Cloneable[][][] { cloneableArray41, cloneableArray43, cloneableArray45, cloneableArray47, cloneableArray49, cloneableArray51 };
        java.lang.Cloneable[][][][] cloneableArray53 = new java.lang.Cloneable[][][][] { cloneableArray39, cloneableArray52 };
        java.lang.Cloneable[] cloneableArray54 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray55 = new java.lang.Cloneable[][] { cloneableArray54 };
        java.lang.Cloneable[] cloneableArray56 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray57 = new java.lang.Cloneable[][] { cloneableArray56 };
        java.lang.Cloneable[] cloneableArray58 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray59 = new java.lang.Cloneable[][] { cloneableArray58 };
        java.lang.Cloneable[] cloneableArray60 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray61 = new java.lang.Cloneable[][] { cloneableArray60 };
        java.lang.Cloneable[] cloneableArray62 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray63 = new java.lang.Cloneable[][] { cloneableArray62 };
        java.lang.Cloneable[] cloneableArray64 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray65 = new java.lang.Cloneable[][] { cloneableArray64 };
        java.lang.Cloneable[][][] cloneableArray66 = new java.lang.Cloneable[][][] { cloneableArray55, cloneableArray57, cloneableArray59, cloneableArray61, cloneableArray63, cloneableArray65 };
        java.lang.Cloneable[] cloneableArray67 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray68 = new java.lang.Cloneable[][] { cloneableArray67 };
        java.lang.Cloneable[] cloneableArray69 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray70 = new java.lang.Cloneable[][] { cloneableArray69 };
        java.lang.Cloneable[] cloneableArray71 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray72 = new java.lang.Cloneable[][] { cloneableArray71 };
        java.lang.Cloneable[] cloneableArray73 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray74 = new java.lang.Cloneable[][] { cloneableArray73 };
        java.lang.Cloneable[] cloneableArray75 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray76 = new java.lang.Cloneable[][] { cloneableArray75 };
        java.lang.Cloneable[] cloneableArray77 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[][] cloneableArray78 = new java.lang.Cloneable[][] { cloneableArray77 };
        java.lang.Cloneable[][][] cloneableArray79 = new java.lang.Cloneable[][][] { cloneableArray68, cloneableArray70, cloneableArray72, cloneableArray74, cloneableArray76, cloneableArray78 };
        java.lang.Cloneable[][][][] cloneableArray80 = new java.lang.Cloneable[][][][] { cloneableArray66, cloneableArray79 };
        java.lang.Cloneable[][][][][] cloneableArray81 = new java.lang.Cloneable[][][][][] { cloneableArray26, cloneableArray53, cloneableArray80 };
        java.lang.Cloneable[][][][][][] cloneableArray82 = new java.lang.Cloneable[][][][][][] { cloneableArray81 };
        java.lang.Cloneable[][][][][][][] cloneableArray83 = new java.lang.Cloneable[][][][][][][] { cloneableArray82 };
        java.lang.Cloneable[][][][][][][][] cloneableArray84 = new java.lang.Cloneable[][][][][][][][] { cloneableArray83 };
        java.lang.Cloneable[][][][][][][][] cloneableArray85 = org.apache.commons.lang3.ArrayUtils.clone(cloneableArray84);
        java.lang.Cloneable[][][][][][][][] cloneableArray88 = org.apache.commons.lang3.ArrayUtils.subarray(cloneableArray84, (int) (byte) -1, (int) 'a');
        java.lang.Cloneable[][][][][][][][] cloneableArray91 = org.apache.commons.lang3.ArrayUtils.subarray(cloneableArray84, (int) 'a', 100);
        org.junit.Assert.assertNotNull(cloneableArray0);
        org.junit.Assert.assertNotNull(cloneableArray1);
        org.junit.Assert.assertNotNull(cloneableArray2);
        org.junit.Assert.assertNotNull(cloneableArray3);
        org.junit.Assert.assertNotNull(cloneableArray4);
        org.junit.Assert.assertNotNull(cloneableArray5);
        org.junit.Assert.assertNotNull(cloneableArray6);
        org.junit.Assert.assertNotNull(cloneableArray7);
        org.junit.Assert.assertNotNull(cloneableArray8);
        org.junit.Assert.assertNotNull(cloneableArray9);
        org.junit.Assert.assertNotNull(cloneableArray10);
        org.junit.Assert.assertNotNull(cloneableArray11);
        org.junit.Assert.assertNotNull(cloneableArray12);
        org.junit.Assert.assertNotNull(cloneableArray13);
        org.junit.Assert.assertNotNull(cloneableArray14);
        org.junit.Assert.assertNotNull(cloneableArray15);
        org.junit.Assert.assertNotNull(cloneableArray16);
        org.junit.Assert.assertNotNull(cloneableArray17);
        org.junit.Assert.assertNotNull(cloneableArray18);
        org.junit.Assert.assertNotNull(cloneableArray19);
        org.junit.Assert.assertNotNull(cloneableArray20);
        org.junit.Assert.assertNotNull(cloneableArray21);
        org.junit.Assert.assertNotNull(cloneableArray22);
        org.junit.Assert.assertNotNull(cloneableArray23);
        org.junit.Assert.assertNotNull(cloneableArray24);
        org.junit.Assert.assertNotNull(cloneableArray25);
        org.junit.Assert.assertNotNull(cloneableArray26);
        org.junit.Assert.assertNotNull(cloneableArray27);
        org.junit.Assert.assertNotNull(cloneableArray28);
        org.junit.Assert.assertNotNull(cloneableArray29);
        org.junit.Assert.assertNotNull(cloneableArray30);
        org.junit.Assert.assertNotNull(cloneableArray31);
        org.junit.Assert.assertNotNull(cloneableArray32);
        org.junit.Assert.assertNotNull(cloneableArray33);
        org.junit.Assert.assertNotNull(cloneableArray34);
        org.junit.Assert.assertNotNull(cloneableArray35);
        org.junit.Assert.assertNotNull(cloneableArray36);
        org.junit.Assert.assertNotNull(cloneableArray37);
        org.junit.Assert.assertNotNull(cloneableArray38);
        org.junit.Assert.assertNotNull(cloneableArray39);
        org.junit.Assert.assertNotNull(cloneableArray40);
        org.junit.Assert.assertNotNull(cloneableArray41);
        org.junit.Assert.assertNotNull(cloneableArray42);
        org.junit.Assert.assertNotNull(cloneableArray43);
        org.junit.Assert.assertNotNull(cloneableArray44);
        org.junit.Assert.assertNotNull(cloneableArray45);
        org.junit.Assert.assertNotNull(cloneableArray46);
        org.junit.Assert.assertNotNull(cloneableArray47);
        org.junit.Assert.assertNotNull(cloneableArray48);
        org.junit.Assert.assertNotNull(cloneableArray49);
        org.junit.Assert.assertNotNull(cloneableArray50);
        org.junit.Assert.assertNotNull(cloneableArray51);
        org.junit.Assert.assertNotNull(cloneableArray52);
        org.junit.Assert.assertNotNull(cloneableArray53);
        org.junit.Assert.assertNotNull(cloneableArray54);
        org.junit.Assert.assertNotNull(cloneableArray55);
        org.junit.Assert.assertNotNull(cloneableArray56);
        org.junit.Assert.assertNotNull(cloneableArray57);
        org.junit.Assert.assertNotNull(cloneableArray58);
        org.junit.Assert.assertNotNull(cloneableArray59);
        org.junit.Assert.assertNotNull(cloneableArray60);
        org.junit.Assert.assertNotNull(cloneableArray61);
        org.junit.Assert.assertNotNull(cloneableArray62);
        org.junit.Assert.assertNotNull(cloneableArray63);
        org.junit.Assert.assertNotNull(cloneableArray64);
        org.junit.Assert.assertNotNull(cloneableArray65);
        org.junit.Assert.assertNotNull(cloneableArray66);
        org.junit.Assert.assertNotNull(cloneableArray67);
        org.junit.Assert.assertNotNull(cloneableArray68);
        org.junit.Assert.assertNotNull(cloneableArray69);
        org.junit.Assert.assertNotNull(cloneableArray70);
        org.junit.Assert.assertNotNull(cloneableArray71);
        org.junit.Assert.assertNotNull(cloneableArray72);
        org.junit.Assert.assertNotNull(cloneableArray73);
        org.junit.Assert.assertNotNull(cloneableArray74);
        org.junit.Assert.assertNotNull(cloneableArray75);
        org.junit.Assert.assertNotNull(cloneableArray76);
        org.junit.Assert.assertNotNull(cloneableArray77);
        org.junit.Assert.assertNotNull(cloneableArray78);
        org.junit.Assert.assertNotNull(cloneableArray79);
        org.junit.Assert.assertNotNull(cloneableArray80);
        org.junit.Assert.assertNotNull(cloneableArray81);
        org.junit.Assert.assertNotNull(cloneableArray82);
        org.junit.Assert.assertNotNull(cloneableArray83);
        org.junit.Assert.assertNotNull(cloneableArray84);
        org.junit.Assert.assertNotNull(cloneableArray85);
        org.junit.Assert.assertNotNull(cloneableArray88);
        org.junit.Assert.assertNotNull(cloneableArray91);
    }

    @Test
    public void test09864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09864");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        java.lang.Long[] longArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray1);
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray1);
        java.lang.Long[] longArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray1);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray4);
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray4, (long) 10);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(longArray7, (long) 100);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray7);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray7, (long) 8, (int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray15 = org.apache.commons.lang3.ArrayUtils.remove(longArray7, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[]");
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test09865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09865");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray4);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) (byte) 100, 4);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.add(intArray8, (int) (short) 0, (-1));
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.subarray(intArray8, (-1), (int) 'a');
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.subarray(intArray17, (int) (byte) -1, 1);
        java.lang.Boolean[][] booleanArray21 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray42 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray49 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray50 = new java.lang.Boolean[][] { booleanArray28, booleanArray35, booleanArray42, booleanArray49 };
        java.lang.Boolean[][] booleanArray51 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray21, booleanArray50);
        java.util.Map<java.lang.Object, java.lang.Object> objMap52 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray21);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = objMap52.entrySet();
        objEntrySet53.clear();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList55 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        float[] floatArray59 = new float[] { (short) 100, 0, 10 };
        float[] floatArray62 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray63 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray62);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.contains(floatArray62, (float) 0);
        float[] floatArray67 = org.apache.commons.lang3.ArrayUtils.add(floatArray62, 10.0f);
        float[] floatArray68 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray59, floatArray62);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.contains(floatArray62, (float) (byte) 10);
        boolean boolean71 = objEntryList55.equals((java.lang.Object) boolean70);
        boolean boolean72 = objEntrySet53.removeAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList55);
        int[] intArray73 = new int[] {};
        int[] intArray76 = org.apache.commons.lang3.ArrayUtils.add(intArray73, 0, 100);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray76);
        int[] intArray78 = org.apache.commons.lang3.ArrayUtils.clone(intArray76);
        int[] intArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray76);
        boolean boolean80 = objEntryList55.contains((java.lang.Object) intArray76);
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray20, intArray76);
        int int84 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray76, (int) (byte) 0, (int) '#');
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertNotNull(objMap52);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray59), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray67), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
    }

    @Test
    public void test09866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09866");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        float[] floatArray15 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(floatArray15, (float) 0);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.add(floatArray15, 10.0f);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray3, floatArray15);
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) floatArray22);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray22, (float) (short) 100);
        java.lang.Float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray22);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray22, (float) 1L);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(floatArray28, (float) 9);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test09867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09867");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray7);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray8);
        java.lang.Character[] charArray15 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, ' ');
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray17);
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.addAll(charArray8, charArray17);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.clone(charArray8);
        int[] intArray26 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.clone(intArray26);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray26);
        java.lang.Integer[] intArray29 = org.apache.commons.lang3.ArrayUtils.toObject(intArray26);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray26);
        float[] floatArray34 = new float[] { 1L, 100L, 100 };
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray34, (float) (-1L), (int) (short) 100);
        int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray34, (float) 'a', (int) (byte) 10);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) intArray26, (java.lang.Object) floatArray34);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.add(intArray26, 4);
        int[] intArray46 = org.apache.commons.lang3.ArrayUtils.subarray(intArray43, 100, (int) (short) 100);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray46, 6, (int) (byte) -1);
        int[] intArray52 = org.apache.commons.lang3.ArrayUtils.subarray(intArray46, 100, 2);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) charArray21, (java.lang.Object) intArray52);
        int[] intArray58 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray59 = org.apache.commons.lang3.ArrayUtils.clone(intArray58);
        int[] intArray61 = org.apache.commons.lang3.ArrayUtils.add(intArray58, (int) 'a');
        int[] intArray66 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray67 = org.apache.commons.lang3.ArrayUtils.clone(intArray66);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray67);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray61, intArray67);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray61);
        int[] intArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray61);
        int[] intArray76 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray77 = org.apache.commons.lang3.ArrayUtils.clone(intArray76);
        int[] intArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray76);
        int[] intArray79 = org.apache.commons.lang3.ArrayUtils.addAll(intArray61, intArray76);
        int[] intArray80 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray76);
        int[] intArray81 = new int[] {};
        int[] intArray84 = org.apache.commons.lang3.ArrayUtils.add(intArray81, 0, 100);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray84);
        java.lang.Integer[] intArray86 = org.apache.commons.lang3.ArrayUtils.toObject(intArray84);
        int[] intArray88 = org.apache.commons.lang3.ArrayUtils.add(intArray84, 7);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray88);
        int[] intArray90 = org.apache.commons.lang3.ArrayUtils.clone(intArray88);
        int[] intArray91 = org.apache.commons.lang3.ArrayUtils.addAll(intArray76, intArray88);
        boolean boolean92 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray52, intArray91);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4a44 4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4a44 4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, a, 4, 4,  , 4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, -1, -1, 0, 4]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, -1, -1, 0, 97, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[7, 100]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[7, 100]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[100, -1, -1, 0, 7, 100]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test09868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09868");
        byte[] byteArray0 = null;
        byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray0);
        byte[] byteArray5 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray5, (byte) 10, (int) (short) -1);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray5, (byte) 10);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray1, byteArray5);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray1, (byte) 0);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray1, (byte) 0);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray1, (byte) -1, (int) (byte) 0);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray1, (byte) 1, (int) '4');
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test09869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09869");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        java.lang.Short[] shortArray5 = new java.lang.Short[] { (short) 1 };
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        boolean[] booleanArray13 = new boolean[] { false, false, false, false };
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray13, false);
        java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray13);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray13);
        java.lang.Boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray13);
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) 1 };
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray21);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21, (short) (byte) 100);
        short[] shortArray26 = new short[] {};
        java.lang.Short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray26);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray25, shortArray26);
        float[] floatArray31 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(floatArray31, (float) 0);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.add(floatArray31, 10.0f);
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        boolean boolean39 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray25, (java.lang.Object) floatArray37, false);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray19, (java.lang.Object[]) floatArray37);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray5, (java.lang.Object[]) floatArray37);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray37, (java.lang.Object) 1, 0);
        java.lang.Float[] floatArray48 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f };
        java.lang.Float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder0.append((java.lang.Object[]) floatArray37, (java.lang.Object[]) floatArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder0.append((byte) 0, (byte) 1);
        boolean[] booleanArray55 = new boolean[] { true };
        boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray55, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray58, (int) '#', (int) '4');
        boolean[] booleanArray66 = new boolean[] { false, false, false, false };
        boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray66);
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray67);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray68);
        boolean[] booleanArray71 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray68, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder0.append(booleanArray61, booleanArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder0.append(100.0f, (float) 5);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
    }

    @Test
    public void test09870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09870");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray42, longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder19.append(longArray26, longArray50);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray26);
        long[] longArray57 = org.apache.commons.lang3.ArrayUtils.subarray(longArray26, 0, (int) 'a');
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.contains(longArray57, (long) '#');
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.add(longArray57, (long) 1);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray61);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[32, 100, 10, 10, 1, 1]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test09871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09871");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray4, (byte) 100);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder9.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder14.append((long) (short) 10, (long) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append(true, true);
        byte[] byteArray25 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray25, (byte) 10, (int) (short) -1);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray25);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray25, (byte) 1, (int) ' ');
        byte[] byteArray39 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray39);
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray39, (byte) 10);
        byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray25, byteArray39);
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.add(byteArray44, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder18.append(byteArray25, byteArray44);
        java.lang.Byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray44);
        byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.add(byteArray50, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder14.append(byteArray44, byteArray53);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray44);
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray8);
        byte[] byteArray63 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray63);
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.clone(byteArray63);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray65);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray65);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100, 1, 100, 10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 4 + "'", int42 == 4);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-1, 100, 1, 100, 10]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test09872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09872");
        java.lang.Long[] longArray0 = null;
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0, (long) ' ');
        org.junit.Assert.assertNull(longArray2);
    }

    @Test
    public void test09873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09873");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray6);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray9, (double) 1.0f);
        java.lang.Double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray11);
        double[] doubleArray16 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray16);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.add(doubleArray16, (double) (byte) 10);
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray16, (double) 100.0f, (double) 0);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray16);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray11, doubleArray16);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
    }

    @Test
    public void test09874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09874");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 10, (byte) 0);
        java.lang.Boolean boolean8 = equalsBuilder3.build();
        boolean boolean9 = equalsBuilder3.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder11.append('a', 'a');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(equalsBuilder14);
    }

    @Test
    public void test09875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09875");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f);
        double[] doubleArray12 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray12);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray12, (double) (byte) 10);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray12, (double) 0L, 0);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray12);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray6, doubleArray12);
        java.lang.Double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray24, (double) (-1.0f));
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray26, (int) ' ', 10);
        double[] doubleArray33 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray33);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, (double) (byte) 10);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, (double) 100.0f, (double) 0);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray29, doubleArray33);
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray6, doubleArray29);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray6);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray6, (double) 'a');
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test09876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09876");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        double[] doubleArray15 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray9, (java.lang.Object) doubleArray15);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray15, 3, 1);
        java.lang.Double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray15, (double) (byte) 10);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) 1);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) 1.0f, 100);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 4 + "'", int23 == 4);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test09877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09877");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor35 = objEntryList33.iterator();
        boolean[] booleanArray40 = new boolean[] { false, false, false, false };
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray40, false);
        java.lang.Boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray40);
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray45);
        boolean boolean47 = objEntryList33.remove((java.lang.Object) booleanArray45);
        java.lang.Long[] longArray48 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray48);
        boolean boolean50 = objEntryList33.remove((java.lang.Object) longArray49);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList51 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean53 = objEntryList51.remove((java.lang.Object) byteArray52);
        boolean[] booleanArray58 = new boolean[] { false, false, false, false };
        boolean[] booleanArray59 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray58);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray58, false);
        java.lang.Boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray58);
        int int65 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray58, true, 0);
        boolean boolean66 = objEntryList51.contains((java.lang.Object) int65);
        java.lang.Object[] objArray67 = objEntryList51.toArray();
        boolean boolean68 = objEntryList33.removeAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList51);
        java.util.Map.Entry<java.lang.Object, java.lang.Object> objEntry69 = null;
        boolean boolean70 = objEntryList51.add(objEntry69);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream71 = objEntryList51.parallelStream();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEntryItor35);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(objEntryStream71);
    }

    @Test
    public void test09878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09878");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) -1, (int) (byte) -1);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) 2);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, 0.0d);
        double[] doubleArray20 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray20);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.add(doubleArray20, (double) (byte) 10);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (short) 0, (int) ' ', (double) 1L);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) 2, (int) (short) 100, (double) 10L);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray16, doubleArray20);
        double[] doubleArray36 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray36);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (double) (byte) 10);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.add(doubleArray39, 4, (double) (byte) 0);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray20, doubleArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder44.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray48 = new double[] {};
        double[] doubleArray52 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray52);
        double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.add(doubleArray52, (double) (byte) 10);
        int int58 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray52, (double) 0L, 0);
        double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray52);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray52, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder44.append(doubleArray48, doubleArray52);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray68 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray68);
        double[] doubleArray71 = org.apache.commons.lang3.ArrayUtils.add(doubleArray68, (double) (byte) 10);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray71, (double) 10.0f);
        double[] doubleArray77 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray78 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray77);
        double[] doubleArray80 = org.apache.commons.lang3.ArrayUtils.add(doubleArray77, (double) (byte) 10);
        int int83 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray77, (double) 0L, 0);
        double[] doubleArray84 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray77);
        int int87 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray77, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray88 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray71, doubleArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder63.append(doubleArray64, doubleArray77);
        boolean boolean91 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray64, (java.lang.Object) (byte) 1);
        int int94 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray64, (double) 0, (double) (byte) 10);
        boolean boolean95 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray20, doubleArray64);
        double[] doubleArray97 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray64, (double) (-1));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0, 2.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0, 2.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 100.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[]");
    }

    @Test
    public void test09879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09879");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray3 = org.apache.commons.lang3.ArrayUtils.add(intArray0, 10, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09880");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray4);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) (byte) 100, 4);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.add(intArray8, (int) (short) 0, (-1));
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray15, (int) ' ');
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test09881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09881");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 100, (byte) 0 };
        byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6);
        int int8 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) byteArray6);
        java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9, (byte) 0);
        java.lang.Byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray9);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray12, (byte) 0);
        java.lang.Byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray14);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 6 + "'", int8 == 6);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertNotNull(byteArray15);
    }

    @Test
    public void test09882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09882");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray4, (byte) 100);
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray6);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray7);
        java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray7);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9, (byte) 0);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100, 1, 100]");
    }

    @Test
    public void test09883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09883");
        int[] intArray0 = new int[] {};
        int[] intArray3 = org.apache.commons.lang3.ArrayUtils.add(intArray0, 0, 100);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray3);
        int[] intArray5 = null;
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.addAll(intArray3, intArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray6, 1);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[100]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test09884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09884");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray8, (short) 0);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray8, (short) (byte) 10);
        java.lang.Short[] shortArray14 = new java.lang.Short[] { (short) 1 };
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray15, (short) 10);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray15, (short) 100, (int) (byte) 1);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray15);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray21);
        java.lang.Short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray21);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray21, (short) 10, 5);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray8, shortArray21);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray21, (short) 1, 0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[1]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1, 1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test09885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09885");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 10 };
        int[] intArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2, (int) (byte) 10);
        java.lang.Byte[] byteArray9 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append((java.lang.Object[]) intArray2, (java.lang.Object[]) byteArray9);
        java.lang.Short[] shortArray14 = new java.lang.Short[] { (short) 1 };
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray14);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14, (short) (byte) 100);
        short[] shortArray19 = new short[] {};
        java.lang.Short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray19);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray18, shortArray19);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray21, (short) 0);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray21, (short) (byte) 10);
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray21);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray21, (short) (byte) -1);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray21, (short) 10);
        short[] shortArray35 = new short[] { (byte) 0, (byte) 1, (short) -1, (byte) -1 };
        java.lang.Short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray35);
        int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray35, (short) (byte) 1);
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray35, (short) 1, 100);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray35, (short) (byte) -1);
        java.lang.Short[] shortArray45 = new java.lang.Short[] { (short) 1 };
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray45);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45, (short) (byte) 100);
        short[] shortArray50 = new short[] {};
        java.lang.Short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray50);
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray49, shortArray50);
        short[] shortArray53 = new short[] {};
        java.lang.Short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray53);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray52, shortArray53);
        short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray35, shortArray52);
        java.lang.Short[] shortArray58 = new java.lang.Short[] { (short) 1 };
        short[] shortArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray58);
        short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray58, (short) 10);
        int int63 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray61, (short) (byte) 1);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray61, (short) -1);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray35, shortArray61);
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray61, 6, 7);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray69, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder12.append(shortArray21, shortArray69);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.remove(shortArray69, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[1]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[1]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[1]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 1, -1, -1, 1]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[1]");
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[1]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder72);
    }

    @Test
    public void test09886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09886");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f);
        double[] doubleArray12 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray12);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray12, (double) (byte) 10);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray12, (double) 0L, 0);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray12);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray6, doubleArray12);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray12, 5, 8);
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray26, (double) ' ');
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test09887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09887");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.String[] strArray9 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray10 = org.apache.commons.lang3.ArrayUtils.addAll(strArray5, strArray9);
        java.lang.String[] strArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray5);
        java.lang.Character[] charArray17 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17, ' ');
        java.lang.Character[] charArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((java.lang.Object[]) strArray5, (java.lang.Object[]) charArray20);
        java.lang.Long[] longArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray22);
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray22);
        long[] longArray27 = org.apache.commons.lang3.ArrayUtils.subarray(longArray24, (int) (short) -1, (int) '#');
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) charArray20, (java.lang.Object) (short) -1);
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20, 'a');
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20, '#');
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20);
        java.lang.Character[] charArray39 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray39, ' ');
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray39, '#');
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.clone(charArray43);
        java.lang.Character[] charArray50 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray50, ' ');
        char[] charArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray52);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray43, charArray53);
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.addAll(charArray33, charArray43);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray55);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), " 44a4 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), " 44a4 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[ , 4, 4, a, 4,  , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test09888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09888");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        objMap31.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = objMap31.entrySet();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream35 = objEntrySet34.parallelStream();
        int int36 = objEntrySet34.size();
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray37);
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray38, (double) (short) -1);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray38, (double) 0.0f);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray42, (double) 11, (double) 1.0f);
        boolean boolean46 = objEntrySet34.remove((java.lang.Object) 11);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList47 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Object[] objArray48 = objEntryList47.toArray();
        int int49 = objEntryList47.size();
        boolean boolean50 = objEntryList47.isEmpty();
        java.util.Map.Entry<java.lang.Object, java.lang.Object> objEntry51 = null;
        boolean boolean52 = objEntryList47.add(objEntry51);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean53 = objEntrySet34.addAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList47);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertNotNull(objEntryStream35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test09889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09889");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) 10);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.add(shortArray2, 1, (short) (byte) -1);
        double[] doubleArray11 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray11);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.add(doubleArray11, (double) (byte) 10);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray14, (double) 10.0f);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray14);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.add(doubleArray17, (double) 1.0f);
        boolean boolean20 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) doubleArray19);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray19);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.add(doubleArray19, (int) 'a', (double) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1, -1]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test09890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09890");
        boolean[] booleanArray4 = new boolean[] { false, true, true, true };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { 4, 4, (-1), 0 };
        java.lang.Integer[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray12);
        boolean[] booleanArray18 = new boolean[] { false, false, false, false };
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray18, false);
        java.lang.Boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray18);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray13, (java.lang.Object) booleanArray22, (int) '#');
        java.lang.Boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray22);
        java.lang.Boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray22);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray26, false);
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray7, booleanArray28);
        double[] doubleArray33 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray33);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, (double) (byte) 10);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, (double) 0L, 0);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray33);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY;
        boolean boolean42 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray33, (java.lang.Object) booleanArray41);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray41, false);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray29, booleanArray41);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray41, false);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true, true, true, false, false, false, false]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test09891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09891");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder37.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder37.append((byte) -1, (byte) 100);
        boolean[] booleanArray44 = new boolean[] { true };
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray44, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray49 = new boolean[] { true };
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray49, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray52, (int) '#', (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder42.append(booleanArray44, booleanArray52);
        double[] doubleArray60 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray60);
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.add(doubleArray60, (double) (byte) 10);
        int int66 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray60, (double) 0L, 0);
        double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray60);
        double[] doubleArray70 = new double[] { 4, 0.0f };
        int int72 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray70, (double) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder56.append(doubleArray60, doubleArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append((long) (short) 100, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder76.append((float) 6, (float) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder76.append((float) (short) 1, (float) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((long) 'a', (long) 1);
        java.lang.Boolean boolean86 = equalsBuilder85.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[4.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertEquals("'" + boolean86 + "' != '" + false + "'", boolean86, false);
    }

    @Test
    public void test09892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09892");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        byte[] byteArray38 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray38, (byte) 10, (int) (short) -1);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray38);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) 1, (int) ' ');
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray52);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray52, (byte) 10);
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray38, byteArray52);
        boolean boolean57 = objEntrySet32.equals((java.lang.Object) byteArray38);
        java.lang.Byte[] byteArray59 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray59);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray59, (byte) 0);
        byte[] byteArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray59);
        byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray38, byteArray63);
        int int66 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray38, (byte) 0);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.contains(byteArray38, (byte) 0);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4 + "'", int55 == 4);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[1]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[1]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0, 0, 10, 1]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test09893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09893");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        java.lang.Character[] charArray44 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray44, 'a');
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.add(charArray46, '#');
        boolean boolean49 = objMap31.equals((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet50 = objMap31.keySet();
        java.lang.Short[] shortArray52 = new java.lang.Short[] { (short) 1 };
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray52);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray52);
        short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray52, (short) (byte) 100);
        short[] shortArray57 = new short[] {};
        java.lang.Short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray57);
        short[] shortArray59 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray56, shortArray57);
        java.lang.Short[] shortArray61 = new java.lang.Short[] { (short) 1 };
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray61);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray61);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray61, (short) (byte) 100);
        short[] shortArray66 = new short[] {};
        java.lang.Short[] shortArray67 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray66);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray65, shortArray66);
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray59, shortArray66);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.add(shortArray69, (short) (byte) 10);
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray71, 2, (int) '4');
        java.lang.Object obj75 = objMap31.remove((java.lang.Object) 2);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet76 = objMap31.entrySet();
        java.util.Set<java.lang.Object> objSet77 = objMap31.keySet();
        short[] shortArray82 = new short[] { (byte) 0, (byte) 1, (short) -1, (byte) -1 };
        java.lang.Short[] shortArray83 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray82);
        short[] shortArray86 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray82, (int) (short) 1, 100);
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray86);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray86);
        java.lang.Short[] shortArray89 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray86);
        int int91 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray86, (short) (byte) 100);
        boolean boolean92 = objMap31.containsValue((java.lang.Object) shortArray86);
        int int95 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray86, (short) (byte) 10, 8);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a,  , a,  , #, #]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[1]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[1]");
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[1]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[1]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[1]");
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[1]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[]");
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(objEntrySet76);
        org.junit.Assert.assertNotNull(objSet77);
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[1, -1, -1]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(shortArray89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test09894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09894");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.clone(floatArray6);
        float[] floatArray14 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray14);
        float[] floatArray18 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(floatArray18, (float) 0);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray14, floatArray18);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray14);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray14);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray6, floatArray14);
        float[] floatArray28 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray28);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(floatArray28, (float) 0);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray28, (float) 10L);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray28, (float) (-1));
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.remove(floatArray28, (int) (byte) 0);
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray28, 100.0f, 2);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray25, floatArray28);
        float[] floatArray44 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray44);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.contains(floatArray44, (float) 0);
        float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.add(floatArray44, 10.0f);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.contains(floatArray44, (float) (-1));
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray44);
        float[] floatArray54 = org.apache.commons.lang3.ArrayUtils.add(floatArray44, (float) 1L);
        float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray28, floatArray54);
        float[] floatArray56 = org.apache.commons.lang3.ArrayUtils.clone(floatArray28);
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray56, (float) 10);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[1.0]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray55), "[-1.0, 1.0, -1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
    }

    @Test
    public void test09895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09895");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.add(charArray7, '#');
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.remove(charArray7, (int) (short) 0);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray11, '4');
        char[] charArray15 = new char[] { 'a' };
        java.lang.Character[] charArray16 = org.apache.commons.lang3.ArrayUtils.toObject(charArray15);
        java.lang.Character[] charArray22 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray22, ' ');
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray22, '#');
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.clone(charArray26);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray15, charArray27);
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray27, 'a');
        java.lang.Character[] charArray31 = org.apache.commons.lang3.ArrayUtils.toObject(charArray30);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray31);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray32);
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.addAll(charArray11, charArray32);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray36 = org.apache.commons.lang3.ArrayUtils.remove(charArray32, 11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 11, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 444");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 444");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, 4, 4]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), " 444");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), " 444");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[ , 4, 4, 4]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), " a # 444");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), " a # 444");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[ , a,  , #,  , 4, 4, 4]");
    }

    @Test
    public void test09896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09896");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        java.lang.Character[] charArray15 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray15);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, 'a');
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray9, charArray18);
        java.lang.Character[] charArray20 = org.apache.commons.lang3.ArrayUtils.toObject(charArray9);
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20, ' ');
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', (int) (short) 10);
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray23, '#');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test09897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09897");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.add(charArray7, '#');
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.subarray(charArray7, (int) (byte) -1, (int) '#');
        java.lang.Character[] charArray18 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray18);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray18, 'a');
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.clone(charArray21);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.addAll(charArray7, charArray21);
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray23, 'a');
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray23);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.remove(charArray26, 0);
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray28, 'a');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 9 + "'", int25 == 9);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), " a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), " a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[ , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
    }

    @Test
    public void test09898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09898");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        long[] longArray24 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray25 = org.apache.commons.lang3.ArrayUtils.clone(longArray24);
        long[] longArray28 = org.apache.commons.lang3.ArrayUtils.add(longArray25, (int) (short) 1, 0L);
        long[] longArray29 = org.apache.commons.lang3.ArrayUtils.addAll(longArray16, longArray25);
        long[] longArray32 = org.apache.commons.lang3.ArrayUtils.subarray(longArray29, 6, 10);
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray32, (-1L), (int) (short) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[32, 0, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test09899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09899");
        int[] intArray3 = new int[] { '#', (byte) -1, (short) 0 };
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.subarray(intArray3, (int) '#', (int) (short) 0);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray3, (int) (byte) 1);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.clone(intArray3);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray9, (-1));
        int[] intArray16 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.clone(intArray16);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray9, intArray16);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray9);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, -1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[35, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test09900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09900");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4);
        java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4);
        java.lang.Double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6);
        java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray7);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray9, (double) 0.0f);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray9, (double) (byte) 10);
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray9);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray14, 0.0d);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray14);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray14, (double) (byte) 1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 10.0, 0.0]");
    }

    @Test
    public void test09901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09901");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean2 = objEntryList0.remove((java.lang.Object) byteArray1);
        long[] longArray8 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.clone(longArray8);
        java.lang.Long[] longArray10 = org.apache.commons.lang3.ArrayUtils.toObject(longArray9);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.add(longArray11, (long) (short) 0);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray13, (long) '4');
        boolean boolean16 = objEntryList0.contains((java.lang.Object) int15);
        java.util.Spliterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySpliterator17 = objEntryList0.spliterator();
        int int18 = objEntryList0.size();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream19 = objEntryList0.parallelStream();
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objEntrySpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objEntryStream19);
    }

    @Test
    public void test09902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09902");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray24 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray24);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray24, (double) (byte) 10);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) 10.0f);
        double[] doubleArray33 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray33);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, (double) (byte) 10);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, (double) 0L, 0);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray33);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray33, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray27, doubleArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder19.append(doubleArray20, doubleArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((long) (short) 100, (long) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((double) 100, (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder48.append((short) (byte) 10, (short) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder54.appendSuper(true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder56);
    }

    @Test
    public void test09903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09903");
        java.lang.Boolean[] booleanArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY;
        java.lang.Boolean[] booleanArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray0);
        boolean boolean2 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) booleanArray0);
        java.lang.Boolean[] booleanArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray0);
        java.lang.Boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3);
        boolean[] booleanArray9 = new boolean[] { false, false, false, false };
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray9);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray9, false);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.add(booleanArray9, true);
        double[] doubleArray20 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20);
        boolean boolean22 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray14, (java.lang.Object) doubleArray20);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray14);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray14, 8, (-1));
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray14);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) booleanArray3, (java.lang.Object) booleanArray27);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[true, false, false, false, false]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[true, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test09904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09904");
        long[] longArray0 = null;
        java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 1 };
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2);
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray3, (short) 10);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.add(shortArray3, 1, (short) (byte) -1);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray3);
        java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray3);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder11.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray15 = new double[] {};
        double[] doubleArray19 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray19);
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.add(doubleArray19, (double) (byte) 10);
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray19, (double) 0L, 0);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray19);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray19, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder11.append(doubleArray15, doubleArray19);
        long[] longArray36 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray37 = org.apache.commons.lang3.ArrayUtils.clone(longArray36);
        java.lang.Long[] longArray38 = org.apache.commons.lang3.ArrayUtils.toObject(longArray37);
        long[] longArray44 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.clone(longArray44);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray37, longArray45);
        long[] longArray52 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray53 = org.apache.commons.lang3.ArrayUtils.clone(longArray52);
        java.lang.Long[] longArray54 = org.apache.commons.lang3.ArrayUtils.toObject(longArray53);
        long[] longArray60 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.clone(longArray60);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray53, longArray61);
        java.lang.Long[] longArray63 = org.apache.commons.lang3.ArrayUtils.toObject(longArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder30.append(longArray37, longArray61);
        int int67 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray37, (long) (-1), (int) (byte) -1);
        java.lang.Long[] longArray68 = org.apache.commons.lang3.ArrayUtils.toObject(longArray37);
        java.lang.Long[] longArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray68);
        int int71 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray10, (java.lang.Object) longArray68, 4);
        java.lang.Long[] longArray72 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray68);
        long[] longArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray68, 10L);
        long[] longArray75 = org.apache.commons.lang3.ArrayUtils.addAll(longArray0, longArray74);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1, -1]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[32, 100, 10, 10, 1]");
    }

    @Test
    public void test09905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09905");
        java.lang.Double[] doubleArray4 = new java.lang.Double[] { 1.0d, 0.0d, 0.0d, 1.0d };
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4, (double) '#');
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4);
        java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4);
        byte[] byteArray9 = null;
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray9);
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray14, (byte) 10, (int) (short) -1);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray14, (byte) 10);
        byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray9, byteArray14);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray14, (byte) 0, 3);
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray14, (byte) 1);
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray14, (byte) 1, (int) ' ');
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(byteArray14, (byte) 0);
        byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray14, (byte) 1);
        java.lang.Byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray14);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) doubleArray4, (java.lang.Object[]) byteArray33);
        double[] doubleArray38 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray38);
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.add(doubleArray38, (double) (byte) 10);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray38, (double) 0L, 0);
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray38, (double) (short) -1, (int) (byte) -1);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.add(doubleArray38, (double) 2);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.add(doubleArray49, 0.0d);
        double[] doubleArray55 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray55);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.add(doubleArray55, (double) (byte) 10);
        int int62 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray55, (double) (short) 0, (int) ' ', (double) 1L);
        int int66 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray55, (double) 2, (int) (short) 100, (double) 10L);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray51, doubleArray55);
        double[] doubleArray71 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray71);
        double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.add(doubleArray71, (double) (byte) 10);
        double[] doubleArray77 = org.apache.commons.lang3.ArrayUtils.add(doubleArray74, 4, (double) (byte) 0);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray55, doubleArray77);
        java.lang.Double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray77);
        double[] doubleArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray79, 1.0d);
        int int83 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray4, (java.lang.Object) 1.0d, (int) (byte) -1);
        char[] charArray85 = new char[] { 'a' };
        java.lang.Character[] charArray86 = org.apache.commons.lang3.ArrayUtils.toObject(charArray85);
        java.lang.Character[] charArray87 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray86);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) charArray87);
        char[] charArray90 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray87, '#');
        int int91 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray4, (java.lang.Object) charArray87);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 0.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 0.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 100.0, 2.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 10.0, 100.0, 2.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, 10.0, 100.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, 10.0, 100.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[a]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[a]");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
    }

    @Test
    public void test09906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09906");
        java.util.RandomAccess[][][][] randomAccessArray0 = new java.util.RandomAccess[][][][] {};
        java.util.RandomAccess[][][][] randomAccessArray1 = org.apache.commons.lang3.ArrayUtils.clone(randomAccessArray0);
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray2 = new org.apache.commons.lang3.ArrayUtils[] {};
        org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray3 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray2 };
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray4 = new org.apache.commons.lang3.ArrayUtils[] {};
        org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray5 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray4 };
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray6 = new org.apache.commons.lang3.ArrayUtils[] {};
        org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray7 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray6 };
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray8 = new org.apache.commons.lang3.ArrayUtils[] {};
        org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray9 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray8 };
        org.apache.commons.lang3.ArrayUtils[][][] arrayUtilsArray10 = new org.apache.commons.lang3.ArrayUtils[][][] { arrayUtilsArray3, arrayUtilsArray5, arrayUtilsArray7, arrayUtilsArray9 };
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray11 = new org.apache.commons.lang3.ArrayUtils[] {};
        org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray12 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray11 };
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray13 = new org.apache.commons.lang3.ArrayUtils[] {};
        org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray14 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray13 };
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray15 = new org.apache.commons.lang3.ArrayUtils[] {};
        org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray16 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray15 };
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray17 = new org.apache.commons.lang3.ArrayUtils[] {};
        org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray18 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray17 };
        org.apache.commons.lang3.ArrayUtils[][][] arrayUtilsArray19 = new org.apache.commons.lang3.ArrayUtils[][][] { arrayUtilsArray12, arrayUtilsArray14, arrayUtilsArray16, arrayUtilsArray18 };
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray20 = new org.apache.commons.lang3.ArrayUtils[] {};
        org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray21 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray20 };
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray22 = new org.apache.commons.lang3.ArrayUtils[] {};
        org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray23 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray22 };
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray24 = new org.apache.commons.lang3.ArrayUtils[] {};
        org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray25 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray24 };
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray26 = new org.apache.commons.lang3.ArrayUtils[] {};
        org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray27 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray26 };
        org.apache.commons.lang3.ArrayUtils[][][] arrayUtilsArray28 = new org.apache.commons.lang3.ArrayUtils[][][] { arrayUtilsArray21, arrayUtilsArray23, arrayUtilsArray25, arrayUtilsArray27 };
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray29 = new org.apache.commons.lang3.ArrayUtils[] {};
        org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray30 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray29 };
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray31 = new org.apache.commons.lang3.ArrayUtils[] {};
        org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray32 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray31 };
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray33 = new org.apache.commons.lang3.ArrayUtils[] {};
        org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray34 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray33 };
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray35 = new org.apache.commons.lang3.ArrayUtils[] {};
        org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray36 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray35 };
        org.apache.commons.lang3.ArrayUtils[][][] arrayUtilsArray37 = new org.apache.commons.lang3.ArrayUtils[][][] { arrayUtilsArray30, arrayUtilsArray32, arrayUtilsArray34, arrayUtilsArray36 };
        org.apache.commons.lang3.ArrayUtils[][][][] arrayUtilsArray38 = new org.apache.commons.lang3.ArrayUtils[][][][] { arrayUtilsArray10, arrayUtilsArray19, arrayUtilsArray28, arrayUtilsArray37 };
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(arrayUtilsArray38);
        java.lang.Short[] shortArray41 = new java.lang.Short[] { (short) 1 };
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray41);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray42, (short) 10);
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray42, (short) 100, (int) (byte) 1);
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray42);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray48);
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray48, 1, (int) (short) 0);
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray52, (short) -1);
        short[] shortArray55 = null;
        short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray52, shortArray55);
        org.apache.commons.lang3.ArrayUtils[][][][] arrayUtilsArray57 = org.apache.commons.lang3.ArrayUtils.removeElement(arrayUtilsArray38, (java.lang.Object) shortArray52);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Cloneable[] cloneableArray58 = org.apache.commons.lang3.ArrayUtils.addAll((java.lang.Cloneable[]) randomAccessArray0, (java.lang.Cloneable[]) arrayUtilsArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot store [[[Lorg.apache.commons.lang3.ArrayUtils; in an array of [[[Ljava.util.RandomAccess;");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(randomAccessArray0);
        org.junit.Assert.assertNotNull(randomAccessArray1);
        org.junit.Assert.assertNotNull(arrayUtilsArray2);
        org.junit.Assert.assertNotNull(arrayUtilsArray3);
        org.junit.Assert.assertNotNull(arrayUtilsArray4);
        org.junit.Assert.assertNotNull(arrayUtilsArray5);
        org.junit.Assert.assertNotNull(arrayUtilsArray6);
        org.junit.Assert.assertNotNull(arrayUtilsArray7);
        org.junit.Assert.assertNotNull(arrayUtilsArray8);
        org.junit.Assert.assertNotNull(arrayUtilsArray9);
        org.junit.Assert.assertNotNull(arrayUtilsArray10);
        org.junit.Assert.assertNotNull(arrayUtilsArray11);
        org.junit.Assert.assertNotNull(arrayUtilsArray12);
        org.junit.Assert.assertNotNull(arrayUtilsArray13);
        org.junit.Assert.assertNotNull(arrayUtilsArray14);
        org.junit.Assert.assertNotNull(arrayUtilsArray15);
        org.junit.Assert.assertNotNull(arrayUtilsArray16);
        org.junit.Assert.assertNotNull(arrayUtilsArray17);
        org.junit.Assert.assertNotNull(arrayUtilsArray18);
        org.junit.Assert.assertNotNull(arrayUtilsArray19);
        org.junit.Assert.assertNotNull(arrayUtilsArray20);
        org.junit.Assert.assertNotNull(arrayUtilsArray21);
        org.junit.Assert.assertNotNull(arrayUtilsArray22);
        org.junit.Assert.assertNotNull(arrayUtilsArray23);
        org.junit.Assert.assertNotNull(arrayUtilsArray24);
        org.junit.Assert.assertNotNull(arrayUtilsArray25);
        org.junit.Assert.assertNotNull(arrayUtilsArray26);
        org.junit.Assert.assertNotNull(arrayUtilsArray27);
        org.junit.Assert.assertNotNull(arrayUtilsArray28);
        org.junit.Assert.assertNotNull(arrayUtilsArray29);
        org.junit.Assert.assertNotNull(arrayUtilsArray30);
        org.junit.Assert.assertNotNull(arrayUtilsArray31);
        org.junit.Assert.assertNotNull(arrayUtilsArray32);
        org.junit.Assert.assertNotNull(arrayUtilsArray33);
        org.junit.Assert.assertNotNull(arrayUtilsArray34);
        org.junit.Assert.assertNotNull(arrayUtilsArray35);
        org.junit.Assert.assertNotNull(arrayUtilsArray36);
        org.junit.Assert.assertNotNull(arrayUtilsArray37);
        org.junit.Assert.assertNotNull(arrayUtilsArray38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[1]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[1]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[]");
        org.junit.Assert.assertNotNull(arrayUtilsArray57);
    }

    @Test
    public void test09907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09907");
        short[] shortArray4 = new short[] { (byte) 0, (byte) 1, (short) -1, (byte) -1 };
        java.lang.Short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4);
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) (byte) 1);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.clone(shortArray4);
        java.lang.Short[] shortArray10 = new java.lang.Short[] { (short) 1 };
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray11, (short) 10);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray11, 1, (short) (byte) -1);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray11);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray8, shortArray11);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray11, (short) -1, (int) '#');
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, -1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 1, -1, -1, 1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test09908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09908");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) -1, (int) (byte) -1);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) 2);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, 0.0d);
        double[] doubleArray20 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray20);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.add(doubleArray20, (double) (byte) 10);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (short) 0, (int) ' ', (double) 1L);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) 2, (int) (short) 100, (double) 10L);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray16, doubleArray20);
        double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray20, (int) (byte) 0);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 1L);
        double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray20, (double) 10);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray38);
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray38, (double) (byte) 10, (double) 1);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray38, (double) 4);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0, 2.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0, 2.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test09909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09909");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.add(charArray7, '#');
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.remove(charArray9, 2);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray11);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray12);
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.remove(charArray13, (int) (byte) 1);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.subarray(charArray13, (int) ' ', (int) (byte) -1);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(charArray13, '4');
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray13, '#');
        java.lang.String str24 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray13, "false");
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray27 = org.apache.commons.lang3.ArrayUtils.add(charArray13, (int) '4', ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{a, , ,#,#}" + "'", str24, "{a, , ,#,#}");
    }

    @Test
    public void test09910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09910");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor1 = objEntryList0.iterator();
        boolean boolean2 = objEntryList0.isEmpty();
        boolean[] booleanArray7 = new boolean[] { false, false, false, false };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray7);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray7, false);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray7);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray7);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray12);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray12);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray12, (int) (short) 1);
        java.lang.String[] strArray18 = new java.lang.String[] {};
        java.lang.String[] strArray22 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray23 = org.apache.commons.lang3.ArrayUtils.addAll(strArray18, strArray22);
        java.lang.String[] strArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray18);
        java.lang.String[] strArray25 = org.apache.commons.lang3.ArrayUtils.toArray(strArray24);
        java.util.Map<java.lang.Object, java.lang.Object> objMap26 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) strArray25);
        java.lang.String[] strArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray25);
        boolean boolean28 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) objEntryList0, (java.lang.Object) booleanArray17, strArray27);
        java.lang.Character[] charArray34 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray34, ' ');
        java.lang.Character[] charArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray34);
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray37);
        java.lang.Character[] charArray39 = org.apache.commons.lang3.ArrayUtils.toObject(charArray38);
        java.lang.Character[] charArray40 = org.apache.commons.lang3.ArrayUtils.toObject(charArray38);
        java.lang.Character[] charArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray40);
        java.lang.Character[] charArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray41);
        boolean boolean43 = objEntryList0.equals((java.lang.Object) charArray42);
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray42);
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.clone(charArray44);
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.clone(charArray44);
        org.junit.Assert.assertNotNull(objEntryItor1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false]");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(objMap26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[ , 4, 4, a, 4]");
    }

    @Test
    public void test09911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09911");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray5);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5);
        java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray7);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray7);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test09912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09912");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.add(charArray7, '#');
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.remove(charArray7, (int) (short) 0);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray11, '#');
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray11, '#', 100);
        boolean[] booleanArray21 = new boolean[] { false, false, false, false };
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray21);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray21, false);
        java.lang.Boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray21);
        java.lang.Boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        java.lang.Boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray27);
        java.lang.Character[] charArray34 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray34, 'a');
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray36, 'a', (-1));
        java.lang.Character[] charArray45 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray45, ' ');
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray45, '#');
        java.lang.Character[] charArray55 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray55);
        char[] charArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray55, 'a');
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray49, charArray58);
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.addAll(charArray36, charArray49);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) booleanArray28, (java.lang.Object) charArray49);
        char[] charArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray49);
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray62, ' ');
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray11, charArray64);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , a,  , #]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a a # 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a a # 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a,  , a,  , #,  , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test09913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09913");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        double[] doubleArray15 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray9, (java.lang.Object) doubleArray15);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray15, 3, 1);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) (byte) 0, (int) (short) 100, (double) '4');
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray15, (double) 1.0f);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.add(doubleArray15, (int) 'a', (double) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 10.0, -1.0, 10.0]");
    }

    @Test
    public void test09914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09914");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        java.lang.Character[] charArray16 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16, 'a');
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.add(charArray18, '#');
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.remove(charArray20, 2);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray9, charArray22);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.clone(charArray22);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray24);
        java.lang.Character[] charArray31 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray31, ' ');
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray33);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray33, ' ', 5);
        java.lang.Character[] charArray44 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray44, ' ');
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray44, ' ');
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray33, charArray48);
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.subarray(charArray33, 6, (int) (byte) -1);
        java.lang.Character[] charArray58 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray58, ' ');
        char[] charArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray58, '#');
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray62, '#');
        char[] charArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray62, ' ');
        char[] charArray68 = org.apache.commons.lang3.ArrayUtils.remove(charArray62, 1);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray52, charArray68);
        java.lang.Character[] charArray70 = org.apache.commons.lang3.ArrayUtils.toObject(charArray68);
        char[] charArray72 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray70, ' ');
        char[] charArray73 = org.apache.commons.lang3.ArrayUtils.addAll(charArray24, charArray72);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a,  ,  , #, #]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), " 4a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), " 4a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[ , 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), " 4a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), " 4a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[ , 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "a  ## 4a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "a  ## 4a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a,  ,  , #, #,  , 4, a, 4]");
    }

    @Test
    public void test09915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09915");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray3, 3, 0);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray3, (float) (byte) 0, 0);
        float[] floatArray21 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray21);
        float[] floatArray25 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(floatArray25, (float) 0);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray21, floatArray25);
        float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.clone(floatArray25);
        float[] floatArray34 = new float[] { (short) 100, 0, 10 };
        float[] floatArray37 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray37);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(floatArray37, (float) 0);
        float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.add(floatArray37, 10.0f);
        float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray34, floatArray37);
        float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray25, floatArray34);
        float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray44, (int) '4', 2);
        float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray47);
        int int51 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray48, (float) '#', (int) (short) 0);
        float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray48);
        float[] floatArray54 = org.apache.commons.lang3.ArrayUtils.add(floatArray48, (float) 7);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray48);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 1.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[]");
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[7.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test09916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09916");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) (short) 0, (int) ' ', (double) 1L);
        double[] doubleArray14 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray14);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, (double) (byte) 10);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, (double) 0L, 0);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray14);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, (double) 4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray31 = new double[] {};
        double[] doubleArray35 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray35);
        double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.add(doubleArray35, (double) (byte) 10);
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray35, (double) 0L, 0);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray35);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray35, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder27.append(doubleArray31, doubleArray35);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) 'a', (int) '4');
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray14, doubleArray31);
        double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, 0, (double) 100);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray14);
        double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray14);
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, 0.0d);
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) 0.0f, (int) ' ');
        int int63 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, (double) 6, (double) (-1L));
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray14, (double) (short) 100);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 100.0, 4.0]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test09917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09917");
        java.util.stream.Stream[] streamArray1 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[] objEntryStreamArray2 = (java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[]) streamArray1;
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[] objEntryStreamArray5 = org.apache.commons.lang3.ArrayUtils.subarray(objEntryStreamArray2, 100, 0);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[] objEntryStreamArray6 = org.apache.commons.lang3.ArrayUtils.clone(objEntryStreamArray2);
        java.util.stream.Stream[] streamArray8 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[] objEntryStreamArray9 = (java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[]) streamArray8;
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[] objEntryStreamArray12 = org.apache.commons.lang3.ArrayUtils.subarray(objEntryStreamArray9, 100, 0);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[] objEntryStreamArray13 = org.apache.commons.lang3.ArrayUtils.addAll(objEntryStreamArray2, objEntryStreamArray12);
        java.lang.Boolean[][] booleanArray14 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray42 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray43 = new java.lang.Boolean[][] { booleanArray21, booleanArray28, booleanArray35, booleanArray42 };
        java.lang.Boolean[][] booleanArray44 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray14, booleanArray43);
        java.util.Map<java.lang.Object, java.lang.Object> objMap45 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray14);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = objMap45.entrySet();
        java.lang.Character[] charArray52 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray52, 'a');
        char[] charArray56 = org.apache.commons.lang3.ArrayUtils.add(charArray54, '#');
        char[] charArray58 = org.apache.commons.lang3.ArrayUtils.remove(charArray54, (int) (short) 0);
        java.lang.Object obj59 = objMap45.remove((java.lang.Object) charArray58);
        float[] floatArray63 = new float[] { 1L, 100L, 100 };
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray63, (float) (-1L), (int) (short) 100);
        java.lang.Float[] floatArray67 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray63);
        java.lang.Object obj68 = null;
        java.lang.Object obj69 = objMap45.put((java.lang.Object) floatArray63, obj68);
        int int71 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) objEntryStreamArray12, (java.lang.Object) objMap45, 9);
        java.lang.Character[] charArray77 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray77, ' ');
        char[] charArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray77, '#');
        java.lang.reflect.Type[][] typeArray82 = new java.lang.reflect.Type[][] {};
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(typeArray82);
        boolean boolean84 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(typeArray82);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) charArray77, (java.lang.Object[]) typeArray82);
        boolean boolean86 = objMap45.equals((java.lang.Object) boolean85);
        java.util.Collection<java.lang.Object> objCollection87 = objMap45.values();
        org.junit.Assert.assertNotNull(streamArray1);
        org.junit.Assert.assertNotNull(objEntryStreamArray2);
        org.junit.Assert.assertNotNull(objEntryStreamArray5);
        org.junit.Assert.assertNotNull(objEntryStreamArray6);
        org.junit.Assert.assertNotNull(streamArray8);
        org.junit.Assert.assertNotNull(objEntryStreamArray9);
        org.junit.Assert.assertNotNull(objEntryStreamArray12);
        org.junit.Assert.assertNotNull(objEntryStreamArray13);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(objMap45);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[ , a,  , #]");
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objCollection87);
    }

    @Test
    public void test09918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09918");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.String[] strArray1 = new java.lang.String[] {};
        java.lang.String[] strArray2 = new java.lang.String[] {};
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.String[] strArray4 = new java.lang.String[] {};
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.String[][] strArray6 = new java.lang.String[][] { strArray0, strArray1, strArray2, strArray3, strArray4, strArray5 };
        java.lang.String[][] strArray9 = org.apache.commons.lang3.ArrayUtils.subarray(strArray6, 10, (int) 'a');
        java.lang.Comparable<java.lang.String>[][] strComparableArray10 = org.apache.commons.lang3.ArrayUtils.clone((java.lang.Comparable<java.lang.String>[][]) strArray6);
        java.lang.Short[] shortArray12 = new java.lang.Short[] { (short) 1 };
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray12);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12, (short) (byte) 100);
        short[] shortArray17 = new short[] {};
        java.lang.Short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray17);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray16, shortArray17);
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) 1 };
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray21);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21, (short) (byte) 100);
        short[] shortArray26 = new short[] {};
        java.lang.Short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray26);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray25, shortArray26);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray19, shortArray26);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.add(shortArray29, (short) (byte) 10);
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.add(shortArray29, (short) (byte) 100);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.clone(shortArray29);
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.clone(shortArray34);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) strArray6, (java.lang.Object) shortArray34);
        java.lang.CharSequence[][] charSequenceArray39 = org.apache.commons.lang3.ArrayUtils.subarray((java.lang.CharSequence[][]) strArray6, 0, 6);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strComparableArray10);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[1]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[1, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[1]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(charSequenceArray39);
    }

    @Test
    public void test09919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09919");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray3, 3, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray3);
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray3);
        double[] doubleArray21 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray21);
        double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.add(doubleArray21, (double) (byte) 10);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.add(doubleArray21, 0.0d);
        char[] charArray28 = new char[] { 'a' };
        java.lang.Character[] charArray29 = org.apache.commons.lang3.ArrayUtils.toObject(charArray28);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) 0.0d, (java.lang.Object) charArray28);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray28, 'a');
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.clone(charArray28);
        int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray28, ' ', 9);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) floatArray17, (java.lang.Object) charArray28);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[10.0, 0.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test09920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09920");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (short) 0);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray10);
        long[] longArray17 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.clone(longArray17);
        java.lang.Long[] longArray19 = org.apache.commons.lang3.ArrayUtils.toObject(longArray18);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.clone(longArray18);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray20, (long) (short) 0);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.addAll(longArray11, longArray20);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.subarray(longArray11, (int) (short) -1, (int) '4');
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray11, (long) 10, (int) (short) 0);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray11);
        long[] longArray32 = org.apache.commons.lang3.ArrayUtils.add(longArray11, (long) (byte) 1);
        long[] longArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray11);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.remove(longArray11, (int) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray40 = new double[] {};
        double[] doubleArray44 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray44);
        double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.add(doubleArray44, (double) (byte) 10);
        int int50 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray44, (double) 0L, 0);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray44);
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray44, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder36.append(doubleArray40, doubleArray44);
        long[] longArray61 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray62 = org.apache.commons.lang3.ArrayUtils.clone(longArray61);
        java.lang.Long[] longArray63 = org.apache.commons.lang3.ArrayUtils.toObject(longArray62);
        long[] longArray69 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray70 = org.apache.commons.lang3.ArrayUtils.clone(longArray69);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray62, longArray70);
        long[] longArray77 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray78 = org.apache.commons.lang3.ArrayUtils.clone(longArray77);
        java.lang.Long[] longArray79 = org.apache.commons.lang3.ArrayUtils.toObject(longArray78);
        long[] longArray85 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray86 = org.apache.commons.lang3.ArrayUtils.clone(longArray85);
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray78, longArray86);
        java.lang.Long[] longArray88 = org.apache.commons.lang3.ArrayUtils.toObject(longArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder55.append(longArray62, longArray86);
        int int92 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray62, (long) (-1), (int) (byte) -1);
        long[] longArray94 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray62, 1L);
        long[] longArray96 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray62, (long) (short) 100);
        long[] longArray97 = org.apache.commons.lang3.ArrayUtils.addAll(longArray11, longArray62);
        boolean boolean99 = org.apache.commons.lang3.ArrayUtils.contains(longArray11, 0L);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[32, 100, 10, 10, 1, 0, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[32, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray62), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray69), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray70), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(longArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray77), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertNotNull(longArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray85), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray86), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(longArray88);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(longArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray94), "[32, 100, 10, 10]");
        org.junit.Assert.assertNotNull(longArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray96), "[32, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray97), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test09921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09921");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray2);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray2);
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray13);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray14, (float) 'a');
        float[] floatArray20 = new float[] { 1L, 100L, 100 };
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) (-1L), (int) (short) 100);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray16, floatArray20);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray2, floatArray20);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray20, (int) ' ', (int) (byte) 100);
        float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray20, (float) 10L);
        float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.remove(floatArray20, (int) (short) 0);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0, 1.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[100.0, 100.0]");
    }

    @Test
    public void test09922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09922");
        byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray3 = org.apache.commons.lang3.ArrayUtils.add(byteArray0, (int) (byte) 0, (byte) 100);
        java.lang.Byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray0);
        java.io.Serializable[] serializableArray5 = org.apache.commons.lang3.ArrayUtils.clone((java.io.Serializable[]) byteArray4);
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray4);
        byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray4);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(serializableArray5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
    }

    @Test
    public void test09923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09923");
        long[] longArray0 = null;
        int int2 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray0, 1L);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test09924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09924");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.lang.Character[] charArray38 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray38, 'a');
        char[] charArray42 = org.apache.commons.lang3.ArrayUtils.add(charArray40, '#');
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.remove(charArray40, (int) (short) 0);
        java.lang.Object obj45 = objMap31.remove((java.lang.Object) charArray44);
        java.lang.Character[] charArray51 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray51, ' ');
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray51, '#');
        int int57 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray55, '#');
        char[] charArray58 = org.apache.commons.lang3.ArrayUtils.addAll(charArray44, charArray55);
        char[] charArray59 = org.apache.commons.lang3.ArrayUtils.clone(charArray58);
        java.lang.Character[] charArray65 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray65, 'a');
        int int70 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray67, 'a', (-1));
        int int72 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray67, 'a');
        java.lang.Character[] charArray78 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray80 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray78, 'a');
        char[] charArray82 = org.apache.commons.lang3.ArrayUtils.add(charArray80, '#');
        char[] charArray84 = org.apache.commons.lang3.ArrayUtils.remove(charArray82, 2);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray67, charArray82);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray59, charArray82);
        char[] charArray87 = org.apache.commons.lang3.ArrayUtils.clone(charArray82);
        java.lang.Character[] charArray88 = org.apache.commons.lang3.ArrayUtils.toObject(charArray82);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ , a,  , #]");
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), " a # 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), " a # 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[ , a,  , #,  , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), " a # 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), " a # 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[ , a,  , #,  , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[a,  ,  , #, #]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray88);
    }

    @Test
    public void test09925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09925");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray42, longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder19.append(longArray26, longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder19.append((-1), (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder19.append(100, 11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder59.append((double) (byte) 0, (double) (byte) 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder62);
    }

    @Test
    public void test09926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09926");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        equalsBuilder3.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append(false, true);
        double[] doubleArray13 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray13);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray13);
        java.lang.Object obj16 = null;
        boolean boolean18 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray15, obj16, false);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray15, (double) 3);
        boolean[] booleanArray25 = new boolean[] { false, false, false, false };
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray25, false);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.add(booleanArray25, true);
        double[] doubleArray36 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray36);
        boolean boolean38 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray30, (java.lang.Object) doubleArray36);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray36);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray36);
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray40, (double) 10);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray40);
        java.lang.Double[] doubleArray48 = new java.lang.Double[] { 1.0d, 0.0d, 0.0d, 1.0d };
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray48, (double) '#');
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray40, doubleArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder7.append(doubleArray15, doubleArray50);
        java.lang.Double[] doubleArray57 = new java.lang.Double[] { 1.0d, 0.0d, 0.0d, 1.0d };
        double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray57, (double) '#');
        double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray57);
        java.lang.Double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray57);
        int[] intArray66 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray67 = org.apache.commons.lang3.ArrayUtils.clone(intArray66);
        int[] intArray69 = org.apache.commons.lang3.ArrayUtils.add(intArray66, (int) 'a');
        int[] intArray74 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray75 = org.apache.commons.lang3.ArrayUtils.clone(intArray74);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray75);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray69, intArray75);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray69);
        int[] intArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray69);
        int[] intArray84 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray85 = org.apache.commons.lang3.ArrayUtils.clone(intArray84);
        int[] intArray86 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray84);
        int[] intArray87 = org.apache.commons.lang3.ArrayUtils.addAll(intArray69, intArray84);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray87);
        java.lang.Integer[] intArray89 = org.apache.commons.lang3.ArrayUtils.toObject(intArray87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder52.append((java.lang.Object[]) doubleArray61, (java.lang.Object[]) intArray89);
        java.lang.Integer[] intArray91 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray89);
        java.lang.Integer[] intArray92 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray91);
        int[] intArray93 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray91);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 3 + "'", int42 == 3);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 0.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 0.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 0.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, -1, -1, 100, 97, 0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, -1, -1, 100, 97, 0, -1, -1, 100]");
    }

    @Test
    public void test09927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09927");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        java.lang.Character[] charArray44 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray44, 'a');
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.add(charArray46, '#');
        boolean boolean49 = objMap31.equals((java.lang.Object) '#');
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet50 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList51 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor52 = objEntryList51.iterator();
        java.lang.String[] strArray53 = new java.lang.String[] {};
        java.lang.String[] strArray57 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray58 = org.apache.commons.lang3.ArrayUtils.addAll(strArray53, strArray57);
        java.lang.Comparable<java.lang.String>[] strComparableArray59 = objEntryList51.toArray((java.lang.Comparable<java.lang.String>[]) strArray53);
        java.lang.Object[] objArray60 = objEntryList51.toArray();
        boolean boolean61 = objEntrySet50.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList51);
        int int62 = objEntryList51.size();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream63 = objEntryList51.stream();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a,  , a,  , #, #]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objEntrySet50);
        org.junit.Assert.assertNotNull(objEntryItor52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strComparableArray59);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(objEntryStream63);
    }

    @Test
    public void test09928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09928");
        java.lang.Integer[][][][] intArray0 = new java.lang.Integer[][][][] {};
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { 11, 6, 100, 6, 7, 7 };
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { 11, 6, 100, 6, 7, 7 };
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { 11, 6, 100, 6, 7, 7 };
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 11, 6, 100, 6, 7, 7 };
        java.lang.Integer[][] intArray29 = new java.lang.Integer[][] { intArray7, intArray14, intArray21, intArray28 };
        java.lang.Integer[][][] intArray30 = new java.lang.Integer[][][] { intArray29 };
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray30);
        java.lang.Integer[][][][] intArray32 = org.apache.commons.lang3.ArrayUtils.add(intArray0, intArray30);
        java.lang.Integer[][][][] intArray33 = org.apache.commons.lang3.ArrayUtils.toArray(intArray0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray38 = new double[] {};
        double[] doubleArray42 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray42);
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.add(doubleArray42, (double) (byte) 10);
        int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray42, (double) 0L, 0);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray42);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray42, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder34.append(doubleArray38, doubleArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder34.append((byte) 100, (byte) 1);
        java.lang.String[] strArray57 = new java.lang.String[] {};
        java.lang.String[] strArray61 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray62 = org.apache.commons.lang3.ArrayUtils.addAll(strArray57, strArray61);
        java.lang.Short[] shortArray64 = new java.lang.Short[] { (short) 1 };
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray64);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder34.append((java.lang.Object[]) strArray62, (java.lang.Object[]) shortArray64);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        short[] shortArray73 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64, (short) (byte) -1);
        java.lang.String str74 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) shortArray64);
        int int76 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) intArray33, (java.lang.Object) str74, (int) '4');
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[1]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[1]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[1]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[1]");
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "{1}" + "'", str74, "{1}");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
    }

    @Test
    public void test09929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09929");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder16.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        long[] longArray32 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray33 = org.apache.commons.lang3.ArrayUtils.clone(longArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder19.append(longArray26, longArray32);
        long[] longArray37 = org.apache.commons.lang3.ArrayUtils.add(longArray26, (int) (byte) 0, (long) 2);
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder39.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray43 = new double[] {};
        double[] doubleArray47 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray47);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.add(doubleArray47, (double) (byte) 10);
        int int53 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray47, (double) 0L, 0);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray47);
        int int57 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray47, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder39.append(doubleArray43, doubleArray47);
        long[] longArray64 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray65 = org.apache.commons.lang3.ArrayUtils.clone(longArray64);
        java.lang.Long[] longArray66 = org.apache.commons.lang3.ArrayUtils.toObject(longArray65);
        long[] longArray72 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray73 = org.apache.commons.lang3.ArrayUtils.clone(longArray72);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray65, longArray73);
        long[] longArray80 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray81 = org.apache.commons.lang3.ArrayUtils.clone(longArray80);
        java.lang.Long[] longArray82 = org.apache.commons.lang3.ArrayUtils.toObject(longArray81);
        long[] longArray88 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray89 = org.apache.commons.lang3.ArrayUtils.clone(longArray88);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray81, longArray89);
        java.lang.Long[] longArray91 = org.apache.commons.lang3.ArrayUtils.toObject(longArray89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder58.append(longArray65, longArray89);
        boolean boolean93 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray65);
        int int95 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray65, (long) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder0.append(longArray38, longArray65);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder99 = equalsBuilder96.append((-1.0f), (float) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[2, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray82);
        org.junit.Assert.assertNotNull(longArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray88), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray89), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(longArray91);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(equalsBuilder99);
    }

    @Test
    public void test09930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09930");
        byte[] byteArray0 = null;
        byte[] byteArray3 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, 8, 6);
        org.junit.Assert.assertNull(byteArray3);
    }

    @Test
    public void test09931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09931");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        java.lang.Short[] shortArray10 = new java.lang.Short[] { (short) 1 };
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray10);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10, (short) (byte) 100);
        short[] shortArray15 = new short[] {};
        java.lang.Short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray15);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray14, shortArray15);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray8, shortArray15);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.add(shortArray18, (short) (byte) 10);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray20, (int) (short) 0, (int) (short) 100);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray20, (short) (byte) 1, 0);
        java.lang.Short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray20);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray27);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[1]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[1, 10]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1, 10]");
    }

    @Test
    public void test09932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09932");
        java.lang.Long[] longArray6 = new java.lang.Long[] { 100L, 100L, 0L, 10L, 1L, (-1L) };
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray6);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray6, (long) (short) -1);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray6, (long) 'a');
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.add(longArray11, (int) (short) 1, (long) (short) 0);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray11, (long) (short) 1, (int) ' ');
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[100, 100, 0, 10, 1, -1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[100, 100, 0, 10, 1, -1]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[100, 0, 100, 0, 10, 1, -1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test09933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09933");
        boolean[] booleanArray1 = new boolean[] { true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray1, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.add(booleanArray1, false);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray1, false, 3);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.add(booleanArray1, false);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray1), "[true]");
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true, false]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[true, false]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test09934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09934");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.Set<java.lang.Object> objSet33 = objMap31.keySet();
        java.util.Set<java.lang.Object> objSet34 = objMap31.keySet();
        int[] intArray38 = new int[] { 1, (byte) 1 };
        int[] intArray41 = org.apache.commons.lang3.ArrayUtils.add(intArray38, (int) (short) 0, (int) '4');
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray38);
        java.lang.Object obj43 = objMap31.put((java.lang.Object) 10.0d, (java.lang.Object) intArray42);
        java.lang.Double[][][][] doubleArray44 = null;
        float[] floatArray48 = new float[] { (short) 100, 0, 10 };
        float[] floatArray51 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray51);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.contains(floatArray51, (float) 0);
        float[] floatArray56 = org.apache.commons.lang3.ArrayUtils.add(floatArray51, 10.0f);
        float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray48, floatArray51);
        java.lang.Double[][][][] doubleArray58 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray44, (java.lang.Object) floatArray48);
        float[] floatArray61 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray61);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray61);
        float[] floatArray64 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray48, floatArray61);
        boolean boolean65 = objMap31.containsKey((java.lang.Object) floatArray64);
        java.util.Set<java.lang.Object> objSet66 = objMap31.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = objMap31.entrySet();
        boolean boolean68 = objMap31.isEmpty();
        int[] intArray69 = new int[] {};
        int[] intArray72 = org.apache.commons.lang3.ArrayUtils.add(intArray69, 0, 100);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray72);
        int[] intArray74 = org.apache.commons.lang3.ArrayUtils.clone(intArray72);
        int[] intArray76 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray74, (int) (byte) 10);
        java.lang.Object obj77 = objMap31.remove((java.lang.Object) intArray76);
        int int80 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray76, 100, 0);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[52, 1, 1]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1, 1]");
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNull(doubleArray58);
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[100.0, 0.0, 10.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100]");
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    }

    @Test
    public void test09935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09935");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder37.appendSuper(true);
        boolean[] booleanArray44 = new boolean[] { false, false, false, false };
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray44);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray44, false);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.add(booleanArray44, true);
        boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray44);
        boolean[] booleanArray55 = new boolean[] { false, false, false, false };
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray55);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder37.append(booleanArray44, booleanArray56);
        float[] floatArray60 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray60);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains(floatArray60, (float) 0);
        float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.add(floatArray60, 10.0f);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(floatArray60, (float) (-1));
        int int70 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray60, 0.0f, (int) '#');
        java.lang.Character[] charArray76 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray76, ' ');
        java.lang.Character[] charArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray76);
        char[] charArray80 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray79);
        int int83 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray80, '#', (int) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder37.append((java.lang.Object) '#', (java.lang.Object) charArray80);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder37.append(0L, (long) (byte) -1);
        boolean boolean88 = equalsBuilder87.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder87.append((byte) 1, (byte) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray65), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test09936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09936");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (short) 0);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray10);
        long[] longArray17 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.clone(longArray17);
        java.lang.Long[] longArray19 = org.apache.commons.lang3.ArrayUtils.toObject(longArray18);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.clone(longArray18);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray20, (long) (short) 0);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.addAll(longArray11, longArray20);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.subarray(longArray11, (int) (short) -1, (int) '4');
        long[] longArray29 = org.apache.commons.lang3.ArrayUtils.subarray(longArray26, (int) (byte) 10, 5);
        long[] longArray35 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray36 = org.apache.commons.lang3.ArrayUtils.clone(longArray35);
        java.lang.Long[] longArray37 = org.apache.commons.lang3.ArrayUtils.toObject(longArray36);
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.clone(longArray36);
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.add(longArray38, (long) (short) 0);
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.add(longArray38, (long) 10);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.addAll(longArray29, longArray42);
        long[] longArray46 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray42, (long) 100);
        long[] longArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray42, (long) 0);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[]");
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1, 10]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[32, 100, 10, 10, 1, 10]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[32, 10, 10, 1, 10]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[32, 100, 10, 10, 1, 10]");
    }

    @Test
    public void test09937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09937");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) 0);
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) 10L);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray2, (float) (-1));
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.remove(floatArray2, (int) (byte) 0);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray2, 100.0f, 2);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray2);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) 6);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[1.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test09938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09938");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 100.0d };
        java.lang.Double[] doubleArray3 = new java.lang.Double[] { 100.0d };
        java.lang.Double[][] doubleArray4 = new java.lang.Double[][] { doubleArray1, doubleArray3 };
        java.lang.Double[][] doubleArray7 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray4, (int) (byte) 100, (int) '4');
        java.lang.Boolean[][] booleanArray8 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray15 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray22 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray29 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray36 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray37 = new java.lang.Boolean[][] { booleanArray15, booleanArray22, booleanArray29, booleanArray36 };
        java.lang.Boolean[][] booleanArray38 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray8, booleanArray37);
        java.util.Map<java.lang.Object, java.lang.Object> objMap39 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray8);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = objMap39.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList41 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray42 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean43 = objEntryList41.remove((java.lang.Object) byteArray42);
        boolean boolean44 = objEntrySet40.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList41);
        java.lang.Object[] objArray45 = objEntryList41.toArray();
        java.lang.Double[] doubleArray46 = new java.lang.Double[] {};
        java.lang.Double[] doubleArray47 = new java.lang.Double[] {};
        java.lang.Double[][] doubleArray48 = new java.lang.Double[][] { doubleArray46, doubleArray47 };
        java.lang.Double[][] doubleArray49 = objEntryList41.toArray(doubleArray48);
        double[] doubleArray53 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray53);
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.add(doubleArray53, (double) (byte) 10);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.add(doubleArray53, 0.0d);
        java.lang.Double[][] doubleArray59 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray49, (java.lang.Object) 0.0d);
        java.lang.Double[][] doubleArray60 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray7, doubleArray49);
        boolean[] booleanArray65 = new boolean[] { false, false, false, false };
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray65);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray65, false);
        java.lang.Boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray65);
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray65);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray70, false);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray60, (java.lang.Object) booleanArray70, 3);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray70, true);
        boolean[] booleanArray78 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray70, true);
        int int81 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray78, true, 0);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNotNull(objMap39);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
    }

    @Test
    public void test09939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09939");
        java.lang.Integer[] intArray0 = null;
        java.lang.Integer[] intArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray0);
        boolean boolean2 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) intArray0);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test09940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09940");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        double[] doubleArray15 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray9, (java.lang.Object) doubleArray15);
        java.lang.Double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray18, (double) (-1.0f));
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (short) 1, 100.0d);
        double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray15, doubleArray20);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray24);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 10.0, -1.0, 10.0]");
    }

    @Test
    public void test09941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09941");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        java.lang.Character[] charArray15 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, 'a');
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.add(charArray17, '#');
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.subarray(charArray17, (int) (byte) -1, (int) '#');
        java.lang.Character[] charArray28 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray28);
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28, 'a');
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.clone(charArray31);
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.addAll(charArray17, charArray31);
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray31, 'a');
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.clone(charArray31);
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray36);
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.clone(charArray37);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray38);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray38);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray38, '4', (-1));
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, #, #,  ]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 5 + "'", int43 == 5);
    }

    @Test
    public void test09942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09942");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray9, (long) (short) 1);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray9, (long) 10);
        java.lang.Long[] longArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray9);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray14);
    }

    @Test
    public void test09943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09943");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) floatArray3);
        java.lang.Float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray3);
        boolean[] booleanArray10 = new boolean[] { false, false, false, false };
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray10, false);
        java.lang.Boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray15);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray15);
        boolean boolean19 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) floatArray5, (java.lang.Object) booleanArray15, false);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray15);
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray15, (int) (short) 1);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray15);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test09944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09944");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray13);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray13, 0);
        java.lang.Integer[] intArray18 = org.apache.commons.lang3.ArrayUtils.toObject(intArray13);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray13);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray22 = org.apache.commons.lang3.ArrayUtils.add(intArray13, 7, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test09945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09945");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        java.lang.Boolean[][] booleanArray39 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray46 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray53 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray60 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray67 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray68 = new java.lang.Boolean[][] { booleanArray46, booleanArray53, booleanArray60, booleanArray67 };
        java.lang.Boolean[][] booleanArray69 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray39, booleanArray68);
        java.util.Map<java.lang.Object, java.lang.Object> objMap70 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray39);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet71 = objMap70.entrySet();
        java.util.Set<java.lang.Object> objSet72 = objMap70.keySet();
        objMap31.putAll(objMap70);
        java.util.Collection<java.lang.Object> objCollection74 = objMap70.values();
        long[] longArray80 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray81 = org.apache.commons.lang3.ArrayUtils.clone(longArray80);
        java.lang.Long[] longArray82 = org.apache.commons.lang3.ArrayUtils.toObject(longArray81);
        long[] longArray83 = org.apache.commons.lang3.ArrayUtils.clone(longArray81);
        long[] longArray85 = org.apache.commons.lang3.ArrayUtils.add(longArray83, (long) (short) 0);
        int int87 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray83, 1L);
        java.lang.Object obj88 = null;
        boolean boolean89 = objMap70.remove((java.lang.Object) 1L, obj88);
        java.util.Collection<java.lang.Object> objCollection90 = objMap70.values();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(objMap70);
        org.junit.Assert.assertNotNull(objEntrySet71);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertNotNull(objCollection74);
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray82);
        org.junit.Assert.assertNotNull(longArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray83), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray85), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 4 + "'", int87 == 4);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(objCollection90);
    }

    @Test
    public void test09946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09946");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        objMap31.clear();
        long[] longArray44 = new long[] { (byte) -1, '4', 10, 1 };
        long[][] longArray45 = new long[][] { longArray44 };
        long[] longArray51 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray52 = org.apache.commons.lang3.ArrayUtils.clone(longArray51);
        java.lang.Long[] longArray53 = org.apache.commons.lang3.ArrayUtils.toObject(longArray52);
        long[] longArray54 = org.apache.commons.lang3.ArrayUtils.clone(longArray52);
        long[] longArray56 = org.apache.commons.lang3.ArrayUtils.add(longArray54, (long) (short) 0);
        long[] longArray57 = org.apache.commons.lang3.ArrayUtils.clone(longArray56);
        long[] longArray63 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.clone(longArray63);
        java.lang.Long[] longArray65 = org.apache.commons.lang3.ArrayUtils.toObject(longArray64);
        long[] longArray66 = org.apache.commons.lang3.ArrayUtils.clone(longArray64);
        long[] longArray68 = org.apache.commons.lang3.ArrayUtils.add(longArray66, (long) (short) 0);
        long[] longArray69 = org.apache.commons.lang3.ArrayUtils.addAll(longArray57, longArray66);
        long[] longArray71 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray57, (long) 10);
        long[][] longArray72 = org.apache.commons.lang3.ArrayUtils.add(longArray45, longArray71);
        boolean boolean73 = objMap31.equals((java.lang.Object) longArray71);
        java.util.Collection<java.lang.Object> objCollection74 = objMap31.values();
        java.lang.Character[] charArray80 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray80, 'a');
        char[] charArray84 = org.apache.commons.lang3.ArrayUtils.add(charArray82, '#');
        char[] charArray86 = org.apache.commons.lang3.ArrayUtils.remove(charArray84, 2);
        char[] charArray87 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray86);
        char[] charArray88 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray87);
        char[] charArray90 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray88, '4');
        char[] charArray92 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray88, '4');
        org.apache.commons.lang3.ArrayUtils.reverse(charArray92);
        boolean boolean94 = objMap31.containsValue((java.lang.Object) charArray92);
        java.lang.Character[] charArray95 = org.apache.commons.lang3.ArrayUtils.toObject(charArray92);
        char[] charArray97 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray95, 'a');
        char[] charArray98 = org.apache.commons.lang3.ArrayUtils.clone(charArray97);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[-1, 52, 10, 1]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray69), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray71), "[32, 100, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objCollection74);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "##  a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "##  a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[#, #,  ,  , a]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(charArray95);
        org.junit.Assert.assertNotNull(charArray97);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray97), "##  a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray97), "##  a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray97), "[#, #,  ,  , a]");
        org.junit.Assert.assertNotNull(charArray98);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray98), "##  a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray98), "##  a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray98), "[#, #,  ,  , a]");
    }

    @Test
    public void test09947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09947");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, ' ');
        java.lang.Character[] charArray18 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray18, 'a');
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.add(charArray20, '#');
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray22);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) (byte) 0, 1);
        java.lang.Character[] charArray33 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, 'a');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.add(charArray35, '#');
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.remove(charArray37, 2);
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray39);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray39);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray9, charArray39);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, ' ');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 44a4a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 44a4a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, 4, a, 4, a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[ ]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "##  a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "##  a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, #,  ,  , a]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "##  a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "##  a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, #,  ,  , a]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
    }

    @Test
    public void test09948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09948");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder37.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder37.append((byte) -1, (byte) 100);
        boolean[] booleanArray44 = new boolean[] { true };
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray44, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray49 = new boolean[] { true };
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray49, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray52, (int) '#', (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder42.append(booleanArray44, booleanArray52);
        double[] doubleArray60 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray60);
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.add(doubleArray60, (double) (byte) 10);
        int int66 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray60, (double) 0L, 0);
        double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray60);
        double[] doubleArray70 = new double[] { 4, 0.0f };
        int int72 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray70, (double) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder56.append(doubleArray60, doubleArray70);
        int int75 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray60, (double) 0.0f);
        double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray60);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[4.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[0.0, 10.0, 100.0]");
    }

    @Test
    public void test09949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09949");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder0.appendSuper(false);
        java.lang.Character[] charArray23 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray23, 'a');
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.add(charArray25, '#');
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.subarray(charArray25, (int) (byte) -1, (int) '#');
        java.lang.Character[] charArray36 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray36);
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray36, 'a');
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.clone(charArray39);
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.addAll(charArray25, charArray39);
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray39, 'a');
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.clone(charArray39);
        java.lang.Character[] charArray50 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray50, ' ');
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray50, '#');
        java.lang.Character[] charArray60 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray60);
        char[] charArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray60, 'a');
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray54, charArray63);
        int int67 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray63, 'a', (int) (byte) -1);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray39, charArray63);
        int int71 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray63, 'a', (int) (byte) 1);
        char[] charArray73 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray63, 'a');
        java.lang.Character[] charArray79 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray80 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray79);
        char[] charArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray79, 'a');
        char[] charArray83 = org.apache.commons.lang3.ArrayUtils.clone(charArray82);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.contains(charArray83, 'a');
        int int88 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray83, 'a', 5);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder0.append(charArray63, charArray83);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, #,  ]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "4## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "4## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[4, #, #,  ]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(equalsBuilder90);
    }

    @Test
    public void test09950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09950");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray13);
        boolean[] booleanArray19 = new boolean[] { false, false, false, false };
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray19);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray19, false);
        java.lang.Boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray19);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray19);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray19);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray19);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray13, booleanArray19);
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.add(booleanArray19, false);
        boolean[] booleanArray34 = new boolean[] { false, false, false, false };
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray34);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray35);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray36);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray36, false);
        boolean[] booleanArray44 = new boolean[] { false, false, false, false };
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray44);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray44, false);
        java.lang.Boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray44);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray44);
        java.lang.Boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray44);
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray50);
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray50, true);
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray53, (int) (short) 0, 100);
        boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray56, true);
        int int60 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray56, false);
        boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray36, booleanArray56);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray19, booleanArray61);
        int int64 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray19, false);
        boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.add(booleanArray19, 0, false);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray19);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 3 + "'", int39 == 3);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 3 + "'", int60 == 3);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 3 + "'", int64 == 3);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, false, false, false, false]");
    }

    @Test
    public void test09951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09951");
        short[] shortArray0 = null;
        java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 1 };
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray2);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2, (short) (byte) 100);
        short[] shortArray7 = new short[] {};
        java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray7);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray6, shortArray7);
        java.lang.Short[] shortArray11 = new java.lang.Short[] { (short) 1 };
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray11);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray11);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray11, (short) (byte) 100);
        short[] shortArray16 = new short[] {};
        java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray15, shortArray16);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray9, shortArray16);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray0, shortArray19);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(shortArray19, (short) (byte) -1);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray19, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean29 = equalsBuilder28.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder28.append((byte) 10, (byte) 0);
        java.lang.Boolean boolean33 = equalsBuilder28.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray38 = new double[] {};
        double[] doubleArray42 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray42);
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.add(doubleArray42, (double) (byte) 10);
        int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray42, (double) 0L, 0);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray42);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray42, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder34.append(doubleArray38, doubleArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder34.append((byte) 100, (byte) 1);
        java.lang.String[] strArray57 = new java.lang.String[] {};
        java.lang.String[] strArray61 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray62 = org.apache.commons.lang3.ArrayUtils.addAll(strArray57, strArray61);
        java.lang.Short[] shortArray64 = new java.lang.Short[] { (short) 1 };
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray64);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder34.append((java.lang.Object[]) strArray62, (java.lang.Object[]) shortArray64);
        java.lang.String[] strArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray62);
        java.lang.String[] strArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray70);
        boolean boolean72 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) 10, (java.lang.Object) equalsBuilder28, strArray71);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(strArray71);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[1]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + false + "'", boolean33, false);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[1]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[1]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test09952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09952");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray13);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray13, 0);
        int[] intArray22 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.clone(intArray22);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray22);
        java.lang.Integer[] intArray25 = org.apache.commons.lang3.ArrayUtils.toObject(intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        float[] floatArray30 = new float[] { 1L, 100L, 100 };
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray30, (float) (-1L), (int) (short) 100);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray30, (float) 'a', (int) (byte) 10);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) intArray22, (java.lang.Object) floatArray30);
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.add(intArray22, 4);
        int int40 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) intArray39);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray13, intArray39);
        java.lang.Integer[] intArray42 = org.apache.commons.lang3.ArrayUtils.toObject(intArray39);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray42);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, -1, -1, 0, 4]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, -1, -1, 0, 4]");
    }

    @Test
    public void test09953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09953");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        java.lang.Character[] charArray21 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, 'a');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.clone(charArray24);
        java.lang.Character[] charArray31 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray31, 'a');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.add(charArray33, '#');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.remove(charArray33, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.append(charArray25, charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder0.append((short) (byte) 10, (short) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder0.append((long) (short) 10, (long) ' ');
        boolean[] booleanArray45 = null;
        boolean[] booleanArray50 = new boolean[] { false, false, false, false };
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray50);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray50, false);
        java.lang.Boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray50);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray50);
        java.lang.Boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray50);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray56);
        boolean[] booleanArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray56, true);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray59);
        boolean[] booleanArray65 = new boolean[] { false, false, false, false };
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray65);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray65, false);
        java.lang.Boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray65);
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray65);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray65);
        boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray65);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray59, booleanArray65);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray65);
        boolean[] booleanArray77 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray65, (int) (byte) -1, (int) (short) 1);
        boolean[] booleanArray80 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray65, (int) (byte) 0, (int) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder0.append(booleanArray45, booleanArray65);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((double) (-1L), (double) 3);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray77), "[false]");
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray80), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
    }

    @Test
    public void test09954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09954");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        boolean boolean35 = objEntryList33.isEmpty();
        byte[] byteArray38 = new byte[] { (byte) 100, (byte) -1 };
        byte[] byteArray41 = new byte[] { (byte) 100, (byte) -1 };
        byte[][] byteArray42 = new byte[][] { byteArray38, byteArray41 };
        byte[] byteArray45 = new byte[] { (byte) 100, (byte) -1 };
        byte[] byteArray48 = new byte[] { (byte) 100, (byte) -1 };
        byte[][] byteArray49 = new byte[][] { byteArray45, byteArray48 };
        byte[] byteArray52 = new byte[] { (byte) 100, (byte) -1 };
        byte[] byteArray55 = new byte[] { (byte) 100, (byte) -1 };
        byte[][] byteArray56 = new byte[][] { byteArray52, byteArray55 };
        byte[][][] byteArray57 = new byte[][][] { byteArray42, byteArray49, byteArray56 };
        java.lang.Object obj58 = null;
        byte[][][] byteArray59 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray57, obj58);
        byte[][][] byteArray60 = objEntryList33.toArray(byteArray59);
        java.util.Set[] setArray62 = new java.util.Set[0];
        @SuppressWarnings("unchecked")
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[] objEntrySetArray63 = (java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[]) setArray62;
        java.util.Set[] setArray65 = new java.util.Set[0];
        @SuppressWarnings("unchecked")
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[] objEntrySetArray66 = (java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[]) setArray65;
        java.util.Set[] setArray68 = new java.util.Set[0];
        @SuppressWarnings("unchecked")
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[] objEntrySetArray69 = (java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[]) setArray68;
        java.util.Set[] setArray71 = new java.util.Set[0];
        @SuppressWarnings("unchecked")
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[] objEntrySetArray72 = (java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[]) setArray71;
        java.util.Set[] setArray74 = new java.util.Set[0];
        @SuppressWarnings("unchecked")
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[] objEntrySetArray75 = (java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[]) setArray74;
        java.util.Set[] setArray77 = new java.util.Set[0];
        @SuppressWarnings("unchecked")
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[] objEntrySetArray78 = (java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[]) setArray77;
        java.util.Set[][] setArray80 = new java.util.Set[6][];
        @SuppressWarnings("unchecked")
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[][] objEntrySetArray81 = (java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[][]) setArray80;
        objEntrySetArray81[0] = objEntrySetArray63;
        objEntrySetArray81[1] = objEntrySetArray66;
        objEntrySetArray81[2] = setArray68;
        objEntrySetArray81[3] = objEntrySetArray72;
        objEntrySetArray81[4] = setArray74;
        objEntrySetArray81[5] = objEntrySetArray78;
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[][] objEntrySetArray94 = objEntryList33.toArray(objEntrySetArray81);
        boolean boolean95 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.lang.Iterable<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[][]) objEntrySetArray81);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[100, -1]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100, -1]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[100, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[100, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100, -1]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[100, -1]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertNotNull(setArray62);
        org.junit.Assert.assertNotNull(objEntrySetArray63);
        org.junit.Assert.assertNotNull(setArray65);
        org.junit.Assert.assertNotNull(objEntrySetArray66);
        org.junit.Assert.assertNotNull(setArray68);
        org.junit.Assert.assertNotNull(objEntrySetArray69);
        org.junit.Assert.assertNotNull(setArray71);
        org.junit.Assert.assertNotNull(objEntrySetArray72);
        org.junit.Assert.assertNotNull(setArray74);
        org.junit.Assert.assertNotNull(objEntrySetArray75);
        org.junit.Assert.assertNotNull(setArray77);
        org.junit.Assert.assertNotNull(objEntrySetArray78);
        org.junit.Assert.assertNotNull(setArray80);
        org.junit.Assert.assertNotNull(objEntrySetArray81);
        org.junit.Assert.assertNotNull(objEntrySetArray94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test09955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09955");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4);
        java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4);
        java.lang.Double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6);
        java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray7);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray8, (double) 0);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 100.0]");
    }

    @Test
    public void test09956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09956");
        int[] intArray3 = new int[] { '#', (byte) -1, (short) 0 };
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.subarray(intArray3, (int) '#', (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder7.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        long[] longArray23 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.clone(longArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder10.append(longArray17, longArray23);
        boolean[] booleanArray30 = new boolean[] { false, false, false, false };
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray30);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray30, false);
        java.lang.Boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray30);
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray30);
        java.lang.Boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray30);
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray36);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.add(booleanArray37, 0, true);
        boolean[] booleanArray45 = new boolean[] { false, false, false, false };
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray45);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray45, false);
        java.lang.Boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray45);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray45, true, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder10.append(booleanArray37, booleanArray45);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.String[] strArray58 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray59 = org.apache.commons.lang3.ArrayUtils.addAll(strArray54, strArray58);
        java.lang.String[] strArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray54);
        java.lang.CharSequence[] charSequenceArray61 = org.apache.commons.lang3.ArrayUtils.clone((java.lang.CharSequence[]) strArray60);
        boolean boolean62 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) intArray6, (java.lang.Object) booleanArray45, strArray60);
        int int64 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray45, true);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, -1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[true, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(charSequenceArray61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test09957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09957");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        java.lang.Character[] charArray10 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray10, ' ');
        java.lang.Character[] charArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray10);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray1, (java.lang.Object[]) charArray10);
        java.lang.Short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        java.lang.Character[] charArray21 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, ' ');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, '#');
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.clone(charArray25);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) shortArray1, (java.lang.Object) charArray25);
        java.lang.Short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 10);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[1]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[1]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[1]");
    }

    @Test
    public void test09958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09958");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        double[] doubleArray36 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray36);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (double) (byte) 10);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray39, (double) 10.0f);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 1L);
        java.lang.Object obj44 = objMap31.get((java.lang.Object) 1L);
        java.lang.Byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray45);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(byteArray46, (byte) 10);
        boolean boolean49 = objMap31.containsValue((java.lang.Object) (byte) 10);
        java.lang.Boolean[][] booleanArray50 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray57 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray64 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray71 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray78 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray79 = new java.lang.Boolean[][] { booleanArray57, booleanArray64, booleanArray71, booleanArray78 };
        java.lang.Boolean[][] booleanArray80 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray50, booleanArray79);
        java.util.Map<java.lang.Object, java.lang.Object> objMap81 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray50);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet82 = objMap81.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList83 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean84 = objEntrySet82.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList83);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor85 = objEntryList83.iterator();
        float[] floatArray88 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray89 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray88);
        java.lang.Float[] floatArray90 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray89);
        java.lang.Object obj91 = objMap31.replace((java.lang.Object) objEntryList83, (java.lang.Object) floatArray89);
        java.util.Collection<java.lang.Object> objCollection92 = objMap31.values();
        java.util.Collection<java.lang.Object> objCollection93 = objMap31.values();
        java.util.Set<java.lang.Object> objSet94 = objMap31.keySet();
        java.util.Collection<java.lang.Object> objCollection95 = objMap31.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet96 = objMap31.entrySet();
        boolean boolean97 = objEntrySet96.isEmpty();
        short[][][][][][][][] shortArray98 = null;
        // The following exception was thrown during execution in test generation
        try {
            short[][][][][][][][] shortArray99 = objEntrySet96.toArray(shortArray98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertNotNull(objMap81);
        org.junit.Assert.assertNotNull(objEntrySet82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(objEntryItor85);
        org.junit.Assert.assertNotNull(floatArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray88), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray89);
        org.junit.Assert.assertNotNull(floatArray90);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNotNull(objCollection92);
        org.junit.Assert.assertNotNull(objCollection93);
        org.junit.Assert.assertNotNull(objSet94);
        org.junit.Assert.assertNotNull(objCollection95);
        org.junit.Assert.assertNotNull(objEntrySet96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test09959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09959");
        java.util.Collection[][] collectionArray1 = new java.util.Collection[0][];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[][] objEntryCollectionArray2 = (java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[][]) collectionArray1;
        java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[][] objEntryCollectionArray5 = org.apache.commons.lang3.ArrayUtils.subarray(objEntryCollectionArray2, (int) '#', (int) (byte) 1);
        org.junit.Assert.assertNotNull(collectionArray1);
        org.junit.Assert.assertNotNull(objEntryCollectionArray2);
        org.junit.Assert.assertNotNull(objEntryCollectionArray5);
    }

    @Test
    public void test09960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09960");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10);
        java.lang.Character[] charArray17 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17, 'a');
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray19, 'a', (-1));
        java.lang.Character[] charArray28 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28, ' ');
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28, '#');
        java.lang.Character[] charArray38 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray38);
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray38, 'a');
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray32, charArray41);
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray32);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) booleanArray11, (java.lang.Object) charArray32);
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray32);
        java.lang.Character[] charArray51 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray51, ' ');
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray51, '#');
        java.lang.Character[] charArray61 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray61);
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray61, 'a');
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray55, charArray64);
        java.lang.Character[] charArray66 = org.apache.commons.lang3.ArrayUtils.toObject(charArray55);
        char[] charArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray66, '4');
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.add(charArray68, '4');
        java.lang.Character[] charArray71 = org.apache.commons.lang3.ArrayUtils.toObject(charArray68);
        java.lang.Character[] charArray77 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray77, ' ');
        char[] charArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray77, '#');
        java.lang.Character[] charArray87 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray88 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray87);
        char[] charArray90 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray87, 'a');
        boolean boolean91 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray81, charArray90);
        char[] charArray92 = org.apache.commons.lang3.ArrayUtils.clone(charArray81);
        char[] charArray95 = org.apache.commons.lang3.ArrayUtils.subarray(charArray92, (int) (byte) 10, (int) '#');
        char[] charArray96 = org.apache.commons.lang3.ArrayUtils.addAll(charArray68, charArray95);
        char[] charArray97 = org.apache.commons.lang3.ArrayUtils.addAll(charArray45, charArray95);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray99 = org.apache.commons.lang3.ArrayUtils.remove(charArray45, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a a # 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a a # 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a,  , a,  , #,  , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), " 44a44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), " 44a44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[ , 4, 4, a, 4, 4]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray95);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray95), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray95), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray95), "[]");
        org.junit.Assert.assertNotNull(charArray96);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray96), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray96), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray96), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray97);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray97), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray97), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray97), "[ , 4, 4, a, 4]");
    }

    @Test
    public void test09961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09961");
        java.lang.reflect.Type[][][][][][][] typeArray0 = new java.lang.reflect.Type[][][][][][][] {};
        java.lang.reflect.Type[][][][][][][] typeArray1 = new java.lang.reflect.Type[][][][][][][] {};
        java.lang.reflect.Type[][][][][][][] typeArray2 = new java.lang.reflect.Type[][][][][][][] {};
        java.lang.reflect.Type[][][][][][][] typeArray3 = new java.lang.reflect.Type[][][][][][][] {};
        java.lang.reflect.Type[][][][][][][][] typeArray4 = new java.lang.reflect.Type[][][][][][][][] { typeArray0, typeArray1, typeArray2, typeArray3 };
        java.lang.reflect.Type[][][][][][][][] typeArray6 = org.apache.commons.lang3.ArrayUtils.remove(typeArray4, (int) (byte) 0);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(typeArray4);
        org.junit.Assert.assertNotNull(typeArray0);
        org.junit.Assert.assertNotNull(typeArray1);
        org.junit.Assert.assertNotNull(typeArray2);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertNotNull(typeArray4);
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test09962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09962");
        byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray3 = org.apache.commons.lang3.ArrayUtils.add(byteArray0, (int) (byte) 0, (byte) 100);
        java.lang.Byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray0);
        java.io.Serializable[] serializableArray5 = org.apache.commons.lang3.ArrayUtils.clone((java.io.Serializable[]) byteArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append((float) (short) 100, (float) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder9.append((short) 1, (short) (byte) -1);
        long[] longArray21 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.clone(longArray21);
        java.lang.Long[] longArray23 = org.apache.commons.lang3.ArrayUtils.toObject(longArray22);
        long[] longArray29 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray30 = org.apache.commons.lang3.ArrayUtils.clone(longArray29);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray22, longArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder32.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        long[] longArray48 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray49 = org.apache.commons.lang3.ArrayUtils.clone(longArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder35.append(longArray42, longArray48);
        long[] longArray53 = org.apache.commons.lang3.ArrayUtils.add(longArray42, (int) (byte) 0, (long) 2);
        long[] longArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder15.append(longArray30, longArray54);
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray4, (java.lang.Object) equalsBuilder55, (int) (byte) 0);
        equalsBuilder55.reset();
        java.lang.Boolean boolean59 = equalsBuilder55.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder55.append((float) (-1L), (float) 10);
        int[] intArray63 = null;
        int[] intArray64 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append(intArray63, intArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder62.append(10L, (long) 13);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(serializableArray5);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[2, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertEquals("'" + boolean59 + "' != '" + true + "'", boolean59, true);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
    }

    @Test
    public void test09963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09963");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) 0);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, 10.0f);
        java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray9);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray9);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray11);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray8, (java.lang.Object) longArray11, (int) '4');
        java.lang.Boolean[][] booleanArray15 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray22 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray29 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray36 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray43 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray44 = new java.lang.Boolean[][] { booleanArray22, booleanArray29, booleanArray36, booleanArray43 };
        java.lang.Boolean[][] booleanArray45 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray15, booleanArray44);
        java.util.Map<java.lang.Object, java.lang.Object> objMap46 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray15);
        java.lang.Short[] shortArray49 = new java.lang.Short[] { (short) 1 };
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray49);
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray49, (short) 10);
        java.lang.Object obj53 = objMap46.replace((java.lang.Object) 2, (java.lang.Object) shortArray52);
        objMap46.clear();
        java.lang.Object obj55 = null;
        long[] longArray61 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray62 = org.apache.commons.lang3.ArrayUtils.clone(longArray61);
        java.lang.Long[] longArray63 = org.apache.commons.lang3.ArrayUtils.toObject(longArray62);
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.clone(longArray62);
        long[] longArray66 = org.apache.commons.lang3.ArrayUtils.add(longArray64, (long) (short) 0);
        long[] longArray67 = org.apache.commons.lang3.ArrayUtils.clone(longArray66);
        long[] longArray73 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray74 = org.apache.commons.lang3.ArrayUtils.clone(longArray73);
        java.lang.Long[] longArray75 = org.apache.commons.lang3.ArrayUtils.toObject(longArray74);
        long[] longArray76 = org.apache.commons.lang3.ArrayUtils.clone(longArray74);
        long[] longArray78 = org.apache.commons.lang3.ArrayUtils.add(longArray76, (long) (short) 0);
        long[] longArray79 = org.apache.commons.lang3.ArrayUtils.addAll(longArray67, longArray76);
        long[] longArray81 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray67, (long) 10);
        java.lang.Object obj82 = objMap46.putIfAbsent(obj55, (java.lang.Object) longArray67);
        long[] longArray83 = org.apache.commons.lang3.ArrayUtils.addAll(longArray11, longArray67);
        java.lang.Class<?> wildcardClass84 = longArray67.getClass();
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(objMap46);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[1]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[1]");
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray62), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertNotNull(longArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[32, 100, 10, 1, 0]");
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(longArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray83), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test09964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09964");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4);
        java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4);
        java.lang.Double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4, (double) (short) 1);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray9, (double) 3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 3.0]");
    }

    @Test
    public void test09965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09965");
        java.lang.Integer[] intArray1 = new java.lang.Integer[] { 0 };
        java.lang.Integer[] intArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray1);
        int[] intArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray3);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(intArray3, (int) (short) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray3);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray3, 13);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray3);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test09966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09966");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        double[] doubleArray15 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray9, (java.lang.Object) doubleArray15);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray15, 3, 1);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray20);
        double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray21, (int) (short) 1, 3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
    }

    @Test
    public void test09967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09967");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray4);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4);
        float[] floatArray12 = new float[] { 1L, 100L, 100 };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray12, (float) (-1L), (int) (short) 100);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray12, (float) 'a', (int) (byte) 10);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) intArray4, (java.lang.Object) floatArray12);
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.add(intArray4, 4);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.subarray(intArray21, 100, (int) (short) 100);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray24, 6, (int) (byte) -1);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray24);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(intArray24, 100);
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.clone(intArray24);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray31);
        java.lang.String str33 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) boolean32);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, -1, -1, 0, 4]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "true" + "'", str33, "true");
    }

    @Test
    public void test09968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09968");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray4);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray11 = org.apache.commons.lang3.ArrayUtils.add(intArray9, (int) ' ');
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.add(intArray11, 0, 3);
        java.lang.Integer[] intArray15 = org.apache.commons.lang3.ArrayUtils.toObject(intArray11);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray11, (int) (byte) -1, 11);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray11);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[100, -1, -1, 0, 32]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[3, 100, -1, -1, 0, 32]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test09969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09969");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.String[] strArray9 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray10 = org.apache.commons.lang3.ArrayUtils.addAll(strArray5, strArray9);
        java.lang.String[] strArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray5);
        java.lang.Character[] charArray17 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17, ' ');
        java.lang.Character[] charArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((java.lang.Object[]) strArray5, (java.lang.Object[]) charArray20);
        java.lang.Character[] charArray27 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray27, 'a');
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.add(charArray29, '#');
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.subarray(charArray29, (int) (byte) -1, (int) '#');
        java.lang.Character[] charArray40 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray40);
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray40, 'a');
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.clone(charArray43);
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.addAll(charArray29, charArray43);
        java.lang.Character[] charArray46 = org.apache.commons.lang3.ArrayUtils.toObject(charArray29);
        org.apache.commons.lang3.ArrayUtils arrayUtils47 = new org.apache.commons.lang3.ArrayUtils();
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray48 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils47 };
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray50 = org.apache.commons.lang3.ArrayUtils.remove(arrayUtilsArray48, (int) (short) 0);
        java.lang.Character[] charArray56 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray56, ' ');
        char[] charArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.String[] strArray64 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray65 = org.apache.commons.lang3.ArrayUtils.addAll(strArray60, strArray64);
        boolean boolean66 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) arrayUtilsArray48, (java.lang.Object) charArray58, strArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder3.append(charArray29, charArray58);
        short[] shortArray68 = new short[] {};
        java.lang.Short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray68);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray69, (short) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray71);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray71, (int) (byte) 1, (int) (short) 1);
        short[] shortArray77 = org.apache.commons.lang3.ArrayUtils.add(shortArray75, (short) 0);
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray77, (short) (byte) 100);
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder3, (java.lang.Object) shortArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder3.append((short) 10, (short) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertNotNull(arrayUtilsArray48);
        org.junit.Assert.assertNotNull(arrayUtilsArray50);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[]");
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[0]");
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(equalsBuilder83);
    }

    @Test
    public void test09970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09970");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) floatArray3);
        java.lang.Object[] objArray5 = org.apache.commons.lang3.ArrayUtils.clone((java.lang.Object[]) floatArray3);
        java.lang.Byte[] byteArray12 = new java.lang.Byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 100, (byte) 0 };
        byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray12);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray12);
        java.lang.Object[] objArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) byteArray12);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) objArray5, (java.lang.Object) byteArray12);
        java.lang.Byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray12);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray12);
        boolean[] booleanArray23 = new boolean[] { false, false, false, false };
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray23);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray23, false);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.add(booleanArray23, true);
        boolean[] booleanArray33 = new boolean[] { false, false, false, false };
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray33);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray33, false);
        java.lang.Boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray33);
        boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray23, booleanArray33);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.add(booleanArray38, true);
        boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray38, 5);
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray38, true);
        java.lang.Boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray38);
        int int47 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray12, (java.lang.Object) booleanArray38, (int) '#');
        byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray12, (byte) -1);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[-1.0, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false, false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, 100, -1, 10, 100, 0]");
    }

    @Test
    public void test09971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09971");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) 10);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) 0);
        java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray7);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1]");
        org.junit.Assert.assertNotNull(shortArray8);
    }

    @Test
    public void test09972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09972");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.String[] strArray9 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray10 = org.apache.commons.lang3.ArrayUtils.addAll(strArray5, strArray9);
        java.lang.String[] strArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray5);
        java.lang.Character[] charArray17 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17, ' ');
        java.lang.Character[] charArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((java.lang.Object[]) strArray5, (java.lang.Object[]) charArray20);
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray20);
        java.lang.Character[] charArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray20);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray24, ' ');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test09973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09973");
        java.lang.String[] strArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        boolean boolean1 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.lang.Comparable<java.lang.String>[]) strArray0);
        java.lang.String[] strArray2 = org.apache.commons.lang3.ArrayUtils.clone(strArray0);
        java.lang.Boolean[][] booleanArray3 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray10 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray17 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray24 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray31 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray32 = new java.lang.Boolean[][] { booleanArray10, booleanArray17, booleanArray24, booleanArray31 };
        java.lang.Boolean[][] booleanArray33 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray32);
        java.util.Map<java.lang.Object, java.lang.Object> objMap34 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray3);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = objMap34.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList36 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray37 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean38 = objEntryList36.remove((java.lang.Object) byteArray37);
        boolean boolean39 = objEntrySet35.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList36);
        java.lang.Character[] charArray45 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray45, 'a');
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.add(charArray47, '#');
        boolean boolean50 = objEntryList36.contains((java.lang.Object) charArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray49);
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.clone(charArray49);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) strArray0, (java.lang.Object) charArray49);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(objMap34);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a,  , a,  , #, #]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a,  , a,  , #, #]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test09974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09974");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray42, longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder19.append(longArray26, longArray50);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray26, (long) (-1), (int) (byte) -1);
        java.lang.Long[] longArray57 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.add(longArray26, (long) 10);
        java.lang.Long[] longArray60 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) longArray60);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[32, 100, 10, 10, 1, 10]");
        org.junit.Assert.assertNotNull(longArray60);
    }

    @Test
    public void test09975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09975");
        java.lang.Byte[] byteArray1 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray1);
        byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) 0);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray5, (byte) 10, (int) (byte) 100);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray5, (byte) 0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[1]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test09976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09976");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = equalsBuilder1.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray5 = new double[] {};
        double[] doubleArray9 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray9);
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.add(doubleArray9, (double) (byte) 10);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray9, (double) 0L, 0);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray9, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder1.append(doubleArray5, doubleArray9);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder1.append((byte) 100, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append(true, true);
        byte[] byteArray31 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray31, (byte) 10, (int) (short) -1);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray31);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray31, (byte) 1, (int) ' ');
        byte[] byteArray45 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray45);
        int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray45, (byte) 10);
        byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray31, byteArray45);
        byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.add(byteArray50, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder24.append(byteArray31, byteArray50);
        byte[] byteArray55 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray55);
        byte[] byteArray59 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray55, 100, (int) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder1.append(byteArray50, byteArray55);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder60.append(false, false);
        java.lang.Boolean boolean64 = equalsBuilder63.build();
        java.lang.Class<?> wildcardClass65 = equalsBuilder63.getClass();
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isEquals(obj0, (java.lang.Object) equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder4);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 4 + "'", int48 == 4);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertEquals("'" + boolean64 + "' != '" + false + "'", boolean64, false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test09977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09977");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray8, (short) 0);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray8, (short) (byte) 10, (int) (short) -1);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.add(shortArray8, (short) 1);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray15, (short) (byte) 1, 4);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray15, (short) (byte) 10);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray15, 0, (int) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1, 1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[1, 1]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
    }

    @Test
    public void test09978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09978");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder16.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        long[] longArray32 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray33 = org.apache.commons.lang3.ArrayUtils.clone(longArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder19.append(longArray26, longArray32);
        long[] longArray37 = org.apache.commons.lang3.ArrayUtils.add(longArray26, (int) (byte) 0, (long) 2);
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder39.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray43 = new double[] {};
        double[] doubleArray47 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray47);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.add(doubleArray47, (double) (byte) 10);
        int int53 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray47, (double) 0L, 0);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray47);
        int int57 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray47, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder39.append(doubleArray43, doubleArray47);
        long[] longArray64 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray65 = org.apache.commons.lang3.ArrayUtils.clone(longArray64);
        java.lang.Long[] longArray66 = org.apache.commons.lang3.ArrayUtils.toObject(longArray65);
        long[] longArray72 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray73 = org.apache.commons.lang3.ArrayUtils.clone(longArray72);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray65, longArray73);
        long[] longArray80 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray81 = org.apache.commons.lang3.ArrayUtils.clone(longArray80);
        java.lang.Long[] longArray82 = org.apache.commons.lang3.ArrayUtils.toObject(longArray81);
        long[] longArray88 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray89 = org.apache.commons.lang3.ArrayUtils.clone(longArray88);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray81, longArray89);
        java.lang.Long[] longArray91 = org.apache.commons.lang3.ArrayUtils.toObject(longArray89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder58.append(longArray65, longArray89);
        boolean boolean93 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray65);
        int int95 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray65, (long) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder0.append(longArray38, longArray65);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray38);
        boolean boolean99 = org.apache.commons.lang3.ArrayUtils.contains(longArray38, (long) 7);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[1, 10, 10, 100, 32]");
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[2, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[1, 10, 10, 100, 32]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray82);
        org.junit.Assert.assertNotNull(longArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray88), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray89), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(longArray91);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test09979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09979");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { (-1.0d), 100.0d, 1.0d, 10.0d, (-1.0d), 100.0d };
        java.lang.Double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6);
        double[] doubleArray13 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray13);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.add(doubleArray13, (double) (byte) 10);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray13, (double) 0L, 0);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray13);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray13, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.add(doubleArray13, (double) 4);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray9, doubleArray25);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray25);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) 1.0f, 4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 100.0, 4.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 4.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test09980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09980");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) 10);
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) 100, (int) (byte) 1);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray8);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray8, 1, (int) (short) 0);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray8);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray8, (short) (byte) 10, 2);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.add(shortArray8, (short) (byte) 0);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray8, (short) (byte) 100, (int) (byte) -1);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1, 0]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test09981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09981");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        double[] doubleArray15 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray9, (java.lang.Object) doubleArray15);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray15, 3, 1);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) ' ', 2, (double) (byte) -1);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test09982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09982");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        float[] floatArray15 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(floatArray15, (float) 0);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.add(floatArray15, 10.0f);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray3, floatArray15);
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray22);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray23, 1.0f);
        float[] floatArray28 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray28);
        float[] floatArray32 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray32);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(floatArray32, (float) 0);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray28, floatArray32);
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.clone(floatArray32);
        float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.clone(floatArray37);
        float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray25, floatArray37);
        float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray37);
        float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray40, 0, 0);
        float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray40, 2, 10);
        float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.add(floatArray40, (float) 13);
        float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.clone(floatArray40);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray49);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[-1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[]");
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[-1.0, 1.0, 13.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test09983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09983");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        java.lang.Boolean[][] booleanArray39 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray46 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray53 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray60 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray67 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray68 = new java.lang.Boolean[][] { booleanArray46, booleanArray53, booleanArray60, booleanArray67 };
        java.lang.Boolean[][] booleanArray69 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray39, booleanArray68);
        java.util.Map<java.lang.Object, java.lang.Object> objMap70 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray39);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet71 = objMap70.entrySet();
        java.util.Set<java.lang.Object> objSet72 = objMap70.keySet();
        objMap31.putAll(objMap70);
        boolean boolean74 = objMap70.isEmpty();
        java.util.Set<java.lang.Object> objSet75 = objMap70.keySet();
        java.util.Collection<java.lang.Object> objCollection76 = objMap70.values();
        float[] floatArray79 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray80 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray79);
        float[] floatArray83 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray84 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray83);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.contains(floatArray83, (float) 0);
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray79, floatArray83);
        float[] floatArray88 = org.apache.commons.lang3.ArrayUtils.clone(floatArray83);
        int int89 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) floatArray88);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray88);
        java.lang.Object obj91 = objMap70.remove((java.lang.Object) floatArray88);
        java.lang.Long[] longArray92 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray93 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray92);
        long[] longArray95 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray92, (long) (byte) 10);
        java.lang.Long[] longArray96 = org.apache.commons.lang3.ArrayUtils.toObject(longArray95);
        long[] longArray98 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray96, (long) 2);
        java.lang.Object obj99 = objMap70.remove((java.lang.Object) 2);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(objMap70);
        org.junit.Assert.assertNotNull(objEntrySet71);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(objSet75);
        org.junit.Assert.assertNotNull(objCollection76);
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray79), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray80);
        org.junit.Assert.assertNotNull(floatArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray83), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(floatArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray88), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 2 + "'", int89 == 2);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNotNull(longArray92);
        org.junit.Assert.assertNotNull(longArray93);
        org.junit.Assert.assertNotNull(longArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray95), "[]");
        org.junit.Assert.assertNotNull(longArray96);
        org.junit.Assert.assertNotNull(longArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray98), "[]");
        org.junit.Assert.assertNull(obj99);
    }

    @Test
    public void test09984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09984");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.String[] strArray9 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray10 = org.apache.commons.lang3.ArrayUtils.addAll(strArray5, strArray9);
        java.lang.String[] strArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray5);
        java.lang.Character[] charArray17 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17, ' ');
        java.lang.Character[] charArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((java.lang.Object[]) strArray5, (java.lang.Object[]) charArray20);
        java.lang.Character[] charArray27 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray27, 'a');
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.add(charArray29, '#');
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.subarray(charArray29, (int) (byte) -1, (int) '#');
        java.lang.Character[] charArray40 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray40);
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray40, 'a');
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.clone(charArray43);
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.addAll(charArray29, charArray43);
        java.lang.Character[] charArray46 = org.apache.commons.lang3.ArrayUtils.toObject(charArray29);
        org.apache.commons.lang3.ArrayUtils arrayUtils47 = new org.apache.commons.lang3.ArrayUtils();
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray48 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils47 };
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray50 = org.apache.commons.lang3.ArrayUtils.remove(arrayUtilsArray48, (int) (short) 0);
        java.lang.Character[] charArray56 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray56, ' ');
        char[] charArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.String[] strArray64 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray65 = org.apache.commons.lang3.ArrayUtils.addAll(strArray60, strArray64);
        boolean boolean66 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) arrayUtilsArray48, (java.lang.Object) charArray58, strArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder3.append(charArray29, charArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder3.append((int) (short) 100, (int) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder3.append((int) (byte) -1, (int) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder3.appendSuper(false);
        java.lang.Boolean boolean76 = equalsBuilder75.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertNotNull(arrayUtilsArray48);
        org.junit.Assert.assertNotNull(arrayUtilsArray50);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertEquals("'" + boolean76 + "' != '" + false + "'", boolean76, false);
    }

    @Test
    public void test09985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09985");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        double[] doubleArray36 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray36);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (double) (byte) 10);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray39, (double) 10.0f);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 1L);
        java.lang.Object obj44 = objMap31.get((java.lang.Object) 1L);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = objMap31.entrySet();
        java.lang.Object obj46 = null;
        java.lang.Object obj47 = objMap31.remove(obj46);
        java.lang.Double[] doubleArray54 = new java.lang.Double[] { (-1.0d), 100.0d, 1.0d, 10.0d, (-1.0d), 100.0d };
        java.lang.Double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray54);
        java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray54);
        java.lang.Double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray54);
        boolean boolean58 = objMap31.equals((java.lang.Object) doubleArray57);
        boolean[] booleanArray63 = new boolean[] { false, false, false, false };
        boolean[] booleanArray64 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray63);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray63, false);
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.add(booleanArray63, true);
        boolean[] booleanArray73 = new boolean[] { false, false, false, false };
        boolean[] booleanArray74 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray73);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray73, false);
        java.lang.Boolean[] booleanArray77 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray73);
        boolean[] booleanArray78 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray63, booleanArray73);
        java.lang.Boolean[] booleanArray79 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray73);
        boolean[] booleanArray80 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray79);
        java.lang.Boolean[] booleanArray81 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray80);
        java.lang.Short[] shortArray83 = new java.lang.Short[] { (short) 1 };
        short[] shortArray84 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray83);
        int int86 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray84, (short) 10);
        int int89 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray84, (short) 100, (int) (byte) 1);
        short[] shortArray91 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray84, (short) (byte) 0);
        java.lang.Object obj92 = objMap31.getOrDefault((java.lang.Object) booleanArray80, (java.lang.Object) shortArray84);
        java.util.Set<java.lang.Object> objSet93 = objMap31.keySet();
        int int94 = objMap31.size();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray80), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertNotNull(shortArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray84), "[1]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(shortArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray91), "[1]");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(objSet93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
    }

    @Test
    public void test09986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09986");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray5);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray7, (short) (byte) 100);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.add(shortArray7, 0, (short) 100);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray12);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray12, (short) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[1, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test09987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09987");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 4, 4, (-1), 0 };
        java.lang.Integer[] intArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4);
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray5);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray6, (-1));
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 4, 4]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test09988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09988");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray7, (long) (short) 0);
        long[] longArray13 = new long[] { 'a', 1, 0 };
        long[] longArray19 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.clone(longArray19);
        java.lang.Long[] longArray21 = org.apache.commons.lang3.ArrayUtils.toObject(longArray20);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.clone(longArray20);
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.add(longArray22, (long) (short) 0);
        long[] longArray25 = org.apache.commons.lang3.ArrayUtils.clone(longArray24);
        long[] longArray31 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray32 = org.apache.commons.lang3.ArrayUtils.clone(longArray31);
        java.lang.Long[] longArray33 = org.apache.commons.lang3.ArrayUtils.toObject(longArray32);
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray32);
        long[] longArray36 = org.apache.commons.lang3.ArrayUtils.add(longArray34, (long) (short) 0);
        long[] longArray37 = org.apache.commons.lang3.ArrayUtils.addAll(longArray25, longArray34);
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray25, (long) ' ', (int) ' ');
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray13, longArray25);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray13, 10L, (int) (short) 0);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.addAll(longArray9, longArray13);
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray45, (long) 5);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[97, 1, 0]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[32, 100, 10, 10, 1, 97, 1, 0]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    }

    @Test
    public void test09989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09989");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray8);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.add(longArray8, 2, (long) 0);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.clone(longArray8);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray8);
        long[] longArray20 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray21 = org.apache.commons.lang3.ArrayUtils.clone(longArray20);
        java.lang.Long[] longArray22 = org.apache.commons.lang3.ArrayUtils.toObject(longArray21);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.clone(longArray21);
        long[] longArray25 = org.apache.commons.lang3.ArrayUtils.add(longArray23, (long) (short) 0);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        long[] longArray32 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray33 = org.apache.commons.lang3.ArrayUtils.clone(longArray32);
        java.lang.Long[] longArray34 = org.apache.commons.lang3.ArrayUtils.toObject(longArray33);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        long[] longArray37 = org.apache.commons.lang3.ArrayUtils.add(longArray35, (long) (short) 0);
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.addAll(longArray26, longArray35);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray26);
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.clone(longArray26);
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.addAll(longArray8, longArray40);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray40, 1L);
        java.lang.Long[] longArray44 = org.apache.commons.lang3.ArrayUtils.toObject(longArray40);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[1, 10, 10, 100, 32]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[1, 10, 0, 10, 100, 32]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[1, 10, 10, 100, 32]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[1, 10, 10, 100, 32, 32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
        org.junit.Assert.assertNotNull(longArray44);
    }

    @Test
    public void test09990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09990");
        java.util.stream.BaseStream[][] baseStreamArray1 = new java.util.stream.BaseStream[0][];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][] objEntryBaseStreamArray2 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][]) baseStreamArray1;
        java.util.stream.BaseStream[][] baseStreamArray4 = new java.util.stream.BaseStream[0][];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][] objEntryBaseStreamArray5 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][]) baseStreamArray4;
        java.util.stream.BaseStream[][] baseStreamArray7 = new java.util.stream.BaseStream[0][];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][] objEntryBaseStreamArray8 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][]) baseStreamArray7;
        java.util.stream.BaseStream[][] baseStreamArray10 = new java.util.stream.BaseStream[0][];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][] objEntryBaseStreamArray11 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][]) baseStreamArray10;
        java.util.stream.BaseStream[][] baseStreamArray13 = new java.util.stream.BaseStream[0][];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][] objEntryBaseStreamArray14 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][]) baseStreamArray13;
        java.util.stream.BaseStream[][][] baseStreamArray16 = new java.util.stream.BaseStream[5][][];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][][] objEntryBaseStreamArray17 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][][]) baseStreamArray16;
        objEntryBaseStreamArray17[0] = objEntryBaseStreamArray2;
        objEntryBaseStreamArray17[1] = objEntryBaseStreamArray5;
        objEntryBaseStreamArray17[2] = objEntryBaseStreamArray8;
        objEntryBaseStreamArray17[3] = objEntryBaseStreamArray11;
        objEntryBaseStreamArray17[4] = objEntryBaseStreamArray14;
        java.util.stream.BaseStream[] baseStreamArray30 = new java.util.stream.BaseStream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[] objEntryBaseStreamArray31 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[]) baseStreamArray30;
        java.util.stream.BaseStream[] baseStreamArray33 = new java.util.stream.BaseStream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[] objEntryBaseStreamArray34 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[]) baseStreamArray33;
        java.util.stream.BaseStream[] baseStreamArray36 = new java.util.stream.BaseStream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[] objEntryBaseStreamArray37 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[]) baseStreamArray36;
        java.util.stream.BaseStream[] baseStreamArray39 = new java.util.stream.BaseStream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[] objEntryBaseStreamArray40 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[]) baseStreamArray39;
        java.util.stream.BaseStream[] baseStreamArray42 = new java.util.stream.BaseStream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[] objEntryBaseStreamArray43 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[]) baseStreamArray42;
        java.util.stream.BaseStream[][] baseStreamArray45 = new java.util.stream.BaseStream[5][];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][] objEntryBaseStreamArray46 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][]) baseStreamArray45;
        objEntryBaseStreamArray46[0] = baseStreamArray30;
        objEntryBaseStreamArray46[1] = objEntryBaseStreamArray34;
        objEntryBaseStreamArray46[2] = objEntryBaseStreamArray37;
        objEntryBaseStreamArray46[3] = baseStreamArray39;
        objEntryBaseStreamArray46[4] = baseStreamArray42;
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][] objEntryBaseStreamArray57 = org.apache.commons.lang3.ArrayUtils.clone(objEntryBaseStreamArray46);
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][][] objEntryBaseStreamArray58 = org.apache.commons.lang3.ArrayUtils.add(objEntryBaseStreamArray17, (int) (byte) 1, objEntryBaseStreamArray57);
        java.util.stream.BaseStream[] baseStreamArray61 = new java.util.stream.BaseStream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[] objEntryBaseStreamArray62 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[]) baseStreamArray61;
        java.util.stream.BaseStream[] baseStreamArray64 = new java.util.stream.BaseStream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[] objEntryBaseStreamArray65 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[]) baseStreamArray64;
        java.util.stream.BaseStream[] baseStreamArray67 = new java.util.stream.BaseStream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[] objEntryBaseStreamArray68 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[]) baseStreamArray67;
        java.util.stream.BaseStream[] baseStreamArray70 = new java.util.stream.BaseStream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[] objEntryBaseStreamArray71 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[]) baseStreamArray70;
        java.util.stream.BaseStream[] baseStreamArray73 = new java.util.stream.BaseStream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[] objEntryBaseStreamArray74 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[]) baseStreamArray73;
        java.util.stream.BaseStream[][] baseStreamArray76 = new java.util.stream.BaseStream[5][];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][] objEntryBaseStreamArray77 = (java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][]) baseStreamArray76;
        objEntryBaseStreamArray77[0] = baseStreamArray61;
        objEntryBaseStreamArray77[1] = objEntryBaseStreamArray65;
        objEntryBaseStreamArray77[2] = objEntryBaseStreamArray68;
        objEntryBaseStreamArray77[3] = baseStreamArray70;
        objEntryBaseStreamArray77[4] = baseStreamArray73;
        java.util.stream.BaseStream<java.util.Map.Entry<java.lang.Object, java.lang.Object>, java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>>>[][] objEntryBaseStreamArray88 = org.apache.commons.lang3.ArrayUtils.clone(objEntryBaseStreamArray77);
        java.lang.AutoCloseable[][] autoCloseableArray91 = org.apache.commons.lang3.ArrayUtils.subarray((java.lang.AutoCloseable[][]) objEntryBaseStreamArray77, 5, 4);
        java.lang.AutoCloseable[][][] autoCloseableArray92 = org.apache.commons.lang3.ArrayUtils.add((java.lang.AutoCloseable[][][]) objEntryBaseStreamArray58, (int) (byte) 1, autoCloseableArray91);
        boolean boolean93 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(objEntryBaseStreamArray58);
        org.junit.Assert.assertNotNull(baseStreamArray1);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray2);
        org.junit.Assert.assertNotNull(baseStreamArray4);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray5);
        org.junit.Assert.assertNotNull(baseStreamArray7);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray8);
        org.junit.Assert.assertNotNull(baseStreamArray10);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray11);
        org.junit.Assert.assertNotNull(baseStreamArray13);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray14);
        org.junit.Assert.assertNotNull(baseStreamArray16);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray17);
        org.junit.Assert.assertNotNull(baseStreamArray30);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray31);
        org.junit.Assert.assertNotNull(baseStreamArray33);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray34);
        org.junit.Assert.assertNotNull(baseStreamArray36);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray37);
        org.junit.Assert.assertNotNull(baseStreamArray39);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray40);
        org.junit.Assert.assertNotNull(baseStreamArray42);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray43);
        org.junit.Assert.assertNotNull(baseStreamArray45);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray46);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray57);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray58);
        org.junit.Assert.assertNotNull(baseStreamArray61);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray62);
        org.junit.Assert.assertNotNull(baseStreamArray64);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray65);
        org.junit.Assert.assertNotNull(baseStreamArray67);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray68);
        org.junit.Assert.assertNotNull(baseStreamArray70);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray71);
        org.junit.Assert.assertNotNull(baseStreamArray73);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray74);
        org.junit.Assert.assertNotNull(baseStreamArray76);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray77);
        org.junit.Assert.assertNotNull(objEntryBaseStreamArray88);
        org.junit.Assert.assertNotNull(autoCloseableArray91);
        org.junit.Assert.assertNotNull(autoCloseableArray92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test09991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09991");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.clone(floatArray6);
        float[] floatArray14 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray14);
        float[] floatArray18 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(floatArray18, (float) 0);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray14, floatArray18);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray14);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray14);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray6, floatArray14);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray25);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray25);
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray25, (float) (short) 100);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray25);
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.clone(floatArray25);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 1.0, -1.0, 1.0]");
    }

    @Test
    public void test09992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09992");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        int[] intArray23 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.clone(intArray23);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray23, 100);
        long[] longArray32 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray33 = org.apache.commons.lang3.ArrayUtils.clone(longArray32);
        java.lang.Long[] longArray34 = org.apache.commons.lang3.ArrayUtils.toObject(longArray33);
        long[] longArray40 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        java.lang.Long[] longArray42 = org.apache.commons.lang3.ArrayUtils.toObject(longArray41);
        long[] longArray43 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.addAll(longArray33, longArray43);
        int[] intArray49 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray50 = org.apache.commons.lang3.ArrayUtils.clone(intArray49);
        int[] intArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray49);
        boolean boolean53 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray43, (java.lang.Object) intArray51, false);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(intArray51, (int) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder18.append(intArray23, intArray51);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray58 = org.apache.commons.lang3.ArrayUtils.remove(intArray51, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 8, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(equalsBuilder56);
    }

    @Test
    public void test09993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09993");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 4, 4, (-1), 0 };
        java.lang.Integer[] intArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4);
        boolean[] booleanArray10 = new boolean[] { false, false, false, false };
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray10, false);
        java.lang.Boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray5, (java.lang.Object) booleanArray14, (int) '#');
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray5);
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray5);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray5, (int) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray25 = new double[] {};
        double[] doubleArray29 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray29);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.add(doubleArray29, (double) (byte) 10);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 0L, 0);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray29);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray29, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder21.append(doubleArray25, doubleArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder21.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray45 = new java.lang.Short[] { (short) 1 };
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45);
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45);
        java.lang.Character[] charArray54 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray54, ' ');
        java.lang.Character[] charArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder43.append((java.lang.Object[]) shortArray45, (java.lang.Object[]) charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder58.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder60.append((byte) 100, (byte) 0);
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { 10 };
        int[] intArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray65, (int) (byte) 10);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.contains(intArray67, (int) (short) 1);
        int[] intArray72 = org.apache.commons.lang3.ArrayUtils.subarray(intArray67, (int) (short) 100, 4);
        int[] intArray73 = new int[] {};
        int[] intArray74 = org.apache.commons.lang3.ArrayUtils.clone(intArray73);
        int int77 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray74, 1, (int) (byte) 1);
        int int80 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray74, (int) (short) 0, (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder60.append(intArray72, intArray74);
        int[] intArray82 = org.apache.commons.lang3.ArrayUtils.clone(intArray74);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray20, intArray74);
        int[] intArray84 = org.apache.commons.lang3.ArrayUtils.clone(intArray74);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[4, 4, -1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[4, 4, -1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[4, 4, -1, 0]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[1]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[1]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[1]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[10]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[]");
    }

    @Test
    public void test09994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09994");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        long[] longArray21 = org.apache.commons.lang3.ArrayUtils.add(longArray10, (int) (byte) 0, (long) 2);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.add(longArray21, (long) 2);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(longArray21, (long) (byte) -1);
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray21, (long) 10, (int) 'a');
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray21, (long) 2, (int) (byte) 1);
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray21, (long) 9, (int) '#');
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(longArray21, (long) 9);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[2, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[2, 32, 100, 10, 10, 1, 2]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test09995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09995");
        short[] shortArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray0, (short) (byte) 100, 8);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test09996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09996");
        boolean[] booleanArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY;
        boolean[] booleanArray1 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray0);
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray0, false, (int) '#');
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray15 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.clone(longArray15);
        long[] longArray22 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.clone(longArray22);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder9.append(longArray16, longArray22);
        boolean[] booleanArray29 = new boolean[] { false, false, false, false };
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray29);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray29, false);
        java.lang.Boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray29);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray29);
        java.lang.Boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray29);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.add(booleanArray36, 0, true);
        boolean[] booleanArray44 = new boolean[] { false, false, false, false };
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray44);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray44, false);
        java.lang.Boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray44);
        int int51 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray44, true, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder9.append(booleanArray36, booleanArray44);
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.add(booleanArray44, false);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray0, booleanArray54);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray0), "[]");
        org.junit.Assert.assertNotNull(booleanArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray1), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[true, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test09997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09997");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, 0);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) 4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder16.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray20 = new double[] {};
        double[] doubleArray24 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray24);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray24, (double) (byte) 10);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray24, (double) 0L, 0);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray24);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray24, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder16.append(doubleArray20, doubleArray24);
        int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) 'a', (int) '4');
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray20);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0, (double) 100);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray3);
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray43, (double) (byte) 10);
        boolean[] booleanArray50 = new boolean[] { false, false, false, false };
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray50);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray50, false);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.add(booleanArray50, true);
        double[] doubleArray61 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray61);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray55, (java.lang.Object) doubleArray61);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray61, 3, 1);
        int int69 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) 100, (double) 100.0f);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray43, doubleArray66);
        double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.add(doubleArray43, (double) 1);
        double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray72);
        double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray73, 13, (int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.add(doubleArray76, (int) '4', (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 4.0]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0, 10.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 10.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
    }

    @Test
    public void test09998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09998");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray13);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray13);
        java.lang.Integer[] intArray18 = org.apache.commons.lang3.ArrayUtils.toObject(intArray13);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray13, (int) (short) 10, (int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray25 = org.apache.commons.lang3.ArrayUtils.add(intArray13, (int) (short) 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test09999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09999");
        boolean[] booleanArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray0, false, (int) (short) 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test10000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test10000");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        double[] doubleArray15 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray9, (java.lang.Object) doubleArray15);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray9);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray9);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray9, false);
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray9);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray22);
        double[] doubleArray27 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray28, (java.lang.Object) ' ');
        boolean[] booleanArray35 = new boolean[] { false, true, true, true };
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray35);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray28, (java.lang.Object) booleanArray36, (int) (byte) 10);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray36, 1);
        boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray22, booleanArray36);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false, true]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, false, false, false, true, false, true, true, true]");
    }
}

