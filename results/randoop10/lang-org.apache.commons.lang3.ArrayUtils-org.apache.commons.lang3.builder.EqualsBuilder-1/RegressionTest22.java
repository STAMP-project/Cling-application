import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest22 {

    public static boolean debug = false;

    @Test
    public void test11001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11001");
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray6, (byte) 10);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray6);
        byte[] byteArray11 = null;
        byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder13.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray17 = new double[] {};
        double[] doubleArray21 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray21);
        double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.add(doubleArray21, (double) (byte) 10);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray21, (double) 0L, 0);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray21);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray21, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder13.append(doubleArray17, doubleArray21);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray37 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray37);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.add(doubleArray37, (double) (byte) 10);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray40, (double) 10.0f);
        double[] doubleArray46 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray46);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.add(doubleArray46, (double) (byte) 10);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray46, (double) 0L, 0);
        double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray46);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray46, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray40, doubleArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder32.append(doubleArray33, doubleArray46);
        byte[] byteArray59 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray59);
        byte[] byteArray61 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray63 = org.apache.commons.lang3.ArrayUtils.add(byteArray61, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder58.append(byteArray59, byteArray61);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray11, byteArray61);
        byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray66);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray11, byteArray66);
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray6, byteArray66);
        byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.clone(byteArray66);
        byte[] byteArray72 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray66, (byte) 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
    }

    @Test
    public void test11002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11002");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.clone(floatArray6);
        float[] floatArray14 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray14);
        float[] floatArray18 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(floatArray18, (float) 0);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray14, floatArray18);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray14);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray14);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray6, floatArray14);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray6, (float) 0L, (int) (byte) 0);
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray6, (int) (short) -1, (int) (byte) -1);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) (short) 0);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray6);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray34, (float) 8);
        float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.add(floatArray34, (float) 7);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 1.0, 7.0]");
    }

    @Test
    public void test11003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11003");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        java.lang.Character[] charArray21 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, 'a');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.clone(charArray24);
        java.lang.Character[] charArray31 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray31, 'a');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.add(charArray33, '#');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.remove(charArray33, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.append(charArray25, charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder38.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder38.appendSuper(true);
        double[] doubleArray46 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray46);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.add(doubleArray46, (double) (byte) 10);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray49, (double) 10.0f);
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray49);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.add(doubleArray52, (double) 1.0f);
        double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray52);
        double[] doubleArray59 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray59);
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.add(doubleArray59, (double) (byte) 10);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray62, (double) 10.0f);
        double[] doubleArray68 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray68);
        double[] doubleArray71 = org.apache.commons.lang3.ArrayUtils.add(doubleArray68, (double) (byte) 10);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray68, (double) 0L, 0);
        double[] doubleArray75 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray68);
        int int78 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray68, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray62, doubleArray68);
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray55, doubleArray68);
        double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.add(doubleArray68, (double) 3);
        double[] doubleArray83 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder42.append(doubleArray82, doubleArray83);
        double[] doubleArray87 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray82, 0, 11);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 10.0, 100.0, 3.0]");
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[0.0, 10.0, 100.0, 3.0]");
    }

    @Test
    public void test11004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11004");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 10, (byte) 0);
        java.lang.Boolean boolean8 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder3.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder11.append(true, false);
        float[] floatArray18 = new float[] { (short) 100, 0, 10 };
        float[] floatArray21 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray21);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(floatArray21, (float) 0);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.add(floatArray21, 10.0f);
        float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray18, floatArray21);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray21);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(floatArray21, (float) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray21);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(floatArray21, (float) (byte) 1);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray21, (float) 4);
        java.lang.Float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray36);
        float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray37, (float) 'a');
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray39, (float) 5);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder14.append(floatArray21, floatArray39);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray39, 0.0f, (int) (byte) 0);
        int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray39, (float) 10, (-1));
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
    }

    @Test
    public void test11005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11005");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray24 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray24);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray24, (double) (byte) 10);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) 10.0f);
        double[] doubleArray33 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray33);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, (double) (byte) 10);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, (double) 0L, 0);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray33);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray33, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray27, doubleArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder19.append(doubleArray20, doubleArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((long) (short) 100, (long) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder48.appendSuper(false);
        java.lang.Boolean boolean51 = equalsBuilder50.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertEquals("'" + boolean51 + "' != '" + false + "'", boolean51, false);
    }

    @Test
    public void test11006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11006");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.add(charArray7, '#');
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.subarray(charArray7, (int) (byte) -1, (int) '#');
        java.lang.Character[] charArray18 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray18);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray18, 'a');
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.clone(charArray21);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.addAll(charArray7, charArray21);
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray23, 'a');
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, '4', 8);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 9 + "'", int25 == 9);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test11007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11007");
        double[] doubleArray0 = null;
        double[] doubleArray4 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray4);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray5);
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray0, doubleArray6);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray7);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray7, (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test11008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11008");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        objMap31.clear();
        int int40 = objMap31.size();
        java.lang.Short[] shortArray42 = new java.lang.Short[] { (short) 1 };
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray42);
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42, (short) (byte) 100);
        short[] shortArray47 = new short[] {};
        java.lang.Short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray47);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray46, shortArray47);
        short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray49, (short) 0);
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray51, (int) ' ', 0);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray51);
        boolean boolean56 = objMap31.containsValue((java.lang.Object) shortArray51);
        int[] intArray61 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray62 = org.apache.commons.lang3.ArrayUtils.clone(intArray61);
        int[] intArray64 = org.apache.commons.lang3.ArrayUtils.add(intArray61, (int) 'a');
        int[] intArray69 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray70 = org.apache.commons.lang3.ArrayUtils.clone(intArray69);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray70);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray64, intArray70);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray64);
        int[] intArray74 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray64);
        int[] intArray79 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray80 = org.apache.commons.lang3.ArrayUtils.clone(intArray79);
        int[] intArray81 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray79);
        int[] intArray82 = org.apache.commons.lang3.ArrayUtils.addAll(intArray64, intArray79);
        int int84 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray79, (int) ' ');
        int[] intArray85 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray79);
        int[] intArray87 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray79, 1);
        int[] intArray92 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray93 = org.apache.commons.lang3.ArrayUtils.clone(intArray92);
        int[] intArray94 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray92);
        int[] intArray95 = org.apache.commons.lang3.ArrayUtils.addAll(intArray79, intArray94);
        int int97 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray94, 2);
        boolean boolean98 = objMap31.equals((java.lang.Object) int97);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[1]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[1]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[1]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[1]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, -1, -1, 0, 97, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[100, -1, -1, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test11009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11009");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        boolean[] booleanArray14 = new boolean[] { false, false, false, false };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray14);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray14, false);
        java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray14);
        java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14);
        java.lang.Boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray20);
        java.lang.Boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray21);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray22, true);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) charArray8, (java.lang.Object[]) booleanArray22);
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray22, true);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false, false]");
    }

    @Test
    public void test11010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11010");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray9);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray9);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray9);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray9, false);
        boolean[] booleanArray19 = new boolean[] { false, false, false, false };
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray19);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray19, false);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.add(booleanArray19, true);
        boolean[] booleanArray25 = null;
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray19, booleanArray25);
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray25);
        boolean[] booleanArray32 = new boolean[] { false, false, false, false };
        boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray32);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray32, false);
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.add(booleanArray32, true);
        boolean[] booleanArray38 = null;
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray32, booleanArray38);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray25, booleanArray32);
        boolean[] booleanArray41 = null;
        boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray40, booleanArray41);
        java.lang.Boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray42);
        short[] shortArray48 = new short[] { (short) 100, (byte) 100, (byte) 1, (byte) 1 };
        short[] shortArray53 = new short[] { (short) 100, (byte) 100, (byte) 1, (byte) 1 };
        short[] shortArray58 = new short[] { (short) 100, (byte) 100, (byte) 1, (byte) 1 };
        short[] shortArray63 = new short[] { (short) 100, (byte) 100, (byte) 1, (byte) 1 };
        short[][] shortArray64 = new short[][] { shortArray48, shortArray53, shortArray58, shortArray63 };
        short[][] shortArray67 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray64, (int) (byte) -1, (int) '4');
        int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) booleanArray43, (java.lang.Object) shortArray64, 0);
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray43);
        boolean[] booleanArray71 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray9, booleanArray70);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray70, true);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false, true]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, false, true]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[100, 100, 1, 1]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[100, 100, 1, 1]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[100, 100, 1, 1]");
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[100, 100, 1, 1]");
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test11011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11011");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) 10);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.add(shortArray2, 1, (short) (byte) -1);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray2);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1, -1]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test11012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11012");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.lang.Boolean[][] booleanArray33 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray40 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray47 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray54 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray61 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray62 = new java.lang.Boolean[][] { booleanArray40, booleanArray47, booleanArray54, booleanArray61 };
        java.lang.Boolean[][] booleanArray63 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray33, booleanArray62);
        java.util.Map<java.lang.Object, java.lang.Object> objMap64 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray33);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = objMap64.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList66 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean67 = objEntrySet65.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList66);
        boolean boolean68 = objEntrySet65.isEmpty();
        boolean boolean69 = objEntrySet32.addAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntrySet65);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList70 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor71 = objEntryList70.iterator();
        java.lang.String[] strArray72 = new java.lang.String[] {};
        java.lang.String[] strArray76 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray77 = org.apache.commons.lang3.ArrayUtils.addAll(strArray72, strArray76);
        java.lang.Comparable<java.lang.String>[] strComparableArray78 = objEntryList70.toArray((java.lang.Comparable<java.lang.String>[]) strArray72);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream79 = objEntryList70.parallelStream();
        int int80 = objEntryList70.size();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList81 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor82 = objEntryList81.iterator();
        java.util.Map.Entry<java.lang.Object, java.lang.Object> objEntry83 = null;
        boolean boolean84 = objEntryList81.add(objEntry83);
        java.lang.Object[] objArray85 = objEntryList81.toArray();
        boolean boolean86 = objEntryList70.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList81);
        java.util.Spliterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySpliterator87 = objEntryList70.spliterator();
        boolean boolean88 = objEntrySet65.addAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList70);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertNotNull(objMap64);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objEntryItor71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strComparableArray78);
        org.junit.Assert.assertNotNull(objEntryStream79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(objEntryItor82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[null]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objEntrySpliterator87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test11013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11013");
        byte[] byteArray3 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 10, (int) (short) -1);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray3, (byte) 10);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray3, (byte) 100);
        byte[] byteArray16 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray16, (byte) 10, (int) (short) -1);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray16);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray16, (byte) 1, (int) ' ');
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray3, byteArray16);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray24);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray24);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray24);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.add(byteArray24, 13, (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 13, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, 10, 0, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 0, 10, 0, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test11014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11014");
        int[] intArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray0, (int) 'a', (int) (short) 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test11015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11015");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(shortArray8, (short) 100);
        java.lang.Short[] shortArray12 = new java.lang.Short[] { (short) 1 };
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray12);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12, (short) (byte) 100);
        short[] shortArray17 = new short[] {};
        java.lang.Short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray17);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray16, shortArray17);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray16, 4, (-1));
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray22, (int) (byte) -1, (int) '4');
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.clone(shortArray22);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray8, shortArray22);
        java.lang.Short[] shortArray29 = new java.lang.Short[] { (short) 1 };
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray29);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray29);
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray29, (short) (byte) 100);
        short[] shortArray34 = new short[] {};
        java.lang.Short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray34);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray33, shortArray34);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray36, (short) 0);
        java.lang.Short[] shortArray40 = new java.lang.Short[] { (short) 1 };
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray40);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray40);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray40, (short) (byte) 100);
        short[] shortArray45 = new short[] {};
        java.lang.Short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray45);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray44, shortArray45);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray44, 4, (-1));
        short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray38, shortArray50);
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray22, shortArray51);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray52, (int) (short) 10, (int) (byte) 1);
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray52, (short) 0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[1]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[1]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[1]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[1]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[1]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[1]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[1]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
    }

    @Test
    public void test11016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11016");
        byte[] byteArray3 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 10, (int) (short) -1);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray3, (byte) 10);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray3, (byte) 100);
        byte[] byteArray16 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray16, (byte) 10, (int) (short) -1);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray16);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray16, (byte) 1, (int) ' ');
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray3, byteArray16);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray24, (byte) -1);
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray24, (byte) -1);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray24);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray24);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10, 0, 0, 10, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 0, 0, 10, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, 10, 0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test11017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11017");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray42, longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder19.append(longArray26, longArray50);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray50, (long) (short) 0, 2);
        java.lang.Long[] longArray57 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        long[] longArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray57);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray57);
        int int60 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) longArray57);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray57);
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray57, (long) 4);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 5 + "'", int60 == 5);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[32, 100, 10, 10, 1]");
    }

    @Test
    public void test11018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11018");
        float[] floatArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray0, (float) 6, (int) (short) -1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test11019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11019");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((long) (short) 10, (long) '#');
        boolean boolean9 = equalsBuilder8.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder8.append((float) 4, 0.0f);
        java.lang.Short[] shortArray14 = new java.lang.Short[] { (short) 1 };
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray15, (short) 10);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray15, (short) 100, (int) (byte) 1);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray15);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray21);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray21, 1, (int) (short) 0);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.add(shortArray21, (short) 100);
        java.lang.Short[] shortArray29 = new java.lang.Short[] { (short) 1 };
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray29);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray29);
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray29, (short) (byte) 100);
        short[] shortArray34 = new short[] {};
        java.lang.Short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray34);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray33, shortArray34);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(shortArray36, (short) 100);
        java.lang.Short[] shortArray40 = new java.lang.Short[] { (short) 1 };
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray40);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray40);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray40, (short) (byte) 100);
        short[] shortArray45 = new short[] {};
        java.lang.Short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray45);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray44, shortArray45);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray44, 4, (-1));
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray50, (int) (byte) -1, (int) '4');
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.clone(shortArray50);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray36, shortArray50);
        short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray21, shortArray36);
        java.lang.Short[] shortArray58 = new java.lang.Short[] { (short) 1 };
        short[] shortArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray58);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray58);
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray58, (short) (byte) 100);
        short[] shortArray63 = new short[] {};
        java.lang.Short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray63);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray62, shortArray63);
        short[] shortArray67 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray65, (short) 0);
        int int70 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray65, (short) (byte) 10, (int) (short) -1);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.add(shortArray65, (short) 1);
        int int74 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray72, (short) 0);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray36, shortArray72);
        java.lang.Short[] shortArray77 = new java.lang.Short[] { (short) 1 };
        short[] shortArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray77);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray77);
        short[] shortArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray77, (short) (byte) 100);
        short[] shortArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray77, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder8.append(shortArray72, shortArray83);
        java.lang.Short[] shortArray86 = new java.lang.Short[] { (short) 1 };
        short[] shortArray87 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray86);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray86);
        short[] shortArray89 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray86);
        short[] shortArray90 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder8.append(shortArray89, shortArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder8.append((double) 0.0f, (double) (byte) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1, 100]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[1]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[1]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[1]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[1]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[1]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[1, 1]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[1]");
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[1]");
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[]");
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[1]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[1]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[1, 1]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[1]");
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray81), "[1]");
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[1]");
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[1]");
        org.junit.Assert.assertNotNull(shortArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray89), "[1]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
    }

    @Test
    public void test11020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11020");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 100.0f, (double) 0);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray3, (int) (byte) 0);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 4, 100);
        double[] doubleArray18 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray18);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.add(doubleArray18, (double) (byte) 10);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray18, (double) 0L, 0);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray18, (double) (short) -1, (int) (byte) -1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.add(doubleArray18, (double) 2);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray18, (double) 1L);
        double[] doubleArray35 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray35);
        double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.add(doubleArray35, (double) (byte) 10);
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray35, (double) (short) 0, (int) ' ', (double) 1L);
        double[] doubleArray46 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray46);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.add(doubleArray46, (double) (byte) 10);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray46, (double) 0L, 0);
        double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray46);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray46, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.add(doubleArray46, (double) 4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder59.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray63 = new double[] {};
        double[] doubleArray67 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray67);
        double[] doubleArray70 = org.apache.commons.lang3.ArrayUtils.add(doubleArray67, (double) (byte) 10);
        int int73 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray67, (double) 0L, 0);
        double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray67);
        int int77 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray67, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder59.append(doubleArray63, doubleArray67);
        int int81 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray63, (double) 'a', (int) '4');
        double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray46, doubleArray63);
        double[] doubleArray85 = org.apache.commons.lang3.ArrayUtils.add(doubleArray46, 0, (double) 100);
        double[] doubleArray86 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray46);
        double[] doubleArray87 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray35, doubleArray46);
        double[] doubleArray88 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray31, doubleArray46);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray3, doubleArray88);
        int int93 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) (-1.0f), (int) (byte) -1, (double) 0);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 100.0, 2.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 10.0, 100.0, 4.0]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
    }

    @Test
    public void test11021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11021");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor35 = objEntryList33.iterator();
        boolean[] booleanArray40 = new boolean[] { false, false, false, false };
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray40, false);
        java.lang.Boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray40);
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray45);
        boolean boolean47 = objEntryList33.remove((java.lang.Object) booleanArray45);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream48 = objEntryList33.stream();
        int int49 = objEntryList33.size();
        java.util.Spliterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySpliterator50 = objEntryList33.spliterator();
        java.lang.Boolean[][] booleanArray51 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray58 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray65 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray72 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray79 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray80 = new java.lang.Boolean[][] { booleanArray58, booleanArray65, booleanArray72, booleanArray79 };
        java.lang.Boolean[][] booleanArray81 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray51, booleanArray80);
        java.util.Map<java.lang.Object, java.lang.Object> objMap82 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray51);
        java.lang.Short[] shortArray85 = new java.lang.Short[] { (short) 1 };
        short[] shortArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray85);
        short[] shortArray88 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray85, (short) 10);
        java.lang.Object obj89 = objMap82.replace((java.lang.Object) 2, (java.lang.Object) shortArray88);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray88);
        boolean boolean91 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray88);
        boolean boolean93 = org.apache.commons.lang3.ArrayUtils.contains(shortArray88, (short) (byte) 0);
        boolean boolean94 = objEntryList33.equals((java.lang.Object) shortArray88);
        java.util.Spliterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySpliterator95 = objEntryList33.spliterator();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEntryItor35);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objEntryStream48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(objEntrySpliterator50);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertNotNull(objMap82);
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[1]");
        org.junit.Assert.assertNotNull(shortArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray88), "[1]");
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(objEntrySpliterator95);
    }

    @Test
    public void test11022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11022");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean35 = objEntryList33.remove((java.lang.Object) byteArray34);
        boolean boolean36 = objEntrySet32.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.lang.Object[] objArray37 = objEntryList33.toArray();
        java.util.Map.Entry<java.lang.Object, java.lang.Object> objEntry38 = null;
        boolean boolean39 = objEntryList33.add(objEntry38);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList40 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor41 = objEntryList40.iterator();
        java.util.Map.Entry<java.lang.Object, java.lang.Object> objEntry42 = null;
        boolean boolean43 = objEntryList40.add(objEntry42);
        java.lang.Boolean[][] booleanArray44 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray51 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray58 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray65 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray72 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray73 = new java.lang.Boolean[][] { booleanArray51, booleanArray58, booleanArray65, booleanArray72 };
        java.lang.Boolean[][] booleanArray74 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray44, booleanArray73);
        java.util.Map<java.lang.Object, java.lang.Object> objMap75 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray44);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet76 = objMap75.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList77 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray78 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean79 = objEntryList77.remove((java.lang.Object) byteArray78);
        boolean boolean80 = objEntrySet76.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList77);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor81 = objEntrySet76.iterator();
        boolean boolean82 = objEntryList40.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntrySet76);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream83 = objEntryList40.parallelStream();
        boolean boolean84 = objEntryList33.removeAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList40);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList85 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor86 = objEntryList85.iterator();
        java.lang.String[] strArray87 = new java.lang.String[] {};
        java.lang.String[] strArray91 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray92 = org.apache.commons.lang3.ArrayUtils.addAll(strArray87, strArray91);
        java.lang.Comparable<java.lang.String>[] strComparableArray93 = objEntryList85.toArray((java.lang.Comparable<java.lang.String>[]) strArray87);
        java.lang.Object[] objArray94 = objEntryList85.toArray();
        boolean boolean95 = objEntryList40.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList85);
        java.lang.Object obj96 = null;
        boolean boolean97 = objEntryList85.equals(obj96);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor98 = objEntryList85.iterator();
        objEntryList85.clear();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objEntryItor41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertNotNull(objMap75);
        org.junit.Assert.assertNotNull(objEntrySet76);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objEntryItor81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(objEntryStream83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(objEntryItor86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(strComparableArray93);
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(objEntryItor98);
    }

    @Test
    public void test11023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11023");
        short[] shortArray0 = new short[] {};
        java.lang.Short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray0);
        boolean boolean2 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray0);
        short[] shortArray3 = null;
        java.lang.Short[] shortArray5 = new java.lang.Short[] { (short) 1 };
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray5);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5, (short) (byte) 100);
        short[] shortArray10 = new short[] {};
        java.lang.Short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray10);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray9, shortArray10);
        java.lang.Short[] shortArray14 = new java.lang.Short[] { (short) 1 };
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray14);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14, (short) (byte) 100);
        short[] shortArray19 = new short[] {};
        java.lang.Short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray19);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray18, shortArray19);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray12, shortArray19);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray3, shortArray22);
        java.lang.Short[] shortArray25 = new java.lang.Short[] { (short) 1 };
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray25);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray25);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray25, (short) (byte) 100);
        short[] shortArray30 = new short[] {};
        java.lang.Short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray30);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray29, shortArray30);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray34);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) (byte) 100);
        short[] shortArray39 = new short[] {};
        java.lang.Short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray39);
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray38, shortArray39);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray32, shortArray39);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.add(shortArray42, (short) (byte) 10);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray42, 0, 1);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray23, shortArray47);
        short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray47, (int) '#', 6);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray51);
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray0, shortArray51);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray0, (short) (byte) 10);
        short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.add(shortArray55, (short) 100);
        short[] shortArray59 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray57, (short) -1);
        java.lang.Short[] shortArray61 = new java.lang.Short[] { (short) 1 };
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray61);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray61);
        short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray61);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray61, (short) 0);
        short[] shortArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray61);
        java.lang.Short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray61);
        java.lang.Short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray61);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray61);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray61, (short) (byte) 1);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray59, shortArray72);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray0), "[]");
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[1]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[1]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[1]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[1]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[1]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[1]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[1]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[100]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[100]");
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[1]");
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[1]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[1]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[1]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[1]");
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[1]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test11024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11024");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0.0d);
        char[] charArray10 = new char[] { 'a' };
        java.lang.Character[] charArray11 = org.apache.commons.lang3.ArrayUtils.toObject(charArray10);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) 0.0d, (java.lang.Object) charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.clone(charArray10);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray10, '4');
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.remove(charArray10, (int) (short) 0);
        java.lang.Character[] charArray18 = org.apache.commons.lang3.ArrayUtils.toObject(charArray17);
        double[] doubleArray22 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray22);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.add(doubleArray22, (double) (byte) 10);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray22, 0.0d);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray22);
        double[] doubleArray32 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray32);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.add(doubleArray32, (double) (byte) 10);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray35, (double) 10.0f);
        double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray35);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.add(doubleArray38, (double) 1.0f);
        java.lang.Double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray40);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray22, doubleArray40);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray42, 10.0d);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.add(doubleArray42, (double) 'a');
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray46, (double) 10, (double) (byte) 10);
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray46, (double) 0.0f);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) charArray18, (java.lang.Object) doubleArray46);
        int int54 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray46, (double) (-1L));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0, 10.0, 1.0, 97.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
    }

    @Test
    public void test11025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11025");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        short[] shortArray9 = new short[] {};
        java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray9);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray8, shortArray9);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.add(shortArray9, (short) -1);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.add(shortArray9, (short) (byte) -1);
        java.lang.Short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray9);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray9);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[-1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[-1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test11026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11026");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        int[] intArray14 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.clone(intArray14);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.add(intArray14, (int) 'a');
        int[] intArray22 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.clone(intArray22);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray23);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray23);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray17);
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray17);
        int[] intArray32 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.clone(intArray32);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray32);
        int[] intArray35 = org.apache.commons.lang3.ArrayUtils.addAll(intArray17, intArray32);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray32, (int) ' ');
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray32);
        boolean boolean40 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray9, (java.lang.Object) intArray38, true);
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) '#', 10);
        char[] charArray45 = new char[] { 'a' };
        java.lang.Character[] charArray46 = org.apache.commons.lang3.ArrayUtils.toObject(charArray45);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray45);
        java.lang.Character[] charArray53 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray53, 'a');
        int int58 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray55, 'a', (-1));
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray45, charArray55);
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.clone(charArray55);
        char[] charArray62 = org.apache.commons.lang3.ArrayUtils.add(charArray60, ' ');
        char[] charArray63 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray62);
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.clone(charArray63);
        java.lang.Character[] charArray70 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray70);
        char[] charArray73 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray70, 'a');
        boolean[] booleanArray78 = new boolean[] { false, true, true, true };
        boolean[] booleanArray79 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray78);
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray78);
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray70, (java.lang.Object) booleanArray78);
        char[] charArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray70, '4');
        boolean boolean84 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray83);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray63, charArray83);
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.contains(charArray83, '#');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, -1, -1, 0, 97, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a a # ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a a # ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a,  , a,  , #,  ]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), " 44a4a a # ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), " 44a4a a # ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[ , 4, 4, a, 4, a,  , a,  , #,  ]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), " 44a4a a # ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), " 44a4a a # ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[ , 4, 4, a, 4, a,  , a,  , #,  ]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray79), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test11027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11027");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        java.lang.Float[] floatArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray3);
        float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray3);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.add(floatArray5, 0.0f);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray5, (float) 5, (int) ' ');
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, 3, 100);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray13, (float) 100L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray15);
        float[] floatArray20 = new float[] { (short) 100, 0, 10 };
        float[] floatArray23 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray23);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(floatArray23, (float) 0);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.add(floatArray23, 10.0f);
        float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray20, floatArray23);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray23);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(floatArray23, (float) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray23);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray23, (float) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray23);
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.clone(floatArray23);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray15, floatArray23);
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray23, (float) 0L);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
    }

    @Test
    public void test11028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11028");
        char[] charArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray0, '4', (int) (short) 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test11029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11029");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        boolean[] booleanArray27 = new boolean[] { false, true, true, true };
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray27);
        boolean[] booleanArray33 = new boolean[] { false, false, false, false };
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray33);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray33, false);
        boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.add(booleanArray33, true);
        boolean[] booleanArray43 = new boolean[] { false, false, false, false };
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray43, false);
        java.lang.Boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray43);
        boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray33, booleanArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder0.append(booleanArray28, booleanArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append((short) 10, (short) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder55.append(false, true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder58);
    }

    @Test
    public void test11030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11030");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 4, 4, (-1), 0 };
        java.lang.Integer[] intArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4);
        boolean[] booleanArray10 = new boolean[] { false, false, false, false };
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray10, false);
        java.lang.Boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray5, (java.lang.Object) booleanArray14, (int) '#');
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray5);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.add(intArray17, 3, (int) (byte) 100);
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.clone(intArray20);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray20);
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.clone(intArray20);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray23, 10);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray23, 100);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[4, 4, -1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[4, 4, -1, 100, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[4, 4, -1, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[4, 4, -1, 100, 0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
    }

    @Test
    public void test11031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11031");
        short[] shortArray0 = null;
        java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 1 };
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray2);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2, (short) (byte) 100);
        short[] shortArray7 = new short[] {};
        java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray7);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray6, shortArray7);
        java.lang.Short[] shortArray11 = new java.lang.Short[] { (short) 1 };
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray11);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray11);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray11, (short) (byte) 100);
        short[] shortArray16 = new short[] {};
        java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray15, shortArray16);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray9, shortArray16);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray0, shortArray19);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray20, 3, 1);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.add(shortArray23, (short) 0);
        java.lang.Short[] shortArray27 = new java.lang.Short[] { (short) 1 };
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray27);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray27);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray27, (short) (byte) 100);
        short[] shortArray32 = new short[] {};
        java.lang.Short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray32);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray31, shortArray32);
        java.lang.Short[] shortArray36 = new java.lang.Short[] { (short) 1 };
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray36);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray36);
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray36, (short) (byte) 100);
        short[] shortArray41 = new short[] {};
        java.lang.Short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray41);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray40, shortArray41);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray34, shortArray41);
        int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray34, (short) (byte) 1);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray25, shortArray34);
        int int50 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray25, (short) -1, (int) (short) 1);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray25, (short) -1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[1]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[1]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[1]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[1]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[0, 1]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
    }

    @Test
    public void test11032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11032");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { (-1.0d), 100.0d, 1.0d, 10.0d, (-1.0d), 100.0d };
        java.lang.Double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray7, (double) ' ');
        java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray7);
        java.lang.Double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray7);
        double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray7, (double) (byte) 10);
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray7);
        java.lang.String str16 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) doubleArray7, "{false,true,true,true}");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{-1.0,100.0,1.0,10.0,-1.0,100.0}" + "'", str16, "{-1.0,100.0,1.0,10.0,-1.0,100.0}");
    }

    @Test
    public void test11033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11033");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.Set<java.lang.Object> objSet33 = objMap31.keySet();
        java.util.Set<java.lang.Object> objSet34 = objMap31.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = objMap31.entrySet();
        java.lang.Short[] shortArray37 = new java.lang.Short[] { (short) 1 };
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray37);
        int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray38, (short) 10);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray38, (short) 100, (int) (byte) 1);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray38);
        java.lang.Short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        java.lang.Byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        java.lang.Byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray46);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) shortArray45, (java.lang.Object) byteArray47, 4);
        java.lang.Object obj50 = objMap31.replace((java.lang.Object) shortArray38, (java.lang.Object) int49);
        java.lang.Character[] charArray56 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray56, 'a');
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.add(charArray58, '#');
        char[] charArray62 = org.apache.commons.lang3.ArrayUtils.remove(charArray60, 2);
        char[] charArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray62);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray62);
        java.lang.Object obj65 = objMap31.remove((java.lang.Object) charArray62);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet66 = objMap31.entrySet();
        int int67 = objEntrySet66.size();
        objEntrySet66.clear();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[1]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[1]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a,  ,  , #, #]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEntrySet66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
    }

    @Test
    public void test11034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11034");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray4, (byte) 100);
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray6);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray7);
        java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray7);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray7);
        byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray7, (byte) -1);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray7, (byte) -1);
        java.lang.Byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray7);
        java.lang.Byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray7);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray7);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray7);
        java.lang.Byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray7);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray19);
    }

    @Test
    public void test11035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11035");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray4);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray11 = org.apache.commons.lang3.ArrayUtils.add(intArray9, (int) ' ');
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.add(intArray11, 0, 3);
        java.lang.Integer[] intArray15 = org.apache.commons.lang3.ArrayUtils.toObject(intArray11);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray15, (-1));
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) intArray15);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray15, 5);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[100, -1, -1, 0, 32]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[3, 100, -1, -1, 0, 32]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0, 32]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, -1, -1, 0, 32]");
    }

    @Test
    public void test11036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11036");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        double[] doubleArray15 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray9, (java.lang.Object) doubleArray15);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray15, 3, 1);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (byte) -1, (int) '4', (double) (short) 10);
        double[] doubleArray28 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.add(doubleArray28, (double) (byte) 10);
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray28, (double) 0L, 0);
        double[] doubleArray38 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray38);
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.add(doubleArray38, (double) (byte) 10);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray38, (double) 0L, 0);
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray38);
        int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray38, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray38);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray20, doubleArray38);
        int int53 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray38, (double) '4', 2);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
    }

    @Test
    public void test11037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11037");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        java.lang.Long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray7);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray8);
        java.lang.Long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray8);
        boolean[] booleanArray11 = null;
        java.lang.Boolean[][] booleanArray12 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray19 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray26 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray33 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray40 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray41 = new java.lang.Boolean[][] { booleanArray19, booleanArray26, booleanArray33, booleanArray40 };
        java.lang.Boolean[][] booleanArray42 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray12, booleanArray41);
        java.util.Map<java.lang.Object, java.lang.Object> objMap43 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray12);
        java.lang.Short[] shortArray46 = new java.lang.Short[] { (short) 1 };
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray46);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray46, (short) 10);
        java.lang.Object obj50 = objMap43.replace((java.lang.Object) 2, (java.lang.Object) shortArray49);
        boolean[] booleanArray55 = new boolean[] { false, true, true, true };
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray55);
        boolean boolean57 = objMap43.containsKey((java.lang.Object) booleanArray55);
        int int59 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray55, true);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray11, booleanArray55);
        boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.add(booleanArray11, true);
        int int63 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray8, (java.lang.Object) booleanArray62);
        long[] longArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray8, (long) 100);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertNotNull(objMap43);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[1]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[1]");
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 3 + "'", int59 == 3);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[true]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[32, 100, 10, 10, 1]");
    }

    @Test
    public void test11038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11038");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        long[] longArray21 = org.apache.commons.lang3.ArrayUtils.add(longArray10, (int) (byte) 0, (long) 2);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.add(longArray21, (long) 2);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.subarray(longArray21, 100, 5);
        long[] longArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray26, 10L);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray28, (long) (byte) 0, (int) '4');
        long[] longArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray28);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[2, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[2, 32, 100, 10, 10, 1, 2]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[]");
    }

    @Test
    public void test11039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11039");
        java.lang.Integer[] intArray1 = new java.lang.Integer[] { 0 };
        java.lang.Integer[] intArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray1);
        int[] intArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2, (-1));
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2, (int) (byte) 100);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0]");
    }

    @Test
    public void test11040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11040");
        float[] floatArray3 = new float[] { 1L, 100L, 100 };
        int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray3, (float) (-1L), (int) (short) 100);
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray3);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray3);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[1.0, 100.0, 100.0]");
    }

    @Test
    public void test11041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11041");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray7);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray7);
        java.lang.Character[] charArray15 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, ' ');
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray17);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray7, charArray17);
        java.lang.Character[] charArray25 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray25, ' ');
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray27);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray28);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray7, charArray28);
        double[] doubleArray34 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray34);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.add(doubleArray34, (double) (byte) 10);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray34, 0.0d);
        char[] charArray41 = new char[] { 'a' };
        java.lang.Character[] charArray42 = org.apache.commons.lang3.ArrayUtils.toObject(charArray41);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) 0.0d, (java.lang.Object) charArray41);
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.clone(charArray41);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray28, charArray41);
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray41);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray46, '#', (int) (short) 1);
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.add(charArray46, '#');
        int int54 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray51, '4', (int) (short) 1);
        int int57 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray51, 'a', 9);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray51);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a, #]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test11042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11042");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        double[] doubleArray15 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray9, (java.lang.Object) doubleArray15);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray15);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray19, (double) 10);
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray19);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray19, (double) 'a', 2);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test11043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11043");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray24 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray24);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray24, (double) (byte) 10);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) 10.0f);
        double[] doubleArray33 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray33);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, (double) (byte) 10);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, (double) 0L, 0);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray33);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray33, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray27, doubleArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder19.append(doubleArray20, doubleArray33);
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray46);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.add(byteArray48, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder45.append(byteArray46, byteArray48);
        double[] doubleArray55 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray55);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.add(doubleArray55, (double) (byte) 10);
        double[] doubleArray62 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray62);
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.add(doubleArray62, (double) (byte) 10);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray65, (double) 10.0f);
        double[] doubleArray71 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray71);
        double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.add(doubleArray71, (double) (byte) 10);
        int int77 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray71, (double) 0L, 0);
        double[] doubleArray78 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray71);
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray71, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray65, doubleArray71);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray82);
        double[] doubleArray86 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray82, 0, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder51.append(doubleArray58, doubleArray82);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append((double) '4', (double) (-1));
        java.lang.Boolean boolean91 = equalsBuilder90.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertEquals("'" + boolean91 + "' != '" + false + "'", boolean91, false);
    }

    @Test
    public void test11044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11044");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean2 = objEntryList0.remove((java.lang.Object) byteArray1);
        boolean[] booleanArray7 = new boolean[] { false, false, false, false };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray7);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray7, false);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray7);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray7, true, 0);
        boolean boolean15 = objEntryList0.contains((java.lang.Object) int14);
        java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        java.lang.reflect.Type[] typeArray17 = objEntryList0.toArray((java.lang.reflect.Type[]) wildcardClassArray16);
        int[] intArray24 = new int[] { (short) 1, (byte) 0, 3, 'a', 0, (byte) 1 };
        int[] intArray31 = new int[] { (short) 1, (byte) 0, 3, 'a', 0, (byte) 1 };
        int[] intArray38 = new int[] { (short) 1, (byte) 0, 3, 'a', 0, (byte) 1 };
        int[] intArray45 = new int[] { (short) 1, (byte) 0, 3, 'a', 0, (byte) 1 };
        int[][] intArray46 = new int[][] { intArray24, intArray31, intArray38, intArray45 };
        int[][][] intArray47 = new int[][][] { intArray46 };
        int[][] intArray48 = new int[][] {};
        int[][] intArray49 = org.apache.commons.lang3.ArrayUtils.toArray(intArray48);
        int[][][] intArray50 = org.apache.commons.lang3.ArrayUtils.add(intArray47, intArray49);
        int[] intArray51 = new int[] {};
        int[] intArray52 = org.apache.commons.lang3.ArrayUtils.clone(intArray51);
        java.lang.Integer[] intArray53 = org.apache.commons.lang3.ArrayUtils.toObject(intArray52);
        int[][][] intArray54 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray50, (java.lang.Object) intArray52);
        int[] intArray59 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray60 = org.apache.commons.lang3.ArrayUtils.clone(intArray59);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray60);
        java.lang.Integer[] intArray62 = org.apache.commons.lang3.ArrayUtils.toObject(intArray60);
        java.lang.Integer[] intArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray62);
        java.lang.Integer[] intArray64 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray62);
        int[] intArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray64, 6);
        int[] intArray67 = org.apache.commons.lang3.ArrayUtils.addAll(intArray52, intArray66);
        boolean boolean68 = objEntryList0.contains((java.lang.Object) intArray52);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray16);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[1, 0, 3, 97, 0, 1]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[1, 0, 3, 97, 0, 1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 0, 3, 97, 0, 1]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[1, 0, 3, 97, 0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test11045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11045");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.clone(floatArray6);
        float[] floatArray15 = new float[] { (short) 100, 0, 10 };
        float[] floatArray18 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(floatArray18, (float) 0);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.add(floatArray18, 10.0f);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray15, floatArray18);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray6, floatArray15);
        float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray25, (float) (short) 100);
        float[] floatArray30 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray30);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(floatArray30, (float) 0);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.add(floatArray30, 10.0f);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray27, floatArray30);
        float[] floatArray43 = new float[] { 10.0f, 100, (short) -1, (short) 0, 100L, (short) 10 };
        float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray43);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray44);
        float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray27, floatArray44);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray44, (float) (byte) -1, (int) (short) 0);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[10.0, 100.0, -1.0, 0.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[10.0, 100.0, -1.0, 0.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[10.0, 100.0, -1.0, 0.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[-1.0, 1.0, 0.0, 10.0, 10.0, 100.0, -1.0, 0.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test11046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11046");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray4);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray11 = org.apache.commons.lang3.ArrayUtils.add(intArray9, (int) ' ');
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.add(intArray11, 0, 3);
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.clone(intArray14);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[100, -1, -1, 0, 32]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[3, 100, -1, -1, 0, 32]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[3, 100, -1, -1, 0, 32]");
    }

    @Test
    public void test11047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11047");
        java.lang.Float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray0);
        float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray1, (float) 'a');
        int int5 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray3, (float) 100L);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray3);
        float[] floatArray9 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray9);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(floatArray9, (float) 0);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray9, (float) 10L);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray9, (float) (-1));
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.remove(floatArray9, (int) (byte) 0);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray9);
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray9);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) floatArray3, (java.lang.Object) floatArray20);
        org.junit.Assert.assertNotNull(floatArray0);
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[]");
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test11048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11048");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray39 = new double[] {};
        double[] doubleArray43 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray43);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.add(doubleArray43, (double) (byte) 10);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray43, (double) 0L, 0);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray43);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray43, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder35.append(doubleArray39, doubleArray43);
        long[] longArray60 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.clone(longArray60);
        java.lang.Long[] longArray62 = org.apache.commons.lang3.ArrayUtils.toObject(longArray61);
        long[] longArray68 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray69 = org.apache.commons.lang3.ArrayUtils.clone(longArray68);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray61, longArray69);
        long[] longArray76 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray77 = org.apache.commons.lang3.ArrayUtils.clone(longArray76);
        java.lang.Long[] longArray78 = org.apache.commons.lang3.ArrayUtils.toObject(longArray77);
        long[] longArray84 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray85 = org.apache.commons.lang3.ArrayUtils.clone(longArray84);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray77, longArray85);
        java.lang.Long[] longArray87 = org.apache.commons.lang3.ArrayUtils.toObject(longArray85);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder54.append(longArray61, longArray85);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray61);
        int int92 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray61, (long) 7, 4);
        boolean boolean93 = objEntrySet32.equals((java.lang.Object) 4);
        int int94 = objEntrySet32.size();
        java.util.Spliterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySpliterator95 = objEntrySet32.spliterator();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream96 = objEntrySet32.stream();
        java.util.Map.Entry<java.lang.Object, java.lang.Object> objEntry97 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean98 = objEntrySet32.add(objEntry97);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray69), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(longArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray77), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertNotNull(longArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray84), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray85), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(longArray87);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertNotNull(objEntrySpliterator95);
        org.junit.Assert.assertNotNull(objEntryStream96);
    }

    @Test
    public void test11049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11049");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray4);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4);
        float[] floatArray12 = new float[] { 1L, 100L, 100 };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray12, (float) (-1L), (int) (short) 100);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray12, (float) 'a', (int) (byte) 10);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) intArray4, (java.lang.Object) floatArray12);
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.add(intArray4, 4);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.subarray(intArray21, 100, (int) (short) 100);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray24, (int) (byte) -1);
        int[] intArray31 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.clone(intArray31);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray31, 100);
        int[] intArray35 = org.apache.commons.lang3.ArrayUtils.addAll(intArray24, intArray34);
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.subarray(intArray34, (int) (short) 1, 0);
        int[] intArray41 = org.apache.commons.lang3.ArrayUtils.add(intArray34, 0, 11);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, -1, -1, 0, 4]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[11, -1, -1, 0]");
    }

    @Test
    public void test11050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11050");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        boolean boolean35 = objEntrySet32.isEmpty();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream36 = objEntrySet32.parallelStream();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor37 = objEntrySet32.iterator();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream38 = objEntrySet32.stream();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objEntryStream36);
        org.junit.Assert.assertNotNull(objEntryItor37);
        org.junit.Assert.assertNotNull(objEntryStream38);
    }

    @Test
    public void test11051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11051");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray42, longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder19.append(longArray26, longArray50);
        java.lang.Boolean boolean54 = equalsBuilder19.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder19.append((long) 3, (long) 3);
        java.lang.Class<?> wildcardClass58 = equalsBuilder57.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test11052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11052");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        long[] longArray24 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray25 = org.apache.commons.lang3.ArrayUtils.clone(longArray24);
        long[] longArray28 = org.apache.commons.lang3.ArrayUtils.add(longArray25, (int) (short) 1, 0L);
        long[] longArray29 = org.apache.commons.lang3.ArrayUtils.addAll(longArray16, longArray25);
        java.lang.Long[] longArray30 = org.apache.commons.lang3.ArrayUtils.toObject(longArray16);
        long[] longArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray30, (long) 6);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[32, 0, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[32, 100, 10, 10, 1]");
    }

    @Test
    public void test11053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11053");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray13);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray13, 0);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray13, 1, (int) (short) -1);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.add(intArray13, (int) (byte) 100);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.remove(intArray13, 3);
        int[] intArray25 = new int[] {};
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.clone(intArray25);
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.addAll(intArray13, intArray25);
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.add(intArray13, 13);
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.subarray(intArray29, 0, (int) (byte) 10);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, -1, -1, 100, 100]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, -1, -1]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, -1, -1, 100, 13]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, -1, -1, 100, 13]");
    }

    @Test
    public void test11054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11054");
        byte[] byteArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray0, (byte) 10, 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test11055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11055");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) 0);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray18 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray19 = org.apache.commons.lang3.ArrayUtils.clone(longArray18);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder12.append(longArray19, longArray25);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder12.append((long) (byte) 10, (long) (byte) 10);
        long[] longArray36 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray37 = org.apache.commons.lang3.ArrayUtils.clone(longArray36);
        java.lang.Long[] longArray38 = org.apache.commons.lang3.ArrayUtils.toObject(longArray37);
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray38, (long) (short) 0);
        java.lang.Long[] longArray41 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray42);
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder30.append(longArray40, longArray44);
        int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray1, (java.lang.Object) longArray44);
        long[] longArray49 = org.apache.commons.lang3.ArrayUtils.add(longArray44, 0, (long) 2);
        java.lang.Long[] longArray50 = org.apache.commons.lang3.ArrayUtils.toObject(longArray49);
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray50);
        long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray50);
        byte[] byteArray53 = null;
        byte[] byteArray54 = null;
        byte[] byteArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray54);
        byte[] byteArray59 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int62 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray59, (byte) 10, (int) (short) -1);
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray59, (byte) 10);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray55, byteArray59);
        byte[] byteArray68 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray55, 100, 10);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray53, byteArray55);
        int int72 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray55, (byte) 1, (int) (byte) -1);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray50, (java.lang.Object) (byte) -1);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[2]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[2]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[2]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
    }

    @Test
    public void test11056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11056");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) 0);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        java.lang.Object obj11 = null;
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray1, obj11, 0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test11057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11057");
        long[] longArray0 = null;
        int int2 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray0, (long) '#');
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test11058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11058");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream35 = objEntrySet32.parallelStream();
        java.lang.Boolean[][] booleanArray36 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray43 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray50 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray57 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray64 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray65 = new java.lang.Boolean[][] { booleanArray43, booleanArray50, booleanArray57, booleanArray64 };
        java.lang.Boolean[][] booleanArray66 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray36, booleanArray65);
        java.util.Map<java.lang.Object, java.lang.Object> objMap67 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray36);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = objMap67.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList69 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean71 = objEntryList69.remove((java.lang.Object) byteArray70);
        boolean boolean72 = objEntrySet68.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList69);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor73 = objEntrySet68.iterator();
        java.lang.Object[] objArray74 = objEntrySet68.toArray();
        boolean boolean76 = objEntrySet68.remove((java.lang.Object) '4');
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList77 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor78 = objEntryList77.iterator();
        java.lang.String[] strArray79 = new java.lang.String[] {};
        java.lang.String[] strArray83 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray84 = org.apache.commons.lang3.ArrayUtils.addAll(strArray79, strArray83);
        java.lang.Comparable<java.lang.String>[] strComparableArray85 = objEntryList77.toArray((java.lang.Comparable<java.lang.String>[]) strArray79);
        boolean boolean86 = objEntrySet68.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList77);
        boolean boolean87 = objEntrySet32.removeAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntrySet68);
        byte[] byteArray88 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray90 = org.apache.commons.lang3.ArrayUtils.add(byteArray88, (byte) -1);
        boolean boolean91 = objEntrySet32.equals((java.lang.Object) byteArray88);
        byte[] byteArray92 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray88);
        int int95 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray92, (byte) -1, (int) (byte) 100);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEntryStream35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNotNull(objMap67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objEntryItor73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objEntryItor78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strComparableArray85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[]");
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(byteArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray92), "[]");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test11059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11059");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean2 = objEntryList0.remove((java.lang.Object) byteArray1);
        boolean[] booleanArray7 = new boolean[] { false, false, false, false };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray7);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray7, false);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray7);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray7, true, 0);
        boolean boolean15 = objEntryList0.contains((java.lang.Object) int14);
        java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        java.lang.reflect.Type[] typeArray17 = objEntryList0.toArray((java.lang.reflect.Type[]) wildcardClassArray16);
        boolean[][][][][] booleanArray18 = new boolean[][][][][] {};
        boolean[][][][][] booleanArray19 = objEntryList0.toArray(booleanArray18);
        boolean[][][] booleanArray20 = new boolean[][][] {};
        boolean[][][] booleanArray21 = new boolean[][][] {};
        boolean[][][] booleanArray22 = new boolean[][][] {};
        boolean[][][] booleanArray23 = new boolean[][][] {};
        boolean[][][][] booleanArray24 = new boolean[][][][] { booleanArray20, booleanArray21, booleanArray22, booleanArray23 };
        boolean[][][][] booleanArray26 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray24, (int) (short) 1);
        boolean[][][][][] booleanArray27 = org.apache.commons.lang3.ArrayUtils.add(booleanArray19, booleanArray26);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray16);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray27);
    }

    @Test
    public void test11060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11060");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor1 = objEntryList0.iterator();
        java.lang.String[] strArray2 = new java.lang.String[] {};
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray7 = org.apache.commons.lang3.ArrayUtils.addAll(strArray2, strArray6);
        java.lang.Comparable<java.lang.String>[] strComparableArray8 = objEntryList0.toArray((java.lang.Comparable<java.lang.String>[]) strArray2);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) strArray2);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) strArray2);
        org.junit.Assert.assertNotNull(objEntryItor1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strComparableArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test11061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11061");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, (int) (short) 10, (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder10.append(true, true);
        byte[] byteArray17 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray17, (byte) 10, (int) (short) -1);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray17);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray17, (byte) 1, (int) ' ');
        byte[] byteArray31 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray31);
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray31, (byte) 10);
        byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray17, byteArray31);
        byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray39 = org.apache.commons.lang3.ArrayUtils.add(byteArray36, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder10.append(byteArray17, byteArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder10.append(true, true);
        java.lang.Long[] longArray44 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray44);
        java.lang.Long[] longArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray45);
        long[] longArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray57 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray58 = org.apache.commons.lang3.ArrayUtils.clone(longArray57);
        long[] longArray64 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray65 = org.apache.commons.lang3.ArrayUtils.clone(longArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder51.append(longArray58, longArray64);
        long[] longArray69 = org.apache.commons.lang3.ArrayUtils.add(longArray58, (int) (byte) 0, (long) 2);
        long[] longArray71 = org.apache.commons.lang3.ArrayUtils.add(longArray69, (long) 2);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder10.append(longArray47, longArray69);
        long[] longArray73 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray47);
        long[] longArray74 = org.apache.commons.lang3.ArrayUtils.addAll(longArray9, longArray47);
        long[] longArray75 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray78 = org.apache.commons.lang3.ArrayUtils.subarray(longArray75, (int) (short) 0, 0);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray69), "[2, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray71), "[2, 32, 100, 10, 10, 1, 2]");
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[]");
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[]");
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[]");
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[]");
    }

    @Test
    public void test11062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11062");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        int[] intArray39 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.clone(intArray39);
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.add(intArray39, (int) 'a');
        int[] intArray47 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.clone(intArray47);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray48);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray42, intArray48);
        boolean boolean51 = objEntrySet32.remove((java.lang.Object) intArray42);
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.subarray(intArray42, 10, (int) (byte) 10);
        int[] intArray56 = org.apache.commons.lang3.ArrayUtils.add(intArray54, (int) (byte) 1);
        int[] intArray61 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray62 = org.apache.commons.lang3.ArrayUtils.clone(intArray61);
        int[] intArray64 = org.apache.commons.lang3.ArrayUtils.add(intArray61, (int) 'a');
        int[] intArray69 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray70 = org.apache.commons.lang3.ArrayUtils.clone(intArray69);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray70);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray64, intArray70);
        int int74 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray70, 0);
        int int77 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray70, 1, (int) (short) -1);
        int[] intArray79 = org.apache.commons.lang3.ArrayUtils.add(intArray70, (int) (byte) 100);
        int[] intArray81 = org.apache.commons.lang3.ArrayUtils.remove(intArray70, 3);
        int[] intArray82 = new int[] {};
        int[] intArray83 = org.apache.commons.lang3.ArrayUtils.clone(intArray82);
        int[] intArray84 = org.apache.commons.lang3.ArrayUtils.addAll(intArray70, intArray82);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray70);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray70);
        int[] intArray87 = org.apache.commons.lang3.ArrayUtils.addAll(intArray54, intArray70);
        int[] intArray90 = org.apache.commons.lang3.ArrayUtils.subarray(intArray87, (int) (short) 10, (int) (byte) 10);
        int[] intArray91 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray90);
        int int93 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray91, 6);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, -1, -1, 100, 100]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, -1, -1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[]");
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
    }

    @Test
    public void test11063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11063");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray3, 3, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray3);
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray3);
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray17);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray18, (float) (short) 1);
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray18, 100.0f);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[10.0, 0.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[10.0, 0.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
    }

    @Test
    public void test11064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11064");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        byte[] byteArray7 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray7, (byte) 10, (int) (short) -1);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray7);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray7, (byte) 1, (int) ' ');
        byte[] byteArray21 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray21, (byte) 10);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray7, byteArray21);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray26, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder0.append(byteArray7, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((byte) 10, (byte) -1);
        float[] floatArray36 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray36);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.contains(floatArray36, (float) 0);
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray36, (float) 10L);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray36, (float) (-1));
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.remove(floatArray36, (int) (byte) 0);
        int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray36, 100.0f, 2);
        float[] floatArray50 = org.apache.commons.lang3.ArrayUtils.add(floatArray36, (float) (short) 100);
        float[] floatArray53 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray54 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray53);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray53);
        float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray53, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder30.append(floatArray50, floatArray53);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[1.0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[-1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
    }

    @Test
    public void test11065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11065");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, 0);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) 4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder16.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray20 = new double[] {};
        double[] doubleArray24 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray24);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray24, (double) (byte) 10);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray24, (double) 0L, 0);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray24);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray24, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder16.append(doubleArray20, doubleArray24);
        int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) 'a', (int) '4');
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray20);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0, (double) 100);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray3);
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray43, (double) (byte) 10);
        boolean[] booleanArray50 = new boolean[] { false, false, false, false };
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray50);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray50, false);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.add(booleanArray50, true);
        double[] doubleArray61 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray61);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray55, (java.lang.Object) doubleArray61);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray61, 3, 1);
        int int69 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) 100, (double) 100.0f);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray43, doubleArray66);
        double[] doubleArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray43);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray71, (double) 0L);
        double[] doubleArray75 = org.apache.commons.lang3.ArrayUtils.add(doubleArray71, (double) 11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 4.0]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 10.0, 100.0, 11.0]");
    }

    @Test
    public void test11066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11066");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0.0d);
        char[] charArray10 = new char[] { 'a' };
        java.lang.Character[] charArray11 = org.apache.commons.lang3.ArrayUtils.toObject(charArray10);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) 0.0d, (java.lang.Object) charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.clone(charArray10);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray10, '4');
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.remove(charArray10, (int) (short) 0);
        java.lang.Character[] charArray18 = org.apache.commons.lang3.ArrayUtils.toObject(charArray17);
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray18, '#');
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray18);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray23 = org.apache.commons.lang3.ArrayUtils.remove(charArray21, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
    }

    @Test
    public void test11067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11067");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray4, (byte) 100);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder9.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder14.append((long) (short) 10, (long) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append(true, true);
        byte[] byteArray25 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray25, (byte) 10, (int) (short) -1);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray25);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray25, (byte) 1, (int) ' ');
        byte[] byteArray39 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray39);
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray39, (byte) 10);
        byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray25, byteArray39);
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.add(byteArray44, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder18.append(byteArray25, byteArray44);
        java.lang.Byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray44);
        byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.add(byteArray50, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder14.append(byteArray44, byteArray53);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray44);
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray8);
        byte[] byteArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray56);
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.add(byteArray57, (int) (byte) 0, (byte) 100);
        byte[] byteArray63 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray60, (int) (short) 100, (int) (byte) 100);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100, 1, 100, 10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 4 + "'", int42 == 4);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-1, 100, 1, 100, 10]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-1, 100, 1, 100, 10]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[100, -1, 100, 1, 100, 10]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[]");
    }

    @Test
    public void test11068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11068");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray13 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray13);
        java.lang.Long[] longArray15 = org.apache.commons.lang3.ArrayUtils.toObject(longArray14);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.clone(longArray14);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray16);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray17, (long) 1);
        long[] longArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray17, (long) (short) 100);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray17, (long) (short) -1, (int) (byte) 100);
        java.lang.Long[] longArray25 = org.apache.commons.lang3.ArrayUtils.toObject(longArray17);
        long[] longArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray17, (long) (byte) 10);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray17, (long) ' ');
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[32, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[32, 100, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test11069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11069");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f);
        double[] doubleArray12 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray12);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray12, (double) (byte) 10);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray12, (double) 0L, 0);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray12);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray6, doubleArray12);
        java.lang.Double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray12);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray12);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray25);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray26);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray26, (double) 8, (int) (byte) 10, (double) (short) 100);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test11070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11070");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray42, longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder19.append(longArray26, longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder19.append((byte) 1, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder19.append('a', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder59.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append((byte) 100, (byte) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
    }

    @Test
    public void test11071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11071");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.add(booleanArray11, 0, true);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray14, true, (int) ' ');
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray14);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray14, true, (int) (byte) 0);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false, true]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 4 + "'", int21 == 4);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test11072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11072");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        java.lang.Character[] charArray21 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, 'a');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.clone(charArray24);
        java.lang.Character[] charArray31 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray31, 'a');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.add(charArray33, '#');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.remove(charArray33, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.append(charArray25, charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder38.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append((double) 10, 0.0d);
        java.lang.Boolean boolean44 = equalsBuilder40.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder40.append((double) 100.0f, (double) (byte) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertEquals("'" + boolean44 + "' != '" + false + "'", boolean44, false);
        org.junit.Assert.assertNotNull(equalsBuilder47);
    }

    @Test
    public void test11073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11073");
        float[] floatArray0 = null;
        float[] floatArray4 = new float[] { (short) 100, 0, 10 };
        float[] floatArray7 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray7);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(floatArray7, (float) 0);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.add(floatArray7, 10.0f);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray4, floatArray7);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray4, 3, 0);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray0, floatArray4);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray0, (float) (-1));
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test11074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11074");
        java.lang.String[] strArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        boolean boolean1 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.lang.Comparable<java.lang.String>[]) strArray0);
        java.lang.String[] strArray2 = org.apache.commons.lang3.ArrayUtils.clone(strArray0);
        int[] intArray7 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.clone(intArray7);
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.add(intArray7, (int) 'a');
        org.apache.commons.lang3.ArrayUtils.reverse(intArray7);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.subarray(intArray7, 4, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray14);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) strArray0, (java.lang.Object) intArray14, (int) (byte) 100);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray14, (int) '#', 4);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test11075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11075");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (short) 0);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) 10);
        java.lang.Long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toObject(longArray12);
        java.lang.Long[] longArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray13);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray14, (long) 3);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.add(longArray16, 100L);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[32, 100, 10, 10, 1, 10]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1, 10]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1, 10, 100]");
    }

    @Test
    public void test11076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11076");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f);
        double[] doubleArray12 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray12);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray12, (double) (byte) 10);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray12, (double) 0L, 0);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray12);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray6, doubleArray12);
        double[] doubleArray27 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray27);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray12, doubleArray27);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, 0.0d, 0.0d);
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, (double) 1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test11077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11077");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray13);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray13, 0);
        java.lang.Integer[] intArray18 = org.apache.commons.lang3.ArrayUtils.toObject(intArray13);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray13, (int) '4', (int) (short) 100);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray13, (int) 'a', (int) (byte) -1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray13);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test11078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11078");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.io.Serializable[]) booleanArray10);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test11079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11079");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.clone(floatArray6);
        float[] floatArray14 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray14);
        float[] floatArray18 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(floatArray18, (float) 0);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray14, floatArray18);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray14);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray14);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray6, floatArray14);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray25);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray25);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.clone(floatArray25);
        float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.add(floatArray25, 10.0f);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 1.0, -1.0, 1.0, 10.0]");
    }

    @Test
    public void test11080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11080");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        java.lang.Character[] charArray9 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray9, 'a');
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) floatArray2, (java.lang.Object) 'a');
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, (float) 3);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray2);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) 6, (int) (short) 0);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0, 3.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test11081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11081");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        java.lang.Character[] charArray44 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray44, 'a');
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.add(charArray46, '#');
        boolean boolean49 = objMap31.equals((java.lang.Object) '#');
        double[] doubleArray53 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray53);
        int int56 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray54, (java.lang.Object) ' ');
        java.lang.Object obj57 = null;
        java.lang.Object[] objArray58 = org.apache.commons.lang3.ArrayUtils.add((java.lang.Object[]) doubleArray54, obj57);
        java.lang.Object obj59 = objMap31.get(obj57);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList60 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        float[] floatArray64 = new float[] { (short) 100, 0, 10 };
        float[] floatArray67 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray68 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray67);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.contains(floatArray67, (float) 0);
        float[] floatArray72 = org.apache.commons.lang3.ArrayUtils.add(floatArray67, 10.0f);
        float[] floatArray73 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray64, floatArray67);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.contains(floatArray67, (float) (byte) 10);
        boolean boolean76 = objEntryList60.equals((java.lang.Object) boolean75);
        boolean boolean77 = objEntryList60.isEmpty();
        java.lang.Object[] objArray78 = objEntryList60.toArray();
        boolean boolean79 = objMap31.containsValue((java.lang.Object) objEntryList60);
        java.lang.Byte[] byteArray86 = new java.lang.Byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 100, (byte) 0 };
        byte[] byteArray87 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray86);
        int int88 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) byteArray86);
        java.lang.Byte[] byteArray89 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray86);
        byte[] byteArray90 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray89);
        byte[] byteArray91 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray89);
        boolean boolean92 = objMap31.containsValue((java.lang.Object) byteArray91);
        int int93 = objMap31.size();
        objMap31.clear();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a,  , a,  , #, #]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray67), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(floatArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray72), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray73), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 6 + "'", int88 == 6);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
    }

    @Test
    public void test11082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11082");
        long[] longArray0 = null;
        long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray7 = new double[] {};
        double[] doubleArray11 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray11);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.add(doubleArray11, (double) (byte) 10);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray11, (double) 0L, 0);
        double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray11);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray11, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder3.append(doubleArray7, doubleArray11);
        long[] longArray28 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray29 = org.apache.commons.lang3.ArrayUtils.clone(longArray28);
        java.lang.Long[] longArray30 = org.apache.commons.lang3.ArrayUtils.toObject(longArray29);
        long[] longArray36 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray37 = org.apache.commons.lang3.ArrayUtils.clone(longArray36);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray29, longArray37);
        long[] longArray44 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.clone(longArray44);
        java.lang.Long[] longArray46 = org.apache.commons.lang3.ArrayUtils.toObject(longArray45);
        long[] longArray52 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray53 = org.apache.commons.lang3.ArrayUtils.clone(longArray52);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray45, longArray53);
        java.lang.Long[] longArray55 = org.apache.commons.lang3.ArrayUtils.toObject(longArray53);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder22.append(longArray29, longArray53);
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray29, (long) (-1), (int) (byte) -1);
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray29);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.clone(longArray29);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray1, longArray29);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[1, 10, 10, 100, 32]");
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[1, 10, 10, 100, 32]");
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test11083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11083");
        java.util.RandomAccess[] randomAccessArray0 = null;
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList1 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        float[] floatArray5 = new float[] { (short) 100, 0, 10 };
        float[] floatArray8 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(floatArray8, (float) 0);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.add(floatArray8, 10.0f);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray5, floatArray8);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(floatArray8, (float) (byte) 10);
        boolean boolean17 = objEntryList1.equals((java.lang.Object) boolean16);
        java.lang.Double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray18, (double) (-1.0f));
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, (int) ' ', 10);
        boolean boolean24 = objEntryList1.contains((java.lang.Object) doubleArray20);
        java.util.RandomAccess[] randomAccessArray25 = org.apache.commons.lang3.ArrayUtils.add(randomAccessArray0, (java.util.RandomAccess) objEntryList1);
        int int26 = objEntryList1.size();
        int int27 = objEntryList1.size();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream28 = objEntryList1.parallelStream();
        byte[] byteArray29 = null;
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray29);
        byte[] byteArray34 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray34, (byte) 10, (int) (short) -1);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray34, (byte) 10);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray30, byteArray34);
        byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray30, 100, 10);
        java.lang.Byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray43);
        boolean boolean45 = objEntryList1.contains((java.lang.Object) byteArray44);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(randomAccessArray25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(objEntryStream28);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test11084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11084");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 10 };
        int[] intArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2, (int) (byte) 10);
        java.lang.Byte[] byteArray9 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append((java.lang.Object[]) intArray2, (java.lang.Object[]) byteArray9);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) (byte) 10, (double) 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder0.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append('4', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder18.append((float) '#', (float) 4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((byte) 100, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder24.append((double) 0L, (double) (short) 10);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
    }

    @Test
    public void test11085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11085");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray7);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(charArray7, 'a');
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray7, '#');
        java.lang.Character[] charArray18 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray18, ' ');
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray18, '#');
        java.lang.Character[] charArray28 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray28);
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28, 'a');
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray22, charArray31);
        java.lang.Character[] charArray33 = org.apache.commons.lang3.ArrayUtils.toObject(charArray22);
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33);
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33);
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray35, '#');
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray7, charArray35);
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray35, '4');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, a, 4]");
    }

    @Test
    public void test11086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11086");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) 0);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, 10.0f);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) (-1));
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray2);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray2);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray2);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray12, (float) 6);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray12);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray15, (float) 10);
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray15);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray15, (float) 2);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
    }

    @Test
    public void test11087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11087");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((float) (short) 100, (float) (short) 0);
        boolean[] booleanArray11 = new boolean[] { false, false, false, false };
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray11);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray11, false);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.add(booleanArray11, true);
        boolean[] booleanArray21 = new boolean[] { false, false, false, false };
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray21);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray21, false);
        java.lang.Boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray11, booleanArray21);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.add(booleanArray26, true);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray26, 5);
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray26, true);
        boolean[] booleanArray37 = new boolean[] { false, false, false, false };
        boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray37);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray37, false);
        java.lang.Boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray37);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray37, false);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray43);
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray43, false);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray43, true, 2);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder6.append(booleanArray32, booleanArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder6.append((double) (byte) 0, (double) 5);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder53.append((byte) 0, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder53.append((short) (byte) 100, (short) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder53.append((float) 7, (float) 100L);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false, false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder62);
    }

    @Test
    public void test11088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11088");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.String[] strArray9 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray10 = org.apache.commons.lang3.ArrayUtils.addAll(strArray5, strArray9);
        java.lang.String[] strArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray5);
        java.lang.Character[] charArray17 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17, ' ');
        java.lang.Character[] charArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((java.lang.Object[]) strArray5, (java.lang.Object[]) charArray20);
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20);
        java.lang.Character[] charArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray20);
        java.lang.Character[] charArray29 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray29);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray29, 'a');
        boolean[] booleanArray37 = new boolean[] { false, true, true, true };
        boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray37);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray37);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray29, (java.lang.Object) booleanArray37);
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) charArray23, (java.lang.Object) charArray29, (int) (short) -1);
        java.lang.Double[] doubleArray49 = new java.lang.Double[] { (-1.0d), 100.0d, 1.0d, 10.0d, (-1.0d), 100.0d };
        java.lang.Double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray49);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray49);
        double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray49, (double) '4');
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) charArray29, (java.lang.Object[]) doubleArray49);
        java.lang.Double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray49);
        java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray55);
        java.lang.Class<?> wildcardClass57 = doubleArray55.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test11089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11089");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder37.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder39.append((byte) 100, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder39.append((double) 3, (double) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder39.append((double) 10, 100.0d);
        long[] longArray54 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray55 = org.apache.commons.lang3.ArrayUtils.clone(longArray54);
        long[] longArray58 = org.apache.commons.lang3.ArrayUtils.add(longArray55, (int) (short) 1, 0L);
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray55, (long) (short) 1);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.contains(longArray55, (long) 10);
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.clone(longArray55);
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_ARRAY;
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray55, longArray64);
        long[] longArray69 = new long[] { 4, 'a', (byte) 0 };
        long[] longArray71 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray69, (long) 'a');
        long[] longArray73 = org.apache.commons.lang3.ArrayUtils.remove(longArray71, (int) (byte) 1);
        long[] longArray75 = org.apache.commons.lang3.ArrayUtils.add(longArray71, (long) 10);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray75);
        long[] longArray78 = org.apache.commons.lang3.ArrayUtils.add(longArray75, (long) 10);
        long[] longArray80 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray78, (long) 2);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder39.append(longArray55, longArray78);
        long[] longArray83 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray55, (long) (byte) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 0, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 4 + "'", int60 == 4);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray69), "[4, 97, 0]");
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray71), "[4, 0]");
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[4]");
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[4, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[4, 0, 10, 10]");
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[4, 0, 10, 10]");
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(longArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray83), "[32, 100, 10, 10]");
    }

    @Test
    public void test11090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11090");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray6);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray9, (double) 1.0f);
        java.lang.Double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray11);
        double[] doubleArray16 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray16);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.add(doubleArray16, (double) (byte) 10);
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray16, (double) 100.0f, (double) 0);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray16);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray11, doubleArray16);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray25);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) 'a');
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) (-1L));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 10.0, 100.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 10.0, 100.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test11091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11091");
        java.lang.Boolean[] booleanArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY;
        java.lang.Boolean[] booleanArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray0);
        boolean boolean2 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) booleanArray0);
        java.lang.Boolean[] booleanArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray0);
        boolean[] booleanArray8 = new boolean[] { false, false, false, false };
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray8, false);
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray8);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray8);
        java.lang.Boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray8);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray14);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray14, true);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray17, (int) (short) 0, 100);
        boolean[] booleanArray25 = new boolean[] { false, false, false, false };
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray25, false);
        java.lang.Boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray25);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray25);
        java.lang.Boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray25);
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray31);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray31, true);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray34);
        boolean[] booleanArray40 = new boolean[] { false, false, false, false };
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray40, false);
        java.lang.Boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray40);
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray40);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray40);
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray40);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray34, booleanArray40);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray40);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray17, booleanArray40);
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.add(booleanArray17, true);
        int int54 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) booleanArray3, (java.lang.Object) booleanArray52, (int) (short) 1);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray56, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, false, false, false, true]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[]");
    }

    @Test
    public void test11092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11092");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) (short) 0, (int) ' ', (double) 1L);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 'a');
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) 2, (double) 2);
        double[] doubleArray19 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray19);
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.add(doubleArray19, (double) (byte) 10);
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray19, (double) 0L, 0);
        double[] doubleArray29 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray29);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.add(doubleArray29, (double) (byte) 10);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 0L, 0);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray29);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray29, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray19, doubleArray29);
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray19);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray41, (double) 1.0f);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray41);
        double[] doubleArray48 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray48);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.add(doubleArray48, (double) (byte) 10);
        int int54 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray48, (double) 0L, 0);
        double[] doubleArray58 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray58);
        double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.add(doubleArray58, (double) (byte) 10);
        int int64 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray58, (double) 0L, 0);
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray58);
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray58, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray48, doubleArray58);
        double[] doubleArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray48);
        int int72 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray70, (double) 1.0f);
        double[] doubleArray75 = org.apache.commons.lang3.ArrayUtils.add(doubleArray70, (int) (short) 1, (double) 100L);
        java.lang.Double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray70);
        double[] doubleArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray76, (double) 1.0f);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray41, doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test11093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11093");
        java.lang.String[] strArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        boolean boolean1 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.lang.Comparable<java.lang.String>[]) strArray0);
        java.lang.String[] strArray2 = org.apache.commons.lang3.ArrayUtils.clone(strArray0);
        java.lang.String[] strArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray2);
        java.lang.Comparable<java.lang.String>[] strComparableArray4 = org.apache.commons.lang3.ArrayUtils.toArray((java.lang.Comparable<java.lang.String>[]) strArray2);
        java.util.Map<java.lang.Object, java.lang.Object> objMap5 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) strArray2);
        long[] longArray11 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.clone(longArray11);
        java.lang.Long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toObject(longArray12);
        long[] longArray19 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.clone(longArray19);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray12, longArray20);
        java.lang.Long[] longArray22 = org.apache.commons.lang3.ArrayUtils.toObject(longArray20);
        java.lang.Long[] longArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray22);
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray23);
        java.lang.Long[] longArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray23);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray25);
        long[] longArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray25, (long) (short) 1);
        java.lang.Long[] longArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray25);
        java.lang.String[] strArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(strArray2, (java.lang.Object) longArray29);
        java.lang.String[] strArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray30);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strComparableArray4);
        org.junit.Assert.assertNotNull(objMap5);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
    }

    @Test
    public void test11094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11094");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.Set<java.lang.Object> objSet33 = objMap31.keySet();
        float[] floatArray36 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray36);
        java.lang.Character[] charArray43 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray43, 'a');
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) floatArray36, (java.lang.Object) 'a');
        float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray36, (int) (byte) 1, (int) (byte) 1);
        float[] floatArray52 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray52);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(floatArray52, (float) 0);
        float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.add(floatArray52, 10.0f);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.contains(floatArray52, (float) (-1));
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray52);
        float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray36, floatArray52);
        java.lang.Float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray61);
        java.lang.Object obj63 = objMap31.get((java.lang.Object) floatArray62);
        boolean[] booleanArray68 = new boolean[] { false, false, false, false };
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray68);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray68, false);
        java.lang.Boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray68);
        boolean[] booleanArray74 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray68, false);
        float[] floatArray78 = new float[] { 1L, 100L, 100 };
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray78, (float) (-1L), (int) (short) 100);
        java.lang.Float[] floatArray82 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray78);
        java.lang.Object obj83 = objMap31.put((java.lang.Object) booleanArray74, (java.lang.Object) floatArray82);
        short[] shortArray84 = new short[] {};
        java.lang.Short[] shortArray85 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray84);
        short[] shortArray87 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray85, (short) 1);
        boolean boolean88 = objMap31.containsValue((java.lang.Object) shortArray87);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray90 = org.apache.commons.lang3.ArrayUtils.remove(shortArray87, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[false, false, false]");
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray78), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(shortArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray84), "[]");
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test11095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11095");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) 100, 0, (double) (short) 10);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 100L, (double) 8);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) 100L);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, (int) (byte) -1, 3);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray16);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 100.0]");
    }

    @Test
    public void test11096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11096");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray8, (short) 0);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray8, (short) (byte) 10);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains(shortArray8, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 10 };
        int[] intArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray17, (int) (byte) 10);
        java.lang.Byte[] byteArray24 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray24, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append((java.lang.Object[]) intArray17, (java.lang.Object[]) byteArray24);
        short[] shortArray32 = new short[] { (byte) 0, (byte) 1, (short) -1, (byte) -1 };
        java.lang.Short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray32);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray32, (int) (short) 1, 100);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray36);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray36);
        java.lang.Short[] shortArray40 = new java.lang.Short[] { (short) 1 };
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray40);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray40);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray40, (short) (byte) 100);
        short[] shortArray45 = new short[] {};
        java.lang.Short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray45);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray44, shortArray45);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray45, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder27.append(shortArray36, shortArray45);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray8, shortArray36);
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray8);
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.add(shortArray8, (short) 0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[1]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[1, -1, -1]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[1]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[1]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[1]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[1, 0]");
    }

    @Test
    public void test11097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11097");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) 0);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        java.lang.String str11 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) shortArray10);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10, (short) 1);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{1}" + "'", str11, "{1}");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1]");
    }

    @Test
    public void test11098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11098");
        int[] intArray0 = new int[] {};
        int[] intArray1 = org.apache.commons.lang3.ArrayUtils.clone(intArray0);
        int int3 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray0, (int) (byte) 0);
        int[] intArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray0);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[]");
    }

    @Test
    public void test11099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11099");
        java.lang.String[] strArray0 = null;
        java.lang.String[] strArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray0);
        java.lang.String[] strArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray0);
        java.lang.String[] strArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray0);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test11100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11100");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        java.lang.Character[] charArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray8);
        short[] shortArray12 = null;
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.add(shortArray12, (short) (byte) 10);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray14, (short) 1);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray16);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) charArray8, (java.lang.Object) boolean17);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[10]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[10, 1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test11101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11101");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean35 = objEntryList33.remove((java.lang.Object) byteArray34);
        boolean boolean36 = objEntrySet32.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.lang.Object[] objArray37 = objEntryList33.toArray();
        java.lang.Object[] objArray38 = objEntryList33.toArray();
        float[] floatArray41 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray41);
        float[] floatArray45 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray45);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(floatArray45, (float) 0);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray41, floatArray45);
        float[] floatArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray41);
        float[] floatArray54 = new float[] { (short) 100, 0, 10 };
        float[] floatArray57 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray57);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.contains(floatArray57, (float) 0);
        float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.add(floatArray57, 10.0f);
        float[] floatArray63 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray54, floatArray57);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray57);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.contains(floatArray57, (float) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray57);
        float[] floatArray68 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray41, floatArray57);
        float[] floatArray72 = new float[] { (short) 100, 0, 10 };
        float[] floatArray75 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray76 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray75);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.contains(floatArray75, (float) 0);
        float[] floatArray80 = org.apache.commons.lang3.ArrayUtils.add(floatArray75, 10.0f);
        float[] floatArray81 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray72, floatArray75);
        float[] floatArray82 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray41, floatArray75);
        boolean boolean83 = objEntryList33.contains((java.lang.Object) floatArray41);
        boolean boolean84 = objEntryList33.isEmpty();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray72), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(floatArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray80), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray81), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray82), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test11102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11102");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray4, (byte) 100);
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray7);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray8, 6, 11);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray6, byteArray8);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.remove(byteArray6, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test11103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11103");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        boolean[] booleanArray14 = new boolean[] { false, false, false, false };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray14);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray14, false);
        java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray14);
        java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14);
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray20);
        java.lang.Boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        java.lang.Object obj23 = null;
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) booleanArray22, obj23, 6);
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray22, true);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray22);
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray28);
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray29, (int) (short) 0);
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray31, false, (-1));
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray31, true);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, false, false]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test11104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11104");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray37);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray37);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.contains(shortArray37, (short) (byte) 0);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.add(shortArray37, (short) -1);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[1, -1]");
    }

    @Test
    public void test11105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11105");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean2 = objEntryList0.remove((java.lang.Object) byteArray1);
        boolean[] booleanArray7 = new boolean[] { false, false, false, false };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray7);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray7, false);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray7);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray7, true, 0);
        boolean boolean15 = objEntryList0.contains((java.lang.Object) int14);
        java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        java.lang.reflect.Type[] typeArray17 = objEntryList0.toArray((java.lang.reflect.Type[]) wildcardClassArray16);
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { 10, 3, 10 };
        java.lang.Integer[] intArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray21);
        java.lang.Integer[] intArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray21);
        java.lang.Class<?>[] wildcardClassArray24 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean29 = equalsBuilder28.isEquals();
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.String[] strArray34 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray35 = org.apache.commons.lang3.ArrayUtils.addAll(strArray30, strArray34);
        java.lang.String[] strArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray30);
        java.lang.Character[] charArray42 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray42, ' ');
        java.lang.Character[] charArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder28.append((java.lang.Object[]) strArray30, (java.lang.Object[]) charArray45);
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray45);
        java.lang.Character[] charArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray45);
        java.lang.Character[] charArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray45);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray24, (java.lang.Object[]) charArray49);
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray23, (java.lang.Object) wildcardClassArray24);
        java.lang.reflect.Type[] typeArray52 = org.apache.commons.lang3.ArrayUtils.addAll(typeArray17, (java.lang.reflect.Type[]) wildcardClassArray24);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) typeArray52);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray16);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertNotNull(wildcardClassArray24);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(typeArray52);
    }

    @Test
    public void test11106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11106");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 10, (byte) 0);
        java.lang.Boolean boolean8 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder3.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder11.append(true, false);
        float[] floatArray18 = new float[] { (short) 100, 0, 10 };
        float[] floatArray21 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray21);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(floatArray21, (float) 0);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.add(floatArray21, 10.0f);
        float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray18, floatArray21);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray21);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(floatArray21, (float) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray21);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(floatArray21, (float) (byte) 1);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray21, (float) 4);
        java.lang.Float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray36);
        float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray37, (float) 'a');
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray39, (float) 5);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder14.append(floatArray21, floatArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder42.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder42.append((short) -1, (short) 10);
        float[] floatArray50 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray50);
        float[] floatArray54 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray54);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(floatArray54, (float) 0);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray50, floatArray54);
        float[] floatArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray50);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray50);
        float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray50);
        java.lang.Float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray62);
        float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray63, (float) 'a');
        float[] floatArray69 = new float[] { 1L, 100L, 100 };
        int int72 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray69, (float) (-1L), (int) (short) 100);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray65, floatArray69);
        float[] floatArray74 = org.apache.commons.lang3.ArrayUtils.clone(floatArray65);
        float[] floatArray76 = org.apache.commons.lang3.ArrayUtils.add(floatArray65, (float) 9);
        float[] floatArray77 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder47.append(floatArray50, floatArray77);
        float[] floatArray80 = org.apache.commons.lang3.ArrayUtils.remove(floatArray50, (int) (short) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray59), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray65), "[]");
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(floatArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray74), "[]");
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[9.0]");
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray77), "[9.0]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(floatArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray80), "[-1.0]");
    }

    @Test
    public void test11107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11107");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        java.lang.Character[] charArray21 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, 'a');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.clone(charArray24);
        java.lang.Character[] charArray31 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray31, 'a');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.add(charArray33, '#');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.remove(charArray33, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.append(charArray25, charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder0.append((short) (byte) 10, (short) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder0.append((long) (short) 10, (long) ' ');
        boolean[] booleanArray45 = null;
        boolean[] booleanArray50 = new boolean[] { false, false, false, false };
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray50);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray50, false);
        java.lang.Boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray50);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray50);
        java.lang.Boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray50);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray56);
        boolean[] booleanArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray56, true);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray59);
        boolean[] booleanArray65 = new boolean[] { false, false, false, false };
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray65);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray65, false);
        java.lang.Boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray65);
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray65);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray65);
        boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray65);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray59, booleanArray65);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray65);
        boolean[] booleanArray77 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray65, (int) (byte) -1, (int) (short) 1);
        boolean[] booleanArray80 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray65, (int) (byte) 0, (int) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder0.append(booleanArray45, booleanArray65);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append(10, (int) 'a');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray77), "[false]");
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray80), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
    }

    @Test
    public void test11108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11108");
        int[] intArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int[] intArray2 = org.apache.commons.lang3.ArrayUtils.add(intArray0, 2);
        int int3 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) intArray2);
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray2, (int) (byte) 0);
        java.lang.String[] strArray7 = new java.lang.String[] { "2" };
        java.lang.String[] strArray9 = new java.lang.String[] { "2" };
        java.lang.String[] strArray11 = new java.lang.String[] { "2" };
        java.lang.Comparable[][] comparableArray13 = new java.lang.Comparable[3][];
        @SuppressWarnings("unchecked")
        java.lang.Comparable<java.lang.String>[][] strComparableArray14 = (java.lang.Comparable<java.lang.String>[][]) comparableArray13;
        strComparableArray14[0] = strArray7;
        strComparableArray14[1] = strArray9;
        strComparableArray14[2] = strArray11;
        boolean[] booleanArray25 = new boolean[] { false, false, false, false };
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray25, false);
        java.lang.Boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray25);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray25);
        java.lang.Boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray25);
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray31);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray31, true);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray34);
        boolean[] booleanArray40 = new boolean[] { false, false, false, false };
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray40, false);
        java.lang.Boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray40);
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray40);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray40);
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray40);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray34, booleanArray40);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray40);
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray40, (int) (byte) -1, (int) (short) 1);
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.add(booleanArray40, true);
        java.lang.Comparable<java.lang.String>[][] strComparableArray55 = org.apache.commons.lang3.ArrayUtils.removeElement(strComparableArray14, (java.lang.Object) true);
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray56);
        byte[] byteArray59 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray57, (byte) -1);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray59, 3, 10);
        int int64 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray59, (byte) 0);
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray65);
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray65, (byte) 100);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray59, byteArray65);
        int int71 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) strComparableArray55, (java.lang.Object) boolean69, (-1));
        int[] intArray72 = new int[] {};
        int[] intArray75 = org.apache.commons.lang3.ArrayUtils.add(intArray72, 0, 100);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray75);
        int[] intArray77 = org.apache.commons.lang3.ArrayUtils.clone(intArray75);
        int[] intArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray75);
        int[] intArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray75);
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray75, (int) ' ');
        int[] intArray83 = org.apache.commons.lang3.ArrayUtils.add(intArray75, 2);
        int[] intArray84 = org.apache.commons.lang3.ArrayUtils.clone(intArray75);
        int[] intArray85 = org.apache.commons.lang3.ArrayUtils.clone(intArray75);
        int int86 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) strComparableArray55, (java.lang.Object) intArray75);
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray2, intArray75);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[2]");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(comparableArray13);
        org.junit.Assert.assertNotNull(strComparableArray14);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(strComparableArray55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 2]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test11109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11109");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((long) (byte) 10, (long) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder3.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder3.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder3.append((long) 1, (long) (byte) 0);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray31);
        byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray32, (byte) -1);
        java.lang.Byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray34);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList36 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray37 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean38 = objEntryList36.remove((java.lang.Object) byteArray37);
        byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray37, (byte) 1);
        byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray37);
        byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray37, (byte) 100);
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray43, (byte) 0);
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.clone(byteArray43);
        java.lang.Byte[] byteArray51 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray51, (byte) 100);
        byte[] byteArray55 = org.apache.commons.lang3.ArrayUtils.add(byteArray53, (byte) 10);
        byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray53, 0, (int) (short) 1);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList59 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean61 = objEntryList59.remove((java.lang.Object) byteArray60);
        byte[] byteArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray60, (byte) 1);
        byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray60);
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray64);
        byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.clone(byteArray65);
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.clone(byteArray66);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray53, byteArray66);
        byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.remove(byteArray53, (int) (short) 1);
        byte[] byteArray71 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray43, byteArray53);
        float[] floatArray74 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray75 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray74);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) floatArray75);
        java.lang.Object[] objArray77 = org.apache.commons.lang3.ArrayUtils.clone((java.lang.Object[]) floatArray75);
        java.lang.Byte[] byteArray84 = new java.lang.Byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 100, (byte) 0 };
        byte[] byteArray85 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray84);
        byte[] byteArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray84);
        java.lang.Object[] objArray87 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) byteArray84);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) objArray77, (java.lang.Object) byteArray84);
        java.lang.Byte[] byteArray89 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray84);
        byte[] byteArray90 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray84);
        boolean boolean91 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray53, byteArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder3.append(byteArray34, byteArray53);
        byte[] byteArray93 = org.apache.commons.lang3.ArrayUtils.clone(byteArray34);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray95 = org.apache.commons.lang3.ArrayUtils.remove(byteArray34, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 4, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-1, 100, 1, 100, 10]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-1]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[-1, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(floatArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray74), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[-1.0, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(byteArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray93), "[]");
    }

    @Test
    public void test11110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11110");
        java.lang.Integer[] intArray1 = new java.lang.Integer[] { 0 };
        java.lang.Integer[] intArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray1);
        java.lang.Character[] charArray8 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8, ' ');
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8, '#');
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray2, (java.lang.Object) '#', (int) (short) 100);
        java.lang.Integer[] intArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray2);
        java.lang.Integer[] intArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray2);
        float[] floatArray20 = new float[] { (short) 100, 0, 10 };
        float[] floatArray23 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray23);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(floatArray23, (float) 0);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.add(floatArray23, 10.0f);
        float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray20, floatArray23);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray23);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(floatArray23, (float) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray23);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray23, (float) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray23);
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.clone(floatArray23);
        java.lang.Float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray38);
        float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray39, (float) 'a');
        float[] floatArray45 = new float[] { 1L, 100L, 100 };
        int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray45, (float) (-1L), (int) (short) 100);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray41, floatArray45);
        float[] floatArray50 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray37, floatArray41);
        java.lang.Float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray50);
        java.lang.Float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray51);
        float[] floatArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray52, 1.0f);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) intArray2, (java.lang.Object) 1.0f);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test11111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11111");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.add(charArray7, '#');
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray7);
        java.lang.Character[] charArray16 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16, ' ');
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16, '#');
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.clone(charArray20);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray21);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray21, ' ', 0);
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.addAll(charArray7, charArray21);
        java.lang.Character[] charArray32 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray32, ' ');
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray32, '#');
        java.lang.Character[] charArray42 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray42);
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray42, 'a');
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray36, charArray45);
        java.lang.Character[] charArray47 = org.apache.commons.lang3.ArrayUtils.toObject(charArray36);
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.clone(charArray36);
        java.lang.Character[] charArray49 = org.apache.commons.lang3.ArrayUtils.toObject(charArray48);
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray7, charArray50);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray7, 'a');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a,  , a,  , #, #]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a a # 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a a # 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a,  , a,  , #,  , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
    }

    @Test
    public void test11112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11112");
        int[][] intArray0 = new int[][] {};
        int[][] intArray1 = org.apache.commons.lang3.ArrayUtils.toArray(intArray0);
        int[] intArray6 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.clone(intArray6);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray7);
        int[] intArray11 = org.apache.commons.lang3.ArrayUtils.subarray(intArray7, (int) ' ', (int) (byte) 100);
        int[][] intArray12 = org.apache.commons.lang3.ArrayUtils.add(intArray0, intArray7);
        int[] intArray17 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.clone(intArray17);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.add(intArray17, (int) 'a');
        int[] intArray25 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.clone(intArray25);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray26);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray20, intArray26);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray20);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray20);
        int[] intArray35 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.clone(intArray35);
        int[] intArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray35);
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.addAll(intArray20, intArray35);
        int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray35, (int) ' ');
        int[] intArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray35);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray35, 1);
        int[] intArray45 = org.apache.commons.lang3.ArrayUtils.remove(intArray35, 0);
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.subarray(intArray45, 6, 9);
        int int50 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) intArray0, (java.lang.Object) intArray45, 8);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, -1, -1, 0, 97, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }

    @Test
    public void test11113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11113");
        java.lang.Boolean[] booleanArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY;
        java.lang.Boolean[] booleanArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray0);
        boolean boolean2 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) booleanArray0);
        java.lang.Boolean[] booleanArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray0);
        java.lang.Boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
    }

    @Test
    public void test11114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11114");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        java.lang.Character[] charArray10 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray10, ' ');
        java.lang.Character[] charArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray10);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray1, (java.lang.Object[]) charArray10);
        java.lang.Short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        java.lang.Character[] charArray21 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, ' ');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, '#');
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.clone(charArray25);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) shortArray1, (java.lang.Object) charArray25);
        java.lang.Character[] charArray28 = org.apache.commons.lang3.ArrayUtils.toObject(charArray25);
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28, 'a');
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, 4, a, 4]");
    }

    @Test
    public void test11115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11115");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        objMap31.clear();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray44 = new double[] {};
        double[] doubleArray48 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray48);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.add(doubleArray48, (double) (byte) 10);
        int int54 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray48, (double) 0L, 0);
        double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray48);
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray48, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder40.append(doubleArray44, doubleArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder40.append((byte) 100, (byte) 1);
        java.lang.String[] strArray63 = new java.lang.String[] {};
        java.lang.String[] strArray67 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray68 = org.apache.commons.lang3.ArrayUtils.addAll(strArray63, strArray67);
        java.lang.Short[] shortArray70 = new java.lang.Short[] { (short) 1 };
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray70);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray70);
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray70, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder40.append((java.lang.Object[]) strArray68, (java.lang.Object[]) shortArray70);
        short[] shortArray77 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray70, (short) 10);
        java.lang.Object obj78 = objMap31.get((java.lang.Object) (short) 10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet79 = objMap31.entrySet();
        java.util.Set<java.lang.Object> objSet80 = objMap31.keySet();
        boolean boolean81 = objMap31.isEmpty();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[1]");
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[1]");
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[1]");
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(objEntrySet79);
        org.junit.Assert.assertNotNull(objSet80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test11116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11116");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        java.lang.Character[] charArray15 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray15);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, 'a');
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray9, charArray18);
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        java.lang.Character[] charArray21 = org.apache.commons.lang3.ArrayUtils.toObject(charArray20);
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray22, '4');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[ , 4, 4, a, 4]");
    }

    @Test
    public void test11117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11117");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0.0d);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) (-1), (int) (short) 10, (double) (-1.0f));
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray3, 0);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) 10L, 2, (-1.0d));
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray14, 7, (int) (short) 0);
        double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray14, (int) 'a', 0);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray14, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
    }

    @Test
    public void test11118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11118");
        int[] intArray3 = new int[] { '#', (byte) -1, (short) 0 };
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.subarray(intArray3, (int) '#', (int) (short) 0);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray3, (int) (byte) 1);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray3, 4);
        int[] intArray15 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray16 = org.apache.commons.lang3.ArrayUtils.clone(intArray15);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray15);
        java.lang.Integer[] intArray18 = org.apache.commons.lang3.ArrayUtils.toObject(intArray15);
        int[] intArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray15);
        float[] floatArray23 = new float[] { 1L, 100L, 100 };
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray23, (float) (-1L), (int) (short) 100);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray23, (float) 'a', (int) (byte) 10);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) intArray15, (java.lang.Object) floatArray23);
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.add(intArray15, 4);
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.addAll(intArray3, intArray15);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray33);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray37 = org.apache.commons.lang3.ArrayUtils.add(intArray33, (int) '4', 13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, -1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, -1, -1, 0, 4]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[35, -1, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[35, -1, 0, 100, -1, -1, 0]");
    }

    @Test
    public void test11119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11119");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 10 };
        int[] intArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2, (int) (byte) 10);
        java.lang.Byte[] byteArray9 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append((java.lang.Object[]) intArray2, (java.lang.Object[]) byteArray9);
        long[] longArray18 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray19 = org.apache.commons.lang3.ArrayUtils.clone(longArray18);
        java.lang.Long[] longArray20 = org.apache.commons.lang3.ArrayUtils.toObject(longArray19);
        long[] longArray26 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray27 = org.apache.commons.lang3.ArrayUtils.clone(longArray26);
        java.lang.Long[] longArray28 = org.apache.commons.lang3.ArrayUtils.toObject(longArray27);
        long[] longArray29 = org.apache.commons.lang3.ArrayUtils.clone(longArray27);
        long[] longArray30 = org.apache.commons.lang3.ArrayUtils.addAll(longArray19, longArray29);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray30, (long) 1);
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray30, (long) (short) 100);
        long[] longArray40 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        java.lang.Long[] longArray42 = org.apache.commons.lang3.ArrayUtils.toObject(longArray41);
        long[] longArray43 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.add(longArray43, (long) (short) 0);
        long[] longArray46 = org.apache.commons.lang3.ArrayUtils.clone(longArray45);
        long[] longArray47 = org.apache.commons.lang3.ArrayUtils.clone(longArray46);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.add(longArray46, (int) (short) 1, (long) (short) 1);
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray50);
        double[] doubleArray55 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray55);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.add(doubleArray55, (double) (byte) 10);
        int int61 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray55, (double) 0L, 0);
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray55);
        int int65 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray55, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.add(doubleArray55, (double) 4);
        java.lang.String[] strArray68 = null;
        boolean boolean69 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray51, (java.lang.Object) doubleArray55, strArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder12.append(longArray34, longArray51);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray51);
        long[] longArray72 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray51);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 1, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, 1, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 10.0, 100.0, 4.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[32, 1, 100, 10, 10, 1, 0]");
    }

    @Test
    public void test11120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11120");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        float[] floatArray4 = new float[] { (short) 100, 0, 10 };
        float[] floatArray7 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray7);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(floatArray7, (float) 0);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.add(floatArray7, 10.0f);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray4, floatArray7);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(floatArray7, (float) (byte) 10);
        boolean boolean16 = objEntryList0.equals((java.lang.Object) boolean15);
        boolean boolean17 = objEntryList0.isEmpty();
        java.lang.Object[] objArray18 = objEntryList0.toArray();
        java.lang.String str19 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) objEntryList0);
        java.lang.String[][] strArray20 = new java.lang.String[][] {};
        java.lang.String[][] strArray21 = new java.lang.String[][] {};
        java.lang.String[][] strArray22 = new java.lang.String[][] {};
        java.lang.String[][] strArray23 = new java.lang.String[][] {};
        java.lang.String[][] strArray24 = new java.lang.String[][] {};
        java.lang.String[][][] strArray25 = new java.lang.String[][][] { strArray20, strArray21, strArray22, strArray23, strArray24 };
        java.lang.String[][] strArray26 = new java.lang.String[][] {};
        java.lang.String[][] strArray27 = new java.lang.String[][] {};
        java.lang.String[][] strArray28 = new java.lang.String[][] {};
        java.lang.String[][] strArray29 = new java.lang.String[][] {};
        java.lang.String[][] strArray30 = new java.lang.String[][] {};
        java.lang.String[][][] strArray31 = new java.lang.String[][][] { strArray26, strArray27, strArray28, strArray29, strArray30 };
        java.lang.String[][] strArray32 = new java.lang.String[][] {};
        java.lang.String[][] strArray33 = new java.lang.String[][] {};
        java.lang.String[][] strArray34 = new java.lang.String[][] {};
        java.lang.String[][] strArray35 = new java.lang.String[][] {};
        java.lang.String[][] strArray36 = new java.lang.String[][] {};
        java.lang.String[][][] strArray37 = new java.lang.String[][][] { strArray32, strArray33, strArray34, strArray35, strArray36 };
        java.lang.String[][] strArray38 = new java.lang.String[][] {};
        java.lang.String[][] strArray39 = new java.lang.String[][] {};
        java.lang.String[][] strArray40 = new java.lang.String[][] {};
        java.lang.String[][] strArray41 = new java.lang.String[][] {};
        java.lang.String[][] strArray42 = new java.lang.String[][] {};
        java.lang.String[][][] strArray43 = new java.lang.String[][][] { strArray38, strArray39, strArray40, strArray41, strArray42 };
        java.lang.String[][][][] strArray44 = new java.lang.String[][][][] { strArray25, strArray31, strArray37, strArray43 };
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(strArray44);
        java.lang.CharSequence[][][][] charSequenceArray46 = org.apache.commons.lang3.ArrayUtils.toArray((java.lang.CharSequence[][][][]) strArray44);
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray47 = objEntryList0.toArray((java.lang.Comparable<java.lang.String>[][][][]) strArray44);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(strArray44);
        java.lang.String[][][][] strArray49 = org.apache.commons.lang3.ArrayUtils.clone(strArray44);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[]" + "'", str19, "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertNotNull(strComparableArray47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strArray49);
    }

    @Test
    public void test11121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11121");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        java.lang.Character[] charArray21 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, 'a');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.clone(charArray24);
        java.lang.Character[] charArray31 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray31, 'a');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.add(charArray33, '#');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.remove(charArray33, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.append(charArray25, charArray33);
        float[] floatArray41 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray41);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains(floatArray41, (float) 0);
        float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.add(floatArray41, 10.0f);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(floatArray41, (float) (short) -1);
        float[] floatArray50 = org.apache.commons.lang3.ArrayUtils.add(floatArray41, (float) (byte) 1);
        float[] floatArray53 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray54 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray53);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.contains(floatArray53, (float) 0);
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray53, (float) 10L);
        int int60 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray53, (float) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder0.append(floatArray50, floatArray53);
        short[] shortArray62 = null;
        java.lang.Short[] shortArray64 = new java.lang.Short[] { (short) 1 };
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray64);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64, (short) (byte) 100);
        short[] shortArray69 = new short[] {};
        java.lang.Short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray69);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray68, shortArray69);
        short[] shortArray73 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray71, (short) 0);
        java.lang.Short[] shortArray75 = new java.lang.Short[] { (short) 1 };
        short[] shortArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray75);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray75);
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray75, (short) (byte) 100);
        short[] shortArray80 = new short[] {};
        java.lang.Short[] shortArray81 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray80);
        short[] shortArray82 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray79, shortArray80);
        short[] shortArray85 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray79, 4, (-1));
        short[] shortArray86 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray73, shortArray85);
        short[] shortArray87 = null;
        short[] shortArray89 = org.apache.commons.lang3.ArrayUtils.add(shortArray87, (short) (byte) 10);
        short[] shortArray90 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray85, shortArray87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder61.append(shortArray62, shortArray90);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[-1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[1]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[1]");
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[1]");
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[1]");
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[1]");
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[1]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray80), "[]");
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[1]");
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray85), "[]");
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[1]");
        org.junit.Assert.assertNotNull(shortArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray89), "[10]");
        org.junit.Assert.assertNotNull(shortArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray90), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test11122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11122");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        java.lang.Character[] charArray10 = org.apache.commons.lang3.ArrayUtils.toObject(charArray9);
        java.lang.Character[] charArray11 = org.apache.commons.lang3.ArrayUtils.toObject(charArray9);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray14 = org.apache.commons.lang3.ArrayUtils.add(charArray9, (int) (short) -1, ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertNotNull(charArray11);
    }

    @Test
    public void test11123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11123");
        java.lang.Long[] longArray6 = new java.lang.Long[] { 100L, 100L, 0L, 10L, 1L, (-1L) };
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray6);
        java.lang.Long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray7);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray18 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray19 = org.apache.commons.lang3.ArrayUtils.clone(longArray18);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder12.append(longArray19, longArray25);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder12.append((long) (byte) 10, (long) (byte) 10);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean38 = equalsBuilder37.isEquals();
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.String[] strArray43 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray44 = org.apache.commons.lang3.ArrayUtils.addAll(strArray39, strArray43);
        java.lang.String[] strArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray39);
        java.lang.Character[] charArray51 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray51, ' ');
        java.lang.Character[] charArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray51);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder37.append((java.lang.Object[]) strArray39, (java.lang.Object[]) charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder30.append((java.lang.Object[]) byteArray32, (java.lang.Object[]) strArray39);
        java.lang.Byte[] byteArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray32);
        java.lang.Byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray57);
        int int59 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) byteArray57);
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray57);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray60, (byte) -1);
        int int63 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) longArray7, (java.lang.Object) (byte) -1);
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray7);
        int int66 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray64, 0L);
        long[] longArray69 = org.apache.commons.lang3.ArrayUtils.add(longArray64, (int) (short) 0, (long) 5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[1]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[100, 100, 0, 10, 1, -1]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray69), "[5, 100, 100, 0, 10, 1, -1]");
    }

    @Test
    public void test11124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11124");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        equalsBuilder3.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        java.lang.Character[] charArray13 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray13, ' ');
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray13, '#');
        java.lang.Character[] charArray23 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray23);
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray23, 'a');
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray17, charArray26);
        java.lang.Character[] charArray28 = org.apache.commons.lang3.ArrayUtils.toObject(charArray17);
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28, ' ');
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28);
        java.lang.Character[] charArray37 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray37, ' ');
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray37, '#');
        java.lang.Character[] charArray47 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray47);
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray47, 'a');
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray41, charArray50);
        java.lang.Character[] charArray52 = org.apache.commons.lang3.ArrayUtils.toObject(charArray41);
        char[] charArray53 = org.apache.commons.lang3.ArrayUtils.clone(charArray41);
        java.lang.Character[] charArray54 = org.apache.commons.lang3.ArrayUtils.toObject(charArray53);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray31, charArray53);
        java.lang.Character[] charArray61 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray61, 'a');
        char[] charArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray61, ' ');
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray61, 'a');
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.contains(charArray67, ' ');
        int int72 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray67, '4', (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder3.append(charArray53, charArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder3.append((float) 2, 0.0f);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
    }

    @Test
    public void test11125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11125");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) 10);
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) 100, (int) (byte) 1);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray8);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray8, 1, (int) (short) 0);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray12, (short) -1);
        short[] shortArray15 = null;
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray12, shortArray15);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray16, (short) 100);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray16);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test11126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11126");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0.0d);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        double[] doubleArray13 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray13);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.add(doubleArray13, (double) (byte) 10);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray16, (double) 10.0f);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray16);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.add(doubleArray19, (double) 1.0f);
        java.lang.Double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray21);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray21);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray21, 1, 0);
        double[] doubleArray30 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray30);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.add(doubleArray30, (double) (byte) 10);
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray30, (double) (short) 0, (int) ' ', (double) 1L);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray30, (double) 'a');
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray21, doubleArray30);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray30, (double) (-1L), 4, 0.0d);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray30);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test11127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11127");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray6);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray9, (double) 1.0f);
        java.lang.Double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray11);
        double[] doubleArray16 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray16);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.add(doubleArray16, (double) (byte) 10);
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray16, (double) 100.0f, (double) 0);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray16);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray11, doubleArray16);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray16, 0.0d);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray16, (double) 11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 100.0, 11.0]");
    }

    @Test
    public void test11128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11128");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        java.lang.Short[] shortArray5 = new java.lang.Short[] { (short) 1 };
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        boolean[] booleanArray13 = new boolean[] { false, false, false, false };
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray13, false);
        java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray13);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray13);
        java.lang.Boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray13);
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) 1 };
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray21);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21, (short) (byte) 100);
        short[] shortArray26 = new short[] {};
        java.lang.Short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray26);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray25, shortArray26);
        float[] floatArray31 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(floatArray31, (float) 0);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.add(floatArray31, 10.0f);
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        boolean boolean39 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray25, (java.lang.Object) floatArray37, false);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray19, (java.lang.Object[]) floatArray37);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray5, (java.lang.Object[]) floatArray37);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray37, (java.lang.Object) 1, 0);
        java.lang.Float[] floatArray48 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f };
        java.lang.Float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder0.append((java.lang.Object[]) floatArray37, (java.lang.Object[]) floatArray49);
        java.lang.Short[] shortArray52 = new java.lang.Short[] { (short) 1 };
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray52);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray53, (short) 10);
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray53, (short) 100, (int) (byte) 1);
        short[] shortArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray53);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray59);
        short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray59, 1, (int) (short) 0);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.add(shortArray59, (short) 100);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.clone(shortArray65);
        int int67 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray37, (java.lang.Object) shortArray65);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray65, (int) 'a', (int) '4');
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray65, (short) 0);
        short[] shortArray73 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray65);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[1]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[1, 100]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[1, 100]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[1, 100]");
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[1, 100]");
    }

    @Test
    public void test11129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11129");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) 1, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder18.append(' ', '#');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
    }

    @Test
    public void test11130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11130");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 10, (byte) 0);
        java.lang.Character[] charArray13 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray13, 'a');
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray13, ' ');
        java.lang.Character[] charArray23 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray23, 'a');
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.add(charArray25, '#');
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.subarray(charArray25, (int) (byte) -1, (int) '#');
        java.lang.Character[] charArray36 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray36);
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray36, 'a');
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.clone(charArray39);
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.addAll(charArray25, charArray39);
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray39, 'a');
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.clone(charArray39);
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.addAll(charArray17, charArray44);
        java.lang.Character[] charArray51 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray51, ' ');
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray51, '#');
        java.lang.Character[] charArray61 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray61);
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray61, 'a');
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray55, charArray64);
        int int68 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray64, 'a', (int) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder7.append(charArray44, charArray64);
        int int71 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray64, '4');
        char[] charArray73 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray64, '#');
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray64);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, #,  ]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "4# a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "4# a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[4, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test11131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11131");
        java.util.RandomAccess[] randomAccessArray0 = null;
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList1 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        float[] floatArray5 = new float[] { (short) 100, 0, 10 };
        float[] floatArray8 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(floatArray8, (float) 0);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.add(floatArray8, 10.0f);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray5, floatArray8);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(floatArray8, (float) (byte) 10);
        boolean boolean17 = objEntryList1.equals((java.lang.Object) boolean16);
        java.lang.Double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray18, (double) (-1.0f));
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, (int) ' ', 10);
        boolean boolean24 = objEntryList1.contains((java.lang.Object) doubleArray20);
        java.util.RandomAccess[] randomAccessArray25 = org.apache.commons.lang3.ArrayUtils.add(randomAccessArray0, (java.util.RandomAccess) objEntryList1);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor26 = objEntryList1.iterator();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList27 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor28 = objEntryList27.iterator();
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray34 = org.apache.commons.lang3.ArrayUtils.addAll(strArray29, strArray33);
        java.lang.Comparable<java.lang.String>[] strComparableArray35 = objEntryList27.toArray((java.lang.Comparable<java.lang.String>[]) strArray29);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream36 = objEntryList27.parallelStream();
        boolean boolean37 = objEntryList1.removeAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList27);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList38 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Object[] objArray39 = objEntryList38.toArray();
        int int40 = objEntryList38.size();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList41 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList42 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor43 = objEntryList42.iterator();
        java.lang.String[] strArray44 = new java.lang.String[] {};
        java.lang.String[] strArray48 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray49 = org.apache.commons.lang3.ArrayUtils.addAll(strArray44, strArray48);
        java.lang.Comparable<java.lang.String>[] strComparableArray50 = objEntryList42.toArray((java.lang.Comparable<java.lang.String>[]) strArray44);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream51 = objEntryList42.parallelStream();
        boolean boolean52 = objEntryList41.addAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList42);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream53 = objEntryList42.stream();
        boolean boolean54 = objEntryList38.removeAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList42);
        boolean boolean55 = objEntryList27.removeAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList42);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(randomAccessArray25);
        org.junit.Assert.assertNotNull(objEntryItor26);
        org.junit.Assert.assertNotNull(objEntryItor28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strComparableArray35);
        org.junit.Assert.assertNotNull(objEntryStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objEntryItor43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strComparableArray50);
        org.junit.Assert.assertNotNull(objEntryStream51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEntryStream53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test11132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11132");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray42, longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder19.append(longArray26, longArray50);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray26);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray26, (long) 'a');
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray26);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.add(longArray26, (long) 3);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.add(longArray59, 0L);
        java.lang.Long[] longArray62 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray62);
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray62);
        long[] longArray65 = org.apache.commons.lang3.ArrayUtils.clone(longArray64);
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray64, (long) 11, 0);
        int int70 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray64, (long) (byte) 100);
        long[] longArray71 = org.apache.commons.lang3.ArrayUtils.addAll(longArray61, longArray64);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[32, 100, 10, 10, 1, 3]");
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[32, 100, 10, 10, 1, 3, 0]");
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[]");
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray71), "[32, 100, 10, 10, 1, 3, 0]");
    }

    @Test
    public void test11133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11133");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.add(charArray7, '#');
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.subarray(charArray7, (int) (byte) -1, (int) '#');
        java.lang.Character[] charArray18 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray18);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray18, 'a');
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.clone(charArray21);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.addAll(charArray7, charArray21);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray21, '4', 0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray21);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray21);
        java.lang.Character[] charArray34 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray34, ' ');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray36);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray37);
        java.lang.Character[] charArray44 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray44, ' ');
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray46);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray46);
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.addAll(charArray37, charArray46);
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray49, 'a');
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray49);
        int int54 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray49, '#');
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.addAll(charArray21, charArray49);
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray21, 'a', (int) (short) 1);
        char[] charArray63 = new char[] { '4', '#', ' ', ' ' };
        char[] charArray66 = org.apache.commons.lang3.ArrayUtils.subarray(charArray63, 5, 0);
        char[] charArray68 = org.apache.commons.lang3.ArrayUtils.add(charArray66, ' ');
        java.lang.Character[] charArray69 = org.apache.commons.lang3.ArrayUtils.toObject(charArray68);
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.addAll(charArray21, charArray68);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a ##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a ##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a,  , #, #, 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4a44 4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4a44 4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4, a, 4, 4,  , 4, a, 4, 4,  ]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a ##44a44 4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a ##44a44 4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a,  , #, #, 4, 4, a, 4, 4,  , 4, a, 4, 4,  ]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "4#  ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "4#  ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[4, #,  ,  ]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[ ]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a ##4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a ##4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a,  , #, #, 4,  ]");
    }

    @Test
    public void test11134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11134");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray13 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray14);
        java.lang.Long[] longArray16 = org.apache.commons.lang3.ArrayUtils.toObject(longArray14);
        java.lang.Long[] longArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray16);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray17);
        java.lang.Long[] longArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray17);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray19);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray20, (long) 1, 1);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.subarray(longArray20, (int) (byte) 100, (int) ' ');
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray20, (long) 7, (int) 'a');
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 4 + "'", int23 == 4);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test11135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11135");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.clone(floatArray6);
        int int12 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) floatArray11);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.add(floatArray11, 0, (float) (short) 100);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray11, (float) (short) -1, 13);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[100.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test11136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11136");
        double[] doubleArray5 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray5);
        double[] doubleArray10 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray10);
        double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.add(doubleArray10, (double) (byte) 10);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray10, 0.0d);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray5, doubleArray10);
        double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.add(doubleArray5, (double) (-1));
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray18, (double) (short) 1, 11);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray18);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 10.0, -1.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 10.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test11137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11137");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        java.lang.Character[] charArray21 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, 'a');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.clone(charArray24);
        java.lang.Character[] charArray31 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray31, 'a');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.add(charArray33, '#');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.remove(charArray33, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.append(charArray25, charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder38.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append((-1), 3);
        equalsBuilder38.reset();
        java.lang.Boolean boolean45 = equalsBuilder38.build();
        boolean[] booleanArray50 = new boolean[] { false, false, false, false };
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray50);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray50, false);
        java.lang.Boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray50);
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray50, false);
        boolean[] booleanArray61 = new boolean[] { false, false, false, false };
        boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray61);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray61, false);
        java.lang.Boolean[] booleanArray65 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray61);
        boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray61, false);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray67);
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray67, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder38.append(booleanArray50, booleanArray70);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray70);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray70);
        java.lang.Character[] charArray79 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray79, ' ');
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray81);
        boolean boolean84 = org.apache.commons.lang3.ArrayUtils.contains(charArray81, 'a');
        char[] charArray86 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray81, '#');
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray81);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) booleanArray70, (java.lang.Object) charArray81);
        int int90 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray81, '#');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertEquals("'" + boolean45 + "' != '" + true + "'", boolean45, true);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
    }

    @Test
    public void test11138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11138");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.subarray(longArray2, (int) (short) -1, (int) '#');
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray6, 0L);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray6, (long) (short) 100);
        java.lang.Long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toObject(longArray10);
        java.lang.Long[] longArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray11);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[100]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertNotNull(longArray12);
    }

    @Test
    public void test11139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11139");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        java.lang.Short[] shortArray12 = new java.lang.Short[] { (short) 1 };
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray12);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12, (short) (byte) 100);
        short[] shortArray17 = new short[] {};
        java.lang.Short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray17);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray16, shortArray17);
        float[] floatArray22 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray22);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(floatArray22, (float) 0);
        float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.add(floatArray22, 10.0f);
        java.lang.Float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray22);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray16, (java.lang.Object) floatArray28, false);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray10, (java.lang.Object[]) floatArray28);
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray28);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray32);
        java.lang.Float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray32);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray32, (float) (byte) 100);
        float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.add(floatArray36, (float) 1L);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(floatArray36, (float) (-1L));
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray36);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test11140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11140");
        short[] shortArray0 = null;
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.add(shortArray0, (short) (byte) 10);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.add(shortArray2, (short) 1);
        int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) 1);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray2, (short) -1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[10]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[10, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[10]");
    }

    @Test
    public void test11141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11141");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.clone(floatArray6);
        float[] floatArray15 = new float[] { (short) 100, 0, 10 };
        float[] floatArray18 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(floatArray18, (float) 0);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.add(floatArray18, 10.0f);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray15, floatArray18);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray6, floatArray15);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray25, (int) '4', 2);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(floatArray28, 10.0f);
        float[] floatArray33 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray33);
        java.lang.Float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray34);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray34);
        float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.add(floatArray36, 0.0f);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray36);
        float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.add(floatArray36, (float) (-1L));
        float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.remove(floatArray36, 0);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.add(floatArray36, (float) (short) 10);
        float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.clone(floatArray36);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray28, floatArray46);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[1.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test11142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11142");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray13 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray14);
        java.lang.Long[] longArray16 = org.apache.commons.lang3.ArrayUtils.toObject(longArray14);
        java.lang.Long[] longArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray16);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray17);
        java.lang.Long[] longArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray17);
        java.lang.Byte[] byteArray21 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray21);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray21, (byte) 0);
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) longArray17, (java.lang.Object) (byte) 0);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray17);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray17);
        java.lang.Long[] longArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray27);
        float[] floatArray31 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        float[] floatArray35 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray35);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(floatArray35, (float) 0);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray31, floatArray35);
        float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray31);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray31);
        java.lang.Float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray42);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray43, (float) 'a');
        float[] floatArray49 = new float[] { 1L, 100L, 100 };
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray49, (float) (-1L), (int) (short) 100);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray45, floatArray49);
        float[] floatArray54 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray31, floatArray49);
        float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray49, (int) ' ', (int) (byte) 100);
        float[] floatArray59 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray49, (float) 10L);
        java.lang.String str61 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) floatArray49, "hi!");
        int int64 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray49, (float) 1, 11);
        int int66 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) longArray28, (java.lang.Object) 1, (int) '4');
        long[] longArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray28, (long) 11);
        long[] longArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray28);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 1.0, 1.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[]");
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray59), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{1.0,100.0,100.0}" + "'", str61, "{1.0,100.0,100.0}");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray69), "[32, 100, 10, 10, 1]");
    }

    @Test
    public void test11143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11143");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        byte[] byteArray7 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray7, (byte) 10, (int) (short) -1);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray7);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray7, (byte) 1, (int) ' ');
        byte[] byteArray21 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray21, (byte) 10);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray7, byteArray21);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray26, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder0.append(byteArray7, byteArray26);
        short[] shortArray31 = new short[] {};
        java.lang.Short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray31);
        int int33 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) shortArray31);
        short[] shortArray36 = new short[] { (short) 100, (short) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder0.append(shortArray31, shortArray36);
        boolean[] booleanArray42 = new boolean[] { false, false, false, false };
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray42);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray42, false);
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.add(booleanArray42, true);
        boolean[] booleanArray48 = null;
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray42, booleanArray48);
        boolean[] booleanArray50 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder0.append(booleanArray42, booleanArray50);
        java.lang.Short[] shortArray53 = new java.lang.Short[] { (short) 1 };
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray53);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray54, (short) 10);
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray54, (short) 100, (int) (byte) 1);
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray54);
        int int63 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray60, (short) (byte) -1, (int) '#');
        java.lang.Short[] shortArray65 = new java.lang.Short[] { (short) 1 };
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray65);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray65);
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray65, (short) (byte) 100);
        short[] shortArray70 = new short[] {};
        java.lang.Short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray70);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray69, shortArray70);
        java.lang.Short[] shortArray74 = new java.lang.Short[] { (short) 1 };
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray74);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray74);
        short[] shortArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray74, (short) (byte) 100);
        short[] shortArray79 = new short[] {};
        java.lang.Short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray79);
        short[] shortArray81 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray78, shortArray79);
        short[] shortArray82 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray72, shortArray79);
        short[] shortArray84 = org.apache.commons.lang3.ArrayUtils.add(shortArray82, (short) (byte) 10);
        short[] shortArray87 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray84, 2, (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder0.append(shortArray60, shortArray84);
        int int90 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray84, (short) 100);
        short[] shortArray91 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray84);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[100, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, false, false, false, true]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[1]");
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[1]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[1]");
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[1]");
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[1]");
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray81), "[1]");
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[1]");
        org.junit.Assert.assertNotNull(shortArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray84), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(shortArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray91), "[1, 10]");
    }

    @Test
    public void test11144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11144");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean2 = objEntryList0.remove((java.lang.Object) byteArray1);
        byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) 1);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1);
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.clone(byteArray6);
        java.lang.Byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray6);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray8);
        byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray8, (byte) 1);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray13, (byte) 10);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray13, (byte) 100);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray17);
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.add(byteArray17, (int) (short) 0, (byte) 0);
        java.lang.Byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray21);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray22, (byte) 1);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 100]");
    }

    @Test
    public void test11145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11145");
        byte[] byteArray3 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 10, (int) (short) -1);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray3);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray3, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder10.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray14 = new double[] {};
        double[] doubleArray18 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray18);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.add(doubleArray18, (double) (byte) 10);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray18, (double) 0L, 0);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray18);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray18, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder10.append(doubleArray14, doubleArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder10.append((byte) 100, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append(true, true);
        byte[] byteArray40 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray40, (byte) 10, (int) (short) -1);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray40);
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray40, (byte) 1, (int) ' ');
        byte[] byteArray54 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray54);
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray54, (byte) 10);
        byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray40, byteArray54);
        byte[] byteArray59 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.add(byteArray59, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder33.append(byteArray40, byteArray59);
        byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray64);
        byte[] byteArray68 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray64, 100, (int) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder10.append(byteArray59, byteArray64);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray3, byteArray59);
        int int72 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray3, (byte) 1);
        int int75 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 0, (int) '4');
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray3);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 4 + "'", int57 == 4);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test11146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11146");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) booleanArray10);
        boolean[] booleanArray16 = new boolean[] { true };
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray16, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.add(booleanArray16, false);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray21, true);
        java.lang.Boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray10, (java.lang.Object[]) booleanArray24);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[true, false]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test11147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11147");
        byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray0);
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.contains(byteArray0, (byte) 10);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.add(byteArray0, (byte) 100);
        java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray5);
        byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6);
        byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray7, (byte) -1);
        java.lang.String str10 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) (byte) -1);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1" + "'", str10, "-1");
    }

    @Test
    public void test11148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11148");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) 0);
        java.lang.Short[] shortArray8 = new java.lang.Short[] { (short) 1 };
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) 10);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray11, (short) (byte) 1);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 1 };
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray15);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray15);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray15, (short) (byte) 100);
        short[] shortArray20 = new short[] {};
        java.lang.Short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray20);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray19, shortArray20);
        short[] shortArray23 = new short[] {};
        java.lang.Short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray23);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray22, shortArray23);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray11, shortArray25);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray6, shortArray26);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray27);
        java.lang.Short[] shortArray30 = new java.lang.Short[] { (short) 1 };
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray30);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray30);
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray30);
        java.lang.Short[] shortArray35 = new java.lang.Short[] { (short) 1 };
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray35);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray35, (short) 10);
        short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray33, shortArray38);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray27, shortArray39);
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.clone(shortArray27);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray27, (short) -1, 7);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1, 1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1, 1, 1]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[1]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[1]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[1, 1]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[1, 1, 1]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test11149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11149");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.clone(floatArray6);
        float[] floatArray15 = new float[] { (short) 100, 0, 10 };
        float[] floatArray18 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(floatArray18, (float) 0);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.add(floatArray18, 10.0f);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray15, floatArray18);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray6, floatArray15);
        float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray25, (float) (short) 100);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray25);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test11150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11150");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray16 = new boolean[] { false, false, false, false };
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray16);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray16, false);
        java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray16);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray11, booleanArray16);
        java.lang.Boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray16);
        java.lang.Boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray22);
        java.lang.Boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray23);
        java.lang.Boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray23);
        java.lang.Boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray36 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray37 = org.apache.commons.lang3.ArrayUtils.clone(longArray36);
        long[] longArray43 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.clone(longArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder30.append(longArray37, longArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder30.append((long) (byte) 10, (long) (byte) 10);
        java.lang.Byte[] byteArray50 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean56 = equalsBuilder55.isEquals();
        java.lang.String[] strArray57 = new java.lang.String[] {};
        java.lang.String[] strArray61 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray62 = org.apache.commons.lang3.ArrayUtils.addAll(strArray57, strArray61);
        java.lang.String[] strArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray57);
        java.lang.Character[] charArray69 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray71 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray69, ' ');
        java.lang.Character[] charArray72 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder55.append((java.lang.Object[]) strArray57, (java.lang.Object[]) charArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder48.append((java.lang.Object[]) byteArray50, (java.lang.Object[]) strArray57);
        byte[] byteArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray50, (byte) 0);
        java.lang.Byte[] byteArray77 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray50);
        int int79 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) booleanArray26, (java.lang.Object) byteArray50, 100);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[1]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
    }

    @Test
    public void test11151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11151");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder37.appendSuper(true);
        float[] floatArray42 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray42);
        java.lang.Float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray43);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray43);
        float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.add(floatArray45, 0.0f);
        float[] floatArray50 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray50);
        float[] floatArray54 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray54);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(floatArray54, (float) 0);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray50, floatArray54);
        float[] floatArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray50);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray50);
        java.lang.Float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray61);
        float[] floatArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray62, (float) 'a');
        float[] floatArray68 = new float[] { 1L, 100L, 100 };
        int int71 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray68, (float) (-1L), (int) (short) 100);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray64, floatArray68);
        float[] floatArray73 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray50, floatArray68);
        float[] floatArray76 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray68, (int) ' ', (int) (byte) 100);
        float[] floatArray78 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray68, (float) 10L);
        int int81 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray68, (float) 6, (int) 'a');
        int int84 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray68, (float) (byte) 10, 0);
        float[] floatArray85 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder39.append(floatArray45, floatArray85);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder86.append('4', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder86.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder86.append(true, true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray59), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[]");
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray73), "[-1.0, 1.0, 1.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[]");
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray78), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
    }

    @Test
    public void test11152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11152");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        boolean[] booleanArray27 = new boolean[] { false, true, true, true };
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray27);
        boolean[] booleanArray33 = new boolean[] { false, false, false, false };
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray33);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray33, false);
        boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.add(booleanArray33, true);
        boolean[] booleanArray43 = new boolean[] { false, false, false, false };
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray43, false);
        java.lang.Boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray43);
        boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray33, booleanArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder0.append(booleanArray28, booleanArray33);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray28, true, 1);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray28);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray28);
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.add(booleanArray28, false);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray56);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[true, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[true, true, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[true, true, true, false, false]");
    }

    @Test
    public void test11153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11153");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        objMap31.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = objMap31.entrySet();
        objMap31.clear();
        java.util.Set<java.lang.Object> objSet36 = objMap31.keySet();
        boolean[] booleanArray41 = new boolean[] { false, false, false, false };
        boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray41);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray41, false);
        java.lang.Boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray41);
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray41);
        java.lang.Boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray41);
        boolean[] booleanArray52 = new boolean[] { false, false, false, false };
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray52);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray52, false);
        java.lang.Boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray52);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray52);
        java.lang.Boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray52);
        boolean[] booleanArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray58);
        boolean[] booleanArray64 = new boolean[] { false, false, false, false };
        boolean[] booleanArray65 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray64);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray64, false);
        java.lang.Boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray64);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray59, booleanArray64);
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) booleanArray47, (java.lang.Object) booleanArray64);
        java.lang.Object obj71 = objMap31.get((java.lang.Object) booleanArray64);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet72 = objMap31.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet73 = objMap31.entrySet();
        int[] intArray78 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray79 = org.apache.commons.lang3.ArrayUtils.clone(intArray78);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray79);
        java.lang.Integer[] intArray81 = org.apache.commons.lang3.ArrayUtils.toObject(intArray79);
        java.lang.Integer[] intArray82 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray81);
        java.lang.Integer[] intArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray81);
        int[] intArray85 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray83, 6);
        int[] intArray88 = org.apache.commons.lang3.ArrayUtils.add(intArray85, (int) (short) 1, (int) (short) 1);
        int[] intArray89 = org.apache.commons.lang3.ArrayUtils.clone(intArray85);
        int int91 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray85, 10);
        boolean boolean92 = objMap31.containsKey((java.lang.Object) intArray85);
        boolean boolean93 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray85);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objEntrySet72);
        org.junit.Assert.assertNotNull(objEntrySet73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test11154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11154");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.Set<java.lang.Object> objSet33 = objMap31.keySet();
        java.util.Set<java.lang.Object> objSet34 = objMap31.keySet();
        double[] doubleArray40 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray40);
        double[] doubleArray45 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray45);
        double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.add(doubleArray45, (double) (byte) 10);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.add(doubleArray45, 0.0d);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray40, doubleArray45);
        boolean boolean52 = objMap31.containsKey((java.lang.Object) doubleArray40);
        objMap31.clear();
        java.util.Collection<java.lang.Object> objCollection54 = objMap31.values();
        java.lang.Byte[] byteArray61 = new java.lang.Byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 100, (byte) 0 };
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray61);
        int int63 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) byteArray61);
        java.lang.Byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray61);
        byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray64, (byte) 0);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray66);
        byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.add(byteArray66, 0, (byte) 0);
        boolean boolean71 = objMap31.containsKey((java.lang.Object) byteArray66);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 10.0, 10.0, -1.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 6 + "'", int63 == 6);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test11155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11155");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        java.lang.Character[] charArray21 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, 'a');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.clone(charArray24);
        java.lang.Character[] charArray31 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray31, 'a');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.add(charArray33, '#');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.remove(charArray33, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.append(charArray25, charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder0.append((short) (byte) 10, (short) (byte) 0);
        boolean[] booleanArray43 = new boolean[] { true };
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray43, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray43);
        boolean[] booleanArray52 = new boolean[] { false, false, false, false };
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray52);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray52, false);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.add(booleanArray52, true);
        boolean[] booleanArray62 = new boolean[] { false, false, false, false };
        boolean[] booleanArray63 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray62);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray62, false);
        java.lang.Boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray62);
        boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray52, booleanArray62);
        java.lang.Object obj68 = null;
        boolean boolean70 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray52, obj68, false);
        boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.add(booleanArray52, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder41.append(booleanArray43, booleanArray72);
        boolean[] booleanArray75 = new boolean[] { true };
        boolean[] booleanArray78 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray75, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray75);
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray43, booleanArray75);
        int int82 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray43, true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[true]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray75), "[true]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[]");
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray79), "[true]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
    }

    @Test
    public void test11156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11156");
        byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray0);
        int int3 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) 100);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray0);
        java.lang.Byte[] byteArray9 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9, (byte) 100);
        byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.add(byteArray11, (byte) 10);
        byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray11, 0, (int) (short) 1);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList17 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean19 = objEntryList17.remove((java.lang.Object) byteArray18);
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray18, (byte) 1);
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray18);
        byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray22);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.clone(byteArray23);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.clone(byteArray24);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray11, byteArray24);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray11, (int) 'a', 0);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.add(byteArray11, (byte) -1);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray31);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100, 1, 100, 10]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-1, 100, 1, 100, -1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test11157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11157");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray24 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray24);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray24, (double) (byte) 10);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) 10.0f);
        double[] doubleArray33 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray33);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, (double) (byte) 10);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, (double) 0L, 0);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray33);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray33, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray27, doubleArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder19.append(doubleArray20, doubleArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((long) (short) 100, (long) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder48.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder48.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder55.append((double) (byte) 1, (double) (byte) 0);
        java.lang.Short[] shortArray60 = new java.lang.Short[] { (short) 1 };
        short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray60);
        int int63 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray61, (short) 10);
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray61, (short) 100, (int) (byte) 1);
        short[] shortArray67 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray61);
        java.lang.Short[] shortArray69 = new java.lang.Short[] { (short) 1 };
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray69);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray69);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray69);
        java.lang.Short[] shortArray74 = new java.lang.Short[] { (short) 1 };
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray74);
        short[] shortArray77 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray74, (short) 10);
        short[] shortArray78 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray72, shortArray77);
        short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray78, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder58.append(shortArray61, shortArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder48.append((java.lang.Object) 13, (java.lang.Object) shortArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((short) 100, (short) (byte) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[1]");
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[1]");
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[1]");
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[1]");
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[1]");
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[1, 1]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray80), "[1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
    }

    @Test
    public void test11158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11158");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 10, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder3.append((byte) 1, (byte) 10);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.add(byteArray11, (int) (byte) 0, (byte) 100);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray11, 0, (int) '4');
        java.lang.Byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray18);
        byte[] byteArray20 = null;
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray19, byteArray20);
        byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray19, (byte) 1);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray23, (byte) -1);
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray25, (byte) 1, (int) (short) -1);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray11, byteArray25);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList30 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean32 = objEntryList30.remove((java.lang.Object) byteArray31);
        byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray31, (byte) 1);
        byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray31, (byte) 10);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray36);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray11, byteArray36);
        byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray11, (byte) 100);
        byte[] byteArray44 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int47 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray44, (byte) 10, (int) (short) -1);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray44, (byte) 10);
        int int51 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray44, (byte) 1);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(byteArray44, (byte) 100);
        byte[] byteArray57 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int60 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray57, (byte) 10, (int) (short) -1);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray57);
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray57, (byte) 1, (int) ' ');
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray44, byteArray57);
        byte[] byteArray68 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray57, (int) (short) 100, (int) '#');
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.contains(byteArray68, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder10.append(byteArray11, byteArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder10.append((byte) 10, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder74.append((byte) -1, (byte) -1);
        java.lang.Boolean boolean78 = equalsBuilder74.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[0, 0, 10, 0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertEquals("'" + boolean78 + "' != '" + false + "'", boolean78, false);
    }

    @Test
    public void test11159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11159");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, 0);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, 2, (int) (short) 100);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) 10);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray3, 100.0d);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) 1);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray20);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test11160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11160");
        float[] floatArray0 = null;
        float[] floatArray2 = org.apache.commons.lang3.ArrayUtils.add(floatArray0, (float) (byte) -1);
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray0, (float) 10);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test11161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11161");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, 0);
        double[] doubleArray13 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray13);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.add(doubleArray13, (double) (byte) 10);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray13, (double) 0L, 0);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray13);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray13, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray13);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray3);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) 1.0f);
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, (int) (short) 1, (double) 100L);
        java.lang.Double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray32, (double) 10.0f);
        double[] doubleArray40 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray40);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray40);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.add(doubleArray42, (double) 7);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray44);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray32, doubleArray44);
        double[] doubleArray50 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray50);
        double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.add(doubleArray50, (double) (byte) 10);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray53, (double) 10.0f);
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray53);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.add(doubleArray56, (double) 1.0f);
        double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray56, 0);
        int int63 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray60, (double) 5, (double) (short) 0);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray32, doubleArray60);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.add(doubleArray64, (double) (short) -1);
        int int69 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) 10.0f, 0.0d);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray25, doubleArray66);
        int int73 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray66, (double) 1, 1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 10.0, -1.0, 10.0, 7.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 10.0, -1.0, 10.0, 7.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 100.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
    }

    @Test
    public void test11162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11162");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray30);
        int[] intArray36 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray37 = org.apache.commons.lang3.ArrayUtils.clone(intArray36);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray37, (int) (short) 0);
        int[] intArray41 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray37, (int) '#');
        boolean[] booleanArray46 = new boolean[] { false, true, true, true };
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray46);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray46);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray46);
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray46, (int) ' ', 11);
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray52);
        boolean boolean54 = objMap31.remove((java.lang.Object) intArray41, (java.lang.Object) booleanArray52);
        float[] floatArray57 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray57);
        float[] floatArray61 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray61);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains(floatArray61, (float) 0);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray57, floatArray61);
        float[] floatArray66 = org.apache.commons.lang3.ArrayUtils.clone(floatArray61);
        float[] floatArray70 = new float[] { (short) 100, 0, 10 };
        float[] floatArray73 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray74 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray73);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.contains(floatArray73, (float) 0);
        float[] floatArray78 = org.apache.commons.lang3.ArrayUtils.add(floatArray73, 10.0f);
        float[] floatArray79 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray70, floatArray73);
        float[] floatArray80 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray61, floatArray70);
        float[] floatArray83 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray80, (int) '4', 2);
        java.lang.Float[] floatArray84 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray80);
        float[] floatArray85 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray84);
        float[] floatArray87 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray84, (float) 7);
        float[] floatArray88 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray84);
        java.lang.Float[] floatArray89 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray84);
        boolean boolean90 = objMap31.containsKey((java.lang.Object) floatArray89);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 3 + "'", int39 == 3);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray73), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray78), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray79), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray80), "[-1.0, 1.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray83), "[]");
        org.junit.Assert.assertNotNull(floatArray84);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[-1.0, 1.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray87), "[-1.0, 1.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray88), "[-1.0, 1.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test11163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11163");
        byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray0);
        java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray1);
        java.lang.Byte[] byteArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder4.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean8 = equalsBuilder7.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder7.append((byte) 10, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder7.append((byte) 1, (byte) 10);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.add(byteArray15, (int) (byte) 0, (byte) 100);
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray15, 0, (int) '4');
        java.lang.Byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray22);
        byte[] byteArray24 = null;
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray23, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray23, (byte) 1);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray27, (byte) -1);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray29, (byte) 1, (int) (short) -1);
        byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray15, byteArray29);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList34 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean36 = objEntryList34.remove((java.lang.Object) byteArray35);
        byte[] byteArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray35, (byte) 1);
        byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray35, (byte) 10);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray40);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray15, byteArray40);
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray15, (byte) 100);
        byte[] byteArray48 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int51 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray48, (byte) 10, (int) (short) -1);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray48, (byte) 10);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray48, (byte) 1);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(byteArray48, (byte) 100);
        byte[] byteArray61 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int64 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray61, (byte) 10, (int) (short) -1);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray61);
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray61, (byte) 1, (int) ' ');
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray48, byteArray61);
        byte[] byteArray72 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray61, (int) (short) 100, (int) '#');
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.contains(byteArray72, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder14.append(byteArray15, byteArray72);
        int int76 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray1, (java.lang.Object) equalsBuilder75);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0, 0, 10, 0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
    }

    @Test
    public void test11164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11164");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) 10);
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) 100, (int) (byte) 1);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray8);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray8, 1, (int) (short) 0);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray8);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray8, (short) (byte) 10, 2);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.add(shortArray8, (short) (byte) 0);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray18);
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) 1 };
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray22, (short) 10);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray22, (short) 100, (int) (byte) 1);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray22);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray22, (short) 100, 2);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray22);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append(true, true);
        byte[] byteArray40 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray40, (byte) 10, (int) (short) -1);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray40);
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray40, (byte) 1, (int) ' ');
        byte[] byteArray54 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray54);
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray54, (byte) 10);
        byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray40, byteArray54);
        byte[] byteArray59 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.add(byteArray59, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder33.append(byteArray40, byteArray59);
        short[] shortArray64 = new short[] {};
        java.lang.Short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray64);
        int int66 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) shortArray64);
        short[] shortArray69 = new short[] { (short) 100, (short) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder33.append(shortArray64, shortArray69);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray64);
        java.lang.Short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray64);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray32, shortArray64);
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray19, shortArray32);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1, 0]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1, 0]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[1]");
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 4 + "'", int57 == 4);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[100, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[1, 0, 1]");
    }

    @Test
    public void test11165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11165");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f);
        double[] doubleArray12 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray12);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray12, (double) (byte) 10);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray12, (double) 0L, 0);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray12);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray6, doubleArray12);
        long[] longArray29 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray30 = org.apache.commons.lang3.ArrayUtils.clone(longArray29);
        java.lang.Long[] longArray31 = org.apache.commons.lang3.ArrayUtils.toObject(longArray30);
        long[] longArray37 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.clone(longArray37);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray30, longArray38);
        java.lang.Long[] longArray40 = org.apache.commons.lang3.ArrayUtils.toObject(longArray38);
        java.lang.Long[] longArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray40);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) doubleArray12, (java.lang.Object) longArray41);
        long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray41);
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray43);
        int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray44, 0L);
        long[] longArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray44, (long) 10);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.add(longArray48, (-1L));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[32, 100, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 1, -1]");
    }

    @Test
    public void test11166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11166");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { (-1.0d), 100.0d, 1.0d, 10.0d, (-1.0d), 100.0d };
        java.lang.Double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6);
        java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6);
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray9);
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray10, (double) '4');
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray10, (double) 4);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray10, (double) (short) 0, 0.0d);
        java.lang.Double[] doubleArray24 = new java.lang.Double[] { (-1.0d), 100.0d, 1.0d, 10.0d, (-1.0d), 100.0d };
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray24);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray25, (double) ' ');
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray10, doubleArray27);
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.add(doubleArray10, (double) (byte) 100);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray30, (double) (byte) 1);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0, -1.0, 100.0, 1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0, 10.0, -1.0, 100.0, 100.0]");
    }

    @Test
    public void test11167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11167");
        java.lang.Long[] longArray0 = null;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        java.lang.Long[] longArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        java.lang.Long[] longArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertNotNull(longArray3);
    }

    @Test
    public void test11168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11168");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0.0d);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        double[] doubleArray13 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray13);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.add(doubleArray13, (double) (byte) 10);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray16, (double) 10.0f);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray16);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.add(doubleArray19, (double) 1.0f);
        java.lang.Double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray21);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray21);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray23, 10.0d);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray23, (int) (short) 100, (int) (byte) 100);
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.add(doubleArray23, (double) (short) 0);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray23, 1);
        double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.add(doubleArray23, (double) (byte) 1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0, 10.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 100.0, 0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0, 10.0, 1.0, 1.0]");
    }

    @Test
    public void test11169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11169");
        java.lang.Float[] floatArray3 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f };
        java.lang.Float[] floatArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray3);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray4, (float) (short) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray6);
        java.lang.Short[] shortArray9 = new java.lang.Short[] { (short) 1 };
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        boolean[] booleanArray17 = new boolean[] { false, false, false, false };
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray17);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray17, false);
        java.lang.Boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray17);
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray17);
        java.lang.Boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray17);
        java.lang.Short[] shortArray25 = new java.lang.Short[] { (short) 1 };
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray25);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray25);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray25, (short) (byte) 100);
        short[] shortArray30 = new short[] {};
        java.lang.Short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray30);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray29, shortArray30);
        float[] floatArray35 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray35);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(floatArray35, (float) 0);
        float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.add(floatArray35, 10.0f);
        java.lang.Float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray35);
        boolean boolean43 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray29, (java.lang.Object) floatArray41, false);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray23, (java.lang.Object[]) floatArray41);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray9, (java.lang.Object[]) floatArray41);
        int int48 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray41, (java.lang.Object) 1, 0);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) floatArray41);
        float[] floatArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray41);
        float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.add(floatArray50, 0, (float) 10L);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray53);
        java.lang.String str55 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) floatArray53);
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray53, 0.0f, 11);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray6, floatArray53);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[0.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[1]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[1]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[1]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[1]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[1.0, -1.0, 10.0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{1.0,-1.0,10.0}" + "'", str55, "{1.0,-1.0,10.0}");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test11170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11170");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        java.lang.Character[] charArray15 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray15);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, 'a');
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray9, charArray18);
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        java.lang.Character[] charArray21 = org.apache.commons.lang3.ArrayUtils.toObject(charArray20);
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, '4');
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.add(charArray25, '#');
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray29 = org.apache.commons.lang3.ArrayUtils.remove(charArray27, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), " 44a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), " 44a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[ , 4, 4, a, 4, #]");
    }

    @Test
    public void test11171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11171");
        boolean[] booleanArray4 = new boolean[] { false, true, true, true };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray5, true, (int) (short) 100);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray5, true);
        boolean[] booleanArray15 = new boolean[] { false, false, false, false };
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray15);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray15, false);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray5, booleanArray15);
        boolean[] booleanArray24 = new boolean[] { false, true, true, true };
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray24);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray24);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray24);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray24, true);
        boolean[] booleanArray34 = new boolean[] { false, false, false, false };
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray34, false);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.add(booleanArray34, true);
        boolean[] booleanArray44 = new boolean[] { false, false, false, false };
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray44);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray44, false);
        java.lang.Boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray44);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray34, booleanArray44);
        boolean[] booleanArray54 = new boolean[] { false, true, true, true };
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray54);
        int int58 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray55, true, (int) (short) 100);
        boolean[] booleanArray59 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray34, booleanArray55);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray24, booleanArray55);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray15, booleanArray24);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray64 = org.apache.commons.lang3.ArrayUtils.add(booleanArray15, 11, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 11, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[true, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 3 + "'", int58 == 3);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, false, false, false, false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test11172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11172");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray5);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.toObject(intArray5);
        java.lang.Integer[] intArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray8, 3);
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.remove(intArray10, 2);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray10, (int) (byte) -1);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray10, 11);
        int[] intArray19 = org.apache.commons.lang3.ArrayUtils.add(intArray10, (int) (short) 1, 11);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray10, (int) (short) 0, 100);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.subarray(intArray10, (int) ' ', 8);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, -1, 100]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 11, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
    }

    @Test
    public void test11173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11173");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray7, 'a', (-1));
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray7, 'a');
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.subarray(charArray7, 0, 3);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray15);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray15, '4');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a,  , a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a,  , a]");
    }

    @Test
    public void test11174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11174");
        char[] charArray1 = new char[] { 'a' };
        java.lang.Character[] charArray2 = org.apache.commons.lang3.ArrayUtils.toObject(charArray1);
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2);
        float[] floatArray7 = new float[] { (short) 100, 0, 10 };
        float[] floatArray10 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(floatArray10, (float) 0);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.add(floatArray10, 10.0f);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray7, floatArray10);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray10);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(floatArray10, (float) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray10);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) charArray3, (java.lang.Object) floatArray10);
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray3);
        java.lang.Long[] longArray29 = new java.lang.Long[] { 100L, 100L, 0L, 10L, 1L, (-1L) };
        java.lang.Long[] longArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray29);
        java.lang.Long[] longArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray30);
        float[] floatArray34 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.contains(floatArray34, (float) 0);
        float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.add(floatArray34, 10.0f);
        java.lang.Float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray34);
        java.lang.Float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray40);
        boolean boolean42 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray30, (java.lang.Object) floatArray40);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) charArray22, (java.lang.Object) longArray30, (int) (short) 0);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) charArray22);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test11175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11175");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        double[] doubleArray36 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray36);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (double) (byte) 10);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray39, (double) 10.0f);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 1L);
        java.lang.Object obj44 = objMap31.get((java.lang.Object) 1L);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = objMap31.entrySet();
        java.lang.Object obj46 = null;
        java.lang.Object obj47 = objMap31.remove(obj46);
        java.lang.Double[] doubleArray54 = new java.lang.Double[] { (-1.0d), 100.0d, 1.0d, 10.0d, (-1.0d), 100.0d };
        java.lang.Double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray54);
        java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray54);
        java.lang.Double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray54);
        boolean boolean58 = objMap31.equals((java.lang.Object) doubleArray57);
        int int59 = objMap31.size();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    public void test11176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11176");
        byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray3 = org.apache.commons.lang3.ArrayUtils.add(byteArray0, (int) (byte) 0, (byte) 100);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.add(byteArray3, (byte) 0);
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.clone(byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray6, (byte) 1);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray6, (int) (short) -1, (int) (short) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray6);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[100, 0]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 0]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100, 0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test11177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11177");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.lang.Boolean[][] booleanArray33 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray40 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray47 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray54 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray61 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray62 = new java.lang.Boolean[][] { booleanArray40, booleanArray47, booleanArray54, booleanArray61 };
        java.lang.Boolean[][] booleanArray63 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray33, booleanArray62);
        java.util.Map<java.lang.Object, java.lang.Object> objMap64 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray33);
        int[] intArray67 = new int[] { 1, (byte) 1 };
        int[] intArray70 = org.apache.commons.lang3.ArrayUtils.add(intArray67, (int) (short) 0, (int) '4');
        java.lang.Object obj71 = objMap31.getOrDefault((java.lang.Object) booleanArray33, (java.lang.Object) intArray70);
        java.util.Collection<java.lang.Object> objCollection72 = objMap31.values();
        java.lang.Object obj73 = null;
        java.lang.Object obj74 = null;
        java.lang.Object obj75 = objMap31.putIfAbsent(obj73, obj74);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder76.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean80 = equalsBuilder79.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder79.append((byte) 10, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append((float) (byte) -1, (float) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder86.append('a', ' ');
        boolean boolean90 = objMap31.containsValue((java.lang.Object) equalsBuilder86);
        equalsBuilder86.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder86.append(false, false);
        java.lang.Boolean boolean95 = equalsBuilder86.build();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertNotNull(objMap64);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1, 1]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[52, 1, 1]");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(objCollection72);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertEquals("'" + boolean95 + "' != '" + true + "'", boolean95, true);
    }

    @Test
    public void test11178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11178");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        java.lang.Float[] floatArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray3);
        float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray3);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.add(floatArray5, 0.0f);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) -1, (int) (byte) 1);
        float[] floatArray13 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray17 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray17);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(floatArray17, (float) 0);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray13, floatArray17);
        float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.clone(floatArray17);
        float[] floatArray26 = new float[] { (short) 100, 0, 10 };
        float[] floatArray29 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(floatArray29, (float) 0);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.add(floatArray29, 10.0f);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray26, floatArray29);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray17, floatArray26);
        float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.add(floatArray36, (float) (-1));
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(floatArray38, 0.0f);
        float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray5, floatArray38);
        java.lang.Float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray41);
        float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray42, (float) (byte) 100);
        java.lang.Short[] shortArray45 = new java.lang.Short[] {};
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45, (short) (byte) 10);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray42, (java.lang.Object) shortArray47, 10);
        java.lang.Float[] floatArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray42);
        java.lang.Float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray42);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[-1.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 1.0, 100.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 1.0, -1.0, 1.0, 100.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 1.0, -1.0, 1.0, 100.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertNotNull(floatArray51);
    }

    @Test
    public void test11179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11179");
        boolean[] booleanArray1 = new boolean[] { true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray1, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.add(booleanArray1, false);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray1, false, 3);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.add(booleanArray1, false);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray1, false, (int) (short) -1);
        org.junit.Assert.assertNotNull(booleanArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray1), "[true]");
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true, false]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[true, false]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test11180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11180");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray16 = new boolean[] { false, false, false, false };
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray16);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray16, false);
        java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray16);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray11, booleanArray16);
        java.lang.Boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray16);
        java.lang.Boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray22);
        java.lang.Boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray23);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray24);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray25);
        boolean[] booleanArray27 = null;
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray26, booleanArray27);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test11181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11181");
        java.util.ArrayList[] arrayListArray1 = new java.util.ArrayList[0];
        @SuppressWarnings("unchecked")
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[] objEntryListArray2 = (java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[]) arrayListArray1;
        java.util.ArrayList[][] arrayListArray4 = new java.util.ArrayList[1][];
        @SuppressWarnings("unchecked")
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[][] objEntryListArray5 = (java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[][]) arrayListArray4;
        objEntryListArray5[0] = objEntryListArray2;
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList8 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor9 = objEntryList8.iterator();
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.String[] strArray14 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray15 = org.apache.commons.lang3.ArrayUtils.addAll(strArray10, strArray14);
        java.lang.Comparable<java.lang.String>[] strComparableArray16 = objEntryList8.toArray((java.lang.Comparable<java.lang.String>[]) strArray10);
        java.lang.Boolean[][] booleanArray17 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray24 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray31 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray38 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray45 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray46 = new java.lang.Boolean[][] { booleanArray24, booleanArray31, booleanArray38, booleanArray45 };
        java.lang.Boolean[][] booleanArray47 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray17, booleanArray46);
        java.util.Map<java.lang.Object, java.lang.Object> objMap48 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray17);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet49 = objMap48.entrySet();
        double[] doubleArray53 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray53);
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.add(doubleArray53, (double) (byte) 10);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray56, (double) 10.0f);
        int int60 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray56, (double) 1L);
        java.lang.Object obj61 = objMap48.get((java.lang.Object) 1L);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = objMap48.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList63 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        float[] floatArray67 = new float[] { (short) 100, 0, 10 };
        float[] floatArray70 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray71 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray70);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.contains(floatArray70, (float) 0);
        float[] floatArray75 = org.apache.commons.lang3.ArrayUtils.add(floatArray70, 10.0f);
        float[] floatArray76 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray67, floatArray70);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.contains(floatArray70, (float) (byte) 10);
        boolean boolean79 = objEntryList63.equals((java.lang.Object) boolean78);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList80 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Object[] objArray81 = objEntryList80.toArray();
        boolean boolean82 = objEntryList63.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList80);
        boolean boolean83 = objEntrySet62.addAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList80);
        objEntryList80.clear();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList85 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Object[] objArray86 = objEntryList85.toArray();
        java.util.ArrayList[] arrayListArray88 = new java.util.ArrayList[3];
        @SuppressWarnings("unchecked")
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[] objEntryListArray89 = (java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[]) arrayListArray88;
        objEntryListArray89[0] = objEntryList8;
        objEntryListArray89[1] = objEntryList80;
        objEntryListArray89[2] = objEntryList85;
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[] objEntryListArray96 = org.apache.commons.lang3.ArrayUtils.toArray(objEntryListArray89);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[][] objEntryListArray97 = org.apache.commons.lang3.ArrayUtils.add(objEntryListArray5, objEntryListArray96);
        java.lang.Object[] objArray98 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) objEntryListArray97);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[][] objEntryListArray99 = org.apache.commons.lang3.ArrayUtils.toArray(objEntryListArray97);
        org.junit.Assert.assertNotNull(arrayListArray1);
        org.junit.Assert.assertNotNull(objEntryListArray2);
        org.junit.Assert.assertNotNull(arrayListArray4);
        org.junit.Assert.assertNotNull(objEntryListArray5);
        org.junit.Assert.assertNotNull(objEntryItor9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strComparableArray16);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(objMap48);
        org.junit.Assert.assertNotNull(objEntrySet49);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray67), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
        org.junit.Assert.assertNotNull(arrayListArray88);
        org.junit.Assert.assertNotNull(objEntryListArray89);
        org.junit.Assert.assertNotNull(objEntryListArray96);
        org.junit.Assert.assertNotNull(objEntryListArray97);
        org.junit.Assert.assertNotNull(objArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray98), "[[], [[], [], []]]");
        org.junit.Assert.assertNotNull(objEntryListArray99);
    }

    @Test
    public void test11182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11182");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        java.lang.Short[] shortArray5 = new java.lang.Short[] { (short) 1 };
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        boolean[] booleanArray13 = new boolean[] { false, false, false, false };
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray13, false);
        java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray13);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray13);
        java.lang.Boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray13);
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) 1 };
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray21);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21, (short) (byte) 100);
        short[] shortArray26 = new short[] {};
        java.lang.Short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray26);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray25, shortArray26);
        float[] floatArray31 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(floatArray31, (float) 0);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.add(floatArray31, 10.0f);
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        boolean boolean39 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray25, (java.lang.Object) floatArray37, false);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray19, (java.lang.Object[]) floatArray37);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray5, (java.lang.Object[]) floatArray37);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray37, (java.lang.Object) 1, 0);
        java.lang.Float[] floatArray48 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f };
        java.lang.Float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder0.append((java.lang.Object[]) floatArray37, (java.lang.Object[]) floatArray49);
        java.lang.Short[] shortArray52 = new java.lang.Short[] { (short) 1 };
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray52);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray53, (short) 10);
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray53, (short) 100, (int) (byte) 1);
        short[] shortArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray53);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray59);
        short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray59, 1, (int) (short) 0);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.add(shortArray59, (short) 100);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.clone(shortArray65);
        int int67 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray37, (java.lang.Object) shortArray65);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray65, (int) 'a', (int) '4');
        short[] shortArray73 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray70, 3, (int) (byte) 0);
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.clone(shortArray73);
        short[] shortArray77 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray73, (int) ' ', 10);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray77);
        int int81 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray77, (short) -1, (int) '4');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[1]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[1, 100]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[1, 100]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[]");
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[]");
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
    }

    @Test
    public void test11183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11183");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray7);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray7);
        java.lang.Character[] charArray15 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, ' ');
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray17);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray7, charArray17);
        java.lang.Character[] charArray25 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray25, ' ');
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray27);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray28);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray7, charArray28);
        double[] doubleArray34 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray34);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.add(doubleArray34, (double) (byte) 10);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray34, 0.0d);
        char[] charArray41 = new char[] { 'a' };
        java.lang.Character[] charArray42 = org.apache.commons.lang3.ArrayUtils.toObject(charArray41);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) 0.0d, (java.lang.Object) charArray41);
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.clone(charArray41);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray28, charArray41);
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray41);
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.add(charArray46, (int) (short) 1, '4');
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder51.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean55 = equalsBuilder54.isEquals();
        java.lang.String[] strArray56 = new java.lang.String[] {};
        java.lang.String[] strArray60 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray61 = org.apache.commons.lang3.ArrayUtils.addAll(strArray56, strArray60);
        java.lang.String[] strArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray56);
        java.lang.Character[] charArray68 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray68, ' ');
        java.lang.Character[] charArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder54.append((java.lang.Object[]) strArray56, (java.lang.Object[]) charArray71);
        char[] charArray73 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray71);
        java.lang.Character[] charArray74 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray71);
        java.lang.Character[] charArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray71);
        char[] charArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray75);
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.addAll(charArray46, charArray76);
        int int79 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray46, 'a');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "a 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "a 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[a,  , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
    }

    @Test
    public void test11184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11184");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10);
        java.lang.Character[] charArray17 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17, 'a');
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray19, 'a', (-1));
        java.lang.Character[] charArray28 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28, ' ');
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28, '#');
        java.lang.Character[] charArray38 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray38);
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray38, 'a');
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray32, charArray41);
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray32);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) booleanArray11, (java.lang.Object) charArray32);
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray45, true);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray45, false);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray45);
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.add(booleanArray45, true);
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray52, true);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a a # 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a a # 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a,  , a,  , #,  , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, false, false, false]");
    }

    @Test
    public void test11185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11185");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.String[] strArray9 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray10 = org.apache.commons.lang3.ArrayUtils.addAll(strArray5, strArray9);
        java.lang.String[] strArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray5);
        java.lang.Character[] charArray17 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17, ' ');
        java.lang.Character[] charArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((java.lang.Object[]) strArray5, (java.lang.Object[]) charArray20);
        short[] shortArray22 = null;
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray24);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24, (short) (byte) 100);
        short[] shortArray29 = new short[] {};
        java.lang.Short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray29);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray28, shortArray29);
        java.lang.Short[] shortArray33 = new java.lang.Short[] { (short) 1 };
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray33);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray33);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray33, (short) (byte) 100);
        short[] shortArray38 = new short[] {};
        java.lang.Short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray38);
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray37, shortArray38);
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray31, shortArray38);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray22, shortArray41);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray42, 3, 1);
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) strArray5, (java.lang.Object) 1, 10);
        java.lang.String[] strArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray5);
        double[] doubleArray52 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray52);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray53, (java.lang.Object) ' ');
        java.lang.Object obj56 = null;
        java.lang.Object[] objArray57 = org.apache.commons.lang3.ArrayUtils.add((java.lang.Object[]) doubleArray53, obj56);
        java.lang.Object obj58 = null;
        java.lang.Object[] objArray59 = org.apache.commons.lang3.ArrayUtils.removeElement((java.lang.Object[]) doubleArray53, obj58);
        double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray53);
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray53, (double) (byte) 1);
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray62);
        java.lang.Double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray63);
        java.lang.Double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray64);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) strArray48, (java.lang.Object[]) doubleArray65);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[1]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[1]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test11186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11186");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) 0);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, 10.0f);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) (-1));
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray2);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.clone(floatArray2);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray2);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray2, (int) (short) -1, (int) '#');
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[1.0, -1.0]");
    }

    @Test
    public void test11187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11187");
        java.lang.Object[] objArray0 = null;
        java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 1 };
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2);
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray3, (short) 10);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray3, (short) 100, (int) (byte) 1);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray9);
        java.lang.Short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray9);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray9, (short) 10, 5);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray9, (short) 100);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.add(shortArray9, (short) 0);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(objArray0, (java.lang.Object) shortArray18, (int) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1, 0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test11188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11188");
        org.apache.commons.lang3.ArrayUtils arrayUtils0 = new org.apache.commons.lang3.ArrayUtils();
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray1 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils0 };
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray3 = org.apache.commons.lang3.ArrayUtils.remove(arrayUtilsArray1, (int) (short) 0);
        java.lang.Character[] charArray9 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray9, ' ');
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray11);
        java.lang.String[] strArray13 = new java.lang.String[] {};
        java.lang.String[] strArray17 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray18 = org.apache.commons.lang3.ArrayUtils.addAll(strArray13, strArray17);
        boolean boolean19 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) arrayUtilsArray1, (java.lang.Object) charArray11, strArray17);
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.clone(charArray11);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray11, '4');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.subarray(charArray11, (int) ' ', 1);
        org.junit.Assert.assertNotNull(arrayUtilsArray1);
        org.junit.Assert.assertNotNull(arrayUtilsArray3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
    }

    @Test
    public void test11189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11189");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) 0);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, 10.0f);
        java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray2, 0.0f, (int) ' ');
        float[] floatArray14 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray14);
        float[] floatArray18 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(floatArray18, (float) 0);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray14, floatArray18);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.clone(floatArray18);
        float[] floatArray26 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray26);
        float[] floatArray30 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray30);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(floatArray30, (float) 0);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray26, floatArray30);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray26);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray26);
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray18, floatArray26);
        int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray18, (float) 0L, (int) (byte) 0);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray18);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) 0);
        float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.clone(floatArray2);
        float[] floatArray47 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray47);
        java.lang.Float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray48);
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray49, (float) 'a');
        java.lang.Float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray51);
        float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray52);
        java.lang.Float[] floatArray54 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray53);
        float[] floatArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray54, (float) '4');
        float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray44, floatArray56);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 1.0, -1.0, 1.0]");
    }

    @Test
    public void test11190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11190");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean2 = objEntryList0.remove((java.lang.Object) byteArray1);
        byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) 1);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1);
        byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) 100);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray7, (byte) 0);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.clone(byteArray7);
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray15, (byte) 100);
        byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.add(byteArray17, (byte) 10);
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray17, 0, (int) (short) 1);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList23 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean25 = objEntryList23.remove((java.lang.Object) byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray24, (byte) 1);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray24);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray28);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.clone(byteArray29);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.clone(byteArray30);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray17, byteArray30);
        byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.remove(byteArray17, (int) (short) 1);
        byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray7, byteArray17);
        float[] floatArray38 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray38);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) floatArray39);
        java.lang.Object[] objArray41 = org.apache.commons.lang3.ArrayUtils.clone((java.lang.Object[]) floatArray39);
        java.lang.Byte[] byteArray48 = new java.lang.Byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 100, (byte) 0 };
        byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray48);
        byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray48);
        java.lang.Object[] objArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) byteArray48);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) objArray41, (java.lang.Object) byteArray48);
        java.lang.Byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray48);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray48);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray17, byteArray54);
        java.lang.Character[] charArray61 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray61, 'a');
        char[] charArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray61, ' ');
        java.lang.Character[] charArray71 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray73 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray71, 'a');
        char[] charArray75 = org.apache.commons.lang3.ArrayUtils.add(charArray73, '#');
        char[] charArray78 = org.apache.commons.lang3.ArrayUtils.subarray(charArray73, (int) (byte) -1, (int) '#');
        java.lang.Character[] charArray84 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray85 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray84);
        char[] charArray87 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray84, 'a');
        char[] charArray88 = org.apache.commons.lang3.ArrayUtils.clone(charArray87);
        char[] charArray89 = org.apache.commons.lang3.ArrayUtils.addAll(charArray73, charArray87);
        char[] charArray91 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray87, 'a');
        char[] charArray92 = org.apache.commons.lang3.ArrayUtils.clone(charArray87);
        char[] charArray93 = org.apache.commons.lang3.ArrayUtils.addAll(charArray65, charArray92);
        java.lang.String str94 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray92);
        boolean boolean95 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) byteArray54, (java.lang.Object) str94);
        int int97 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray54, (byte) 1);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100, 1, 100, 10]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-1, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[-1.0, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "4## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "4## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[4, #, #,  ]");
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray93);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray93), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray93), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray93), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "{4,#,#, ,a}" + "'", str94, "{4,#,#, ,a}");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
    }

    @Test
    public void test11191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11191");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.add(charArray7, '#');
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.subarray(charArray7, (int) (byte) -1, (int) '#');
        java.lang.Character[] charArray18 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray18);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray18, 'a');
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.clone(charArray21);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.addAll(charArray7, charArray21);
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.add(charArray7, 1, '4');
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.subarray(charArray7, 13, 3);
        double[] doubleArray33 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray33);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, (double) (byte) 10);
        double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, 0.0d);
        char[] charArray40 = new char[] { 'a' };
        java.lang.Character[] charArray41 = org.apache.commons.lang3.ArrayUtils.toObject(charArray40);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) 0.0d, (java.lang.Object) charArray40);
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.clone(charArray40);
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.subarray(charArray43, (int) (byte) 1, (-1));
        java.lang.Character[] charArray47 = org.apache.commons.lang3.ArrayUtils.toObject(charArray46);
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray46, 'a');
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.addAll(charArray7, charArray46);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a4 a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a4 a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, 4,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a,  , a,  , #]");
    }

    @Test
    public void test11192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11192");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        short[] shortArray9 = new short[] {};
        java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray9);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray8, shortArray9);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.add(shortArray9, (short) -1);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 1 };
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray15);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray15);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray15, (short) (byte) 100);
        short[] shortArray20 = new short[] {};
        java.lang.Short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray20);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray19, shortArray20);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray24);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24, (short) (byte) 100);
        short[] shortArray29 = new short[] {};
        java.lang.Short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray29);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray28, shortArray29);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray22, shortArray29);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.add(shortArray32, (short) (byte) 10);
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray9, shortArray32);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray35);
        java.lang.Class<?> wildcardClass37 = shortArray35.getClass();
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[-1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[1]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[1]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[1]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test11193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11193");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((byte) 100, (byte) 1);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.String[] strArray27 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray28 = org.apache.commons.lang3.ArrayUtils.addAll(strArray23, strArray27);
        java.lang.Short[] shortArray30 = new java.lang.Short[] { (short) 1 };
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray30);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray30);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray30, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder0.append((java.lang.Object[]) strArray28, (java.lang.Object[]) shortArray30);
        java.lang.String[] strArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray28);
        java.lang.Character[] charArray42 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) strArray28, (java.lang.Object[]) charArray43);
        java.lang.String[] strArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray28);
        java.lang.String[] strArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray28);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[1]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[1]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
    }

    @Test
    public void test11194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11194");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((long) (byte) 10, (long) (byte) 10);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean29 = equalsBuilder28.isEquals();
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.String[] strArray34 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray35 = org.apache.commons.lang3.ArrayUtils.addAll(strArray30, strArray34);
        java.lang.String[] strArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray30);
        java.lang.Character[] charArray42 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray42, ' ');
        java.lang.Character[] charArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder28.append((java.lang.Object[]) strArray30, (java.lang.Object[]) charArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder21.append((java.lang.Object[]) byteArray23, (java.lang.Object[]) strArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder21.append((double) 3, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append(true, false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
    }

    @Test
    public void test11195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11195");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray13);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray13, 0);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray13, 1, (int) (short) -1);
        java.lang.Integer[] intArray21 = org.apache.commons.lang3.ArrayUtils.toObject(intArray13);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray13);
        int[] intArray27 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.clone(intArray27);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray28);
        java.lang.Integer[] intArray30 = org.apache.commons.lang3.ArrayUtils.toObject(intArray28);
        java.lang.Integer[] intArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray30);
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray31, 3);
        int[] intArray38 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.clone(intArray38);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray39);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.subarray(intArray39, (int) ' ', (int) (byte) 100);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray33, intArray39);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray39);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray22, intArray39);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(intArray22, (int) (short) 100);
        java.lang.Integer[] intArray49 = org.apache.commons.lang3.ArrayUtils.toObject(intArray22);
        int[] intArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray49);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, -1, -1, 100]");
    }

    @Test
    public void test11196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11196");
        java.lang.Boolean[] booleanArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY;
        boolean[] booleanArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray0, true);
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray0, false);
        java.util.Map<java.lang.Object, java.lang.Object> objMap5 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        int[] intArray10 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray11 = org.apache.commons.lang3.ArrayUtils.clone(intArray10);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray10);
        java.lang.Integer[] intArray13 = org.apache.commons.lang3.ArrayUtils.toObject(intArray10);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray13);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 100, 4);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.add(intArray14, (int) (short) 0, (-1));
        org.apache.commons.lang3.ArrayUtils.reverse(intArray14);
        java.lang.Integer[] intArray22 = org.apache.commons.lang3.ArrayUtils.toObject(intArray14);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, 10);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, 1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) (short) 100);
        char[] charArray30 = new char[] { 'a' };
        java.lang.Character[] charArray31 = org.apache.commons.lang3.ArrayUtils.toObject(charArray30);
        java.lang.Character[] charArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray31);
        float[] floatArray36 = new float[] { (short) 100, 0, 10 };
        float[] floatArray39 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray39);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.contains(floatArray39, (float) 0);
        float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.add(floatArray39, 10.0f);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray36, floatArray39);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray39);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(floatArray39, (float) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray39);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) charArray32, (java.lang.Object) floatArray39);
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray32, 'a');
        java.lang.Object obj53 = objMap5.put((java.lang.Object) intArray22, (java.lang.Object) charArray32);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[]");
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[]");
        org.junit.Assert.assertNotNull(objMap5);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNull(obj53);
    }

    @Test
    public void test11197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11197");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (short) 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray8, 1L);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray8);
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray8);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray8);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(longArray15, 0L);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 4 + "'", int12 == 4);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test11198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11198");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray8, (short) 0);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray10, (int) ' ', 0);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray10, (short) (byte) -1);
        java.lang.String str16 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) shortArray10);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{1}" + "'", str16, "{1}");
    }

    @Test
    public void test11199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11199");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder37.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder37.append((byte) -1, (byte) 100);
        boolean[] booleanArray44 = new boolean[] { true };
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray44, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray49 = new boolean[] { true };
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray49, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray52, (int) '#', (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder42.append(booleanArray44, booleanArray52);
        double[] doubleArray60 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray60);
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.add(doubleArray60, (double) (byte) 10);
        int int66 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray60, (double) 0L, 0);
        double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray60);
        double[] doubleArray70 = new double[] { 4, 0.0f };
        int int72 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray70, (double) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder56.append(doubleArray60, doubleArray70);
        int int76 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray70, (double) 6, (int) '#');
        double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray70, (int) (byte) 1, (int) (short) 100);
        double[] doubleArray81 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray70, (double) 'a');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[4.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[4.0, 0.0]");
    }

    @Test
    public void test11200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11200");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0.0d);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        double[] doubleArray13 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray13);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.add(doubleArray13, (double) (byte) 10);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray16, (double) 10.0f);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray16);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.add(doubleArray19, (double) 1.0f);
        java.lang.Double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray21);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray21);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray23, 10.0d);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray23, (int) (short) 100, (int) (byte) 100);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray23, (double) 0.0f);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test11201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11201");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) -1);
        java.lang.Character[] charArray6 = null;
        java.lang.Character[] charArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray6);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray1, (java.lang.Object[]) charArray6);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray9);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.clone(shortArray9);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[1]");
    }

    @Test
    public void test11202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11202");
        byte[] byteArray3 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 10, (int) (short) -1);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray3, (byte) 1, (int) ' ');
        byte[] byteArray17 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray17);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray17, (byte) 10);
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray3, byteArray17);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(byteArray21, (byte) 1);
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray21, (byte) -1);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray21, (byte) -1);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test11203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11203");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray4, (byte) 100);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, (byte) 10);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray6, 0, (int) (short) 1);
        java.lang.Double[] doubleArray18 = new java.lang.Double[] { (-1.0d), 100.0d, 1.0d, 10.0d, (-1.0d), 100.0d };
        java.lang.Double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray18);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray18);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray18);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) byteArray11, (java.lang.Object) doubleArray21);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.add(byteArray11, (byte) 10);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.clone(byteArray24);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray25, (byte) 1);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100, 1, 100, 10]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, 10]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 10]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test11204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11204");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) booleanArray29);
        java.lang.Short[] shortArray33 = new java.lang.Short[] { (short) 1 };
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray33);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray33);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray33, (short) (byte) 100);
        short[] shortArray38 = new short[] {};
        java.lang.Short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray38);
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray37, shortArray38);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray40, (short) 0);
        java.lang.Short[] shortArray44 = new java.lang.Short[] { (short) 1 };
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray44);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray44);
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray44, (short) (byte) 100);
        short[] shortArray49 = new short[] {};
        java.lang.Short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray49);
        short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray48, shortArray49);
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray48, 4, (-1));
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray42, shortArray54);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) booleanArray29, (java.lang.Object) shortArray55);
        boolean[] booleanArray61 = new boolean[] { false, false, false, false };
        boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray61);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray61, false);
        java.lang.Boolean[] booleanArray65 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray61);
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray61);
        java.lang.Boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray61);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray67, false);
        java.lang.Boolean[][] booleanArray70 = org.apache.commons.lang3.ArrayUtils.add(booleanArray29, booleanArray67);
        java.lang.Boolean[] booleanArray71 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY;
        java.lang.Boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray71);
        boolean[] booleanArray73 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray71);
        java.lang.Boolean[] booleanArray74 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray71);
        java.lang.Boolean[][] booleanArray75 = org.apache.commons.lang3.ArrayUtils.add(booleanArray70, booleanArray74);
        boolean[] booleanArray77 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray74, false);
        int int80 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray77, false, 11);
        java.lang.Boolean[] booleanArray81 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray77);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[1]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[1]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[1]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[1]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[1]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[1]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[]");
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray77), "[]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(booleanArray81);
    }

    @Test
    public void test11205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11205");
        java.lang.Byte[] byteArray1 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray1);
        byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) 0);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1);
        byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.remove(byteArray5, (int) (short) 0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[1]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[1]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
    }

    @Test
    public void test11206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11206");
        short[] shortArray4 = new short[] { (byte) 0, (byte) 1, (short) -1, (byte) -1 };
        java.lang.Short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4);
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) (byte) 1);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.clone(shortArray4);
        java.lang.Short[] shortArray10 = new java.lang.Short[] { (short) 1 };
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray11, (short) 10);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray11, 1, (short) (byte) -1);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray11);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray8, shortArray11);
        double[] doubleArray22 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray22);
        double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray23);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) shortArray11, (java.lang.Object) doubleArray23);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray11, (short) -1, 100);
        java.lang.Short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray11);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.remove(shortArray11, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, -1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 1, -1, -1, 1]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(shortArray29);
    }

    @Test
    public void test11207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11207");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((long) (byte) 10, (long) (byte) 10);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean29 = equalsBuilder28.isEquals();
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.String[] strArray34 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray35 = org.apache.commons.lang3.ArrayUtils.addAll(strArray30, strArray34);
        java.lang.String[] strArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray30);
        java.lang.Character[] charArray42 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray42, ' ');
        java.lang.Character[] charArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder28.append((java.lang.Object[]) strArray30, (java.lang.Object[]) charArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder21.append((java.lang.Object[]) byteArray23, (java.lang.Object[]) strArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder21.append((float) 9, (float) (-1));
        boolean boolean51 = equalsBuilder50.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test11208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11208");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray13, (int) (short) 0, 100);
        boolean[] booleanArray21 = new boolean[] { false, false, false, false };
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray21);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray21, false);
        java.lang.Boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray21);
        java.lang.Boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27, true);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray30);
        boolean[] booleanArray36 = new boolean[] { false, false, false, false };
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray36, false);
        java.lang.Boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray36);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray36);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray36);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray30, booleanArray36);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray36);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray13, booleanArray36);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray13, false);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray13);
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.add(booleanArray49, false);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray49, false);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.add(booleanArray49, (int) (byte) -1, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
    }

    @Test
    public void test11209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11209");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        java.lang.Character[] charArray21 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, 'a');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.clone(charArray24);
        java.lang.Character[] charArray31 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray31, 'a');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.add(charArray33, '#');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.remove(charArray33, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.append(charArray25, charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder38.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append((double) 10, 0.0d);
        java.lang.Boolean boolean44 = equalsBuilder40.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder40.append((int) (short) 1, (int) (byte) 10);
        char[] charArray48 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder49.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder49.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder54.append((long) (short) 10, (long) '#');
        java.lang.Character[] charArray63 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray63, ' ');
        java.lang.Character[] charArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray63);
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray66);
        java.lang.Character[] charArray68 = org.apache.commons.lang3.ArrayUtils.toObject(charArray67);
        java.lang.Character[] charArray74 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray74);
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray74, 'a');
        char[] charArray78 = org.apache.commons.lang3.ArrayUtils.clone(charArray77);
        int int80 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray77, ' ');
        char[] charArray81 = org.apache.commons.lang3.ArrayUtils.addAll(charArray67, charArray77);
        int int83 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray67, '4');
        char[] charArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray67);
        char[] charArray85 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder57.append(charArray84, charArray85);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder47.append(charArray48, charArray84);
        equalsBuilder87.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertEquals("'" + boolean44 + "' != '" + false + "'", boolean44, false);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 3 + "'", int80 == 3);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), " 44a44## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), " 44a44## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[ , 4, 4, a, 4, 4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder87);
    }

    @Test
    public void test11210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11210");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        objMap31.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = objMap31.entrySet();
        java.lang.Byte[] byteArray42 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray42);
        java.lang.Byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray42);
        byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray44);
        boolean boolean46 = objMap31.containsValue((java.lang.Object) byteArray44);
        objMap31.clear();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test11211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11211");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.add(charArray7, '#');
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.remove(charArray7, (int) (short) 0);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray11, '4');
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray11, 'a', 13);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , a,  , #]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test11212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11212");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.Set<java.lang.Object> objSet33 = objMap31.keySet();
        java.util.Set<java.lang.Object> objSet34 = objMap31.keySet();
        double[] doubleArray40 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray40);
        double[] doubleArray45 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray45);
        double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.add(doubleArray45, (double) (byte) 10);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.add(doubleArray45, 0.0d);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray40, doubleArray45);
        boolean boolean52 = objMap31.containsKey((java.lang.Object) doubleArray40);
        objMap31.clear();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList54 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        float[] floatArray58 = new float[] { (short) 100, 0, 10 };
        float[] floatArray61 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray61);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains(floatArray61, (float) 0);
        float[] floatArray66 = org.apache.commons.lang3.ArrayUtils.add(floatArray61, 10.0f);
        float[] floatArray67 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray58, floatArray61);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.contains(floatArray61, (float) (byte) 10);
        boolean boolean70 = objEntryList54.equals((java.lang.Object) boolean69);
        boolean boolean71 = objEntryList54.isEmpty();
        java.lang.Object[] objArray72 = objEntryList54.toArray();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream73 = objEntryList54.parallelStream();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream74 = objEntryList54.stream();
        boolean boolean75 = objMap31.containsKey((java.lang.Object) objEntryStream74);
        java.lang.Object obj76 = null;
        boolean boolean77 = objMap31.containsKey(obj76);
        boolean boolean78 = objMap31.isEmpty();
        int int79 = objMap31.size();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 10.0, 10.0, -1.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray67), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertNotNull(objEntryStream73);
        org.junit.Assert.assertNotNull(objEntryStream74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
    }

    @Test
    public void test11213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11213");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray7);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray8);
        java.lang.Character[] charArray10 = org.apache.commons.lang3.ArrayUtils.toObject(charArray8);
        java.lang.Character[] charArray16 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16, 'a');
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16, ' ');
        java.lang.Character[] charArray26 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray26, 'a');
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.add(charArray28, '#');
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.subarray(charArray28, (int) (byte) -1, (int) '#');
        java.lang.Character[] charArray39 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray39);
        char[] charArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray39, 'a');
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.clone(charArray42);
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.addAll(charArray28, charArray42);
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray42, 'a');
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.clone(charArray42);
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.addAll(charArray20, charArray47);
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.clone(charArray48);
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.addAll(charArray8, charArray49);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray49, '4', 2);
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.add(charArray49, 'a');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "4## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "4## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4, #, #,  ]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4a44 a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4a44 a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4, a, 4, 4,  , a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 5 + "'", int53 == 5);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a a #4## aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a a #4## aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a,  , a,  , #, 4, #, #,  , a, a]");
    }

    @Test
    public void test11214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11214");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        byte[] byteArray38 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray38, (byte) 10, (int) (short) -1);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray38);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) 1, (int) ' ');
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray52);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray52, (byte) 10);
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray38, byteArray52);
        boolean boolean57 = objEntrySet32.equals((java.lang.Object) byteArray38);
        byte[] byteArray59 = org.apache.commons.lang3.ArrayUtils.remove(byteArray38, (int) (byte) 0);
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.clone(byteArray38);
        int int63 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray60, (byte) 0, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.remove(byteArray60, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4 + "'", int55 == 4);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[0, 10]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
    }

    @Test
    public void test11215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11215");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        double[] doubleArray36 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray36);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (double) (byte) 10);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray39, (double) 10.0f);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 1L);
        java.lang.Object obj44 = objMap31.get((java.lang.Object) 1L);
        java.lang.Byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray45);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(byteArray46, (byte) 10);
        boolean boolean49 = objMap31.containsValue((java.lang.Object) (byte) 10);
        int[] intArray54 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.clone(intArray54);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray55);
        java.lang.Integer[] intArray57 = org.apache.commons.lang3.ArrayUtils.toObject(intArray55);
        boolean boolean58 = objMap31.containsValue((java.lang.Object) intArray55);
        double[] doubleArray64 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray64);
        double[] doubleArray69 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray70 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray69);
        double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.add(doubleArray69, (double) (byte) 10);
        double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.add(doubleArray69, 0.0d);
        double[] doubleArray75 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray64, doubleArray69);
        double[] doubleArray77 = org.apache.commons.lang3.ArrayUtils.add(doubleArray64, (double) (-1));
        boolean boolean78 = objMap31.equals((java.lang.Object) (-1));
        int int79 = objMap31.size();
        objMap31.clear();
        boolean boolean81 = objMap31.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet82 = objMap31.entrySet();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 10.0, 10.0, -1.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, 10.0, 10.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(objEntrySet82);
    }

    @Test
    public void test11216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11216");
        java.lang.Boolean[][] booleanArray1 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray15 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray22 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray29 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray30 = new java.lang.Boolean[][] { booleanArray8, booleanArray15, booleanArray22, booleanArray29 };
        java.lang.Boolean[][] booleanArray31 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray1, booleanArray30);
        java.util.Map<java.lang.Object, java.lang.Object> objMap32 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = objMap32.entrySet();
        objMap32.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = objMap32.entrySet();
        objMap32.clear();
        java.util.Set<java.lang.Object> objSet37 = objMap32.keySet();
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) "{32,100,10,10,1}", (java.lang.Object) objMap32);
        objMap32.clear();
        java.util.Collection<java.lang.Object> objCollection40 = objMap32.values();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder41.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray50 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray50);
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray50);
        double[] doubleArray53 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder41.append(doubleArray50, doubleArray53);
        java.lang.Boolean boolean55 = equalsBuilder41.build();
        java.lang.Object obj56 = objMap32.get((java.lang.Object) boolean55);
        org.junit.Assert.assertNotNull(booleanArray1);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(objMap32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertEquals("'" + boolean55 + "' != '" + false + "'", boolean55, false);
        org.junit.Assert.assertNull(obj56);
    }

    @Test
    public void test11217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11217");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray2);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray2, 0.0f);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.clone(floatArray6);
        java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray7);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray8);
    }

    @Test
    public void test11218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11218");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 10, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder7.append((float) (byte) -1, (float) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder10.append('a', ' ');
        float[] floatArray16 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray16);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(floatArray16, (float) 0);
        float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.add(floatArray16, 10.0f);
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray16);
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray16, 0.0f, (int) ' ');
        float[] floatArray28 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray28);
        float[] floatArray32 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray32);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(floatArray32, (float) 0);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray28, floatArray32);
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.clone(floatArray32);
        float[] floatArray40 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray40);
        float[] floatArray44 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray44);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.contains(floatArray44, (float) 0);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray40, floatArray44);
        float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray40);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray40);
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray32, floatArray40);
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray32, (float) 0L, (int) (byte) 0);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray16, floatArray32);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(floatArray16, (float) 0);
        float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.clone(floatArray16);
        float[] floatArray61 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray61);
        java.lang.Float[] floatArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray62);
        float[] floatArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray62);
        float[] floatArray66 = org.apache.commons.lang3.ArrayUtils.add(floatArray64, 0.0f);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray64);
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray64, (float) (byte) 100, (int) (byte) 1);
        float[] floatArray71 = null;
        float[] floatArray72 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray64, floatArray71);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder13.append(floatArray58, floatArray64);
        java.lang.Float[] floatArray75 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray58);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[-1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(floatArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray72), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(floatArray75);
    }

    @Test
    public void test11219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11219");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        java.lang.Float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray38);
        float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray38);
        long[] longArray44 = new long[] { 4, 'a', (byte) 0 };
        long[] longArray46 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray44, (long) 'a');
        long[] longArray48 = org.apache.commons.lang3.ArrayUtils.remove(longArray46, (int) (byte) 1);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.add(longArray46, (long) 10);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray50);
        int int53 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray38, (java.lang.Object) longArray50, 6);
        long[] longArray59 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.clone(longArray59);
        java.lang.Long[] longArray61 = org.apache.commons.lang3.ArrayUtils.toObject(longArray60);
        long[] longArray67 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray68 = org.apache.commons.lang3.ArrayUtils.clone(longArray67);
        java.lang.Long[] longArray69 = org.apache.commons.lang3.ArrayUtils.toObject(longArray68);
        long[] longArray70 = org.apache.commons.lang3.ArrayUtils.clone(longArray68);
        long[] longArray71 = org.apache.commons.lang3.ArrayUtils.addAll(longArray60, longArray70);
        long[] longArray73 = org.apache.commons.lang3.ArrayUtils.add(longArray70, (long) '#');
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray70);
        int int76 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray70, (long) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder22.append(longArray50, longArray70);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray80 = org.apache.commons.lang3.ArrayUtils.add(longArray70, 100, (long) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[4, 97, 0]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[4, 0]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[4]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[4, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertNotNull(longArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray70), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray71), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[32, 100, 10, 10, 1, 35]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(equalsBuilder77);
    }

    @Test
    public void test11220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11220");
        java.util.RandomAccess[] randomAccessArray0 = new java.util.RandomAccess[] {};
        java.util.RandomAccess[] randomAccessArray1 = org.apache.commons.lang3.ArrayUtils.toArray(randomAccessArray0);
        boolean[] booleanArray6 = new boolean[] { false, false, false, false };
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, false);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray6);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray6);
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray6);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray12);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray12, true);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.io.Serializable[]) booleanArray12);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) randomAccessArray1, (java.lang.Object) booleanArray12);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) booleanArray12);
        org.junit.Assert.assertNotNull(randomAccessArray0);
        org.junit.Assert.assertNotNull(randomAccessArray1);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test11221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11221");
        short[] shortArray0 = new short[] {};
        java.lang.Short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) 0);
        java.lang.Object obj4 = null;
        java.lang.Character[] charArray10 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray10, ' ');
        java.lang.Character[] charArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray10);
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray13);
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray13);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY;
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray16, false, 10);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray16, true);
        java.lang.Character[] charArray27 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray27, ' ');
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray29);
        java.lang.String[] strArray31 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.lang.Comparable<java.lang.String>[]) strArray31);
        java.lang.String[] strArray33 = org.apache.commons.lang3.ArrayUtils.clone(strArray31);
        java.lang.String[] strArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray33);
        java.lang.String[] strArray38 = new java.lang.String[] { "{}", "", "{}" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        boolean boolean41 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray30, (java.lang.Object) strArray34, (java.util.Collection<java.lang.String>) strList39);
        boolean boolean42 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray15, (java.lang.Object) booleanArray16, (java.util.Collection<java.lang.String>) strList39);
        boolean boolean43 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray3, obj4, (java.util.Collection<java.lang.String>) strList39);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray44);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray44);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray0), "[]");
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
    }

    @Test
    public void test11222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11222");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        boolean[] booleanArray14 = new boolean[] { false, false, false, false };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray14);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray14, false);
        java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray14);
        java.lang.Object obj20 = null;
        boolean boolean22 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray4, obj20, false);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, false);
        java.lang.Boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray24);
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray25, true);
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray25, true);
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray29, 3, 3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[]");
    }

    @Test
    public void test11223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11223");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder37.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder37.append((double) 10L, (double) 6);
        float[] floatArray45 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray45);
        float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray45, 0, 100);
        java.lang.Double[][][][] doubleArray50 = null;
        float[] floatArray54 = new float[] { (short) 100, 0, 10 };
        float[] floatArray57 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray57);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.contains(floatArray57, (float) 0);
        float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.add(floatArray57, 10.0f);
        float[] floatArray63 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray54, floatArray57);
        java.lang.Double[][][][] doubleArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray50, (java.lang.Object) floatArray54);
        float[] floatArray67 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray68 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray67);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray67);
        float[] floatArray70 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray54, floatArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder37.append(floatArray49, floatArray67);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray74 = org.apache.commons.lang3.ArrayUtils.add(floatArray67, (int) (short) 100, (float) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNull(doubleArray64);
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray67), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[100.0, 0.0, 10.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
    }

    @Test
    public void test11224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11224");
        char[] charArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray3 = org.apache.commons.lang3.ArrayUtils.add(charArray0, (int) (byte) 1, '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11225");
        long[] longArray3 = new long[] { 4, 'a', (byte) 0 };
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray3, (long) 'a');
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.remove(longArray5, (int) (byte) 1);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.add(longArray5, (long) 10);
        java.lang.Long[] longArray10 = org.apache.commons.lang3.ArrayUtils.toObject(longArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray9, (long) (byte) 1);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[4, 97, 0]");
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[4, 0]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[4]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[4, 0, 10]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test11226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11226");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        float[] floatArray15 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(floatArray15, (float) 0);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.add(floatArray15, 10.0f);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray3, floatArray15);
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) floatArray22);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.Object, java.lang.Object> objMap24 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) floatArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Array element 0, '-1.0', is neither of type Map.Entry nor an Array");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test11227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11227");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray4);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4);
        float[] floatArray12 = new float[] { 1L, 100L, 100 };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray12, (float) (-1L), (int) (short) 100);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray12, (float) 'a', (int) (byte) 10);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) intArray4, (java.lang.Object) floatArray12);
        float[] floatArray22 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray22);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(floatArray22, (float) 0);
        float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.add(floatArray22, 10.0f);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(floatArray22, (float) (short) -1);
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.add(floatArray22, (float) (byte) 1);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray12, floatArray31);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray31, (int) 'a', 1);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray35);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test11228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11228");
        int[][] intArray0 = new int[][] {};
        int[][] intArray1 = org.apache.commons.lang3.ArrayUtils.toArray(intArray0);
        int[] intArray6 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.clone(intArray6);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray7);
        int[] intArray11 = org.apache.commons.lang3.ArrayUtils.subarray(intArray7, (int) ' ', (int) (byte) 100);
        int[][] intArray12 = org.apache.commons.lang3.ArrayUtils.add(intArray0, intArray7);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray7, 7);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(intArray7, (int) (byte) 0);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test11229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11229");
        java.lang.Byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray0);
        byte[] byteArray2 = null;
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray1, byteArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(byteArray1, (byte) 100);
        java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 100);
        java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
    }

    @Test
    public void test11230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11230");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray42, longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder19.append(longArray26, longArray50);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray26);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray26, (long) 'a');
        long[] longArray58 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray26, (long) 3);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.subarray(longArray58, 0, 5);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[32, 100, 10, 10, 1]");
    }

    @Test
    public void test11231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11231");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        double[] doubleArray36 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray36);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (double) (byte) 10);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray39, (double) 10.0f);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 1L);
        java.lang.Object obj44 = objMap31.get((java.lang.Object) 1L);
        java.lang.Byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray45);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(byteArray46, (byte) 10);
        boolean boolean49 = objMap31.containsValue((java.lang.Object) (byte) 10);
        java.lang.Boolean[][] booleanArray50 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray57 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray64 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray71 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray78 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray79 = new java.lang.Boolean[][] { booleanArray57, booleanArray64, booleanArray71, booleanArray78 };
        java.lang.Boolean[][] booleanArray80 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray50, booleanArray79);
        java.util.Map<java.lang.Object, java.lang.Object> objMap81 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray50);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet82 = objMap81.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList83 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean84 = objEntrySet82.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList83);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor85 = objEntryList83.iterator();
        float[] floatArray88 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray89 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray88);
        java.lang.Float[] floatArray90 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray89);
        java.lang.Object obj91 = objMap31.replace((java.lang.Object) objEntryList83, (java.lang.Object) floatArray89);
        java.lang.Float[] floatArray92 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray89);
        float[] floatArray94 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray89, 0.0f);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertNotNull(objMap81);
        org.junit.Assert.assertNotNull(objEntrySet82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(objEntryItor85);
        org.junit.Assert.assertNotNull(floatArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray88), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray89);
        org.junit.Assert.assertNotNull(floatArray90);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNotNull(floatArray92);
        org.junit.Assert.assertNotNull(floatArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray94), "[-1.0, 1.0]");
    }

    @Test
    public void test11232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11232");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 4, 4, (-1), 0 };
        java.lang.Integer[] intArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4);
        boolean[] booleanArray10 = new boolean[] { false, false, false, false };
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray10, false);
        java.lang.Boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray5, (java.lang.Object) booleanArray14, (int) '#');
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray5);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.add(intArray17, 3, (int) (byte) 100);
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.clone(intArray20);
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray20, (int) (byte) -1);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.clone(intArray23);
        int[] intArray25 = new int[] {};
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.add(intArray25, 0, 100);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray28);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.clone(intArray28);
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray28);
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray28);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray23, intArray28);
        int[] intArray34 = new int[] {};
        int[] intArray37 = org.apache.commons.lang3.ArrayUtils.add(intArray34, 0, 100);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray37);
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.clone(intArray37);
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray37);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray37);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray37, (int) ' ');
        int[] intArray44 = org.apache.commons.lang3.ArrayUtils.addAll(intArray23, intArray43);
        int[] intArray46 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray44, 1);
        java.lang.Class<?> wildcardClass47 = intArray46.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[4, 4, -1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[4, 4, -1, 100, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[4, 4, -1, 100, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[4, 4, 100, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[4, 4, 100, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[4, 4, 100, 0, 100]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[4, 4, 100, 0, 100]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test11233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11233");
        char[] charArray0 = null;
        char[] charArray1 = null;
        boolean boolean2 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray0, charArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test11234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11234");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        java.lang.Character[] charArray15 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray15);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, 'a');
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray9, charArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(charArray9, '4');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test11235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11235");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray13);
        boolean[] booleanArray19 = new boolean[] { false, false, false, false };
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray19);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray19, false);
        java.lang.Boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray19);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray19);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray19);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray19);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray13, booleanArray19);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray19);
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray19, (int) (byte) -1, (int) (short) 1);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray19, (int) (byte) 0, (int) (byte) 10);
        boolean[] booleanArray39 = new boolean[] { false, false, false, false };
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray39);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray39, false);
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.add(booleanArray39, true);
        boolean[] booleanArray49 = new boolean[] { false, false, false, false };
        boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray49);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray49, false);
        java.lang.Boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray49);
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray39, booleanArray49);
        java.lang.Object obj55 = null;
        boolean boolean57 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray39, obj55, false);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray39);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray39, false);
        boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray19, booleanArray39);
        java.lang.Boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray19);
        double[] doubleArray66 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray66);
        double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.add(doubleArray66, (double) (byte) 10);
        double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.add(doubleArray69, 4, (double) (byte) 0);
        int int73 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) booleanArray62, (java.lang.Object) (byte) 0);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0, 10.0, 100.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
    }

    @Test
    public void test11236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11236");
        byte[] byteArray0 = null;
        byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray0);
        byte[] byteArray5 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray5, (byte) 10, (int) (short) -1);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray5, (byte) 10);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray0, byteArray5);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray5, (int) (byte) 0, (int) (short) 0);
        byte[] byteArray15 = null;
        byte[] byteArray16 = null;
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray16);
        byte[] byteArray21 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray21, (byte) 10, (int) (short) -1);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray21, (byte) 10);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray17, byteArray21);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray17, 100, 10);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray15, byteArray17);
        byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray15);
        byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.add(byteArray32, (byte) 10);
        byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray14, byteArray34);
        java.lang.String str36 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) byteArray35);
        byte[] byteArray37 = org.apache.commons.lang3.ArrayUtils.clone(byteArray35);
        byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray37, 3, (int) (byte) 10);
        java.lang.Class<?> wildcardClass41 = byteArray37.getClass();
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[10]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{10}" + "'", str36, "{10}");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[10]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test11237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11237");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray13);
        boolean[] booleanArray19 = new boolean[] { false, false, false, false };
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray19);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray19, false);
        java.lang.Boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray19);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray19);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray19);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray19);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray13, booleanArray19);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray19);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray19, true);
        boolean[] booleanArray35 = new boolean[] { false, false, false, false };
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray35);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray35, false);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.add(booleanArray35, true);
        boolean[] booleanArray45 = new boolean[] { false, false, false, false };
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray45);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray45, false);
        java.lang.Boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray45);
        boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray35, booleanArray45);
        boolean[] booleanArray55 = new boolean[] { false, true, true, true };
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray55);
        int int59 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray56, true, (int) (short) 100);
        boolean[] booleanArray60 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray35, booleanArray56);
        boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray56, 1);
        boolean[] booleanArray63 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray30, booleanArray56);
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray56, 0, (int) (short) 1);
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray66, false);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray68);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 3 + "'", int59 == 3);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, false, false, false, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, false, false, false, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false]");
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[]");
    }

    @Test
    public void test11238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11238");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray2);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray2, (float) (short) 1);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray6, (float) (byte) 100, (int) (byte) -1);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test11239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11239");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray5);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.toObject(intArray5);
        java.lang.Integer[] intArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        java.lang.Integer[] intArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        java.lang.Double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray11);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray12, (double) (short) -1);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray10, (java.lang.Object) int14);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray10, (int) ' ');
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray10);
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.subarray(intArray18, 0, 7);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.subarray(intArray21, 3, 8);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100]");
    }

    @Test
    public void test11240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11240");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((byte) 100, (byte) 1);
        boolean boolean23 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder0.append((int) '4', (int) (short) 1);
        boolean[] booleanArray31 = new boolean[] { false, false, false, false };
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray31);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray31, false);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.add(booleanArray31, true);
        double[] doubleArray42 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray42);
        boolean boolean44 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray36, (java.lang.Object) doubleArray42);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray42);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray42);
        int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray46, (double) 10);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray46);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray49);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray50, (double) 10);
        double[] doubleArray56 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray56);
        double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.add(doubleArray56, (double) (byte) 10);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray59, (double) 10.0f);
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray59);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.add(doubleArray62, (double) 1.0f);
        java.lang.Double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray64);
        double[] doubleArray69 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray70 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray69);
        double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.add(doubleArray69, (double) (byte) 10);
        int int75 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray69, (double) 100.0f, (double) 0);
        double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray69);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray64, doubleArray69);
        double[] doubleArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray64);
        double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder0.append((java.lang.Object) int52, (java.lang.Object) doubleArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder0.append((double) 1, (double) (byte) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 3 + "'", int48 == 3);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 3 + "'", int52 == 3);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
    }

    @Test
    public void test11241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11241");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray4, (java.lang.Object) ' ');
        java.lang.Object obj7 = null;
        java.lang.Object[] objArray8 = org.apache.commons.lang3.ArrayUtils.add((java.lang.Object[]) doubleArray4, obj7);
        java.lang.Object obj9 = null;
        java.lang.Object[] objArray10 = org.apache.commons.lang3.ArrayUtils.removeElement((java.lang.Object[]) doubleArray4, obj9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4);
        double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4, (double) (byte) 1);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray13);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.add(doubleArray13, (int) (byte) 0, (double) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray17);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 10.0, 0.0, 1.0]");
    }

    @Test
    public void test11242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11242");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        double[] doubleArray36 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray36);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (double) (byte) 10);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray39, (double) 10.0f);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 1L);
        java.lang.Object obj44 = objMap31.get((java.lang.Object) 1L);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = objMap31.entrySet();
        java.lang.Short[] shortArray47 = new java.lang.Short[] { (short) 1 };
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray47);
        java.lang.Short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray47);
        boolean boolean50 = objMap31.containsValue((java.lang.Object) shortArray49);
        int int51 = objMap31.size();
        int[] intArray52 = new int[] {};
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.add(intArray52, 0, 100);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray55);
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.clone(intArray55);
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray55);
        int[] intArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray55);
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray55, (int) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append(true, true);
        byte[] byteArray69 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int72 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray69, (byte) 10, (int) (short) -1);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray69);
        int int76 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray69, (byte) 1, (int) ' ');
        byte[] byteArray83 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray83);
        int int86 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray83, (byte) 10);
        byte[] byteArray87 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray69, byteArray83);
        byte[] byteArray88 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray91 = org.apache.commons.lang3.ArrayUtils.add(byteArray88, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder62.append(byteArray69, byteArray88);
        java.lang.Byte[] byteArray93 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray88);
        java.lang.Byte[] byteArray94 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray93);
        java.lang.Object obj95 = objMap31.putIfAbsent((java.lang.Object) ' ', (java.lang.Object) byteArray93);
        java.lang.Byte[] byteArray96 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray93);
        java.lang.Byte[] byteArray97 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray93);
        java.lang.Byte[] byteArray98 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray93);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[1]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 4 + "'", int86 == 4);
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[]");
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(byteArray93);
        org.junit.Assert.assertNotNull(byteArray94);
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertNotNull(byteArray96);
        org.junit.Assert.assertNotNull(byteArray97);
        org.junit.Assert.assertNotNull(byteArray98);
    }

    @Test
    public void test11243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11243");
        long[] longArray0 = null;
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray0, (long) 10);
        org.junit.Assert.assertNull(longArray2);
    }

    @Test
    public void test11244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11244");
        boolean[] booleanArray0 = null;
        boolean[] booleanArray5 = new boolean[] { false, false, false, false };
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray5);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray5, false);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.add(booleanArray5, true);
        boolean[] booleanArray15 = new boolean[] { false, false, false, false };
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray15);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray15, false);
        java.lang.Boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray15);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray5, booleanArray15);
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.add(booleanArray20, true);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray20, 5);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray20, true);
        java.lang.Boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray20);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray0, booleanArray20);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.add(booleanArray20, true);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false, false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false, false, false, false, false, true]");
    }

    @Test
    public void test11245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11245");
        double[] doubleArray0 = null;
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray0, (double) 10, (double) (-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test11246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11246");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        double[] doubleArray15 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray9, (java.lang.Object) doubleArray15);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray9);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray9, false);
        boolean[] booleanArray25 = new boolean[] { false, false, false, false };
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray25, false);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.add(booleanArray25, true);
        boolean[] booleanArray35 = new boolean[] { false, false, false, false };
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray35);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray35, false);
        java.lang.Boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray35);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray25, booleanArray35);
        boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.add(booleanArray40, true);
        boolean[] booleanArray47 = new boolean[] { false, false, false, false };
        boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray47);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray47, false);
        java.lang.Boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray47);
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray47);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray47);
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray40, booleanArray47);
        boolean[] booleanArray55 = null;
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray47, booleanArray55);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray9, booleanArray55);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray55);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[true, false, false, false, false]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[true, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, false, false, false, false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, false, false, false, false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[true, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test11247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11247");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        float[] floatArray35 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray35);
        float[] floatArray39 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray39);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.contains(floatArray39, (float) 0);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray35, floatArray39);
        float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.clone(floatArray39);
        float[] floatArray47 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray47);
        float[] floatArray51 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray51);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.contains(floatArray51, (float) 0);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray47, floatArray51);
        float[] floatArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray47);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray47);
        float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray39, floatArray47);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray58);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray58);
        int int62 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray58, (float) (short) 100);
        int int65 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray58, (float) (short) 100, (int) ' ');
        float[] floatArray67 = org.apache.commons.lang3.ArrayUtils.remove(floatArray58, (int) (short) 1);
        float[] floatArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray58);
        float[] floatArray71 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray72 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray71);
        float[] floatArray75 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray76 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray75);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.contains(floatArray75, (float) 0);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray71, floatArray75);
        float[] floatArray80 = org.apache.commons.lang3.ArrayUtils.clone(floatArray75);
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray80);
        float[] floatArray82 = org.apache.commons.lang3.ArrayUtils.clone(floatArray80);
        float[] floatArray83 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray68, floatArray82);
        int int85 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray83, 10.0f);
        short[] shortArray86 = new short[] {};
        java.lang.Short[] shortArray87 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray86);
        short[] shortArray89 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray87, (short) 1);
        java.lang.Short[] shortArray90 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray87);
        java.lang.Short[] shortArray91 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray87);
        java.lang.Short[] shortArray92 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray87);
        java.lang.Object obj93 = objMap31.getOrDefault((java.lang.Object) 10.0f, (java.lang.Object) shortArray92);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray67), "[-1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray72);
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(floatArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray80), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray82), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray83), "[-1.0, 1.0, -1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[]");
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertNotNull(shortArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray89), "[]");
        org.junit.Assert.assertNotNull(shortArray90);
        org.junit.Assert.assertNotNull(shortArray91);
        org.junit.Assert.assertNotNull(shortArray92);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test11248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11248");
        byte[] byteArray3 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 10, (int) (short) -1);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray3);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray3, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder10.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray14 = new double[] {};
        double[] doubleArray18 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray18);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.add(doubleArray18, (double) (byte) 10);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray18, (double) 0L, 0);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray18);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray18, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder10.append(doubleArray14, doubleArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder10.append((byte) 100, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append(true, true);
        byte[] byteArray40 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray40, (byte) 10, (int) (short) -1);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray40);
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray40, (byte) 1, (int) ' ');
        byte[] byteArray54 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray54);
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray54, (byte) 10);
        byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray40, byteArray54);
        byte[] byteArray59 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.add(byteArray59, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder33.append(byteArray40, byteArray59);
        byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray64);
        byte[] byteArray68 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray64, 100, (int) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder10.append(byteArray59, byteArray64);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray3, byteArray59);
        int int72 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray3, (byte) 1);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.contains(byteArray3, (byte) 0);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 4 + "'", int57 == 4);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test11249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11249");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { (-1.0d), 100.0d, 1.0d, 10.0d, (-1.0d), 100.0d };
        java.lang.Double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6, (double) '4');
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6, 0.0d);
        double[] doubleArray16 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray16);
        double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray17);
        java.lang.Double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray17);
        java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray19);
        java.lang.Double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20);
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray21);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray22, (double) 0.0f);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray22, (double) (byte) 10);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray12, doubleArray22);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) (byte) 0);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) (byte) 1);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test11250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11250");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0);
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.clone(longArray2);
        java.lang.Long[] longArray4 = org.apache.commons.lang3.ArrayUtils.toObject(longArray2);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray4, (long) (byte) 1);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray4, (long) (byte) 0);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray4);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray4, (long) 9);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray11, (long) 13);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[]");
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test11251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11251");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0);
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.clone(longArray2);
        java.lang.Long[] longArray4 = org.apache.commons.lang3.ArrayUtils.toObject(longArray2);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray4, (long) (byte) 1);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray4);
        double[] doubleArray11 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray11);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.add(doubleArray11, (double) (byte) 10);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray11, (double) 0L, 0);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray11, (double) (short) -1, (int) (byte) -1);
        java.lang.Double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray11);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray11);
        java.lang.Double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray11);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) longArray7, (java.lang.Object[]) doubleArray23);
        boolean[] booleanArray29 = new boolean[] { false, false, false, false };
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray29);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray29, false);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.add(booleanArray29, true);
        boolean[] booleanArray39 = new boolean[] { false, false, false, false };
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray39);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray39, false);
        java.lang.Boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray39);
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray29, booleanArray39);
        java.lang.Boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray39);
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray45);
        boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray45, false);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray45);
        java.lang.Character[] charArray55 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray55, ' ');
        char[] charArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray57);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray58);
        java.lang.Character[] charArray60 = org.apache.commons.lang3.ArrayUtils.toObject(charArray58);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray45, (java.lang.Object[]) charArray60);
        java.lang.Boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray45);
        boolean[] booleanArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray45, false);
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray7, (java.lang.Object) booleanArray45, 3);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[]");
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test11252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11252");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        java.lang.Character[] charArray44 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray44, 'a');
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.add(charArray46, '#');
        boolean boolean49 = objMap31.equals((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet50 = objMap31.keySet();
        objMap31.clear();
        java.lang.String[] strArray52 = new java.lang.String[] {};
        java.lang.String[] strArray56 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray57 = org.apache.commons.lang3.ArrayUtils.addAll(strArray52, strArray56);
        java.lang.String[] strArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray52);
        java.lang.String[] strArray59 = org.apache.commons.lang3.ArrayUtils.toArray(strArray58);
        boolean boolean60 = objMap31.equals((java.lang.Object) strArray59);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet61 = objMap31.entrySet();
        boolean boolean62 = objEntrySet61.isEmpty();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor63 = objEntrySet61.iterator();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a,  , a,  , #, #]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objEntrySet61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objEntryItor63);
    }

    @Test
    public void test11253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11253");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        double[] doubleArray15 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray9, (java.lang.Object) doubleArray15);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray15, 3, 1);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray20);
        java.lang.Double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray21);
        java.lang.Double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray22);
        java.lang.Double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray22);
        java.lang.String str26 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) doubleArray24, "{0.0,10.0,100.0,10.0}");
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{}" + "'", str26, "{}");
    }

    @Test
    public void test11254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11254");
        byte[] byteArray3 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 10, (int) (short) -1);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray3, (byte) 10);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray3, (byte) 100);
        byte[] byteArray16 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray16, (byte) 10, (int) (short) -1);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray16);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray16, (byte) 1, (int) ' ');
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray3, byteArray16);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        java.lang.Byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray25);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray3, byteArray25);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray25, (byte) 1);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray25, (byte) 10);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(byteArray31, (byte) 1);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, 10, 0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test11255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11255");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.String[] strArray9 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray10 = org.apache.commons.lang3.ArrayUtils.addAll(strArray5, strArray9);
        java.lang.String[] strArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray5);
        java.lang.Character[] charArray17 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17, ' ');
        java.lang.Character[] charArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((java.lang.Object[]) strArray5, (java.lang.Object[]) charArray20);
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20);
        java.lang.Character[] charArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray20);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20, ' ');
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.clone(charArray25);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, 4, a, 4]");
    }

    @Test
    public void test11256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11256");
        byte[] byteArray0 = null;
        byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray0);
        byte[] byteArray5 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray5, (byte) 10, (int) (short) -1);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray5, (byte) 10);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray0, byteArray5);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray5, (int) (byte) 0, (int) (short) 0);
        byte[] byteArray15 = null;
        byte[] byteArray16 = null;
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray16);
        byte[] byteArray21 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray21, (byte) 10, (int) (short) -1);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray21, (byte) 10);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray17, byteArray21);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray17, 100, 10);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray15, byteArray17);
        byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray15);
        byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.add(byteArray32, (byte) 10);
        byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray14, byteArray34);
        byte[] byteArray37 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray14, (byte) 0);
        byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray14, 0, (int) (short) 10);
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray40, (byte) 1);
        byte[] byteArray46 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray46, (byte) 10, (int) (short) -1);
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray46, (byte) 10);
        int int53 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray46, (byte) 1);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(byteArray46, (byte) 100);
        byte[] byteArray59 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int62 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray59, (byte) 10, (int) (short) -1);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray59);
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray59, (byte) 1, (int) ' ');
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray46, byteArray59);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray67);
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray67);
        byte[] byteArray71 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray69, (byte) 10);
        byte[] byteArray72 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray40, byteArray71);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[10]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[10]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[0, 0, 10, 0, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0, 0, 10, 0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 0, 0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0, 0, 0, 0, 10]");
    }

    @Test
    public void test11257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11257");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        java.lang.Short[] shortArray10 = new java.lang.Short[] { (short) 1 };
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray10);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10, (short) (byte) 100);
        short[] shortArray15 = new short[] {};
        java.lang.Short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray15);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray14, shortArray15);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray8, shortArray15);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray8, (short) (byte) 1);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.add(shortArray8, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder23.append(true, true);
        byte[] byteArray30 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray30, (byte) 10, (int) (short) -1);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray30);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray30, (byte) 1, (int) ' ');
        byte[] byteArray44 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray44);
        int int47 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray44, (byte) 10);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray30, byteArray44);
        byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.add(byteArray49, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder23.append(byteArray30, byteArray49);
        short[] shortArray54 = new short[] {};
        java.lang.Short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray54);
        int int56 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) shortArray54);
        short[] shortArray59 = new short[] { (short) 100, (short) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder23.append(shortArray54, shortArray59);
        short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.add(shortArray59, (int) (short) 1, (short) (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray59);
        int int67 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray59, (short) (byte) -1, (int) (byte) 100);
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray59, (short) 100, 5);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray8, shortArray59);
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray59, 100, (int) (short) 100);
        short[] shortArray76 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray59, (short) (byte) 1);
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray59, 0, 11);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray82 = org.apache.commons.lang3.ArrayUtils.add(shortArray59, (int) 'a', (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[1]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1, 100]");
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[-1, 100]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[]");
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[-1, 100]");
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[-1, 100]");
    }

    @Test
    public void test11258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11258");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        double[] doubleArray36 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray36);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (double) (byte) 10);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray39, (double) 10.0f);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 1L);
        java.lang.Object obj44 = objMap31.get((java.lang.Object) 1L);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = objMap31.entrySet();
        java.lang.Object obj46 = null;
        java.lang.Object obj47 = objMap31.remove(obj46);
        java.lang.Double[] doubleArray54 = new java.lang.Double[] { (-1.0d), 100.0d, 1.0d, 10.0d, (-1.0d), 100.0d };
        java.lang.Double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray54);
        java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray54);
        java.lang.Double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray54);
        boolean boolean58 = objMap31.equals((java.lang.Object) doubleArray57);
        float[] floatArray61 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray61);
        float[] floatArray65 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray66 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray65);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.contains(floatArray65, (float) 0);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray61, floatArray65);
        float[] floatArray70 = org.apache.commons.lang3.ArrayUtils.clone(floatArray65);
        int int71 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) floatArray70);
        int int72 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) floatArray70);
        long[] longArray78 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray79 = org.apache.commons.lang3.ArrayUtils.clone(longArray78);
        java.lang.Long[] longArray80 = org.apache.commons.lang3.ArrayUtils.toObject(longArray79);
        java.lang.Long[] longArray87 = new java.lang.Long[] { 1L, 10L, 0L, (-1L), (-1L), (-1L) };
        long[] longArray89 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray87, (long) (short) 10);
        java.lang.Long[] longArray90 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray87);
        java.lang.Long[] longArray91 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray90);
        boolean boolean92 = objMap31.replace((java.lang.Object) floatArray70, (java.lang.Object) longArray79, (java.lang.Object) longArray91);
        float[] floatArray93 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray70);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray65), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2 + "'", int71 == 2);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertNotNull(longArray87);
        org.junit.Assert.assertNotNull(longArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray89), "[1, 10, 0, -1, -1, -1]");
        org.junit.Assert.assertNotNull(longArray90);
        org.junit.Assert.assertNotNull(longArray91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(floatArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray93), "[-1.0, 1.0]");
    }

    @Test
    public void test11259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11259");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.add(booleanArray11, 0, true);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray11);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray11);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray16, 11, 11);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray16, true, 11);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray16, false);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[true, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false]");
    }

    @Test
    public void test11260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11260");
        java.lang.Integer[] intArray1 = new java.lang.Integer[] { 0 };
        java.lang.Integer[] intArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray1);
        java.lang.Character[] charArray8 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8, ' ');
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8, '#');
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray2, (java.lang.Object) '#', (int) (short) 100);
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2, 5);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray17);
        int[] intArray23 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.clone(intArray23);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.add(intArray23, (int) 'a');
        int[] intArray31 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.clone(intArray31);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray32);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray26, intArray32);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray32, 0);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray32, 1, (int) (short) -1);
        int[] intArray41 = org.apache.commons.lang3.ArrayUtils.add(intArray32, (int) (byte) 100);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.remove(intArray32, 3);
        int[] intArray44 = new int[] {};
        int[] intArray45 = org.apache.commons.lang3.ArrayUtils.clone(intArray44);
        int[] intArray46 = org.apache.commons.lang3.ArrayUtils.addAll(intArray32, intArray44);
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray44, 6);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray44);
        int[] intArray51 = org.apache.commons.lang3.ArrayUtils.add(intArray17, 1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, -1, -1, 100, 100]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, -1, -1]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 1]");
    }

    @Test
    public void test11261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11261");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray4, true, (-1));
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray4);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test11262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11262");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, 0);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) 4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder16.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray20 = new double[] {};
        double[] doubleArray24 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray24);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray24, (double) (byte) 10);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray24, (double) 0L, 0);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray24);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray24, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder16.append(doubleArray20, doubleArray24);
        int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) 'a', (int) '4');
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray20);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0, (double) 100);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray3);
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray43, (double) (byte) 10);
        boolean[] booleanArray50 = new boolean[] { false, false, false, false };
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray50);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray50, false);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.add(booleanArray50, true);
        double[] doubleArray61 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray61);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray55, (java.lang.Object) doubleArray61);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray61, 3, 1);
        int int69 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) 100, (double) 100.0f);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray43, doubleArray66);
        double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray43, (double) 100L);
        double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray43, (double) 3);
        double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray74, (double) 5);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 4.0]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[0.0, 10.0, 100.0]");
    }

    @Test
    public void test11263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11263");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray2, 0, 100);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.remove(floatArray2, 0);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray8);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test11264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11264");
        java.lang.Integer[] intArray1 = new java.lang.Integer[] { 0 };
        java.lang.Integer[] intArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray1);
        int[] intArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray1);
        java.lang.Character[] charArray9 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray9, 'a');
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.add(charArray11, '#');
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.add(charArray13, 4, '#');
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.subarray(charArray16, 100, (int) 'a');
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.subarray(charArray19, 5, 2);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.subarray(charArray22, (-1), 10);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray25);
        boolean boolean28 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) intArray1, (java.lang.Object) charArray25, false);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray1, (int) ' ');
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a a ###");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a a ###");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a,  , a,  , #, #, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0]");
    }

    @Test
    public void test11265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11265");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        double[] doubleArray15 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray9, (java.lang.Object) doubleArray15);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray15, 3, 1);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (byte) 10, (double) ' ');
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray20);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray20);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray20);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 3, 5);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray20);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test11266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11266");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((long) (short) 10, (long) '#');
        equalsBuilder8.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
    }

    @Test
    public void test11267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11267");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((long) (short) 10, (long) '#');
        boolean boolean9 = equalsBuilder8.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder8.append((float) 4, 0.0f);
        java.lang.Short[] shortArray14 = new java.lang.Short[] { (short) 1 };
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray15, (short) 10);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray15, (short) 100, (int) (byte) 1);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray15);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray21);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray21, 1, (int) (short) 0);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.add(shortArray21, (short) 100);
        java.lang.Short[] shortArray29 = new java.lang.Short[] { (short) 1 };
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray29);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray29);
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray29, (short) (byte) 100);
        short[] shortArray34 = new short[] {};
        java.lang.Short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray34);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray33, shortArray34);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(shortArray36, (short) 100);
        java.lang.Short[] shortArray40 = new java.lang.Short[] { (short) 1 };
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray40);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray40);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray40, (short) (byte) 100);
        short[] shortArray45 = new short[] {};
        java.lang.Short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray45);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray44, shortArray45);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray44, 4, (-1));
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray50, (int) (byte) -1, (int) '4');
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.clone(shortArray50);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray36, shortArray50);
        short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray21, shortArray36);
        java.lang.Short[] shortArray58 = new java.lang.Short[] { (short) 1 };
        short[] shortArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray58);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray58);
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray58, (short) (byte) 100);
        short[] shortArray63 = new short[] {};
        java.lang.Short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray63);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray62, shortArray63);
        short[] shortArray67 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray65, (short) 0);
        int int70 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray65, (short) (byte) 10, (int) (short) -1);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.add(shortArray65, (short) 1);
        int int74 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray72, (short) 0);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray36, shortArray72);
        java.lang.Short[] shortArray77 = new java.lang.Short[] { (short) 1 };
        short[] shortArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray77);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray77);
        short[] shortArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray77, (short) (byte) 100);
        short[] shortArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray77, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder8.append(shortArray72, shortArray83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder8.append((double) (byte) 10, (double) '#');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1, 100]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[1]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[1]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[1]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[1]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[1]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[1, 1]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[1]");
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[1]");
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[]");
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[1]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[1]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[1, 1]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[1]");
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray81), "[1]");
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[1]");
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
    }

    @Test
    public void test11268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11268");
        char[] charArray0 = null;
        java.lang.Character[] charArray6 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray6, ' ');
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray6, '#');
        java.lang.Character[] charArray16 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray16);
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16, 'a');
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray10, charArray19);
        java.lang.Character[] charArray21 = org.apache.commons.lang3.ArrayUtils.toObject(charArray10);
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray23, '#');
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.addAll(charArray0, charArray23);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray23);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test11269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11269");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0, (long) (byte) 10);
        java.lang.Long[] longArray4 = org.apache.commons.lang3.ArrayUtils.toObject(longArray3);
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.subarray(longArray3, 5, 4);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray7, (long) 9, 10);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[]");
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test11270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11270");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean2 = objEntryList0.remove((java.lang.Object) byteArray1);
        long[] longArray8 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.clone(longArray8);
        java.lang.Long[] longArray10 = org.apache.commons.lang3.ArrayUtils.toObject(longArray9);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.add(longArray11, (long) (short) 0);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray13, (long) '4');
        boolean boolean16 = objEntryList0.contains((java.lang.Object) int15);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList17 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList18 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor19 = objEntryList18.iterator();
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.String[] strArray24 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray25 = org.apache.commons.lang3.ArrayUtils.addAll(strArray20, strArray24);
        java.lang.Comparable<java.lang.String>[] strComparableArray26 = objEntryList18.toArray((java.lang.Comparable<java.lang.String>[]) strArray20);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream27 = objEntryList18.parallelStream();
        boolean boolean28 = objEntryList17.addAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList18);
        boolean boolean29 = objEntryList0.removeAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList18);
        objEntryList18.clear();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList31 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor32 = objEntryList31.iterator();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Object[] objArray34 = objEntryList33.toArray();
        objEntryList33.clear();
        float[] floatArray38 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray38);
        float[] floatArray42 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray42);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.contains(floatArray42, (float) 0);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray38, floatArray42);
        float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray38);
        float[] floatArray51 = new float[] { (short) 100, 0, 10 };
        float[] floatArray54 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray54);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(floatArray54, (float) 0);
        float[] floatArray59 = org.apache.commons.lang3.ArrayUtils.add(floatArray54, 10.0f);
        float[] floatArray60 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray51, floatArray54);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray54);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains(floatArray54, (float) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray54);
        float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray38, floatArray54);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray38);
        java.lang.Float[] floatArray67 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray38);
        boolean boolean68 = objEntryList33.equals((java.lang.Object) floatArray67);
        boolean boolean69 = objEntryList31.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        boolean boolean70 = objEntryList18.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList31);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objEntryItor19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strComparableArray26);
        org.junit.Assert.assertNotNull(objEntryStream27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objEntryItor32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray59), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray65), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test11271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11271");
        java.util.ArrayList[] arrayListArray1 = new java.util.ArrayList[0];
        @SuppressWarnings("unchecked")
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[] objEntryListArray2 = (java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[]) arrayListArray1;
        java.util.ArrayList[][] arrayListArray4 = new java.util.ArrayList[1][];
        @SuppressWarnings("unchecked")
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[][] objEntryListArray5 = (java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[][]) arrayListArray4;
        objEntryListArray5[0] = objEntryListArray2;
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList8 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor9 = objEntryList8.iterator();
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.String[] strArray14 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray15 = org.apache.commons.lang3.ArrayUtils.addAll(strArray10, strArray14);
        java.lang.Comparable<java.lang.String>[] strComparableArray16 = objEntryList8.toArray((java.lang.Comparable<java.lang.String>[]) strArray10);
        java.lang.Boolean[][] booleanArray17 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray24 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray31 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray38 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray45 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray46 = new java.lang.Boolean[][] { booleanArray24, booleanArray31, booleanArray38, booleanArray45 };
        java.lang.Boolean[][] booleanArray47 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray17, booleanArray46);
        java.util.Map<java.lang.Object, java.lang.Object> objMap48 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray17);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet49 = objMap48.entrySet();
        double[] doubleArray53 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray53);
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.add(doubleArray53, (double) (byte) 10);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray56, (double) 10.0f);
        int int60 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray56, (double) 1L);
        java.lang.Object obj61 = objMap48.get((java.lang.Object) 1L);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = objMap48.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList63 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        float[] floatArray67 = new float[] { (short) 100, 0, 10 };
        float[] floatArray70 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray71 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray70);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.contains(floatArray70, (float) 0);
        float[] floatArray75 = org.apache.commons.lang3.ArrayUtils.add(floatArray70, 10.0f);
        float[] floatArray76 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray67, floatArray70);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.contains(floatArray70, (float) (byte) 10);
        boolean boolean79 = objEntryList63.equals((java.lang.Object) boolean78);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList80 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Object[] objArray81 = objEntryList80.toArray();
        boolean boolean82 = objEntryList63.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList80);
        boolean boolean83 = objEntrySet62.addAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList80);
        objEntryList80.clear();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList85 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Object[] objArray86 = objEntryList85.toArray();
        java.util.ArrayList[] arrayListArray88 = new java.util.ArrayList[3];
        @SuppressWarnings("unchecked")
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[] objEntryListArray89 = (java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[]) arrayListArray88;
        objEntryListArray89[0] = objEntryList8;
        objEntryListArray89[1] = objEntryList80;
        objEntryListArray89[2] = objEntryList85;
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[] objEntryListArray96 = org.apache.commons.lang3.ArrayUtils.toArray(objEntryListArray89);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[][] objEntryListArray97 = org.apache.commons.lang3.ArrayUtils.add(objEntryListArray5, objEntryListArray96);
        boolean boolean98 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.util.AbstractCollection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[][]) objEntryListArray97);
        org.junit.Assert.assertNotNull(arrayListArray1);
        org.junit.Assert.assertNotNull(objEntryListArray2);
        org.junit.Assert.assertNotNull(arrayListArray4);
        org.junit.Assert.assertNotNull(objEntryListArray5);
        org.junit.Assert.assertNotNull(objEntryItor9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strComparableArray16);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(objMap48);
        org.junit.Assert.assertNotNull(objEntrySet49);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray67), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
        org.junit.Assert.assertNotNull(arrayListArray88);
        org.junit.Assert.assertNotNull(objEntryListArray89);
        org.junit.Assert.assertNotNull(objEntryListArray96);
        org.junit.Assert.assertNotNull(objEntryListArray97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test11272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11272");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        java.lang.Character[] charArray10 = org.apache.commons.lang3.ArrayUtils.toObject(charArray9);
        java.lang.Character[] charArray16 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray16);
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16, 'a');
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.clone(charArray19);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray19, ' ');
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray19);
        java.lang.Character[] charArray29 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray29, ' ');
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray31);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray31);
        java.lang.Character[] charArray39 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray39, ' ');
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray41);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray31, charArray41);
        java.lang.Character[] charArray49 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray49, ' ');
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray51);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray52);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray31, charArray52);
        double[] doubleArray58 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray58);
        double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.add(doubleArray58, (double) (byte) 10);
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.add(doubleArray58, 0.0d);
        char[] charArray65 = new char[] { 'a' };
        java.lang.Character[] charArray66 = org.apache.commons.lang3.ArrayUtils.toObject(charArray65);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) 0.0d, (java.lang.Object) charArray65);
        char[] charArray68 = org.apache.commons.lang3.ArrayUtils.clone(charArray65);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray52, charArray65);
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray65);
        int int73 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray70, '#', (int) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray70);
        char[] charArray75 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray70);
        int int78 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray75, '#', 4);
        char[] charArray80 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray75, '4');
        char[] charArray82 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray80, 'a');
        org.apache.commons.lang3.ArrayUtils.reverse(charArray80);
        int int86 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray80, ' ', (int) (byte) 1);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 44a44## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 44a44## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, 4, a, 4, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), " 44a4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), " 44a4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[ , 4, 4, a, 4, a]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "a4a4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "a4a4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[a, 4, a, 4,  ]");
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), " 44a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), " 44a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[ , 4, 4, a]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 4 + "'", int86 == 4);
    }

    @Test
    public void test11273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11273");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        objMap31.clear();
        boolean[] booleanArray38 = new boolean[] { false, false, false, false };
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray38);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray38, false);
        java.lang.Boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray38);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder44.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean48 = equalsBuilder47.isEquals();
        java.lang.String[] strArray49 = new java.lang.String[] {};
        java.lang.String[] strArray53 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray54 = org.apache.commons.lang3.ArrayUtils.addAll(strArray49, strArray53);
        java.lang.String[] strArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray49);
        java.lang.Character[] charArray61 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray61, ' ');
        java.lang.Character[] charArray64 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder47.append((java.lang.Object[]) strArray49, (java.lang.Object[]) charArray64);
        char[] charArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray64);
        java.lang.Object obj67 = objMap31.putIfAbsent((java.lang.Object) booleanArray38, (java.lang.Object) charArray66);
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray38);
        java.lang.Boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray68);
        int int71 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray68, false);
        boolean[] booleanArray73 = org.apache.commons.lang3.ArrayUtils.add(booleanArray68, false);
        int int75 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray68, false);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
    }

    @Test
    public void test11274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11274");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        java.lang.Short[] shortArray5 = new java.lang.Short[] { (short) 1 };
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        boolean[] booleanArray13 = new boolean[] { false, false, false, false };
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray13, false);
        java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray13);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray13);
        java.lang.Boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray13);
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) 1 };
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray21);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21, (short) (byte) 100);
        short[] shortArray26 = new short[] {};
        java.lang.Short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray26);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray25, shortArray26);
        float[] floatArray31 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(floatArray31, (float) 0);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.add(floatArray31, 10.0f);
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        boolean boolean39 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray25, (java.lang.Object) floatArray37, false);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray19, (java.lang.Object[]) floatArray37);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray5, (java.lang.Object[]) floatArray37);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray37, (java.lang.Object) 1, 0);
        java.lang.Float[] floatArray48 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f };
        java.lang.Float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder0.append((java.lang.Object[]) floatArray37, (java.lang.Object[]) floatArray49);
        java.lang.Boolean boolean51 = equalsBuilder50.build();
        short[] shortArray52 = null;
        java.lang.Short[] shortArray54 = new java.lang.Short[] { (short) 1 };
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray54);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray54);
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray54, (short) (byte) 100);
        short[] shortArray59 = new short[] {};
        java.lang.Short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray58, shortArray59);
        short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray61, (short) 0);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray63, (int) ' ', 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder50.append(shortArray52, shortArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder50.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append((short) 10, (short) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertEquals("'" + boolean51 + "' != '" + false + "'", boolean51, false);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[1]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[1]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[1]");
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[1]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
    }

    @Test
    public void test11275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11275");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        int[] intArray23 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.clone(intArray23);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray23, 100);
        long[] longArray32 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray33 = org.apache.commons.lang3.ArrayUtils.clone(longArray32);
        java.lang.Long[] longArray34 = org.apache.commons.lang3.ArrayUtils.toObject(longArray33);
        long[] longArray40 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        java.lang.Long[] longArray42 = org.apache.commons.lang3.ArrayUtils.toObject(longArray41);
        long[] longArray43 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.addAll(longArray33, longArray43);
        int[] intArray49 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray50 = org.apache.commons.lang3.ArrayUtils.clone(intArray49);
        int[] intArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray49);
        boolean boolean53 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray43, (java.lang.Object) intArray51, false);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(intArray51, (int) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder18.append(intArray23, intArray51);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder18.append((int) (short) 100, 4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder59.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder61.append((float) 5, (float) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder61.append((double) 3, (double) 3);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
    }

    @Test
    public void test11276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11276");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean2 = objEntryList0.remove((java.lang.Object) byteArray1);
        byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) -1);
        byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray4, 5, (int) '4');
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.clone(byteArray4);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray4, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray4);
        java.lang.Byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray12);
        byte[] byteArray14 = null;
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray13, byteArray14);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray13, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray22 = new double[] {};
        double[] doubleArray26 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray26);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.add(doubleArray26, (double) (byte) 10);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray26, (double) 0L, 0);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray26);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray26, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder18.append(doubleArray22, doubleArray26);
        double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray42 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray42);
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.add(doubleArray42, (double) (byte) 10);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray45, (double) 10.0f);
        double[] doubleArray51 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray51);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.add(doubleArray51, (double) (byte) 10);
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray51, (double) 0L, 0);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray51);
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray51, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray45, doubleArray51);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder37.append(doubleArray38, doubleArray51);
        byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray64);
        byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray68 = org.apache.commons.lang3.ArrayUtils.add(byteArray66, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder63.append(byteArray64, byteArray66);
        byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray64);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray70);
        byte[] byteArray72 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray13, byteArray70);
        byte[] byteArray74 = org.apache.commons.lang3.ArrayUtils.add(byteArray72, (byte) 0);
        byte[] byteArray77 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray72, 3, (int) ' ');
        byte[] byteArray78 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray4, byteArray77);
        java.lang.Byte[] byteArray79 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray80 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray79);
        byte[] byteArray81 = null;
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray80, byteArray81);
        byte[] byteArray84 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray80, (byte) 1);
        int int87 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray84, (byte) 0, (int) (byte) -1);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray84);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray4, byteArray84);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[]");
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[]");
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test11277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11277");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) -1, (int) (byte) -1);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) 2);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, 0.0d);
        double[] doubleArray20 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray20);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.add(doubleArray20, (double) (byte) 10);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (short) 0, (int) ' ', (double) 1L);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) 2, (int) (short) 100, (double) 10L);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray16, doubleArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray37 = new double[] {};
        double[] doubleArray41 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray41);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.add(doubleArray41, (double) (byte) 10);
        int int47 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray41, (double) 0L, 0);
        double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray41);
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray41, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder33.append(doubleArray37, doubleArray41);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray16, doubleArray37);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray37, 0.0d, (double) 10L);
        int int58 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray37, 1.0d);
        int int61 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray37, (double) (short) 100, 4);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0, 2.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0, 2.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
    }

    @Test
    public void test11278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11278");
        java.lang.Byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray0);
        byte[] byteArray2 = null;
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray1, byteArray2);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray1, (byte) 1);
        byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray5, (byte) -1);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray8);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.add(byteArray8, (byte) 0);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray11, 7, (int) (byte) 100);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray11, (byte) -1);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray11, (byte) 100);
        byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.clone(byteArray11);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0]");
    }

    @Test
    public void test11279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11279");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray4, (byte) 100);
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray6);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray7);
        java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray7);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray7);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray7);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray11, (byte) 100, (int) '#');
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(byteArray11, (byte) -1);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray11);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100, 1, 100]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test11280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11280");
        long[] longArray3 = new long[] { 4, 'a', (byte) 0 };
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray3, (long) 'a');
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.remove(longArray5, (int) (byte) 1);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray7);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray7, (long) (byte) 100);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[4, 97, 0]");
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[4, 0]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[4]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[4]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[4]");
    }

    @Test
    public void test11281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11281");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) 10);
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) (byte) 1);
        java.lang.Short[] shortArray8 = new java.lang.Short[] { (short) 1 };
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray8);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) (byte) 100);
        short[] shortArray13 = new short[] {};
        java.lang.Short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray13);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray12, shortArray13);
        short[] shortArray16 = new short[] {};
        java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray15, shortArray16);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray4, shortArray18);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray18);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray18, (short) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1, 1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test11282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11282");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (short) 0);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray10);
        long[] longArray17 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.clone(longArray17);
        java.lang.Long[] longArray19 = org.apache.commons.lang3.ArrayUtils.toObject(longArray18);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.clone(longArray18);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray20, (long) (short) 0);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.addAll(longArray11, longArray20);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.subarray(longArray11, (int) (short) -1, (int) '4');
        long[] longArray29 = org.apache.commons.lang3.ArrayUtils.subarray(longArray26, (int) (byte) 10, 5);
        long[] longArray35 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray36 = org.apache.commons.lang3.ArrayUtils.clone(longArray35);
        java.lang.Long[] longArray37 = org.apache.commons.lang3.ArrayUtils.toObject(longArray36);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray36);
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.add(longArray36, 0L);
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.addAll(longArray26, longArray36);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray41, (long) 5, (int) ' ');
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[]");
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[1, 10, 10, 100, 32]");
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[1, 10, 10, 100, 32, 0]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1, 0, 1, 10, 10, 100, 32]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test11283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11283");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.String[] strArray4 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray5 = org.apache.commons.lang3.ArrayUtils.addAll(strArray0, strArray4);
        java.lang.String[] strArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder7.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray11 = new double[] {};
        double[] doubleArray15 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15);
        double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.add(doubleArray15, (double) (byte) 10);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray15, (double) 0L, 0);
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray15);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder7.append(doubleArray11, doubleArray15);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder7.append((byte) 100, (byte) 1);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.String[] strArray34 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray35 = org.apache.commons.lang3.ArrayUtils.addAll(strArray30, strArray34);
        java.lang.Short[] shortArray37 = new java.lang.Short[] { (short) 1 };
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray37);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray37);
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray37, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder7.append((java.lang.Object[]) strArray35, (java.lang.Object[]) shortArray37);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) strArray6, (java.lang.Object[]) strArray35);
        java.lang.String[] strArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray35);
        byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray45);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray46, (byte) -1);
        byte[] byteArray51 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray48, 3, 10);
        byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.add(byteArray51, (byte) -1);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) strArray44, (java.lang.Object) byteArray51);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test11284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11284");
        float[] floatArray0 = null;
        float[] floatArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray0);
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.contains(floatArray1, (float) 7);
        byte[] byteArray4 = null;
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray4);
        byte[] byteArray9 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray9, (byte) 10, (int) (short) -1);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray9, (byte) 10);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray5, byteArray9);
        java.lang.Byte[] byteArray20 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray20, (byte) 100);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.add(byteArray22, (byte) 10);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray22, 0, (int) (short) 1);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList28 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean30 = objEntryList28.remove((java.lang.Object) byteArray29);
        byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray29, (byte) 1);
        byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray29);
        byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray33);
        byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.clone(byteArray34);
        byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.clone(byteArray35);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray22, byteArray35);
        byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray22, (int) 'a', 0);
        byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray9, byteArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray9);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append(true, true);
        byte[] byteArray50 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int53 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray50, (byte) 10, (int) (short) -1);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray50);
        int int57 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray50, (byte) 1, (int) ' ');
        byte[] byteArray64 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray64);
        int int67 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray64, (byte) 10);
        byte[] byteArray68 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray50, byteArray64);
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray72 = org.apache.commons.lang3.ArrayUtils.add(byteArray69, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder43.append(byteArray50, byteArray69);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray69);
        byte[] byteArray78 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int81 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray78, (byte) 10, (int) (short) -1);
        java.lang.Byte[] byteArray82 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray78);
        byte[] byteArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray78);
        byte[] byteArray84 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray69, byteArray83);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray83);
        byte[] byteArray86 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray83);
        int int89 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray86, (byte) 10, (int) (byte) 10);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray9, byteArray86);
        byte[] byteArray93 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray86, (int) (short) 100, (int) (short) 1);
        boolean boolean94 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) boolean3, (java.lang.Object) byteArray86);
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[10, 0, 0]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, 100, 1, 100, 10]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0, 0, 10]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 4 + "'", int67 == 4);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[10, 0, 0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[10, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[10, 0, 0]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(byteArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray93), "[]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test11285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11285");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { (-1.0d), 100.0d, 1.0d, 10.0d, (-1.0d), 100.0d };
        java.lang.Double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6);
        java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6);
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6, (double) (byte) 10);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, 6, (int) '#');
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]");
    }

    @Test
    public void test11286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11286");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f);
        double[] doubleArray12 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray12);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray12, (double) (byte) 10);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray12, (double) 0L, 0);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray12);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray6, doubleArray12);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray12, (double) (byte) -1);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) '4', 7, (double) (short) 0);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray25, (-1.0d), 6);
        double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray25, 0.0d);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 100.0]");
    }

    @Test
    public void test11287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11287");
        double[] doubleArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        int int2 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray0, (double) 10.0f);
        double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray0, 2, 0);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray0);
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray0), "[]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[]");
    }

    @Test
    public void test11288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11288");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (short) 0);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray10);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.clone(longArray11);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.add(longArray11, (int) (short) 1, (long) (short) 1);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray15);
        double[] doubleArray20 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray20);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.add(doubleArray20, (double) (byte) 10);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) 0L, 0);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray20);
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.add(doubleArray20, (double) 4);
        java.lang.String[] strArray33 = null;
        boolean boolean34 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray16, (java.lang.Object) doubleArray20, strArray33);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 3);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 11, 8);
        double[] doubleArray43 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray43);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.add(doubleArray43, (double) (byte) 10);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray46, (double) 10.0f);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray46);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.add(doubleArray49, (double) 1.0f);
        java.lang.Double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray51);
        double[] doubleArray56 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray56);
        double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.add(doubleArray56, (double) (byte) 10);
        int int62 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray56, (double) 100.0f, (double) 0);
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray56);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray51, doubleArray56);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray51, 3);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray20, doubleArray66);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[32, 1, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 1, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 100.0, 4.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 10.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test11289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11289");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.Set<java.lang.Object> objSet33 = objMap31.keySet();
        objMap31.clear();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { 4, 4, (-1), 0 };
        java.lang.Integer[] intArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray39);
        boolean[] booleanArray45 = new boolean[] { false, false, false, false };
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray45);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray45, false);
        java.lang.Boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray45);
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray40, (java.lang.Object) booleanArray49, (int) '#');
        int[] intArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray40);
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.add(intArray52, 3, (int) (byte) 100);
        int[] intArray56 = org.apache.commons.lang3.ArrayUtils.clone(intArray55);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray56);
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.clone(intArray56);
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray58, (int) (short) 1);
        boolean boolean61 = objMap31.equals((java.lang.Object) intArray58);
        java.lang.Short[] shortArray63 = new java.lang.Short[] { (short) 1 };
        short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray63);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray63);
        short[] shortArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray63, (short) (byte) 100);
        short[] shortArray68 = new short[] {};
        java.lang.Short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray68);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray67, shortArray68);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray70, (short) 0);
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray70, (short) (byte) 10);
        java.lang.Object obj75 = objMap31.get((java.lang.Object) shortArray74);
        objMap31.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet77 = objMap31.entrySet();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[4, 4, -1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[4, 4, -1, 100, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 100, -1, 4, 4]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 100, -1, 4, 4]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[1]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[1]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[1]");
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[1]");
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[1]");
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(objEntrySet77);
    }

    @Test
    public void test11290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11290");
        java.lang.Double[][][][][] doubleArray0 = new java.lang.Double[][][][][] {};
        java.lang.Double[][][][][][] doubleArray1 = new java.lang.Double[][][][][][] { doubleArray0 };
        java.lang.Double[][][][][] doubleArray2 = new java.lang.Double[][][][][] {};
        java.lang.Double[][][][][][] doubleArray3 = new java.lang.Double[][][][][][] { doubleArray2 };
        java.lang.Double[][][][][][][] doubleArray4 = new java.lang.Double[][][][][][][] { doubleArray1, doubleArray3 };
        java.lang.Double[][][][] doubleArray5 = new java.lang.Double[][][][] {};
        java.lang.Double[][][][][] doubleArray6 = new java.lang.Double[][][][][] { doubleArray5 };
        java.lang.Double[][][][] doubleArray7 = new java.lang.Double[][][][] {};
        java.lang.Double[][][][][] doubleArray8 = new java.lang.Double[][][][][] { doubleArray7 };
        java.lang.Double[][][][] doubleArray9 = new java.lang.Double[][][][] {};
        java.lang.Double[][][][][] doubleArray10 = new java.lang.Double[][][][][] { doubleArray9 };
        java.lang.Double[][][][] doubleArray11 = new java.lang.Double[][][][] {};
        java.lang.Double[][][][][] doubleArray12 = new java.lang.Double[][][][][] { doubleArray11 };
        java.lang.Double[][][][] doubleArray13 = new java.lang.Double[][][][] {};
        java.lang.Double[][][][][] doubleArray14 = new java.lang.Double[][][][][] { doubleArray13 };
        java.lang.Double[][][][][][] doubleArray15 = new java.lang.Double[][][][][][] { doubleArray6, doubleArray8, doubleArray10, doubleArray12, doubleArray14 };
        java.lang.Character[] charArray21 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, ' ');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, '#');
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.clone(charArray25);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray25, ' ');
        java.lang.Character[] charArray34 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray34, 'a');
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.add(charArray36, '#');
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.addAll(charArray25, charArray38);
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.clone(charArray25);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray25, ' ');
        java.lang.Character[] charArray48 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray48, ' ');
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray48, '#');
        char[] charArray53 = org.apache.commons.lang3.ArrayUtils.clone(charArray52);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray52, ' ');
        java.lang.Character[] charArray61 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray61, ' ');
        char[] charArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray61, '#');
        char[] charArray66 = org.apache.commons.lang3.ArrayUtils.clone(charArray65);
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.addAll(charArray52, charArray66);
        int int69 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray67, 'a');
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.addAll(charArray25, charArray67);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.contains(charArray67, 'a');
        java.lang.Double[][][][][][] doubleArray73 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray15, (java.lang.Object) boolean72);
        java.lang.Double[][][][][][][] doubleArray74 = org.apache.commons.lang3.ArrayUtils.add(doubleArray4, doubleArray15);
        java.lang.Double[][][][][][][] doubleArray75 = org.apache.commons.lang3.ArrayUtils.toArray(doubleArray4);
        java.lang.Cloneable[][][][] cloneableArray78 = org.apache.commons.lang3.ArrayUtils.subarray((java.lang.Cloneable[][][][]) doubleArray75, (int) (byte) 10, 9);
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), " 44a4a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), " 44a4a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[ , 4, 4, a, 4, a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), " 44a4 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), " 44a4 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[ , 4, 4, a, 4,  , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 3 + "'", int69 == 3);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), " 44a4 44a4 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), " 44a4 44a4 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[ , 4, 4, a, 4,  , 4, 4, a, 4,  , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(cloneableArray78);
    }

    @Test
    public void test11291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11291");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) (short) 0, (int) ' ', (double) 1L);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (-1));
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray3);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) 0L, (int) (short) 0, (double) 5);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 1L, (double) 4);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) 1L);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 10, (double) '4');
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test11292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11292");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 100.0f, (double) 0);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray3, (int) (byte) 0);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, 1.0d, (double) (byte) 1);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (byte) 1, (int) (byte) 100);
        double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray18);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test11293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11293");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10);
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10);
        double[] doubleArray16 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray16);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.add(doubleArray16, (double) (byte) 10);
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray16, (double) 0L, 0);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray16);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray16, (double) 4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder29.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray33 = new double[] {};
        double[] doubleArray37 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray37);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.add(doubleArray37, (double) (byte) 10);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray37, (double) 0L, 0);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray37);
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray37, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder29.append(doubleArray33, doubleArray37);
        int int51 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, (double) 'a', (int) '4');
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray16, doubleArray33);
        double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.add(doubleArray16, 0, (double) 100);
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray16);
        int int58 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray56, (double) (byte) 10);
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray56, (double) (short) 10, 0.0d);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) booleanArray10, (java.lang.Object) int61);
        int[] intArray63 = new int[] {};
        int[] intArray66 = org.apache.commons.lang3.ArrayUtils.add(intArray63, 0, 100);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray66);
        int[] intArray68 = org.apache.commons.lang3.ArrayUtils.clone(intArray66);
        int[] intArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray66);
        int[] intArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray66);
        java.lang.Integer[] intArray71 = org.apache.commons.lang3.ArrayUtils.toObject(intArray70);
        int[] intArray72 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray71);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray72);
        java.lang.Integer[] intArray74 = org.apache.commons.lang3.ArrayUtils.toObject(intArray72);
        int[] intArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray74, (int) (byte) 100);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray10, (java.lang.Object[]) intArray74);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 100.0, 4.0]");
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test11294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11294");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (short) 0);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray10);
        long[] longArray17 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.clone(longArray17);
        java.lang.Long[] longArray19 = org.apache.commons.lang3.ArrayUtils.toObject(longArray18);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.clone(longArray18);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray20, (long) (short) 0);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.addAll(longArray11, longArray20);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray11, (long) ' ', (int) ' ');
        org.apache.commons.lang3.ArrayUtils.reverse(longArray11);
        java.lang.Long[] longArray28 = org.apache.commons.lang3.ArrayUtils.toObject(longArray11);
        long[] longArray30 = org.apache.commons.lang3.ArrayUtils.add(longArray11, (long) 8);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[0, 1, 10, 10, 100, 32]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[0, 1, 10, 10, 100, 32, 8]");
    }

    @Test
    public void test11295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11295");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { 4, 7, 0, 4, 5, 9 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.add(intArray7, 3, (int) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray10, (int) (byte) 100, 100);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[4, 7, 0, 4, 5, 9]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[9, 5, 4, 1, 0, 7, 4]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test11296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11296");
        char[] charArray0 = null;
        java.lang.Character[] charArray6 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray6, ' ');
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray6, '#');
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.clone(charArray10);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray10, ' ');
        java.lang.Character[] charArray19 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray19, 'a');
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.add(charArray21, '#');
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray10, charArray23);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.clone(charArray10);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray10, ' ');
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, '#');
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.clone(charArray37);
        int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray37, ' ');
        java.lang.Character[] charArray46 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray46, ' ');
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray46, '#');
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.clone(charArray50);
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.addAll(charArray37, charArray51);
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray52, 'a');
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.addAll(charArray10, charArray52);
        java.lang.Character[] charArray61 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray61, 'a');
        char[] charArray65 = org.apache.commons.lang3.ArrayUtils.add(charArray63, '#');
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.remove(charArray63, (int) (short) 0);
        char[] charArray69 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray67, '4');
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray52, charArray69);
        char[] charArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray69);
        char[] charArray72 = org.apache.commons.lang3.ArrayUtils.clone(charArray69);
        char[] charArray73 = org.apache.commons.lang3.ArrayUtils.clone(charArray72);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray0, charArray73);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), " 44a4a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), " 44a4a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[ , 4, 4, a, 4, a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), " 44a4 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), " 44a4 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[ , 4, 4, a, 4,  , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), " 44a4 44a4 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), " 44a4 44a4 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[ , 4, 4, a, 4,  , 4, 4, a, 4,  , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[ , a,  , #]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[ , a,  , #]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test11297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11297");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((long) (byte) 10, (long) (byte) 10);
        boolean boolean22 = equalsBuilder21.isEquals();
        java.lang.Character[] charArray28 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28, 'a');
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.add(charArray30, '#');
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.remove(charArray32, 2);
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray34);
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray35);
        java.lang.Character[] charArray42 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray42, 'a');
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray42, ' ');
        char[] charArray47 = null;
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.addAll(charArray46, charArray47);
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.addAll(charArray35, charArray48);
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray48);
        java.lang.Character[] charArray56 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray56, ' ');
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray56, '#');
        char[] charArray61 = org.apache.commons.lang3.ArrayUtils.clone(charArray60);
        int int63 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray60, ' ');
        java.lang.Character[] charArray69 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray71 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray69, 'a');
        char[] charArray73 = org.apache.commons.lang3.ArrayUtils.add(charArray71, '#');
        char[] charArray74 = org.apache.commons.lang3.ArrayUtils.addAll(charArray60, charArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder21.append(charArray50, charArray73);
        int int78 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray73, ' ', (int) (short) 1);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray73);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a  ##a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a  ##a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a,  ,  , #, #, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), " 44a4a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), " 44a4a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[ , 4, 4, a, 4, a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test11298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11298");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray5);
        java.lang.Short[] shortArray8 = new java.lang.Short[] { (short) 1 };
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray8);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) (byte) 100);
        short[] shortArray13 = new short[] {};
        java.lang.Short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray13);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray12, shortArray13);
        java.lang.Short[] shortArray17 = new java.lang.Short[] { (short) 1 };
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray17);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray17);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray17, (short) (byte) 100);
        short[] shortArray22 = new short[] {};
        java.lang.Short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray22);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray21, shortArray22);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray15, shortArray22);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.add(shortArray25, (short) (byte) 10);
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray25, (short) -1);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray25);
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray25, (-1), (int) (byte) 0);
        short[] shortArray38 = new short[] { (byte) 0, (byte) 1, (short) -1, (byte) -1 };
        java.lang.Short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray38);
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray38, (short) (byte) 1);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.clone(shortArray38);
        java.lang.Short[] shortArray44 = new java.lang.Short[] { (short) 1 };
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray44);
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray45, (short) 10);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.add(shortArray45, 1, (short) (byte) -1);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray45);
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray42, shortArray45);
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray33, shortArray42);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1, 10]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[1]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[1, -1]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[0, 1, -1, -1, 1]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[0, 1, -1, -1]");
    }

    @Test
    public void test11299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11299");
        java.util.Map[] mapArray1 = new java.util.Map[0];
        @SuppressWarnings("unchecked")
        java.util.Map<java.lang.Object, java.lang.Object>[] objMapArray2 = (java.util.Map<java.lang.Object, java.lang.Object>[]) mapArray1;
        double[] doubleArray8 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray8);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        java.lang.Object obj11 = null;
        boolean boolean13 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray10, obj11, false);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray10, (double) 3);
        double[] doubleArray19 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray19);
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.add(doubleArray19, (double) (byte) 10);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray22, (double) 10.0f);
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray22, (double) 1, (int) ' ', (double) '4');
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.add(doubleArray22, 4, (double) 6);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray15, doubleArray22);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray22);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, 0.0d);
        java.lang.Class<?> wildcardClass36 = doubleArray35.getClass();
        java.util.Map<java.lang.Object, java.lang.Object>[] objMapArray37 = org.apache.commons.lang3.ArrayUtils.removeElement((java.util.Map<java.lang.Object, java.lang.Object>[]) mapArray1, (java.lang.Object) wildcardClass36);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.util.Map<java.lang.Object, java.lang.Object>[]) mapArray1);
        org.junit.Assert.assertNotNull(mapArray1);
        org.junit.Assert.assertNotNull(objMapArray2);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 100.0, 10.0, 6.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 100.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(objMapArray37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test11300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11300");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray42, longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder19.append(longArray26, longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder53.append((int) (short) 1, (int) (byte) 1);
        double[] doubleArray60 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray60);
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.add(doubleArray60, (double) (byte) 10);
        int int66 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray60, (double) 0L, 0);
        double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray60);
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray60, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray60, 2, (int) (short) 100);
        double[] doubleArray77 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray78 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray77);
        double[] doubleArray80 = org.apache.commons.lang3.ArrayUtils.add(doubleArray77, (double) (byte) 10);
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray80, (double) 10.0f);
        double[] doubleArray83 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray80);
        java.lang.Double[] doubleArray84 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray83);
        double[] doubleArray85 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray84);
        double[] doubleArray86 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray73, doubleArray85);
        double[] doubleArray87 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder56.append(doubleArray73, doubleArray87);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray87, (double) 10L);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test11301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11301");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        java.lang.Character[] charArray21 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, 'a');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.clone(charArray24);
        java.lang.Character[] charArray31 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray31, 'a');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.add(charArray33, '#');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.remove(charArray33, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.append(charArray25, charArray33);
        short[] shortArray43 = new short[] { (byte) 0, (byte) 1, (short) -1, (byte) -1 };
        java.lang.Short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray43);
        short[] shortArray45 = null;
        java.lang.Short[] shortArray47 = new java.lang.Short[] { (short) 1 };
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray47);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray47);
        short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray47, (short) (byte) 100);
        short[] shortArray52 = new short[] {};
        java.lang.Short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray52);
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray51, shortArray52);
        java.lang.Short[] shortArray56 = new java.lang.Short[] { (short) 1 };
        short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray56);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray56);
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray56, (short) (byte) 100);
        short[] shortArray61 = new short[] {};
        java.lang.Short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray61);
        short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray60, shortArray61);
        short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray54, shortArray61);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray45, shortArray64);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray65, 3, 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder0.append(shortArray43, shortArray68);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray68);
        int int71 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) shortArray70);
        java.lang.Short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray70);
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray72, (short) (byte) 100);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray72);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[1]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[1]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[1]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[1]");
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[]");
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[1]");
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[1]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[1]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[]");
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[]");
    }

    @Test
    public void test11302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11302");
        double[] doubleArray2 = new double[] { 4, 0.0f };
        int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 100);
        double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) '4', 100.0d);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) 100.0f, (double) (short) 1);
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[4.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[4.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test11303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11303");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.lang.Character[] charArray38 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray38, 'a');
        char[] charArray42 = org.apache.commons.lang3.ArrayUtils.add(charArray40, '#');
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.remove(charArray40, (int) (short) 0);
        java.lang.Object obj45 = objMap31.remove((java.lang.Object) charArray44);
        java.lang.Character[] charArray51 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray51, ' ');
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray51, '#');
        int int57 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray55, '#');
        char[] charArray58 = org.apache.commons.lang3.ArrayUtils.addAll(charArray44, charArray55);
        char[] charArray59 = org.apache.commons.lang3.ArrayUtils.clone(charArray58);
        char[] charArray61 = org.apache.commons.lang3.ArrayUtils.add(charArray58, ' ');
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ , a,  , #]");
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), " a # 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), " a # 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[ , a,  , #,  , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), " a # 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), " a # 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[ , a,  , #,  , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), " a # 44a4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), " a # 44a4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[ , a,  , #,  , 4, 4, a, 4,  ]");
    }

    @Test
    public void test11304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11304");
        double[] doubleArray5 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray5);
        java.lang.Double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray5);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray7, (double) 2);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray7, (double) 8);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray11, 1.0d, (int) (byte) 1, (double) (byte) 0);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test11305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11305");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        objMap31.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = objMap31.entrySet();
        java.lang.Byte[] byteArray42 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray42);
        java.lang.Byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray42);
        byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray44);
        boolean boolean46 = objMap31.containsValue((java.lang.Object) byteArray44);
        java.lang.Byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray44);
        byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray47, (byte) -1);
        byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray47);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1]");
    }

    @Test
    public void test11306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11306");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        java.lang.String str5 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) equalsBuilder3, "0");
        boolean[] booleanArray10 = new boolean[] { false, false, false, false };
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray10, false);
        java.lang.Boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10);
        java.lang.Boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray16);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray16, true);
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray19, (int) (short) 0, 100);
        boolean[] booleanArray27 = new boolean[] { false, false, false, false };
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray27);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray27, false);
        java.lang.Boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray27);
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray27);
        java.lang.Boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray27);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray33);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray33, true);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray36);
        boolean[] booleanArray42 = new boolean[] { false, false, false, false };
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray42);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray42, false);
        java.lang.Boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray42);
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray42);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray42);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray42);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray36, booleanArray42);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray42);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray19, booleanArray42);
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.add(booleanArray19, true);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray54);
        boolean[] booleanArray60 = new boolean[] { false, false, false, false };
        boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray60);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray60, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder3.append(booleanArray54, booleanArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder3.append((byte) -1, (byte) 0);
        java.lang.Boolean boolean68 = equalsBuilder3.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertEquals("'" + boolean68 + "' != '" + false + "'", boolean68, false);
    }

    @Test
    public void test11307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11307");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 4, 4, (-1), 0 };
        java.lang.Integer[] intArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4);
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray9 = org.apache.commons.lang3.ArrayUtils.add(intArray6, (int) 'a', 3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[4, 4, -1, 0]");
    }

    @Test
    public void test11308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11308");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        java.lang.Character[] charArray44 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray44, 'a');
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.add(charArray46, '#');
        boolean boolean49 = objMap31.equals((java.lang.Object) '#');
        java.lang.Object obj50 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { 10 };
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray53, (int) (byte) 10);
        java.lang.Byte[] byteArray60 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray60, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder51.append((java.lang.Object[]) intArray53, (java.lang.Object[]) byteArray60);
        java.lang.Object obj64 = objMap31.replace(obj50, (java.lang.Object) equalsBuilder51);
        java.lang.Double[] doubleArray69 = new java.lang.Double[] { 1.0d, 0.0d, 0.0d, 1.0d };
        double[] doubleArray71 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray69, (double) '#');
        java.lang.Object obj72 = objMap31.remove((java.lang.Object) doubleArray71);
        boolean boolean73 = objMap31.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet74 = objMap31.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet75 = objMap31.entrySet();
        int int76 = objMap31.size();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a,  , a,  , #, #]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 0.0, 0.0, 1.0]");
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(objEntrySet74);
        org.junit.Assert.assertNotNull(objEntrySet75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
    }

    @Test
    public void test11309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11309");
        double[] doubleArray5 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray5);
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray5);
        java.lang.Object obj8 = null;
        boolean boolean10 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray7, obj8, false);
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.add(doubleArray7, (double) 10L);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray12, (double) (short) 100, 1);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray12, (double) 1.0f);
        double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 10.0, -1.0, 10.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 10.0, -1.0, 10.0, 10.0]");
    }

    @Test
    public void test11310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11310");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) 0);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, 10.0f);
        java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray2, 0.0f, (int) ' ');
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, (float) 10);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray2);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray2, (int) 'a', 5);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[]");
    }

    @Test
    public void test11311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11311");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.Set<java.lang.Object> objSet33 = objMap31.keySet();
        boolean boolean36 = objMap31.remove((java.lang.Object) 0.0f, (java.lang.Object) '#');
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray37, (double) 10.0f);
        double[] doubleArray45 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray45);
        double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray45);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.add(doubleArray47, (double) 7);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray49);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray49);
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray51, (double) ' ', (double) 9);
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray51, (int) (short) 1, 9);
        java.lang.Double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray51);
        boolean boolean59 = objMap31.equals((java.lang.Object) doubleArray51);
        java.lang.Double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray51);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 10.0, -1.0, 10.0, 7.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 10.0, 10.0, -1.0, 10.0, 7.0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, -1.0, 10.0, 7.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
    }

    @Test
    public void test11312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11312");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, ' ');
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray9);
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.add(charArray9, 'a');
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray15, '#');
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray17, '#');
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.subarray(charArray19, 0, 0);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), " 44a4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), " 44a4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[ , 4, 4, a, 4, a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), " 44a4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), " 44a4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[ , 4, 4, a, 4, a]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 44a4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 44a4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, 4, a, 4, a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
    }

    @Test
    public void test11313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11313");
        double[] doubleArray4 = new double[] { 7, (byte) 10, 1.0d, (byte) 1 };
        double[] doubleArray9 = new double[] { 7, (byte) 10, 1.0d, (byte) 1 };
        double[] doubleArray14 = new double[] { 7, (byte) 10, 1.0d, (byte) 1 };
        double[] doubleArray19 = new double[] { 7, (byte) 10, 1.0d, (byte) 1 };
        double[] doubleArray24 = new double[] { 7, (byte) 10, 1.0d, (byte) 1 };
        double[] doubleArray29 = new double[] { 7, (byte) 10, 1.0d, (byte) 1 };
        double[][] doubleArray30 = new double[][] { doubleArray4, doubleArray9, doubleArray14, doubleArray19, doubleArray24, doubleArray29 };
        double[] doubleArray35 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray35);
        double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.add(doubleArray35, (double) (byte) 10);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray38, (double) 10.0f);
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray38);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.add(doubleArray41, (double) 1.0f);
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray41, 0);
        double[][] doubleArray46 = org.apache.commons.lang3.ArrayUtils.add(doubleArray30, 3, doubleArray45);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray45, (double) (short) -1, (int) (byte) -1);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.add(doubleArray45, 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[7.0, 10.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[7.0, 10.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[7.0, 10.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[7.0, 10.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[7.0, 10.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[7.0, 10.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, 100.0, 10.0, 0.0]");
    }

    @Test
    public void test11314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11314");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray42, longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder19.append(longArray26, longArray50);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray26);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray26, (long) 'a');
        java.lang.Long[] longArray57 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray57);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray57);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray59);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray59);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray59);
        long[] longArray65 = org.apache.commons.lang3.ArrayUtils.add(longArray26, (int) (byte) 1, (long) '#');
        int int68 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray65, (long) '#', (int) (byte) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[32, 35, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
    }

    @Test
    public void test11315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11315");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, 0);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) 4);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 100.0d, (int) ' ', (double) 0L);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) 0.0f, 10);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) ' ', (double) (byte) 0);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (int) (byte) 0, 0.0d);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (-1.0f), (double) (short) 0);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 4.0]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test11316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11316");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((byte) 100, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder23.append(true, true);
        byte[] byteArray30 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray30, (byte) 10, (int) (short) -1);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray30);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray30, (byte) 1, (int) ' ');
        byte[] byteArray44 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray44);
        int int47 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray44, (byte) 10);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray30, byteArray44);
        byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.add(byteArray49, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder23.append(byteArray30, byteArray49);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray54);
        byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray54, 100, (int) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder0.append(byteArray49, byteArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder59.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append(0, (int) (short) 1);
        boolean boolean66 = equalsBuilder62.isEquals();
        java.lang.Float[] floatArray67 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray67);
        float[] floatArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray67);
        java.lang.String str70 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) floatArray69);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray69);
        float[] floatArray73 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray69, 100.0f);
        float[] floatArray74 = null;
        float[] floatArray77 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray78 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray77);
        java.lang.Float[] floatArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray78);
        float[] floatArray80 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray78);
        float[] floatArray82 = org.apache.commons.lang3.ArrayUtils.add(floatArray80, 0.0f);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray74, floatArray82);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder62.append(floatArray69, floatArray74);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "{}" + "'", str70, "{}");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray73), "[]");
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray77), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertNotNull(floatArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray80), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray82), "[-1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
    }

    @Test
    public void test11317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11317");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        java.lang.Float[] floatArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray3);
        float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray3);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.add(floatArray5, 0.0f);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray5, (float) 9);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray5);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray5);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
    }

    @Test
    public void test11318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11318");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray7);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        int[] intArray22 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.clone(intArray22);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.addAll(intArray7, intArray22);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray25);
        java.lang.Integer[] intArray27 = org.apache.commons.lang3.ArrayUtils.toObject(intArray25);
        java.lang.Integer[] intArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray27);
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray28);
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray28, 8);
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray28);
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.clone(intArray32);
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray33, (int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, -1, -1, 100, 97, 0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, -1, -1, 100, 97, 0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, -1, -1, 100, 97, 0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, -1, -1, 100, 97, 0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, -1, -1, 100, 97, 0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test11319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11319");
        short[] shortArray2 = new short[] { (short) 0, (byte) 10 };
        short[][] shortArray3 = new short[][] { shortArray2 };
        short[] shortArray6 = new short[] { (short) 0, (byte) 10 };
        short[][] shortArray7 = new short[][] { shortArray6 };
        short[][][] shortArray8 = new short[][][] { shortArray3, shortArray7 };
        short[][][] shortArray11 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray8, (int) (byte) 10, (int) 'a');
        java.lang.Double[] doubleArray13 = new java.lang.Double[] { 0.0d };
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 0.0d };
        java.lang.Double[] doubleArray17 = new java.lang.Double[] { 0.0d };
        java.lang.Double[] doubleArray19 = new java.lang.Double[] { 0.0d };
        java.lang.Double[] doubleArray21 = new java.lang.Double[] { 0.0d };
        java.lang.Double[][] doubleArray22 = new java.lang.Double[][] { doubleArray13, doubleArray15, doubleArray17, doubleArray19, doubleArray21 };
        java.lang.Double[] doubleArray24 = new java.lang.Double[] { 0.0d };
        java.lang.Double[] doubleArray26 = new java.lang.Double[] { 0.0d };
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 0.0d };
        java.lang.Double[] doubleArray30 = new java.lang.Double[] { 0.0d };
        java.lang.Double[] doubleArray32 = new java.lang.Double[] { 0.0d };
        java.lang.Double[][] doubleArray33 = new java.lang.Double[][] { doubleArray24, doubleArray26, doubleArray28, doubleArray30, doubleArray32 };
        java.lang.Double[][][] doubleArray34 = new java.lang.Double[][][] { doubleArray22, doubleArray33 };
        java.lang.Long[] longArray41 = new java.lang.Long[] { 1L, 10L, 0L, (-1L), (-1L), (-1L) };
        long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray41, (long) (short) 10);
        java.lang.Double[][][] doubleArray44 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray34, (java.lang.Object) longArray43);
        double[] doubleArray48 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray48);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.add(doubleArray48, (double) (byte) 10);
        double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.add(doubleArray48, 0.0d);
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray48, (double) (-1), (int) (short) 10, (double) (-1.0f));
        double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray48, (-1), (int) ' ');
        boolean[] booleanArray65 = new boolean[] { false, false, false, false };
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray65);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray65, false);
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.add(booleanArray65, true);
        double[] doubleArray76 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray77 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray76);
        boolean boolean78 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray70, (java.lang.Object) doubleArray76);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray76);
        double[] doubleArray80 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray76);
        int int82 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray80, (double) 10);
        double[] doubleArray83 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray80);
        double[] doubleArray86 = org.apache.commons.lang3.ArrayUtils.add(doubleArray80, 2, (double) (short) 0);
        double[] doubleArray87 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray60, doubleArray80);
        int int88 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray44, (java.lang.Object) doubleArray87);
        java.lang.Double[] doubleArray89 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray87);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray87);
        int int92 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray11, (java.lang.Object) doubleArray87, 11);
        java.lang.String[] strArray93 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        java.lang.CharSequence[] charSequenceArray96 = org.apache.commons.lang3.ArrayUtils.subarray((java.lang.CharSequence[]) strArray93, (int) (short) 10, 3);
        int int97 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray11, (java.lang.Object) strArray93);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[0, 10]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[0, 10]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[1, 10, 0, -1, -1, -1]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 3 + "'", int82 == 3);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[10.0, -1.0, 0.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[0.0, 10.0, 100.0, 10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(charSequenceArray96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
    }

    @Test
    public void test11320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11320");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, ' ');
        java.lang.Character[] charArray18 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray18, 'a');
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.add(charArray20, '#');
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray22);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, ' ');
        java.lang.Character[] charArray32 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray32, ' ');
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray32, '#');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.clone(charArray36);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray36, ' ');
        java.lang.Character[] charArray45 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray45, ' ');
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray45, '#');
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.clone(charArray49);
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.addAll(charArray36, charArray50);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray51, 'a');
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray51);
        char[] charArray57 = org.apache.commons.lang3.ArrayUtils.subarray(charArray51, (int) (byte) 100, 9);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray51);
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.remove(charArray51, (int) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray51);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 44a4a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 44a4a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, 4, a, 4, a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "4a44 4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "4a44 4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[4, a, 4, 4,  , 4, a, 4, 4,  ]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), " 44a4 44a4 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), " 44a4 44a4 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[ , 4, 4, a, 4,  , 4, 4, a, 4,  , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), " 4a4 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), " 4a4 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[ , 4, a, 4,  , 4, 4, a, 4]");
    }

    @Test
    public void test11321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11321");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, 2);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray4, 2);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray4, 3);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray4, 13, 7);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 2]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test11322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11322");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray13, (int) (short) 0, 100);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray16, true);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray16);
        boolean[] booleanArray24 = new boolean[] { false, false, false, false };
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray24);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray24, false);
        java.lang.Boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray24);
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray24);
        java.lang.Boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray24);
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray30);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.add(booleanArray31, 0, true);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray31);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray31);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray31, false, (int) (byte) -1);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray16, booleanArray31);
        boolean[] booleanArray45 = new boolean[] { false, false, false, false };
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray45);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray45, false);
        java.lang.Boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray45);
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray45, false);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray31, booleanArray51);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[true, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test11323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11323");
        char[] charArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray2 = org.apache.commons.lang3.ArrayUtils.remove(charArray0, 11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 11, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11324");
        byte[] byteArray3 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 10, (int) (short) -1);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray3, (byte) 10);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray3, (byte) 100);
        byte[] byteArray16 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray16, (byte) 10, (int) (short) -1);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray16);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray16, (byte) 1, (int) ' ');
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray3, byteArray16);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray24);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray24);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray26, (byte) 10);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray33, (byte) 100);
        byte[] byteArray37 = org.apache.commons.lang3.ArrayUtils.add(byteArray35, (byte) 10);
        byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray35, 0, (int) (short) 1);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList41 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray42 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean43 = objEntryList41.remove((java.lang.Object) byteArray42);
        byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray42, (byte) 1);
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray42);
        byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray46);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.clone(byteArray47);
        byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.clone(byteArray48);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray35, byteArray48);
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.remove(byteArray35, (int) (short) 1);
        byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.clone(byteArray52);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.clone(byteArray53);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList55 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean57 = objEntryList55.remove((java.lang.Object) byteArray56);
        byte[] byteArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray56, (byte) 1);
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray56);
        byte[] byteArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray60);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.clone(byteArray61);
        java.lang.Byte[] byteArray63 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray61);
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray63, (byte) 1);
        java.lang.Byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray63);
        byte[] byteArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray63, (byte) 1);
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray68, (byte) 10);
        byte[] byteArray72 = org.apache.commons.lang3.ArrayUtils.add(byteArray68, (byte) 100);
        byte[] byteArray75 = org.apache.commons.lang3.ArrayUtils.add(byteArray68, (int) (byte) 0, (byte) 0);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray54, byteArray68);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray28, byteArray68);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, 10, 0, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 0, 10, 0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0, 0, 0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-1, 100, 1, 100, 10]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-1, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[100]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test11325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11325");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray5);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.toObject(intArray5);
        java.lang.Integer[] intArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        java.lang.Integer[] intArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        int[] intArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray9, 6);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray11);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray11, (int) (short) 0, 11);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
    }

    @Test
    public void test11326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11326");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        java.lang.Double[] doubleArray3 = new java.lang.Double[] { 100.0d };
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 100.0d };
        java.lang.Double[][] doubleArray6 = new java.lang.Double[][] { doubleArray3, doubleArray5 };
        java.lang.Double[][] doubleArray9 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray6, (int) (byte) 100, (int) '4');
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray1, (java.lang.Object) '4', (int) (byte) -1);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray1);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.clone(longArray12);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.subarray(longArray12, 1, (int) '#');
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray12);
        long[] longArray21 = new long[] { 4, 'a', (byte) 0 };
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray21, (long) 'a');
        long[] longArray24 = null;
        long[] longArray25 = org.apache.commons.lang3.ArrayUtils.addAll(longArray23, longArray24);
        long[] longArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray23, (long) (short) 10);
        java.lang.Long[] longArray28 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray28);
        java.lang.Long[] longArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray29);
        long[] longArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray30);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray27, longArray31);
        long[] longArray33 = org.apache.commons.lang3.ArrayUtils.addAll(longArray12, longArray27);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray27, (-1L), 6);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[4, 97, 0]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[4, 0]");
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[4, 0]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[4, 0]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[4, 0]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test11327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11327");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        java.lang.Character[] charArray16 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16, ' ');
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray18);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray9, charArray19);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.subarray(charArray19, (int) (byte) 0, 100);
        java.lang.Character[] charArray29 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray29, 'a');
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.add(charArray31, '#');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.remove(charArray33, 2);
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray35);
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray36);
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.remove(charArray37, (int) (byte) 1);
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.addAll(charArray23, charArray39);
        double[] doubleArray44 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray44);
        double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.add(doubleArray44, (double) (byte) 10);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.add(doubleArray44, 0.0d);
        char[] charArray51 = new char[] { 'a' };
        java.lang.Character[] charArray52 = org.apache.commons.lang3.ArrayUtils.toObject(charArray51);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) 0.0d, (java.lang.Object) charArray51);
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.clone(charArray51);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.contains(charArray51, 'a');
        char[] charArray57 = org.apache.commons.lang3.ArrayUtils.addAll(charArray23, charArray51);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.contains(charArray51, 'a');
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray51);
        char[] charArray62 = org.apache.commons.lang3.ArrayUtils.add(charArray51, ' ');
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray64 = org.apache.commons.lang3.ArrayUtils.remove(charArray62, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 44a4a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 44a4a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, 4, a, 4, a,  , #, #]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), " 44a4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), " 44a4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[ , 4, 4, a, 4, a]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a,  ]");
    }

    @Test
    public void test11328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11328");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray42, longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder19.append(longArray26, longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder19.append((-1), (int) (short) 100);
        short[] shortArray63 = new short[] { (short) 100, (byte) 10, (short) 0, (byte) 1, (byte) 1, (short) -1 };
        java.lang.Short[] shortArray65 = new java.lang.Short[] { (short) 1 };
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray65);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray65);
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray65, (short) (byte) 100);
        short[] shortArray70 = new short[] {};
        java.lang.Short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray70);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray69, shortArray70);
        short[] shortArray73 = new short[] {};
        java.lang.Short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray73);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray72, shortArray73);
        short[] shortArray77 = org.apache.commons.lang3.ArrayUtils.add(shortArray73, (short) -1);
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.add(shortArray73, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder56.append(shortArray63, shortArray73);
        java.lang.Short[] shortArray81 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray73);
        int int84 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray73, (short) (byte) 10, (int) (byte) 10);
        java.lang.Short[] shortArray86 = new java.lang.Short[] { (short) 1 };
        short[] shortArray87 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray86);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray86);
        short[] shortArray90 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray86, (short) (byte) 100);
        short[] shortArray92 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray86, (short) (byte) 10);
        boolean boolean93 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray73, shortArray92);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray73);
        short[] shortArray95 = org.apache.commons.lang3.ArrayUtils.clone(shortArray73);
        short[] shortArray96 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray95);
        java.lang.Short[] shortArray97 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray96);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[100, 10, 0, 1, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[1]");
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[1]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[1]");
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[]");
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[1]");
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[-1]");
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[1]");
        org.junit.Assert.assertNotNull(shortArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray90), "[1]");
        org.junit.Assert.assertNotNull(shortArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray92), "[1]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(shortArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray95), "[]");
        org.junit.Assert.assertNotNull(shortArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray96), "[]");
        org.junit.Assert.assertNotNull(shortArray97);
    }

    @Test
    public void test11329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11329");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray13 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray14);
        java.lang.Long[] longArray16 = org.apache.commons.lang3.ArrayUtils.toObject(longArray14);
        java.lang.Long[] longArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray16);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray17);
        java.lang.Long[] longArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray17);
        java.lang.Byte[] byteArray21 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray21);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray21, (byte) 0);
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) longArray17, (java.lang.Object) (byte) 0);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray17);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray17);
        java.lang.Long[] longArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray27);
        java.lang.Long[] longArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray28);
        long[] longArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray29);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[32, 100, 10, 10, 1]");
    }

    @Test
    public void test11330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11330");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        float[] floatArray15 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(floatArray15, (float) 0);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.add(floatArray15, 10.0f);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray3, floatArray15);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.add(floatArray15, (-1.0f));
        float[] floatArray26 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray26);
        java.lang.Float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray27);
        float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray27);
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.add(floatArray29, 0.0f);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.add(floatArray29, 0.0f);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray23, floatArray29);
        java.lang.Float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray29, 100.0f);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray29);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 1.0]");
    }

    @Test
    public void test11331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11331");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray13);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray13);
        int[] intArray21 = new int[] { '#', (byte) -1, (short) 0 };
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.subarray(intArray21, (int) '#', (int) (short) 0);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray21, (int) (byte) 1);
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.clone(intArray21);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(intArray27, (-1));
        java.lang.Integer[] intArray30 = org.apache.commons.lang3.ArrayUtils.toObject(intArray27);
        int[] intArray35 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.clone(intArray35);
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.add(intArray35, (int) 'a');
        org.apache.commons.lang3.ArrayUtils.reverse(intArray35);
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.addAll(intArray27, intArray35);
        int[] intArray41 = org.apache.commons.lang3.ArrayUtils.addAll(intArray13, intArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray41);
        int[] intArray44 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray41, 5);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[35, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[35, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[35, -1, 0, 0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, -1, -1, 0, 0, -1, 35, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, -1, -1, 0, 0, -1, 35, 100, -1, -1, 0]");
    }

    @Test
    public void test11332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11332");
        short[] shortArray0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = equalsBuilder1.append(true, true);
        byte[] byteArray8 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray8, (byte) 10, (int) (short) -1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray8);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray8, (byte) 1, (int) ' ');
        byte[] byteArray22 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray22);
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray22, (byte) 10);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray8, byteArray22);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.add(byteArray27, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder1.append(byteArray8, byteArray27);
        short[] shortArray32 = new short[] {};
        java.lang.Short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray32);
        int int34 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) shortArray32);
        short[] shortArray37 = new short[] { (short) 100, (short) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder1.append(shortArray32, shortArray37);
        short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray32);
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray0, shortArray32);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.remove(shortArray40, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 5, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(equalsBuilder4);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[100, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
    }

    @Test
    public void test11333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11333");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder37.appendSuper(true);
        java.lang.Short[] shortArray41 = new java.lang.Short[] { (short) 1 };
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray41);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray41);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray41, (short) (byte) 100);
        java.lang.Short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray45);
        java.lang.Short[] shortArray48 = new java.lang.Short[] { (short) 1 };
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray48);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray48);
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray48, (short) (byte) 100);
        short[] shortArray53 = new short[] {};
        java.lang.Short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray53);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray52, shortArray53);
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray52, 4, (-1));
        short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray58, (int) (byte) -1, (int) '4');
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray45, shortArray61);
        java.lang.Short[] shortArray64 = new java.lang.Short[] { (short) 1 };
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray64);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64, (short) (byte) 100);
        short[] shortArray69 = new short[] {};
        java.lang.Short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray69);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray68, shortArray69);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray69, (short) (byte) 10, (int) (byte) 10);
        short[] shortArray76 = org.apache.commons.lang3.ArrayUtils.add(shortArray69, (short) (byte) -1);
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray76, 3, (int) (byte) 1);
        short[] shortArray82 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray76, (int) (byte) -1, (int) (short) 100);
        short[] shortArray84 = org.apache.commons.lang3.ArrayUtils.add(shortArray82, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder39.append(shortArray62, shortArray82);
        short[] shortArray87 = org.apache.commons.lang3.ArrayUtils.add(shortArray62, (short) (byte) 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[1]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[1]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[1]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[1]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[1]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[]");
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[]");
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[1]");
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[1]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[1]");
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[1]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[-1]");
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[]");
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[-1]");
        org.junit.Assert.assertNotNull(shortArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray84), "[-1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[1, 0]");
    }

    @Test
    public void test11334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11334");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4);
        java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4);
        java.lang.Double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6);
        java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray7);
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray7);
        java.lang.Long[] longArray16 = new java.lang.Long[] { 1L, 10L, 0L, (-1L), (-1L), (-1L) };
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray16, (long) (short) 10);
        long[] longArray24 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray25 = org.apache.commons.lang3.ArrayUtils.clone(longArray24);
        java.lang.Long[] longArray26 = org.apache.commons.lang3.ArrayUtils.toObject(longArray25);
        long[] longArray32 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray33 = org.apache.commons.lang3.ArrayUtils.clone(longArray32);
        java.lang.Long[] longArray34 = org.apache.commons.lang3.ArrayUtils.toObject(longArray33);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        long[] longArray36 = org.apache.commons.lang3.ArrayUtils.addAll(longArray25, longArray35);
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.add(longArray35, (long) '#');
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray18, longArray38);
        java.lang.Long[] longArray40 = org.apache.commons.lang3.ArrayUtils.toObject(longArray38);
        boolean[] booleanArray42 = new boolean[] { true };
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray42, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.add(booleanArray42, 0, false);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray42);
        boolean[] booleanArray54 = new boolean[] { false, false, false, false };
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray54);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray54, false);
        java.lang.Boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray54);
        boolean[] booleanArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray54);
        java.lang.Boolean[] booleanArray60 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray54);
        boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray60);
        boolean[] booleanArray64 = org.apache.commons.lang3.ArrayUtils.add(booleanArray61, 0, true);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray61);
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray61);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray61, (int) (byte) 1, (int) (byte) 0);
        boolean[] booleanArray71 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray69, true);
        boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray42, booleanArray69);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray40, (java.lang.Object) booleanArray42);
        java.lang.Long[] longArray74 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray40);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) doubleArray7, (java.lang.Object) longArray40);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[1, 10, 0, -1, -1, -1]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[32, 100, 10, 10, 1, 35]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[true, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[true]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test11335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11335");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, false);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray14);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray14, false, 0);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray14, true, (int) (short) 10);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray14, false);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test11336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11336");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        java.lang.Character[] charArray21 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, 'a');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.clone(charArray24);
        java.lang.Character[] charArray31 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray31, 'a');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.add(charArray33, '#');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.remove(charArray33, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.append(charArray25, charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder38.appendSuper(true);
        java.lang.Boolean boolean41 = equalsBuilder40.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertEquals("'" + boolean41 + "' != '" + false + "'", boolean41, false);
    }

    @Test
    public void test11337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11337");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray37);
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray37, (short) 1, 0);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray37);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test11338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11338");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { (-1.0d), 100.0d, 1.0d, 10.0d, (-1.0d), 100.0d };
        java.lang.Double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray9, (double) (short) 0, (int) (byte) -1);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray9, (double) 100);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
    }

    @Test
    public void test11339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11339");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.io.Serializable[]) booleanArray10);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false]");
    }

    @Test
    public void test11340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11340");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray6);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray9, (double) 1.0f);
        java.lang.Double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray11);
        double[] doubleArray16 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray16);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.add(doubleArray16, (double) (byte) 10);
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray16, (double) 100.0f, (double) 0);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray16);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray11, doubleArray16);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray16);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray16);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray26);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray27);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 100.0]");
    }

    @Test
    public void test11341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11341");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray13 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray14);
        java.lang.Long[] longArray16 = org.apache.commons.lang3.ArrayUtils.toObject(longArray14);
        java.lang.Short[] shortArray18 = new java.lang.Short[] { (short) 1 };
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray18);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray18);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray18, (short) (byte) 100);
        short[] shortArray23 = new short[] {};
        java.lang.Short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray23);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray22, shortArray23);
        float[] floatArray28 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray28);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(floatArray28, (float) 0);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.add(floatArray28, 10.0f);
        java.lang.Float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray28);
        boolean boolean36 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray22, (java.lang.Object) floatArray34, false);
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) longArray16, (java.lang.Object) floatArray34);
        long[] longArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray16, (long) '4');
        java.lang.Long[] longArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray16);
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray41);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[1, 10, 10, 100, 32]");
    }

    @Test
    public void test11342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11342");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray2);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray2);
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray13);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray14, (float) 'a');
        float[] floatArray20 = new float[] { 1L, 100L, 100 };
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) (-1L), (int) (short) 100);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray16, floatArray20);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray2, floatArray20);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray20, (int) ' ', (int) (byte) 100);
        float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray20, (float) 10L);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray20, (float) 6, (int) 'a');
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray20, (float) 7);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0, 1.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[1.0, 100.0, 100.0]");
    }

    @Test
    public void test11343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11343");
        boolean[] booleanArray0 = null;
        boolean[] booleanArray5 = new boolean[] { false, false, false, false };
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray5);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray5, false);
        java.lang.Boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray5);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray5);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.add(booleanArray5, false);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.add(booleanArray14, true);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, false, false]");
    }

    @Test
    public void test11344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11344");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList1 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean3 = objEntryList1.remove((java.lang.Object) byteArray2);
        boolean[] booleanArray8 = new boolean[] { false, false, false, false };
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray8, false);
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray8);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray8, true, 0);
        boolean boolean16 = objEntryList1.contains((java.lang.Object) int15);
        java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        java.lang.reflect.Type[] typeArray18 = objEntryList1.toArray((java.lang.reflect.Type[]) wildcardClassArray17);
        java.lang.reflect.Type[] typeArray21 = org.apache.commons.lang3.ArrayUtils.subarray(typeArray18, (int) (short) -1, (int) (short) 100);
        boolean boolean22 = objEntryList0.contains((java.lang.Object) typeArray21);
        java.util.Map.Entry<java.lang.Object, java.lang.Object> objEntry23 = null;
        boolean boolean24 = objEntryList0.add(objEntry23);
        int int25 = objEntryList0.size();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test11345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11345");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        java.lang.Character[] charArray15 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray15);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, 'a');
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray9, charArray18);
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.subarray(charArray18, 5, 3);
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray18, '4', (int) (short) 10);
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray18);
        java.lang.Character[] charArray32 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray32, ' ');
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray32, '#');
        java.lang.Character[] charArray42 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray42);
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray42, 'a');
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray36, charArray45);
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.clone(charArray36);
        int int50 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray47, 'a', 11);
        double[] doubleArray54 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray54);
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, (double) (byte) 10);
        double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0.0d);
        char[] charArray61 = new char[] { 'a' };
        java.lang.Character[] charArray62 = org.apache.commons.lang3.ArrayUtils.toObject(charArray61);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) 0.0d, (java.lang.Object) charArray61);
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.clone(charArray61);
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.subarray(charArray64, (int) (byte) 1, (-1));
        java.lang.Character[] charArray68 = org.apache.commons.lang3.ArrayUtils.toObject(charArray67);
        char[] charArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray68);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray47, charArray69);
        char[] charArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray69);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray26, charArray69);
        char[] charArray73 = org.apache.commons.lang3.ArrayUtils.clone(charArray26);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3 + "'", int50 == 3);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[a]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[4, #, #,  , a]");
    }

    @Test
    public void test11346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11346");
        long[] longArray3 = new long[] { 4, 'a', (byte) 0 };
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray3, (long) 'a');
        long[] longArray6 = null;
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.addAll(longArray5, longArray6);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray5, (long) (short) 10);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.subarray(longArray9, (int) (short) 10, 0);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray12, 1L, (int) '#');
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[4, 97, 0]");
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[4, 0]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[4, 0]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[4, 0]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test11347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11347");
        java.lang.Byte[][][][][][] byteArray0 = new java.lang.Byte[][][][][][] {};
        java.lang.Byte[][][][][][] byteArray1 = new java.lang.Byte[][][][][][] {};
        java.lang.Byte[][][][][][] byteArray2 = new java.lang.Byte[][][][][][] {};
        java.lang.Byte[][][][][][] byteArray3 = new java.lang.Byte[][][][][][] {};
        java.lang.Byte[][][][][][] byteArray4 = new java.lang.Byte[][][][][][] {};
        java.lang.Byte[][][][][][] byteArray5 = new java.lang.Byte[][][][][][] {};
        java.lang.Byte[][][][][][][] byteArray6 = new java.lang.Byte[][][][][][][] { byteArray0, byteArray1, byteArray2, byteArray3, byteArray4, byteArray5 };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray6);
        java.lang.Byte[][][][][] byteArray8 = new java.lang.Byte[][][][][] {};
        java.lang.Byte[][][][][][] byteArray9 = new java.lang.Byte[][][][][][] { byteArray8 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder10.append(true, true);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 1 };
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray15);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray15);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray15);
        boolean[] booleanArray23 = new boolean[] { false, false, false, false };
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray23);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray23, false);
        java.lang.Boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray23);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray23);
        java.lang.Boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray23);
        java.lang.Short[] shortArray31 = new java.lang.Short[] { (short) 1 };
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray31);
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31, (short) (byte) 100);
        short[] shortArray36 = new short[] {};
        java.lang.Short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray36);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray35, shortArray36);
        float[] floatArray41 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray41);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains(floatArray41, (float) 0);
        float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.add(floatArray41, 10.0f);
        java.lang.Float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray41);
        boolean boolean49 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray35, (java.lang.Object) floatArray47, false);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray29, (java.lang.Object[]) floatArray47);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray15, (java.lang.Object[]) floatArray47);
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray47, (java.lang.Object) 1, 0);
        java.lang.Float[] floatArray58 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f };
        java.lang.Float[] floatArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder10.append((java.lang.Object[]) floatArray47, (java.lang.Object[]) floatArray59);
        float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray47);
        float[] floatArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray47, (float) 2);
        float[] floatArray66 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray67 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray66);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.contains(floatArray66, (float) 0);
        float[] floatArray71 = org.apache.commons.lang3.ArrayUtils.add(floatArray66, 10.0f);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.contains(floatArray66, (float) (-1));
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray66);
        float[] floatArray75 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray63, floatArray66);
        java.lang.Byte[][][][][][] byteArray76 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray9, (java.lang.Object) floatArray63);
        java.lang.Byte[][][][][][][] byteArray77 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, byteArray9);
        java.lang.Object[] objArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) byteArray77);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[1]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[1]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[[], [], [], [], [], [], [[]]]");
    }

    @Test
    public void test11348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11348");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.add(charArray7, '#');
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.add(charArray9, 4, '#');
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray12, '4');
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray12, 'a');
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray12, '#', (int) (short) 10);
        java.lang.Character[] charArray20 = org.apache.commons.lang3.ArrayUtils.toObject(charArray12);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(charArray12, ' ');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.add(charArray12, 2, ' ');
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.remove(charArray12, 5);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a a ###");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a a ###");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a,  , a,  , #, #, #]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 6 + "'", int19 == 6);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a  a ###");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a  a ###");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a,  ,  , a,  , #, #, #]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a,  , a,  , #, #]");
    }

    @Test
    public void test11349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11349");
        boolean[] booleanArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray3 = org.apache.commons.lang3.ArrayUtils.add(booleanArray0, (int) 'a', false);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11350");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) 0);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, 10.0f);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder10.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray19 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.clone(longArray19);
        long[] longArray26 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray27 = org.apache.commons.lang3.ArrayUtils.clone(longArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder13.append(longArray20, longArray26);
        boolean[] booleanArray33 = new boolean[] { false, false, false, false };
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray33);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray33, false);
        java.lang.Boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray33);
        boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray33);
        java.lang.Boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray33);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray39);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.add(booleanArray40, 0, true);
        boolean[] booleanArray48 = new boolean[] { false, false, false, false };
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray48);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray48, false);
        java.lang.Boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray48);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray48, true, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder13.append(booleanArray40, booleanArray48);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) (-1), (java.lang.Object) equalsBuilder56);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 100, (byte) 0 };
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray64);
        java.lang.Byte[] byteArray67 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray67);
        java.lang.Byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray67);
        byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray69);
        byte[] byteArray72 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray70, (byte) 0);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray65, byteArray70);
        byte[] byteArray77 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int80 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray77, (byte) 10, (int) (short) -1);
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray77);
        int int83 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray77, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder56.append(byteArray70, byteArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((long) '4', 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder84.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder84.append((short) (byte) 100, (short) -1);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[true, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[1]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[1]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
    }

    @Test
    public void test11351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11351");
        byte[] byteArray3 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 10, (int) (short) -1);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray3);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray3, (byte) 100);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray3);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray3);
        byte[] byteArray15 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray15, (byte) 10, (int) (short) -1);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray15);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray15, (byte) 1, (int) ' ');
        byte[] byteArray29 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray29);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray29, (byte) 10);
        byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray15, byteArray29);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(byteArray33, (byte) 1);
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray33, (byte) -1);
        byte[] byteArray38 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray11, byteArray33);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray11);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.remove(byteArray11, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 9, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[10, 0, 0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[10, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, 10, 0, 0, 10, 1, 10, 10, 10, 10, 0]");
    }

    @Test
    public void test11352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11352");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        java.lang.String str5 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) equalsBuilder3, "0");
        boolean[] booleanArray10 = new boolean[] { false, false, false, false };
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray10, false);
        java.lang.Boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10);
        java.lang.Boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray16);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray16, true);
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray19, (int) (short) 0, 100);
        boolean[] booleanArray27 = new boolean[] { false, false, false, false };
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray27);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray27, false);
        java.lang.Boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray27);
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray27);
        java.lang.Boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray27);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray33);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray33, true);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray36);
        boolean[] booleanArray42 = new boolean[] { false, false, false, false };
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray42);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray42, false);
        java.lang.Boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray42);
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray42);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray42);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray42);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray36, booleanArray42);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray42);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray19, booleanArray42);
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.add(booleanArray19, true);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray54);
        boolean[] booleanArray60 = new boolean[] { false, false, false, false };
        boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray60);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray60, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder3.append(booleanArray54, booleanArray60);
        boolean[] booleanArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray54);
        java.lang.Boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray54);
        boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray66);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, false, false, false, true]");
    }

    @Test
    public void test11353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11353");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray4, true, 2);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test11354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11354");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray2);
        float[] floatArray15 = new float[] { (short) 100, 0, 10 };
        float[] floatArray18 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(floatArray18, (float) 0);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.add(floatArray18, 10.0f);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray15, floatArray18);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray18);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(floatArray18, (float) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray18);
        float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray2, floatArray18);
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, (float) 1);
        float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray2);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray2);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray2, 0.0f);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test11355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11355");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, 0);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) 4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder16.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray20 = new double[] {};
        double[] doubleArray24 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray24);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray24, (double) (byte) 10);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray24, (double) 0L, 0);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray24);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray24, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder16.append(doubleArray20, doubleArray24);
        int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) 'a', (int) '4');
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray20);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0, (double) 100);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray3);
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray43, (double) (byte) 10);
        boolean[] booleanArray50 = new boolean[] { false, false, false, false };
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray50);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray50, false);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.add(booleanArray50, true);
        double[] doubleArray61 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray61);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray55, (java.lang.Object) doubleArray61);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray61, 3, 1);
        int int69 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) 100, (double) 100.0f);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray43, doubleArray66);
        double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.add(doubleArray43, (double) 1);
        double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray72);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray72, (double) '4', 0.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 4.0]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0, 10.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 10.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test11356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11356");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((float) (short) 100, (float) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.append((short) 1, (short) (byte) -1);
        long[] longArray15 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.clone(longArray15);
        java.lang.Long[] longArray17 = org.apache.commons.lang3.ArrayUtils.toObject(longArray16);
        long[] longArray23 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.clone(longArray23);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray16, longArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder26.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray35 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray36 = org.apache.commons.lang3.ArrayUtils.clone(longArray35);
        long[] longArray42 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray43 = org.apache.commons.lang3.ArrayUtils.clone(longArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder29.append(longArray36, longArray42);
        long[] longArray47 = org.apache.commons.lang3.ArrayUtils.add(longArray36, (int) (byte) 0, (long) 2);
        long[] longArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder9.append(longArray24, longArray48);
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray24, (long) '#');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[2, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
    }

    @Test
    public void test11357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11357");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        byte[] byteArray7 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray7, (byte) 10, (int) (short) -1);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray7);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray7, (byte) 1, (int) ' ');
        byte[] byteArray21 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray21, (byte) 10);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray7, byteArray21);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray26, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder0.append(byteArray7, byteArray26);
        short[] shortArray31 = new short[] {};
        java.lang.Short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray31);
        int int33 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) shortArray31);
        short[] shortArray36 = new short[] { (short) 100, (short) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder0.append(shortArray31, shortArray36);
        boolean[] booleanArray42 = new boolean[] { false, false, false, false };
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray42);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray42, false);
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.add(booleanArray42, true);
        boolean[] booleanArray48 = null;
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray42, booleanArray48);
        boolean[] booleanArray50 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder0.append(booleanArray42, booleanArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { 10 };
        int[] intArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray54, (int) (byte) 10);
        java.lang.Byte[] byteArray61 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray61, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder52.append((java.lang.Object[]) intArray54, (java.lang.Object[]) byteArray61);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) equalsBuilder0, (java.lang.Object) byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder0.append((byte) 100, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder0.append((double) 100.0f, (double) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder71.append((long) (short) 0, (long) (short) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[100, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, false, false, false, true]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder74);
    }

    @Test
    public void test11358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11358");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.lang.Double[] doubleArray3 = new java.lang.Double[] { 0.0d };
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 0.0d };
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d };
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 0.0d };
        java.lang.Double[][] doubleArray10 = new java.lang.Double[][] { doubleArray1, doubleArray3, doubleArray5, doubleArray7, doubleArray9 };
        java.lang.Double[] doubleArray12 = new java.lang.Double[] { 0.0d };
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 0.0d };
        java.lang.Double[] doubleArray16 = new java.lang.Double[] { 0.0d };
        java.lang.Double[] doubleArray18 = new java.lang.Double[] { 0.0d };
        java.lang.Double[] doubleArray20 = new java.lang.Double[] { 0.0d };
        java.lang.Double[][] doubleArray21 = new java.lang.Double[][] { doubleArray12, doubleArray14, doubleArray16, doubleArray18, doubleArray20 };
        java.lang.Double[][][] doubleArray22 = new java.lang.Double[][][] { doubleArray10, doubleArray21 };
        java.lang.Long[] longArray29 = new java.lang.Long[] { 1L, 10L, 0L, (-1L), (-1L), (-1L) };
        long[] longArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray29, (long) (short) 10);
        java.lang.Double[][][] doubleArray32 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray22, (java.lang.Object) longArray31);
        double[] doubleArray36 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray36);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (double) (byte) 10);
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, 0.0d);
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray36, (double) (-1), (int) (short) 10, (double) (-1.0f));
        double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray36, (-1), (int) ' ');
        boolean[] booleanArray53 = new boolean[] { false, false, false, false };
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray53);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray53, false);
        boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.add(booleanArray53, true);
        double[] doubleArray64 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray64);
        boolean boolean66 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray58, (java.lang.Object) doubleArray64);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray64);
        double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray64);
        int int70 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray68, (double) 10);
        double[] doubleArray71 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray68);
        double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.add(doubleArray68, 2, (double) (short) 0);
        double[] doubleArray75 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray48, doubleArray68);
        int int76 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray32, (java.lang.Object) doubleArray75);
        java.lang.Double[] doubleArray77 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray75);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray75);
        double[] doubleArray80 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray75, (double) 0);
        int int83 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray80, (double) 5, (double) (byte) 10);
        double[] doubleArray87 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray88 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray87);
        double[] doubleArray90 = org.apache.commons.lang3.ArrayUtils.add(doubleArray87, (double) (byte) 10);
        int int94 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray87, (double) (short) 0, (int) ' ', (double) 1L);
        double[] doubleArray95 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray80, doubleArray87);
        int int97 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray87, (double) 4);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[1, 10, 0, -1, -1, -1]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 3 + "'", int70 == 3);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, -1.0, 0.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 10.0, 100.0, 10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, 100.0, 10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 6 + "'", int83 == 6);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[10.0, 100.0, 10.0, -1.0, 10.0, 10.0, 0.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
    }

    @Test
    public void test11359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11359");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        java.lang.Character[] charArray10 = org.apache.commons.lang3.ArrayUtils.toObject(charArray9);
        java.lang.Character[] charArray16 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray16);
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16, 'a');
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.clone(charArray19);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray19, ' ');
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray19);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, '4');
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray9);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.subarray(charArray26, 6, 4);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray29, ' ', (int) (byte) 10);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 44a44## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 44a44## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, 4, a, 4, 4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test11360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11360");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((long) (byte) 10, (long) (byte) 10);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean29 = equalsBuilder28.isEquals();
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.String[] strArray34 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray35 = org.apache.commons.lang3.ArrayUtils.addAll(strArray30, strArray34);
        java.lang.String[] strArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray30);
        java.lang.Character[] charArray42 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray42, ' ');
        java.lang.Character[] charArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder28.append((java.lang.Object[]) strArray30, (java.lang.Object[]) charArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder21.append((java.lang.Object[]) byteArray23, (java.lang.Object[]) strArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder21.append((double) 3, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append((float) (byte) 1, (float) ' ');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
    }

    @Test
    public void test11361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11361");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        boolean[] booleanArray14 = new boolean[] { false, false, false, false };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray14);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray14, false);
        java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray14);
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.add(booleanArray19, true);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray19, 5);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray19, true);
        java.lang.Boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray19);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray26, true);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, false, false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test11362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11362");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.add(charArray7, '#');
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.add(charArray9, 4, '#');
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.subarray(charArray12, 100, (int) 'a');
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.subarray(charArray15, 5, 2);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.subarray(charArray18, (-1), 10);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray21);
        java.lang.Character[] charArray23 = org.apache.commons.lang3.ArrayUtils.toObject(charArray21);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray21);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a a ###");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a a ###");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a,  , a,  , #, #, #]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test11363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11363");
        float[] floatArray0 = null;
        boolean[] booleanArray5 = new boolean[] { false, false, false, false };
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray5);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray5, false);
        java.lang.Boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        java.lang.Short[] shortArray13 = new java.lang.Short[] { (short) 1 };
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray13);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray13);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray13, (short) (byte) 100);
        short[] shortArray18 = new short[] {};
        java.lang.Short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray18);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray17, shortArray18);
        float[] floatArray23 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray23);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(floatArray23, (float) 0);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.add(floatArray23, 10.0f);
        java.lang.Float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray23);
        boolean boolean31 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray17, (java.lang.Object) floatArray29, false);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray11, (java.lang.Object[]) floatArray29);
        java.lang.Float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray29);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray33);
        java.lang.Float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray33);
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray33, (float) (byte) 100);
        float[] floatArray40 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray40);
        java.lang.Character[] charArray47 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray47, 'a');
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) floatArray40, (java.lang.Object) 'a');
        float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray40, (int) (byte) 1, (int) (byte) 1);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray40, (float) (short) 10, 2);
        float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray40);
        float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray37, floatArray57);
        float[] floatArray59 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray0, floatArray58);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray59);
        java.lang.Float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray59);
        java.lang.Float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray61);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[1]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray59), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertNotNull(floatArray62);
    }

    @Test
    public void test11364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11364");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray7);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray7);
        java.lang.Character[] charArray15 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, ' ');
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray17);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray7, charArray17);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray17);
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray17, '4');
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.add(charArray17, '4');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.subarray(charArray17, (int) (short) 10, (int) (byte) 1);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), " 4a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), " 4a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[ , 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), " 44a44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), " 44a44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[ , 4, 4, a, 4, 4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
    }

    @Test
    public void test11365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11365");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        java.lang.Character[] charArray21 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, 'a');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.clone(charArray24);
        java.lang.Character[] charArray31 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray31, 'a');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.add(charArray33, '#');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.remove(charArray33, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.append(charArray25, charArray33);
        short[] shortArray43 = new short[] { (byte) 0, (byte) 1, (short) -1, (byte) -1 };
        java.lang.Short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray43);
        short[] shortArray45 = null;
        java.lang.Short[] shortArray47 = new java.lang.Short[] { (short) 1 };
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray47);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray47);
        short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray47, (short) (byte) 100);
        short[] shortArray52 = new short[] {};
        java.lang.Short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray52);
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray51, shortArray52);
        java.lang.Short[] shortArray56 = new java.lang.Short[] { (short) 1 };
        short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray56);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray56);
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray56, (short) (byte) 100);
        short[] shortArray61 = new short[] {};
        java.lang.Short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray61);
        short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray60, shortArray61);
        short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray54, shortArray61);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray45, shortArray64);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray65, 3, 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder0.append(shortArray43, shortArray68);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray68);
        int int71 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) shortArray70);
        java.lang.Short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray70);
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray72, (short) (byte) 100);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray72);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[1]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[1]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[1]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[1]");
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[]");
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[1]");
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[1]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[1]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[]");
    }

    @Test
    public void test11366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11366");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.add(charArray7, '#');
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.remove(charArray9, 2);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray11);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray11, 'a');
        java.lang.Character[] charArray20 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20, ' ');
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20, '#');
        java.lang.Character[] charArray30 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray30);
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray30, 'a');
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray24, charArray33);
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.subarray(charArray33, 5, 3);
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray33, '4', (int) (short) 10);
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.addAll(charArray11, charArray33);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray33);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a,  ,  , #, #]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a ##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a ##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , #, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a  ##4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a  ##4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a,  ,  , #, #, 4, #, #,  , a]");
    }

    @Test
    public void test11367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11367");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder0.append((long) (byte) 10, (long) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder16.append(true, true);
        java.lang.Boolean boolean20 = equalsBuilder19.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + false + "'", boolean20, false);
    }

    @Test
    public void test11368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11368");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray5);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.toObject(intArray5);
        java.lang.Integer[] intArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray8, 3);
        java.lang.Integer[] intArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        java.lang.Integer[] intArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray11);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray11, 9);
        java.lang.Integer[] intArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray11);
        java.lang.Integer[] intArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray15);
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray15, (int) (short) 10);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray15, 4);
        java.lang.Integer[] intArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray15);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray21);
        java.lang.Integer[] intArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray21);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray23);
    }

    @Test
    public void test11369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11369");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray4, (java.lang.Object) ' ');
        java.lang.Object obj7 = null;
        java.lang.Object[] objArray8 = org.apache.commons.lang3.ArrayUtils.add((java.lang.Object[]) doubleArray4, obj7);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4, (double) 0);
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4, 0.0d);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray12, (double) (short) 10);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) (short) 1, (double) (-1.0f));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test11370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11370");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        java.lang.Boolean[][] booleanArray39 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray46 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray53 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray60 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray67 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray68 = new java.lang.Boolean[][] { booleanArray46, booleanArray53, booleanArray60, booleanArray67 };
        java.lang.Boolean[][] booleanArray69 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray39, booleanArray68);
        java.util.Map<java.lang.Object, java.lang.Object> objMap70 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray39);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet71 = objMap70.entrySet();
        java.util.Set<java.lang.Object> objSet72 = objMap70.keySet();
        objMap31.putAll(objMap70);
        boolean boolean74 = objMap70.isEmpty();
        objMap70.clear();
        java.util.Collection<java.lang.Object> objCollection76 = objMap70.values();
        int int77 = objMap70.size();
        objMap70.clear();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((float) (short) 100, (float) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder82.append((short) 1, (short) (byte) -1);
        boolean boolean89 = objMap70.containsValue((java.lang.Object) equalsBuilder88);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet90 = objMap70.entrySet();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(objMap70);
        org.junit.Assert.assertNotNull(objEntrySet71);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(objCollection76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(objEntrySet90);
    }

    @Test
    public void test11371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11371");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0.0d);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        double[] doubleArray13 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray13);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.add(doubleArray13, (double) (byte) 10);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray16, (double) 10.0f);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray16);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.add(doubleArray19, (double) 1.0f);
        java.lang.Double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray21);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray21);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray21, 1, 0);
        long[] longArray32 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray33 = org.apache.commons.lang3.ArrayUtils.clone(longArray32);
        java.lang.Long[] longArray34 = org.apache.commons.lang3.ArrayUtils.toObject(longArray33);
        long[] longArray40 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray33, longArray41);
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray33, (long) 1);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.clone(longArray44);
        long[] longArray48 = org.apache.commons.lang3.ArrayUtils.add(longArray45, 2, (long) (byte) 100);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.remove(longArray45, 0);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) 1, (java.lang.Object) 0);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[32, 100, 10, 10]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[32, 100, 10, 10]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[32, 100, 100, 10, 10]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[100, 10, 10]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test11372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11372");
        long[] longArray5 = new long[] { 10L, (-1), 100L, (short) 1, (short) 0 };
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray5, (long) (byte) 10);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray5, (long) 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray5, (long) 5, 0);
        java.lang.Double[] doubleArray19 = new java.lang.Double[] { (-1.0d), 100.0d, 1.0d, 10.0d, (-1.0d), 100.0d };
        java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray19);
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray20, (double) ' ');
        java.lang.Double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20);
        java.lang.Double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray20, (double) (byte) 10);
        java.lang.Double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20);
        boolean boolean29 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 5, (java.lang.Object) doubleArray20, true);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[10, -1, 100, 1, 0]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 100, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test11373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11373");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.clone(floatArray6);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray6, (float) 6, (int) (short) 0);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test11374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11374");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 4, 4, (-1), 0 };
        java.lang.Integer[] intArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4);
        boolean[] booleanArray10 = new boolean[] { false, false, false, false };
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray10, false);
        java.lang.Boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray5, (java.lang.Object) booleanArray14, (int) '#');
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray5);
        int[] intArray21 = new int[] { '#', (byte) -1, (short) 0 };
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.subarray(intArray21, (int) '#', (int) (short) 0);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray21, (int) (byte) 1);
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.clone(intArray21);
        int[] intArray32 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.clone(intArray32);
        int[] intArray35 = org.apache.commons.lang3.ArrayUtils.add(intArray32, (int) 'a');
        int[] intArray40 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray41 = org.apache.commons.lang3.ArrayUtils.clone(intArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray41);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray35, intArray41);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray35);
        int[] intArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray35);
        int[] intArray46 = org.apache.commons.lang3.ArrayUtils.addAll(intArray27, intArray45);
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.add(intArray45, (int) (short) 100);
        int int51 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray45, (int) 'a', (int) (short) 10);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray45);
        int[] intArray53 = org.apache.commons.lang3.ArrayUtils.addAll(intArray17, intArray45);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(intArray45, 6);
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray45, 9);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[4, 4, -1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[35, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[35, -1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[35, -1, 0, 100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, -1, -1, 0, 97, 100]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 4 + "'", int51 == 4);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[4, 4, -1, 0, 97, 0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
    }

    @Test
    public void test11375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11375");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) -1, (int) (byte) -1);
        java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray13, (double) 1);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) 1.0f, (int) (byte) 10);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray15, (double) (byte) 1, (double) (byte) 100);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
    }

    @Test
    public void test11376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11376");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        java.lang.Boolean boolean38 = equalsBuilder37.build();
        equalsBuilder37.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder37.append((int) 'a', 8);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertEquals("'" + boolean38 + "' != '" + false + "'", boolean38, false);
        org.junit.Assert.assertNotNull(equalsBuilder42);
    }

    @Test
    public void test11377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11377");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray13, (int) (short) 0, 100);
        boolean[] booleanArray21 = new boolean[] { false, false, false, false };
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray21);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray21, false);
        java.lang.Boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray21);
        java.lang.Boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27, true);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray30);
        boolean[] booleanArray36 = new boolean[] { false, false, false, false };
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray36, false);
        java.lang.Boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray36);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray36);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray36);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray30, booleanArray36);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray36);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray13, booleanArray36);
        boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.add(booleanArray13, true);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray48);
        boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY;
        int int53 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray50, true, (int) (byte) 10);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) booleanArray48, (java.lang.Object) booleanArray50);
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray48, true);
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray48, true, 7);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
    }

    @Test
    public void test11378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11378");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray13, (int) (short) 0, 100);
        boolean[] booleanArray21 = new boolean[] { false, false, false, false };
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray21);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray21, false);
        java.lang.Boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray21);
        java.lang.Boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27, true);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray30);
        boolean[] booleanArray36 = new boolean[] { false, false, false, false };
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray36, false);
        java.lang.Boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray36);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray36);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray36);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray30, booleanArray36);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray36);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray13, booleanArray36);
        boolean[] booleanArray48 = new boolean[] { true };
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray48, (int) (short) 100, (int) (short) 0);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray51, false);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray36, booleanArray51);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 4, 4, (-1), 0 };
        java.lang.Integer[] intArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray59);
        boolean[] booleanArray65 = new boolean[] { false, false, false, false };
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray65);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray65, false);
        java.lang.Boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray65);
        int int71 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray60, (java.lang.Object) booleanArray69, (int) '#');
        java.lang.Boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray69);
        java.lang.Boolean[] booleanArray73 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray69);
        boolean[] booleanArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray73);
        boolean[] booleanArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray73, false);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray51, booleanArray76);
        boolean[] booleanArray80 = org.apache.commons.lang3.ArrayUtils.add(booleanArray76, (int) (short) 1, false);
        boolean[] booleanArray82 = org.apache.commons.lang3.ArrayUtils.add(booleanArray80, true);
        boolean boolean84 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray82, true);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[true]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray80), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray82), "[false, false, false, false, false, true]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test11379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11379");
        float[][][][][][][] floatArray0 = new float[][][][][][][] {};
        float[][][][][][][] floatArray1 = new float[][][][][][][] {};
        float[][][][][][][] floatArray2 = new float[][][][][][][] {};
        float[][][][][][][] floatArray3 = new float[][][][][][][] {};
        float[][][][][][][] floatArray4 = new float[][][][][][][] {};
        float[][][][][][][] floatArray5 = new float[][][][][][][] {};
        float[][][][][][][][] floatArray6 = new float[][][][][][][][] { floatArray0, floatArray1, floatArray2, floatArray3, floatArray4, floatArray5 };
        float[][][][][][][] floatArray7 = new float[][][][][][][] {};
        float[][][][][][][] floatArray8 = new float[][][][][][][] {};
        float[][][][][][][] floatArray9 = new float[][][][][][][] {};
        float[][][][][][][] floatArray10 = new float[][][][][][][] {};
        float[][][][][][][] floatArray11 = new float[][][][][][][] {};
        float[][][][][][][][] floatArray12 = new float[][][][][][][][] { floatArray7, floatArray8, floatArray9, floatArray10, floatArray11 };
        float[][][][][][][][] floatArray13 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray6, floatArray12);
        float[][][][][][][][] floatArray15 = org.apache.commons.lang3.ArrayUtils.remove(floatArray13, 2);
        float[][][][][][][] floatArray16 = new float[][][][][][][] {};
        float[][][][][][][] floatArray17 = new float[][][][][][][] {};
        float[][][][][][][] floatArray18 = new float[][][][][][][] {};
        float[][][][][][][] floatArray19 = new float[][][][][][][] {};
        float[][][][][][][] floatArray20 = new float[][][][][][][] {};
        float[][][][][][][] floatArray21 = new float[][][][][][][] {};
        float[][][][][][][][] floatArray22 = new float[][][][][][][][] { floatArray16, floatArray17, floatArray18, floatArray19, floatArray20, floatArray21 };
        float[][][][][][][] floatArray23 = new float[][][][][][][] {};
        float[][][][][][][] floatArray24 = new float[][][][][][][] {};
        float[][][][][][][] floatArray25 = new float[][][][][][][] {};
        float[][][][][][][] floatArray26 = new float[][][][][][][] {};
        float[][][][][][][] floatArray27 = new float[][][][][][][] {};
        float[][][][][][][][] floatArray28 = new float[][][][][][][][] { floatArray23, floatArray24, floatArray25, floatArray26, floatArray27 };
        float[][][][][][][][] floatArray29 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray22, floatArray28);
        float[][][][][][][] floatArray30 = new float[][][][][][][] {};
        double[] doubleArray34 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray34);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.add(doubleArray34, (double) (byte) 10);
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray34, (double) 0L, 0);
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray34);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray34, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.add(doubleArray34, (double) 4);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray34, 100.0d, (int) ' ', (double) 0L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray34, (double) 0.0f, 10);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray34, 100.0d, (-1.0d));
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray34, 0.0d);
        float[][][][][][][] floatArray59 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray30, (java.lang.Object) doubleArray34);
        float[][][][][][][] floatArray60 = org.apache.commons.lang3.ArrayUtils.clone(floatArray30);
        java.lang.Cloneable[][][][][][][] cloneableArray61 = org.apache.commons.lang3.ArrayUtils.add((java.lang.Cloneable[][][][][][][]) floatArray22, (java.lang.Cloneable[][][][][][]) floatArray60);
        float[][][][][][][][] floatArray62 = org.apache.commons.lang3.ArrayUtils.add(floatArray15, floatArray60);
        org.junit.Assert.assertNotNull(floatArray0);
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0, 4.0]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertNotNull(cloneableArray61);
        org.junit.Assert.assertNotNull(floatArray62);
    }

    @Test
    public void test11380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11380");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) floatArray3);
        java.lang.Object[] objArray5 = org.apache.commons.lang3.ArrayUtils.clone((java.lang.Object[]) floatArray3);
        java.lang.Byte[] byteArray12 = new java.lang.Byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 100, (byte) 0 };
        byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray12);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray12);
        java.lang.Object[] objArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) byteArray12);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) objArray5, (java.lang.Object) byteArray12);
        java.lang.Byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray12);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray12);
        byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray12);
        java.lang.Object[] objArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) byteArray12);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[-1.0, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[1, 100, -1, 10, 100, 0]");
    }

    @Test
    public void test11381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11381");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0.0d);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        double[] doubleArray13 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray13);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.add(doubleArray13, (double) (byte) 10);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray16, (double) 10.0f);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray16);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.add(doubleArray19, (double) 1.0f);
        java.lang.Double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray21);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray21);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray21, 1, 0);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray21);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) '4');
        double[] doubleArray30 = null;
        double[] doubleArray34 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray34);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.add(doubleArray34, (double) (byte) 10);
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray34, (double) 0L, 0);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray34, (double) (short) -1, (int) (byte) -1);
        java.lang.Double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray34);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray44, (double) 1);
        double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray30, doubleArray46);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray46);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray46, (double) (short) 100, (double) 10.0f);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray46, (double) (-1L));
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray46);
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray54, 11, (int) (byte) -1);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray27, doubleArray54);
        double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray27);
        double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.add(doubleArray59, (double) 8);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 10.0, 100.0, 10.0, 1.0, 8.0]");
    }

    @Test
    public void test11382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11382");
        float[] floatArray0 = null;
        int int2 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray0, (float) 100L);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test11383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11383");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean35 = objEntryList33.remove((java.lang.Object) byteArray34);
        boolean boolean36 = objEntrySet32.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor37 = objEntrySet32.iterator();
        java.lang.Object[] objArray38 = objEntrySet32.toArray();
        boolean boolean40 = objEntrySet32.remove((java.lang.Object) '4');
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList41 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor42 = objEntryList41.iterator();
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.String[] strArray47 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray48 = org.apache.commons.lang3.ArrayUtils.addAll(strArray43, strArray47);
        java.lang.Comparable<java.lang.String>[] strComparableArray49 = objEntryList41.toArray((java.lang.Comparable<java.lang.String>[]) strArray43);
        boolean boolean50 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList41);
        boolean boolean51 = objEntrySet32.isEmpty();
        long[] longArray55 = new long[] { 'a', 1, 0 };
        long[] longArray61 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray62 = org.apache.commons.lang3.ArrayUtils.clone(longArray61);
        java.lang.Long[] longArray63 = org.apache.commons.lang3.ArrayUtils.toObject(longArray62);
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.clone(longArray62);
        long[] longArray66 = org.apache.commons.lang3.ArrayUtils.add(longArray64, (long) (short) 0);
        long[] longArray67 = org.apache.commons.lang3.ArrayUtils.clone(longArray66);
        long[] longArray73 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray74 = org.apache.commons.lang3.ArrayUtils.clone(longArray73);
        java.lang.Long[] longArray75 = org.apache.commons.lang3.ArrayUtils.toObject(longArray74);
        long[] longArray76 = org.apache.commons.lang3.ArrayUtils.clone(longArray74);
        long[] longArray78 = org.apache.commons.lang3.ArrayUtils.add(longArray76, (long) (short) 0);
        long[] longArray79 = org.apache.commons.lang3.ArrayUtils.addAll(longArray67, longArray76);
        int int82 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray67, (long) ' ', (int) ' ');
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray55, longArray67);
        long[] longArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray55);
        boolean boolean85 = objEntrySet32.remove((java.lang.Object) longArray84);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray84);
        int int88 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray84, 10L);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEntryItor37);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objEntryItor42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strComparableArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[97, 1, 0]");
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray62), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertNotNull(longArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(longArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray84), "[97, 1, 0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
    }

    @Test
    public void test11384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11384");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((long) (short) 10, (long) '#');
        boolean boolean9 = equalsBuilder8.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder8.append(true, true);
        java.lang.Short[] shortArray14 = new java.lang.Short[] { (short) 1 };
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray14);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14, (short) (byte) 100);
        short[] shortArray19 = new short[] {};
        java.lang.Short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray19);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray18, shortArray19);
        java.lang.Short[] shortArray23 = new java.lang.Short[] { (short) 1 };
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray23);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray23);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray23, (short) (byte) 100);
        short[] shortArray28 = new short[] {};
        java.lang.Short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray28);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray27, shortArray28);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray21, shortArray28);
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.add(shortArray31, (short) (byte) 10);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray33, 2, (int) '4');
        short[] shortArray41 = new short[] { (byte) 0, (byte) 1, (short) -1, (byte) -1 };
        java.lang.Short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray41);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray41, (int) (short) 1, 100);
        int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray41, (short) 100, 9);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder12.append(shortArray36, shortArray41);
        java.lang.Boolean boolean50 = equalsBuilder12.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder12.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder12.append((float) 100, 10.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder12.append((byte) -1, (byte) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[1]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertEquals("'" + boolean50 + "' != '" + false + "'", boolean50, false);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder59);
    }

    @Test
    public void test11385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11385");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) 10);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.add(shortArray2, 1, (short) (byte) -1);
        double[] doubleArray11 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray11);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray12, (java.lang.Object) ' ');
        java.lang.Object obj15 = null;
        java.lang.Object[] objArray16 = org.apache.commons.lang3.ArrayUtils.add((java.lang.Object[]) doubleArray12, obj15);
        java.lang.Object obj17 = null;
        java.lang.Object[] objArray18 = org.apache.commons.lang3.ArrayUtils.removeElement((java.lang.Object[]) doubleArray12, obj17);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray12);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray12, (double) (byte) 1);
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray21);
        java.lang.Double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray22);
        java.lang.Double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray23);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray23, (double) 7);
        float[] floatArray29 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) floatArray30);
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray30);
        byte[] byteArray33 = null;
        byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray33);
        byte[] byteArray38 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray38, (byte) 10, (int) (short) -1);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) 10);
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray33, byteArray38);
        byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray38, (int) (byte) 0, (int) (short) 0);
        byte[] byteArray48 = null;
        byte[] byteArray49 = null;
        byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray49);
        byte[] byteArray54 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray54, (byte) 10, (int) (short) -1);
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray54, (byte) 10);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray50, byteArray54);
        byte[] byteArray63 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray50, 100, 10);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray48, byteArray50);
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray48);
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.add(byteArray65, (byte) 10);
        byte[] byteArray68 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray47, byteArray67);
        java.lang.Character[] charArray74 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray74, ' ');
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray76);
        java.lang.String[] strArray78 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.lang.Comparable<java.lang.String>[]) strArray78);
        java.lang.String[] strArray80 = org.apache.commons.lang3.ArrayUtils.clone(strArray78);
        java.lang.String[] strArray81 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray80);
        java.lang.String[] strArray85 = new java.lang.String[] { "{}", "", "{}" };
        java.util.ArrayList<java.lang.String> strList86 = new java.util.ArrayList<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        boolean boolean88 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray77, (java.lang.Object) strArray81, (java.util.Collection<java.lang.String>) strList86);
        boolean boolean89 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) floatArray30, (java.lang.Object) byteArray68, (java.util.Collection<java.lang.String>) strList86);
        boolean boolean90 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray2, (java.lang.Object) 7, (java.util.Collection<java.lang.String>) strList86);
        int int92 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray2, (short) 10);
        boolean boolean93 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray2);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1, -1]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[10]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[10]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test11386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11386");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, 0);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY;
        boolean boolean12 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray3, (java.lang.Object) booleanArray11);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray14, (-1.0d));
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[100.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 10.0, 0.0]");
    }

    @Test
    public void test11387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11387");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor35 = objEntryList33.iterator();
        boolean[] booleanArray40 = new boolean[] { false, false, false, false };
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray40, false);
        java.lang.Boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray40);
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray45);
        boolean boolean47 = objEntryList33.remove((java.lang.Object) booleanArray45);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.add(booleanArray45, false);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray49, false, 0);
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray49, true);
        int int57 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray49, false, 1);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray49);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEntryItor35);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test11388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11388");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) (short) 0, (int) ' ', (double) 1L);
        double[] doubleArray14 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray14);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, (double) (byte) 10);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, (double) 0L, 0);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray14);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, (double) 4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray31 = new double[] {};
        double[] doubleArray35 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray35);
        double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.add(doubleArray35, (double) (byte) 10);
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray35, (double) 0L, 0);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray35);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray35, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder27.append(doubleArray31, doubleArray35);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) 'a', (int) '4');
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray14, doubleArray31);
        double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, 0, (double) 100);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray14);
        double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray14);
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray55, (double) (byte) 1, (int) ' ', (double) 7);
        java.lang.Double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray55);
        int int64 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray55, (double) 0, (int) (short) 10, (double) 4);
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray55, (double) 13, 11, (double) 8);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray70 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray55, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 100.0, 4.0]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 3 + "'", int64 == 3);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test11389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11389");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f);
        double[] doubleArray12 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray12);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray12, (double) (byte) 10);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray12, (double) 0L, 0);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray12);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray6, doubleArray12);
        double[] doubleArray27 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray27);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray12, doubleArray27);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray27, 0, (int) (short) -1);
        double[] doubleArray37 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray37);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.add(doubleArray37, (double) (byte) 10);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.add(doubleArray37, 0.0d);
        int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray37, (double) (-1), (int) (short) 10, (double) (-1.0f));
        double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray37, 0);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray27, doubleArray48);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray27);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test11390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11390");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((float) (short) 100, (float) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.append((short) 1, (short) (byte) -1);
        java.lang.Boolean boolean10 = equalsBuilder3.build();
        boolean boolean11 = equalsBuilder3.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder3.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder14.append((byte) 10, (byte) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + false + "'", boolean10, false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder17);
    }

    @Test
    public void test11391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11391");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.lang.Boolean[][] booleanArray33 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray40 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray47 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray54 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray61 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray62 = new java.lang.Boolean[][] { booleanArray40, booleanArray47, booleanArray54, booleanArray61 };
        java.lang.Boolean[][] booleanArray63 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray33, booleanArray62);
        java.util.Map<java.lang.Object, java.lang.Object> objMap64 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray33);
        int[] intArray67 = new int[] { 1, (byte) 1 };
        int[] intArray70 = org.apache.commons.lang3.ArrayUtils.add(intArray67, (int) (short) 0, (int) '4');
        java.lang.Object obj71 = objMap31.getOrDefault((java.lang.Object) booleanArray33, (java.lang.Object) intArray70);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray70, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray70);
        int int76 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray70, 10);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertNotNull(objMap64);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1, 1]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[1, 1, 52]");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
    }

    @Test
    public void test11392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11392");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean2 = objEntryList0.remove((java.lang.Object) byteArray1);
        boolean[] booleanArray7 = new boolean[] { false, false, false, false };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray7);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray7, false);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray7);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray7, true, 0);
        boolean boolean15 = objEntryList0.contains((java.lang.Object) int14);
        java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        java.lang.reflect.Type[] typeArray17 = objEntryList0.toArray((java.lang.reflect.Type[]) wildcardClassArray16);
        java.lang.reflect.Type[] typeArray20 = org.apache.commons.lang3.ArrayUtils.subarray(typeArray17, (int) (short) -1, (int) (short) 100);
        java.util.Map<java.lang.Object, java.lang.Object> objMap21 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) typeArray17);
        double[] doubleArray25 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, (double) (byte) 10);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray25, (double) 0L, 0);
        double[] doubleArray35 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray35);
        double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.add(doubleArray35, (double) (byte) 10);
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray35, (double) 0L, 0);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray35);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray35, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray25, doubleArray35);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray35, 1.0d, (int) (byte) 0);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.add(doubleArray35, (double) (byte) 1);
        java.lang.Short[] shortArray53 = new java.lang.Short[] { (short) 1 };
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray53);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray53);
        short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray53, (short) (byte) 100);
        short[] shortArray58 = new short[] {};
        java.lang.Short[] shortArray59 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray58);
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray57, shortArray58);
        int int63 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray58, (short) (byte) 10, (int) (byte) 10);
        java.lang.Short[] shortArray65 = new java.lang.Short[] { (short) 1 };
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray65);
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray66, (short) 10);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.add(shortArray66, 1, (short) (byte) -1);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray66);
        int int75 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray66, (short) 10, (int) (short) 10);
        short[] shortArray76 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray58, shortArray66);
        java.lang.Object obj77 = objMap21.getOrDefault((java.lang.Object) (byte) 1, (java.lang.Object) shortArray76);
        java.lang.Short[] shortArray78 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray76);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray16);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertNotNull(objMap21);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 10.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[1]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[1]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[1]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[1, -1]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[1]");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(shortArray78);
    }

    @Test
    public void test11393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11393");
        java.lang.Byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray0);
        byte[] byteArray2 = null;
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray1, byteArray2);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray1, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray10 = new double[] {};
        double[] doubleArray14 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray14);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, (double) (byte) 10);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, (double) 0L, 0);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray14);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder6.append(doubleArray10, doubleArray14);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray30 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray30);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.add(doubleArray30, (double) (byte) 10);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray33, (double) 10.0f);
        double[] doubleArray39 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray39);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.add(doubleArray39, (double) (byte) 10);
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 0L, 0);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray39);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray39, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray33, doubleArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder25.append(doubleArray26, doubleArray39);
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray52);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.add(byteArray54, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder51.append(byteArray52, byteArray54);
        byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray52);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray58);
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray1, byteArray58);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.add(byteArray60, (byte) 0);
        byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray62, (byte) -1);
        byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.add(byteArray62, (byte) 100);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0, 100]");
    }

    @Test
    public void test11394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11394");
        int[] intArray0 = new int[] {};
        int[] intArray3 = org.apache.commons.lang3.ArrayUtils.add(intArray0, 0, 100);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray3);
        int[] intArray5 = null;
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.addAll(intArray3, intArray5);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.remove(intArray6, 0);
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray8, 13);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[100]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[]");
    }

    @Test
    public void test11395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11395");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.String[] strArray4 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray5 = org.apache.commons.lang3.ArrayUtils.addAll(strArray0, strArray4);
        java.lang.String[] strArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray0);
        java.lang.String[] strArray7 = org.apache.commons.lang3.ArrayUtils.toArray(strArray6);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY;
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray8, true);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray8, false);
        java.util.Map<java.lang.Object, java.lang.Object> objMap13 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray8);
        java.util.Collection<java.lang.Object> objCollection14 = objMap13.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet15 = objMap13.entrySet();
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) strArray6, (java.lang.Object) objEntrySet15);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[]");
        org.junit.Assert.assertNotNull(objMap13);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNotNull(objEntrySet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test11396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11396");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        float[] floatArray15 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(floatArray15, (float) 0);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.add(floatArray15, 10.0f);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray3, floatArray15);
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray22);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray23, (float) (short) -1);
        boolean[] booleanArray30 = new boolean[] { false, false, false, false };
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray30);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray30, false);
        java.lang.Boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray30);
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray30);
        java.lang.Boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray30);
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray36);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray36, true);
        boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray39, (int) (short) 0, 100);
        boolean[] booleanArray47 = new boolean[] { false, false, false, false };
        boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray47);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray47, false);
        java.lang.Boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray47);
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray47);
        java.lang.Boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray47);
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray53);
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray53, true);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray56);
        boolean[] booleanArray62 = new boolean[] { false, false, false, false };
        boolean[] booleanArray63 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray62);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray62, false);
        java.lang.Boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray62);
        boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray62);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray62);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray62);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray56, booleanArray62);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray62);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray39, booleanArray62);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray39, false);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) floatArray25, (java.lang.Object) false);
        float[] floatArray82 = new float[] { 10.0f, 100, (short) -1, (short) 0, 100L, (short) 10 };
        float[] floatArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray82);
        boolean boolean84 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray25, floatArray83);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray83);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray83);
        int int89 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray83, (float) 100, 0);
        float[] floatArray90 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray83);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[1.0]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray82), "[10.0, 100.0, -1.0, 0.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray83), "[10.0, 100.0, -1.0, 0.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNotNull(floatArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray90), "[10.0, 100.0, -1.0, 0.0, 100.0, 10.0]");
    }

    @Test
    public void test11397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11397");
        float[] floatArray0 = null;
        float[] floatArray3 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray4 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray3);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(floatArray3, (float) 0);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.add(floatArray3, 10.0f);
        java.lang.Float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray3);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.add(floatArray3, (int) (byte) 0, (float) 100);
        float[] floatArray16 = new float[] { (short) 100, 0, 10 };
        float[] floatArray19 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray19);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(floatArray19, (float) 0);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.add(floatArray19, 10.0f);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray16, floatArray19);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray19);
        float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray12, floatArray19);
        float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.remove(floatArray12, 2);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray0, floatArray29);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[100.0, -1.0, 1.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test11398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11398");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (short) 0);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray10);
        long[] longArray17 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.clone(longArray17);
        java.lang.Long[] longArray19 = org.apache.commons.lang3.ArrayUtils.toObject(longArray18);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.clone(longArray18);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray20, (long) (short) 0);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.addAll(longArray11, longArray20);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.subarray(longArray11, (int) (short) -1, (int) '4');
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray11, (long) 10, (int) (short) 0);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray11);
        java.lang.Long[] longArray31 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray31);
        long[] longArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray31);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray33);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray33);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray36);
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray36);
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.subarray(longArray38, (int) (short) -1, (int) '#');
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray38);
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.add(longArray42, (long) 4);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray35, longArray44);
        long[] longArray46 = org.apache.commons.lang3.ArrayUtils.addAll(longArray11, longArray35);
        long[] longArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray46);
        long[] longArray49 = org.apache.commons.lang3.ArrayUtils.add(longArray46, 100L);
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.remove(longArray49, 0);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[4]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1, 0, 100]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[100, 10, 10, 1, 0, 100]");
    }

    @Test
    public void test11399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11399");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) 0);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, 10.0f);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) (-1));
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray2);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray2);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray2);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray12, (float) 6);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray12);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray12, (float) (byte) 0);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[-1.0, 1.0]");
    }

    @Test
    public void test11400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11400");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray42, longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder19.append(longArray26, longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder19.append((-1), (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder19.append('#', '#');
        boolean[] booleanArray64 = new boolean[] { false, false, false, false };
        boolean[] booleanArray65 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray64);
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray65);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray66);
        int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray66, false);
        boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray66, (int) ' ', 0);
        boolean[] booleanArray77 = new boolean[] { false, false, false, false };
        boolean[] booleanArray78 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray77);
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray77, false);
        java.lang.Boolean[] booleanArray81 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray77);
        boolean[] booleanArray82 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray77);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray82);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray82);
        boolean[] booleanArray85 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray82);
        boolean[] booleanArray87 = org.apache.commons.lang3.ArrayUtils.add(booleanArray82, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder19.append(booleanArray72, booleanArray87);
        int int91 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray72, false, (int) (short) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 3 + "'", int69 == 3);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[]");
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray77), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertNotNull(booleanArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray82), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray85), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray87), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
    }

    @Test
    public void test11401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11401");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        double[] doubleArray15 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray9, (java.lang.Object) doubleArray15);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray15, 3, 1);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 8, (double) 1);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
    }

    @Test
    public void test11402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11402");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        int[] intArray14 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.clone(intArray14);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.add(intArray14, (int) 'a');
        int[] intArray22 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.clone(intArray22);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray23);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray23);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray17);
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray17);
        int[] intArray32 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.clone(intArray32);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray32);
        int[] intArray35 = org.apache.commons.lang3.ArrayUtils.addAll(intArray17, intArray32);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray32, (int) ' ');
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray32);
        boolean boolean40 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray9, (java.lang.Object) intArray38, true);
        java.lang.Character[] charArray46 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray46);
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray46, 'a');
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.clone(charArray49);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.contains(charArray50, 'a');
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray50, '#', (int) (short) 0);
        java.lang.Character[] charArray56 = org.apache.commons.lang3.ArrayUtils.toObject(charArray50);
        char[] charArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray50);
        char[] charArray58 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray50);
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.add(charArray50, '4');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, -1, -1, 0, 97, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), " 44a44## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), " 44a44## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[ , 4, 4, a, 4, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4## a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4## a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4, #, #,  , a, 4]");
    }

    @Test
    public void test11403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11403");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((long) (short) 10, (long) '#');
        boolean boolean9 = equalsBuilder5.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder5.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append(true, false);
        java.lang.Object[] objArray16 = null;
        char[] charArray18 = new char[] { 'a' };
        java.lang.Character[] charArray19 = org.apache.commons.lang3.ArrayUtils.toObject(charArray18);
        java.lang.Character[] charArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray19);
        float[] floatArray24 = new float[] { (short) 100, 0, 10 };
        float[] floatArray27 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray27);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(floatArray27, (float) 0);
        float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.add(floatArray27, 10.0f);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray24, floatArray27);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray27);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(floatArray27, (float) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray27);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) charArray20, (java.lang.Object) floatArray27);
        java.lang.Character[] charArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray20);
        java.lang.Long[] longArray46 = new java.lang.Long[] { 100L, 100L, 0L, 10L, 1L, (-1L) };
        java.lang.Long[] longArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray46);
        java.lang.Long[] longArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray47);
        float[] floatArray51 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray51);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.contains(floatArray51, (float) 0);
        float[] floatArray56 = org.apache.commons.lang3.ArrayUtils.add(floatArray51, 10.0f);
        java.lang.Float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray51);
        java.lang.Float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray57);
        boolean boolean59 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray47, (java.lang.Object) floatArray57);
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) charArray39, (java.lang.Object) longArray47, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder15.append(objArray16, (java.lang.Object[]) longArray47);
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray47, (long) 13);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[100, 100, 0, 10, 1, -1]");
    }

    @Test
    public void test11404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11404");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray8, (short) 0);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray10, (int) ' ', 0);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray13);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray13, (short) 10);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray13);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray13, (short) (byte) 0, (int) (short) 0);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray13, (short) 10);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
    }

    @Test
    public void test11405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11405");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray4);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
    }

    @Test
    public void test11406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11406");
        int[] intArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int[] intArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray0);
        boolean boolean2 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray1);
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray1);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test11407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11407");
        java.lang.Float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray0);
        float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray1, (float) 'a');
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) floatArray1);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray1, (float) 11);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray6);
        org.junit.Assert.assertNotNull(floatArray0);
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test11408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11408");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        objMap31.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = objMap31.entrySet();
        objMap31.clear();
        java.util.Set<java.lang.Object> objSet36 = objMap31.keySet();
        boolean[] booleanArray41 = new boolean[] { false, false, false, false };
        boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray41);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray41, false);
        java.lang.Boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray41);
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray41);
        java.lang.Boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray41);
        boolean[] booleanArray52 = new boolean[] { false, false, false, false };
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray52);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray52, false);
        java.lang.Boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray52);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray52);
        java.lang.Boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray52);
        boolean[] booleanArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray58);
        boolean[] booleanArray64 = new boolean[] { false, false, false, false };
        boolean[] booleanArray65 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray64);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray64, false);
        java.lang.Boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray64);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray59, booleanArray64);
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) booleanArray47, (java.lang.Object) booleanArray64);
        java.lang.Object obj71 = objMap31.get((java.lang.Object) booleanArray64);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray64, false);
        int int75 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray64, true);
        boolean[] booleanArray77 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray64, 0);
        boolean[] booleanArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray64);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray77), "[false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, false, false, false]");
    }

    @Test
    public void test11409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11409");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.add(shortArray5, (short) 1);
        java.lang.Short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(shortArray10, (short) (byte) -1);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray10, (short) (byte) -1);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray10);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1, 1]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 1]");
    }

    @Test
    public void test11410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11410");
        java.lang.Boolean[][] booleanArray1 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray15 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray22 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray29 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray30 = new java.lang.Boolean[][] { booleanArray8, booleanArray15, booleanArray22, booleanArray29 };
        java.lang.Boolean[][] booleanArray31 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray1, booleanArray30);
        java.util.Map<java.lang.Object, java.lang.Object> objMap32 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = objMap32.entrySet();
        objMap32.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = objMap32.entrySet();
        objMap32.clear();
        java.util.Set<java.lang.Object> objSet37 = objMap32.keySet();
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) "{32,100,10,10,1}", (java.lang.Object) objMap32);
        objMap32.clear();
        java.util.Set<java.lang.Object> objSet40 = objMap32.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = objMap32.entrySet();
        org.junit.Assert.assertNotNull(booleanArray1);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(objMap32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNotNull(objEntrySet41);
    }

    @Test
    public void test11411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11411");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) -1, (int) (byte) -1);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) 2);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray3, (double) 1L);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray16);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray17, 1);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray17, (double) 10L);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0, 2.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test11412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11412");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f);
        double[] doubleArray12 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray12);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray12, (double) (byte) 10);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray12, (double) 0L, 0);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray12);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray6, doubleArray12);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray23, 0.0d, 0, (double) '#');
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test11413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11413");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) -1, (int) (byte) -1);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) 2);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, 0.0d);
        double[] doubleArray20 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray20);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.add(doubleArray20, (double) (byte) 10);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) 0L, 0);
        double[] doubleArray30 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray30);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.add(doubleArray30, (double) (byte) 10);
        int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray30, (double) 0L, 0);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray30);
        int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray30, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray20, doubleArray30);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray20, (double) 100);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray16, doubleArray20);
        int int47 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray16, (double) 4, (int) (byte) 10);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0, 2.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0, 2.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    }

    @Test
    public void test11414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11414");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 1, 10, 7, 0 };
        java.lang.Integer[] intArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray5, (int) (short) 10);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[1, 10, 7, 0]");
    }

    @Test
    public void test11415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11415");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray4, (java.lang.Object) ' ');
        java.lang.Object obj7 = null;
        java.lang.Object[] objArray8 = org.apache.commons.lang3.ArrayUtils.add((java.lang.Object[]) doubleArray4, obj7);
        java.lang.Object obj9 = null;
        java.lang.Object[] objArray10 = org.apache.commons.lang3.ArrayUtils.removeElement((java.lang.Object[]) doubleArray4, obj9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4);
        double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4, (double) (byte) 1);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray13);
        java.lang.Double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray14);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray15, (double) (-1L));
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray15, (double) 6);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0]");
    }

    @Test
    public void test11416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11416");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        java.lang.Short[] shortArray10 = new java.lang.Short[] { (short) 1 };
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray10);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10, (short) (byte) 100);
        short[] shortArray15 = new short[] {};
        java.lang.Short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray15);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray14, shortArray15);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray8, shortArray15);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.add(shortArray18, (short) (byte) 10);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.clone(shortArray20);
        java.lang.Short[] shortArray23 = new java.lang.Short[] { (short) 1 };
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray23);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray23);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray23, (short) (byte) 100);
        short[] shortArray28 = new short[] {};
        java.lang.Short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray28);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray27, shortArray28);
        short[] shortArray31 = new short[] {};
        java.lang.Short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray31);
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray30, shortArray31);
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.add(shortArray31, (short) -1);
        java.lang.Short[] shortArray37 = new java.lang.Short[] { (short) 1 };
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray37);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray37);
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray37, (short) (byte) 100);
        short[] shortArray42 = new short[] {};
        java.lang.Short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray42);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray41, shortArray42);
        java.lang.Short[] shortArray46 = new java.lang.Short[] { (short) 1 };
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray46);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray46);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray46, (short) (byte) 100);
        short[] shortArray51 = new short[] {};
        java.lang.Short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray51);
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray50, shortArray51);
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray44, shortArray51);
        short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.add(shortArray54, (short) (byte) 10);
        short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray31, shortArray54);
        java.lang.Short[] shortArray59 = new java.lang.Short[] { (short) 1 };
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray59);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray59);
        short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray59, (short) (byte) 100);
        short[] shortArray64 = new short[] {};
        java.lang.Short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray64);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray63, shortArray64);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray66, (short) 0);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray66, (short) (byte) 10);
        int int72 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray66, (short) -1);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray31, shortArray66);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray66, (short) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray75);
        short[] shortArray78 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray75, (short) 10);
        java.lang.Short[] shortArray80 = new java.lang.Short[] { (short) 1 };
        short[] shortArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray80);
        short[] shortArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray80, (short) 10);
        int int85 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray83, (short) (byte) 1);
        short[] shortArray86 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray78, shortArray83);
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray20, shortArray86);
        short[] shortArray89 = org.apache.commons.lang3.ArrayUtils.add(shortArray20, (short) 0);
        short[] shortArray91 = org.apache.commons.lang3.ArrayUtils.remove(shortArray20, (int) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[1]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[1]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[1]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[-1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[1]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[1]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[1]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[1]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[1]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[1]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[1]");
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[1]");
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[1]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[1]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[1]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[1]");
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[1]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray81), "[1]");
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[1]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[1, 1]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(shortArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray89), "[1, 10, 0]");
        org.junit.Assert.assertNotNull(shortArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray91), "[10]");
    }

    @Test
    public void test11417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11417");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0.0d);
        char[] charArray10 = new char[] { 'a' };
        java.lang.Character[] charArray11 = org.apache.commons.lang3.ArrayUtils.toObject(charArray10);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) 0.0d, (java.lang.Object) charArray10);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray10, 'a');
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.clone(charArray10);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray10, ' ', 9);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray20 = org.apache.commons.lang3.ArrayUtils.remove(charArray10, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 4, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test11418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11418");
        int[] intArray0 = null;
        int[] intArray2 = org.apache.commons.lang3.ArrayUtils.add(intArray0, (int) (short) -1);
        int[] intArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray2, 6);
        int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray2, (int) (short) 10);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray2, (-1));
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[-1]");
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test11419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11419");
        java.lang.Float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray0);
        boolean boolean2 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) floatArray1);
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) floatArray1);
        float[] floatArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray1);
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray4, (float) (short) 0, (int) (short) 1);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray4, (float) 10, (int) (byte) 10);
        org.junit.Assert.assertNotNull(floatArray0);
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test11420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11420");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        double[] doubleArray36 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray36);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (double) (byte) 10);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray39, (double) 10.0f);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 1L);
        java.lang.Object obj44 = objMap31.get((java.lang.Object) 1L);
        java.lang.Boolean[][] booleanArray45 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray52 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray59 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray66 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray73 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray74 = new java.lang.Boolean[][] { booleanArray52, booleanArray59, booleanArray66, booleanArray73 };
        java.lang.Boolean[][] booleanArray75 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray45, booleanArray74);
        java.util.Map<java.lang.Object, java.lang.Object> objMap76 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray45);
        java.lang.Short[] shortArray79 = new java.lang.Short[] { (short) 1 };
        short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray79);
        short[] shortArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray79, (short) 10);
        java.lang.Object obj83 = objMap76.replace((java.lang.Object) 2, (java.lang.Object) shortArray82);
        objMap76.clear();
        java.util.Collection<java.lang.Object> objCollection85 = objMap76.values();
        objMap31.putAll(objMap76);
        objMap31.clear();
        java.util.Set<java.lang.Object> objSet88 = objMap31.keySet();
        int int89 = objMap31.size();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertNotNull(objMap76);
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray80), "[1]");
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[1]");
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(objCollection85);
        org.junit.Assert.assertNotNull(objSet88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
    }

    @Test
    public void test11421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11421");
        byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray0);
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.contains(byteArray0, (byte) 10);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.add(byteArray0, (byte) 100);
        java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray5);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.add(byteArray5, (byte) 1);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[100, 1]");
    }

    @Test
    public void test11422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11422");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        int[] intArray14 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.clone(intArray14);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.add(intArray14, (int) 'a');
        int[] intArray22 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.clone(intArray22);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray23);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray23);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray17);
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray17);
        int[] intArray32 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.clone(intArray32);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray32);
        int[] intArray35 = org.apache.commons.lang3.ArrayUtils.addAll(intArray17, intArray32);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray32, (int) ' ');
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray32);
        boolean boolean40 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray9, (java.lang.Object) intArray38, true);
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) '#', 10);
        char[] charArray45 = new char[] { 'a' };
        java.lang.Character[] charArray46 = org.apache.commons.lang3.ArrayUtils.toObject(charArray45);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray45);
        java.lang.Character[] charArray53 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray53, 'a');
        int int58 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray55, 'a', (-1));
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray45, charArray55);
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.clone(charArray55);
        char[] charArray62 = org.apache.commons.lang3.ArrayUtils.add(charArray60, ' ');
        char[] charArray63 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray62);
        char[] charArray65 = org.apache.commons.lang3.ArrayUtils.add(charArray62, '4');
        org.apache.commons.lang3.ArrayUtils.reverse(charArray62);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray62);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray70 = org.apache.commons.lang3.ArrayUtils.add(charArray62, 13, '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 13, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, -1, -1, 0, 97, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), " # a a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), " # a a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[ , #,  , a,  , a]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), " 44a4a a # ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), " 44a4a a # ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[ , 4, 4, a, 4, a,  , a,  , #,  ]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a a # 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a a # 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a,  , a,  , #,  , 4]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test11423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11423");
        int[] intArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int[] intArray2 = org.apache.commons.lang3.ArrayUtils.add(intArray0, 2);
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.subarray(intArray0, (int) (short) 1, 4);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray5);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray5, 4);
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray8, 1);
        int[] intArray11 = org.apache.commons.lang3.ArrayUtils.clone(intArray10);
        java.lang.Integer[] intArray12 = org.apache.commons.lang3.ArrayUtils.toObject(intArray11);
        java.lang.Integer[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray12);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList14 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor15 = objEntryList14.iterator();
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.String[] strArray20 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray21 = org.apache.commons.lang3.ArrayUtils.addAll(strArray16, strArray20);
        java.lang.Comparable<java.lang.String>[] strComparableArray22 = objEntryList14.toArray((java.lang.Comparable<java.lang.String>[]) strArray16);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream23 = objEntryList14.parallelStream();
        int int24 = objEntryList14.size();
        java.util.Map.Entry<java.lang.Object, java.lang.Object> objEntry25 = null;
        boolean boolean26 = objEntryList14.add(objEntry25);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.add(byteArray27, (int) (byte) 0, (byte) 100);
        java.lang.Byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray27);
        java.io.Serializable[] serializableArray32 = org.apache.commons.lang3.ArrayUtils.clone((java.io.Serializable[]) byteArray31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((float) (short) 100, (float) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder36.append((short) 1, (short) (byte) -1);
        long[] longArray48 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray49 = org.apache.commons.lang3.ArrayUtils.clone(longArray48);
        java.lang.Long[] longArray50 = org.apache.commons.lang3.ArrayUtils.toObject(longArray49);
        long[] longArray56 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray57 = org.apache.commons.lang3.ArrayUtils.clone(longArray56);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray49, longArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder59.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray68 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray69 = org.apache.commons.lang3.ArrayUtils.clone(longArray68);
        long[] longArray75 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray76 = org.apache.commons.lang3.ArrayUtils.clone(longArray75);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder62.append(longArray69, longArray75);
        long[] longArray80 = org.apache.commons.lang3.ArrayUtils.add(longArray69, (int) (byte) 0, (long) 2);
        long[] longArray81 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder42.append(longArray57, longArray81);
        int int84 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray31, (java.lang.Object) equalsBuilder82, (int) (byte) 0);
        byte[] byteArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray31, (byte) 0);
        byte[] byteArray88 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray31, (byte) 10);
        boolean boolean89 = objEntryList14.contains((java.lang.Object) byteArray31);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) intArray13, (java.lang.Object[]) byteArray31);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[2]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertNotNull(objEntryItor15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strComparableArray22);
        org.junit.Assert.assertNotNull(objEntryStream23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(serializableArray32);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray69), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[2, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[]");
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test11424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11424");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        float[] floatArray15 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(floatArray15, (float) 0);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.add(floatArray15, 10.0f);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray3, floatArray15);
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) floatArray22);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray22, (float) (short) 100);
        java.lang.Float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray22);
        java.lang.Double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray27);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) floatArray26, (java.lang.Object) doubleArray27);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray27, (double) 3);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
    }

    @Test
    public void test11425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11425");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray6);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray6);
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray6, (float) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray6);
        java.lang.String str21 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) floatArray6, "{}");
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray6, (float) 10);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray6);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray24, 0.0f);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.remove(floatArray26, 1);
        float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray28, (float) 0);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{1.0,-1.0}" + "'", str21, "{1.0,-1.0}");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[1.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[1.0]");
    }

    @Test
    public void test11426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11426");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, 0);
        double[] doubleArray13 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray13);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.add(doubleArray13, (double) (byte) 10);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray13, (double) 0L, 0);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray13);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray13, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray13);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray24);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray24);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test11427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11427");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray4);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray7);
        java.lang.Integer[] intArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        java.lang.Object[] objArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) intArray11);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[0, -1, -1, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[0, -1, -1, 100]");
    }

    @Test
    public void test11428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11428");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (short) 0);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray10);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.clone(longArray11);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.add(longArray11, (int) (short) 1, (long) (short) 1);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray15);
        double[] doubleArray20 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray20);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.add(doubleArray20, (double) (byte) 10);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) 0L, 0);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray20);
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.add(doubleArray20, (double) 4);
        java.lang.String[] strArray33 = null;
        boolean boolean34 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray16, (java.lang.Object) doubleArray20, strArray33);
        int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray16, (long) '4');
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[32, 1, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 1, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 100.0, 4.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test11429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11429");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray7);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray8);
        java.lang.Character[] charArray15 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, ' ');
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray17);
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.addAll(charArray8, charArray17);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.clone(charArray17);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray17, ' ');
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray17, '#');
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(charArray17, 'a');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4a44 4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4a44 4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, a, 4, 4,  , 4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 4 + "'", int23 == 4);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test11430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11430");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray42, longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder19.append(longArray26, longArray50);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray50, (long) (short) 0, 2);
        java.lang.Long[] longArray57 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        long[] longArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray57);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray57);
        int int60 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) longArray57);
        java.lang.Long[] longArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray57);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 5 + "'", int60 == 5);
        org.junit.Assert.assertNotNull(longArray61);
    }

    @Test
    public void test11431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11431");
        boolean[] booleanArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY;
        int int3 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray0, false, 10);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray0);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray0, 2, (int) 'a');
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray0), "[]");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
    }

    @Test
    public void test11432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11432");
        short[] shortArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY;
        java.lang.Short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray0);
        java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray8 = new short[] { (byte) 0, (byte) 1, (short) -1, (byte) -1 };
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray8);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 10);
        java.lang.Short[] shortArray13 = new java.lang.Short[] { (short) 1 };
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray13);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray13);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray13, (short) (byte) 100);
        short[] shortArray18 = new short[] {};
        java.lang.Short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray18);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray17, shortArray18);
        java.lang.Short[] shortArray22 = new java.lang.Short[] { (short) 1 };
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray22);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22, (short) (byte) 100);
        short[] shortArray27 = new short[] {};
        java.lang.Short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray27);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray26, shortArray27);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray20, shortArray27);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.add(shortArray30, (short) (byte) 10);
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray30, 0, 1);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray11, shortArray30);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.remove(shortArray30, (int) (byte) 0);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray3, shortArray38);
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray3, (short) 10);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray0), "[]");
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[1]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[1]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[0, 1, -1, -1, 1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[]");
    }

    @Test
    public void test11433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11433");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray7, 'a', (-1));
        java.lang.Character[] charArray16 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16, ' ');
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16, '#');
        java.lang.Character[] charArray26 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray26);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray26, 'a');
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray20, charArray29);
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.addAll(charArray7, charArray20);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.clone(charArray20);
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray20, ' ');
        int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray20, 'a');
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray20, 'a');
        java.lang.Character[] charArray44 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray44, 'a');
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.add(charArray46, '#');
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.add(charArray48, 4, '#');
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.subarray(charArray51, 100, (int) 'a');
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.addAll(charArray20, charArray51);
        char[] charArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray55);
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray56, 'a', (int) (short) 0);
        java.lang.Character[] charArray60 = org.apache.commons.lang3.ArrayUtils.toObject(charArray56);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a a # 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a a # 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a,  , a,  , #,  , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 3 + "'", int36 == 3);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " 444");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " 444");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ , 4, 4, 4]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a a ###");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a a ###");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a,  , a,  , #, #, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), " 44a4a a ###");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), " 44a4a a ###");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[ , 4, 4, a, 4, a,  , a,  , #, #, #]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), " 44a4a a ###");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), " 44a4a a ###");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[ , 4, 4, a, 4, a,  , a,  , #, #, #]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 3 + "'", int59 == 3);
        org.junit.Assert.assertNotNull(charArray60);
    }

    @Test
    public void test11434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11434");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean2 = objEntryList0.remove((java.lang.Object) byteArray1);
        byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) -1);
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) 10);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray6, (byte) -1);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
    }

    @Test
    public void test11435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11435");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append(true, true);
        java.lang.String str17 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) equalsBuilder15, "0");
        boolean[] booleanArray22 = new boolean[] { false, false, false, false };
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray22);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray22, false);
        java.lang.Boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray22);
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray22);
        java.lang.Boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray22);
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray28);
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray28, true);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray31, (int) (short) 0, 100);
        boolean[] booleanArray39 = new boolean[] { false, false, false, false };
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray39);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray39, false);
        java.lang.Boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray39);
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray39);
        java.lang.Boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray39);
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray45);
        boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray45, true);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray48);
        boolean[] booleanArray54 = new boolean[] { false, false, false, false };
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray54);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray54, false);
        java.lang.Boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray54);
        boolean[] booleanArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray54);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray54);
        boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray54);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray48, booleanArray54);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray54);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray31, booleanArray54);
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.add(booleanArray31, true);
        boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray66);
        boolean[] booleanArray72 = new boolean[] { false, false, false, false };
        boolean[] booleanArray73 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray72);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray72, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder15.append(booleanArray66, booleanArray72);
        boolean[] booleanArray77 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray72);
        int int80 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray77, false, (int) (short) 100);
        int int83 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray77, false, 5);
        boolean[] booleanArray84 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray77);
        boolean[] booleanArray85 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray77), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 3 + "'", int80 == 3);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 3 + "'", int83 == 3);
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray84), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray85), "[false, false, false, false]");
    }

    @Test
    public void test11436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11436");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray6, (-1L));
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray6);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[1, 10, 10, 100, 32]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[1, 10, 10, 100, 32]");
    }

    @Test
    public void test11437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11437");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        java.lang.Character[] charArray44 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray44, 'a');
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.add(charArray46, '#');
        boolean boolean49 = objMap31.equals((java.lang.Object) '#');
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet50 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList51 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor52 = objEntryList51.iterator();
        java.lang.String[] strArray53 = new java.lang.String[] {};
        java.lang.String[] strArray57 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray58 = org.apache.commons.lang3.ArrayUtils.addAll(strArray53, strArray57);
        java.lang.Comparable<java.lang.String>[] strComparableArray59 = objEntryList51.toArray((java.lang.Comparable<java.lang.String>[]) strArray53);
        java.lang.Object[] objArray60 = objEntryList51.toArray();
        boolean boolean61 = objEntrySet50.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList51);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList62 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor63 = objEntryList62.iterator();
        java.lang.String[] strArray64 = new java.lang.String[] {};
        java.lang.String[] strArray68 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray69 = org.apache.commons.lang3.ArrayUtils.addAll(strArray64, strArray68);
        java.lang.Comparable<java.lang.String>[] strComparableArray70 = objEntryList62.toArray((java.lang.Comparable<java.lang.String>[]) strArray64);
        java.lang.Object[] objArray71 = objEntryList62.toArray();
        int int72 = objEntryList62.size();
        java.lang.Object[] objArray73 = objEntryList62.toArray();
        boolean boolean74 = objEntryList51.remove((java.lang.Object) objArray73);
        java.util.Map.Entry<java.lang.Object, java.lang.Object> objEntry75 = null;
        boolean boolean76 = objEntryList51.add(objEntry75);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a,  , a,  , #, #]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objEntrySet50);
        org.junit.Assert.assertNotNull(objEntryItor52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strComparableArray59);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objEntryItor63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strComparableArray70);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test11438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11438");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f);
        double[] doubleArray12 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray12);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray12, (double) (byte) 10);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray12, (double) 0L, 0);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray12);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray6, doubleArray12);
        java.lang.Double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray12);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray12);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray25, (double) 9, 100.0d);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 3, (double) (byte) 1);
        double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray25, (int) (byte) 100, 100);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test11439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11439");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        java.lang.Character[] charArray10 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray10, ' ');
        java.lang.Character[] charArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray10);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray1, (java.lang.Object[]) charArray10);
        java.lang.Object[] objArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) shortArray1);
        int[] intArray20 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.clone(intArray20);
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.add(intArray20, (int) 'a');
        int[] intArray28 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.clone(intArray28);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray29);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray23, intArray29);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray23);
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray23);
        int[] intArray38 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.clone(intArray38);
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray38);
        int[] intArray41 = org.apache.commons.lang3.ArrayUtils.addAll(intArray23, intArray38);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray38, (int) ' ');
        int[] intArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray38);
        int[] intArray46 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray38, 1);
        int int48 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) shortArray1, (java.lang.Object) intArray46, (int) (byte) 1);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 10);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray50, (short) (byte) 100);
        java.lang.Short[] shortArray54 = new java.lang.Short[] { (short) 1 };
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray54);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray54);
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray54, (short) (byte) 100);
        short[] shortArray59 = new short[] {};
        java.lang.Short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray58, shortArray59);
        short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray61, (short) 0);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray63, (int) ' ', 0);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.add(shortArray63, (short) (byte) -1);
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray68, (short) 100);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray50, shortArray68);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray71);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[1]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, -1, -1, 0, 97, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[1]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[1]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[1]");
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[1]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[1, -1]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[1, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test11440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11440");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        double[] doubleArray36 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray36);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (double) (byte) 10);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray39, (double) 10.0f);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 1L);
        java.lang.Object obj44 = objMap31.get((java.lang.Object) 1L);
        java.lang.Long[] longArray51 = new java.lang.Long[] { 1L, 10L, 0L, (-1L), (-1L), (-1L) };
        long[] longArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray51, (long) (short) 10);
        java.lang.Long[] longArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray51);
        java.lang.Long[] longArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder56.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray65 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray66 = org.apache.commons.lang3.ArrayUtils.clone(longArray65);
        long[] longArray72 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray73 = org.apache.commons.lang3.ArrayUtils.clone(longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder59.append(longArray66, longArray72);
        long[] longArray77 = org.apache.commons.lang3.ArrayUtils.add(longArray66, (int) (byte) 0, (long) 2);
        long[] longArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray66);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray78);
        java.lang.Object obj80 = objMap31.put((java.lang.Object) longArray54, (java.lang.Object) boolean79);
        java.lang.Long[] longArray81 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray54);
        long[] longArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray81);
        int int85 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray82, 1L, (int) '#');
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[1, 10, 0, -1, -1, -1]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(longArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray77), "[2, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertNotNull(longArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray82), "[1, 10, 0, -1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
    }

    @Test
    public void test11441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11441");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 100, (byte) 0 };
        byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6);
        int int8 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) byteArray6);
        java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9);
        byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.remove(byteArray11, 1);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray13, (byte) -1, (int) (byte) 1);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.clone(byteArray13);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray17);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 6 + "'", int8 == 6);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1, -1, 10, 100, 0]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1, -1, 10, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test11442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11442");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList35 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Object[] objArray36 = objEntryList35.toArray();
        boolean boolean37 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList35);
        java.util.Map.Entry<java.lang.Object, java.lang.Object> objEntry38 = null;
        boolean boolean39 = objEntryList35.add(objEntry38);
        java.lang.Boolean[][] booleanArray40 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray47 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray54 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray61 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray68 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray69 = new java.lang.Boolean[][] { booleanArray47, booleanArray54, booleanArray61, booleanArray68 };
        java.lang.Boolean[][] booleanArray70 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray40, booleanArray69);
        java.util.Map<java.lang.Object, java.lang.Object> objMap71 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray40);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet72 = objMap71.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList73 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray74 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean75 = objEntryList73.remove((java.lang.Object) byteArray74);
        boolean boolean76 = objEntrySet72.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList73);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream77 = objEntrySet72.stream();
        int int78 = objEntrySet72.size();
        boolean boolean79 = objEntryList35.removeAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntrySet72);
        java.util.Map.Entry<java.lang.Object, java.lang.Object> objEntry80 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean81 = objEntrySet72.add(objEntry80);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertNotNull(objMap71);
        org.junit.Assert.assertNotNull(objEntrySet72);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objEntryStream77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test11443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11443");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.String[] strArray4 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray5 = org.apache.commons.lang3.ArrayUtils.addAll(strArray0, strArray4);
        java.lang.String[] strArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray0);
        java.lang.String[] strArray7 = org.apache.commons.lang3.ArrayUtils.toArray(strArray6);
        java.util.Map<java.lang.Object, java.lang.Object> objMap8 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) strArray7);
        double[] doubleArray12 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray12);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray13, (java.lang.Object) ' ');
        java.lang.Object obj16 = null;
        java.lang.Object[] objArray17 = org.apache.commons.lang3.ArrayUtils.add((java.lang.Object[]) doubleArray13, obj16);
        java.lang.Object obj18 = null;
        java.lang.Object[] objArray19 = org.apache.commons.lang3.ArrayUtils.removeElement((java.lang.Object[]) doubleArray13, obj18);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray13);
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray13, (double) (byte) 1);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray22);
        java.lang.Double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray23);
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray24);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray25);
        java.lang.Double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray25);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray25, 100.0d);
        byte[] byteArray33 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray33, (byte) 10, (int) (short) -1);
        java.lang.Byte[] byteArray37 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray33);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) byteArray37);
        byte[] byteArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray37);
        int int40 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray25, (java.lang.Object) byteArray37);
        byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray37);
        java.lang.Long[] longArray42 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray42);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray42, (long) (byte) 10);
        java.lang.Long[] longArray46 = org.apache.commons.lang3.ArrayUtils.toObject(longArray45);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray45, (long) (byte) 0, (int) (byte) 10);
        java.lang.Object obj50 = objMap8.replace((java.lang.Object) byteArray37, (java.lang.Object) (byte) 0);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(objMap8);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[10, 0, 0]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[10, 0, 0]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(obj50);
    }

    @Test
    public void test11444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11444");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray5);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.toObject(intArray5);
        java.lang.Integer[] intArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7, 100);
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7, 9);
        java.lang.Integer[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray13, 13);
        java.lang.Integer[] intArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray13);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray16);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, -1, -1, 100]");
    }

    @Test
    public void test11445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11445");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray4, (java.lang.Object) ' ');
        java.lang.Object obj7 = null;
        java.lang.Object[] objArray8 = org.apache.commons.lang3.ArrayUtils.add((java.lang.Object[]) doubleArray4, obj7);
        java.lang.Object obj9 = null;
        java.lang.Object[] objArray10 = org.apache.commons.lang3.ArrayUtils.removeElement((java.lang.Object[]) doubleArray4, obj9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4);
        double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4, (double) (byte) 1);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray13);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.add(doubleArray13, (int) (byte) 0, (double) 1);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.add(doubleArray13, (double) 100L);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray19, 2);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray21, (double) (short) 100, 1);
        boolean[] booleanArray29 = new boolean[] { false, false, false, false };
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray29);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray29, false);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.add(booleanArray29, true);
        double[] doubleArray40 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray40);
        boolean boolean42 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray34, (java.lang.Object) doubleArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray40);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray40);
        int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray44, (double) 10);
        double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray44);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.add(doubleArray44, 2, (double) (short) 0);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray21, doubleArray50);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray21);
        java.lang.Double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray21);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 3 + "'", int46 == 3);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0, 0.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 10.0, 100.0]");
    }

    @Test
    public void test11446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11446");
        double[] doubleArray5 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray5);
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray5);
        java.lang.String str8 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{0.0,10.0,10.0,-1.0,10.0}" + "'", str8, "{0.0,10.0,10.0,-1.0,10.0}");
    }

    @Test
    public void test11447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11447");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) -1);
        byte[] byteArray25 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray25, (byte) 10, (int) (short) -1);
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray25, (byte) 10);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray25, (byte) 1);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(byteArray25, (byte) 100);
        byte[] byteArray38 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray38, (byte) 10, (int) (short) -1);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray38);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) 1, (int) ' ');
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray25, byteArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean51 = equalsBuilder50.isEquals();
        java.lang.String[] strArray52 = new java.lang.String[] {};
        java.lang.String[] strArray56 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray57 = org.apache.commons.lang3.ArrayUtils.addAll(strArray52, strArray56);
        java.lang.String[] strArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray52);
        java.lang.Character[] charArray64 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray64, ' ');
        java.lang.Character[] charArray67 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder50.append((java.lang.Object[]) strArray52, (java.lang.Object[]) charArray67);
        java.lang.String str70 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) strArray52, "{32,100,10,10,1}");
        java.lang.String[] strArray72 = org.apache.commons.lang3.ArrayUtils.add(strArray52, "");
        boolean boolean73 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) byteArray25, strArray52);
        byte[] byteArray77 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int80 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray77, (byte) 10, (int) (short) -1);
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray77);
        int int84 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray77, (byte) 1, (int) ' ');
        byte[] byteArray91 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray91);
        int int94 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray91, (byte) 10);
        byte[] byteArray95 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray77, byteArray91);
        boolean boolean96 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray25, byteArray77);
        byte[] byteArray99 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray25, (int) ' ', 3);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0, 0, 10, 0, 0, 10]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "{}" + "'", str70, "{}");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 4 + "'", int94 == 4);
        org.junit.Assert.assertNotNull(byteArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray95), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(byteArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray99), "[]");
    }

    @Test
    public void test11448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11448");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        byte[] byteArray38 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray38, (byte) 10, (int) (short) -1);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray38);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) 1, (int) ' ');
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray52);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray52, (byte) 10);
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray38, byteArray52);
        boolean boolean57 = objEntrySet32.equals((java.lang.Object) byteArray38);
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray38, (int) '4', 7);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray60, (byte) 0);
        byte[] byteArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray62);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4 + "'", int55 == 4);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[]");
    }

    @Test
    public void test11449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11449");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.add(charArray7, '#');
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.subarray(charArray7, (int) (byte) -1, (int) '#');
        java.lang.Character[] charArray18 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray18);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray18, 'a');
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.clone(charArray21);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.addAll(charArray7, charArray21);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray21, 'a');
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.clone(charArray21);
        java.lang.Character[] charArray32 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray32, ' ');
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray32, '#');
        java.lang.Character[] charArray42 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray42);
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray42, 'a');
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray36, charArray45);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray45, 'a', (int) (byte) -1);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray21, charArray45);
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.remove(charArray21, 0);
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.add(charArray52, '#');
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray52);
        char[] charArray58 = org.apache.commons.lang3.ArrayUtils.subarray(charArray52, (int) (short) 1, 5);
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray52, ' ');
        char[] charArray62 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray60, ' ');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, #,  ]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, #,  , a]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "## a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "## a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, #,  , a, #]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, #,  , a]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "# a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "# a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#,  , a]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, #, a]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, #, a]");
    }

    @Test
    public void test11450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11450");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((long) (byte) 10, (long) (byte) 10);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean29 = equalsBuilder28.isEquals();
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.String[] strArray34 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray35 = org.apache.commons.lang3.ArrayUtils.addAll(strArray30, strArray34);
        java.lang.String[] strArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray30);
        java.lang.Character[] charArray42 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray42, ' ');
        java.lang.Character[] charArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder28.append((java.lang.Object[]) strArray30, (java.lang.Object[]) charArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder21.append((java.lang.Object[]) byteArray23, (java.lang.Object[]) strArray30);
        java.lang.Byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray23, (java.lang.Object) byteArray48, (int) (byte) 10);
        byte[] byteArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray48);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray51, (int) (short) -1, 100);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray51);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(byteArray51, (byte) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test11451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11451");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray4, false);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray10, false);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray10, true, 2);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray10, false);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.add(booleanArray19, 7, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false]");
    }

    @Test
    public void test11452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11452");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        java.lang.Boolean[][] booleanArray39 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray46 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray53 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray60 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray67 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray68 = new java.lang.Boolean[][] { booleanArray46, booleanArray53, booleanArray60, booleanArray67 };
        java.lang.Boolean[][] booleanArray69 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray39, booleanArray68);
        java.util.Map<java.lang.Object, java.lang.Object> objMap70 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray39);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet71 = objMap70.entrySet();
        java.util.Set<java.lang.Object> objSet72 = objMap70.keySet();
        objMap31.putAll(objMap70);
        java.util.Collection<java.lang.Object> objCollection74 = objMap31.values();
        java.util.Set<java.lang.Object> objSet75 = objMap31.keySet();
        java.util.Collection<java.lang.Object> objCollection76 = objMap31.values();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append((double) (byte) 1, (double) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((long) (short) 0, (long) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder80.append((float) (short) 10, (-1.0f));
        java.lang.Object obj87 = objMap31.remove((java.lang.Object) equalsBuilder80);
        objMap31.clear();
        objMap31.clear();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(objMap70);
        org.junit.Assert.assertNotNull(objEntrySet71);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertNotNull(objCollection74);
        org.junit.Assert.assertNotNull(objSet75);
        org.junit.Assert.assertNotNull(objCollection76);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNull(obj87);
    }

    @Test
    public void test11453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11453");
        double[] doubleArray5 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray5);
        double[] doubleArray10 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray10);
        double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.add(doubleArray10, (double) (byte) 10);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray10, 0.0d);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray5, doubleArray10);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray10, (double) 0.0f);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray10, (double) 7);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray10, (double) (short) 100, (double) 'a');
        java.lang.Double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray10);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray10, (double) (byte) 100);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 10.0, -1.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0]");
    }

    @Test
    public void test11454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11454");
        byte[] byteArray0 = null;
        byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray0);
        byte[] byteArray5 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray5, (byte) 10, (int) (short) -1);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray5, (byte) 10);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray0, byteArray5);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray5, (byte) 0, 3);
        byte[] byteArray15 = null;
        byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray15);
        byte[] byteArray20 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray20, (byte) 10, (int) (short) -1);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray20, (byte) 10);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray16, byteArray20);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray16, 100, 10);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray5, byteArray16);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray30);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test11455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11455");
        java.lang.Double[] doubleArray4 = new java.lang.Double[] { 1.0d, 0.0d, 0.0d, 1.0d };
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4, (double) '#');
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4);
        java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray7);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray7, 1);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray10, (double) 'a', (int) (byte) 10, (double) 1);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 0.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 0.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test11456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11456");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        java.lang.Boolean[][] booleanArray39 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray46 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray53 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray60 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray67 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray68 = new java.lang.Boolean[][] { booleanArray46, booleanArray53, booleanArray60, booleanArray67 };
        java.lang.Boolean[][] booleanArray69 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray39, booleanArray68);
        java.util.Map<java.lang.Object, java.lang.Object> objMap70 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray39);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet71 = objMap70.entrySet();
        java.util.Set<java.lang.Object> objSet72 = objMap70.keySet();
        objMap31.putAll(objMap70);
        boolean boolean74 = objMap70.isEmpty();
        objMap70.clear();
        java.lang.Character[] charArray81 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray81, 'a');
        char[] charArray85 = org.apache.commons.lang3.ArrayUtils.add(charArray83, '#');
        int int87 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray85, '#');
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.contains(charArray85, '#');
        char[] charArray91 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray85, 'a');
        java.lang.Object obj92 = objMap70.get((java.lang.Object) 'a');
        boolean boolean93 = objMap70.isEmpty();
        int int94 = objMap70.size();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(objMap70);
        org.junit.Assert.assertNotNull(objEntrySet71);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[a,  , a,  , #, #]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 5 + "'", int87 == 5);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), " a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), " a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[ , a,  , #, #]");
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
    }

    @Test
    public void test11457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11457");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        short[] shortArray9 = new short[] {};
        java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray9);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray8, shortArray9);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.add(shortArray9, (short) -1);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 1 };
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray15);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray15);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray15, (short) (byte) 100);
        short[] shortArray20 = new short[] {};
        java.lang.Short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray20);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray19, shortArray20);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray24);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24, (short) (byte) 100);
        short[] shortArray29 = new short[] {};
        java.lang.Short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray29);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray28, shortArray29);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray22, shortArray29);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.add(shortArray32, (short) (byte) 10);
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray9, shortArray32);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray32, (short) 100);
        int[] intArray42 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.clone(intArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray42);
        java.lang.Integer[] intArray45 = org.apache.commons.lang3.ArrayUtils.toObject(intArray42);
        int[] intArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray42);
        float[] floatArray50 = new float[] { 1L, 100L, 100 };
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray50, (float) (-1L), (int) (short) 100);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray50, (float) 'a', (int) (byte) 10);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) intArray42, (java.lang.Object) floatArray50);
        int[] intArray59 = org.apache.commons.lang3.ArrayUtils.add(intArray42, 4);
        int int60 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) intArray59);
        int[] intArray65 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray66 = org.apache.commons.lang3.ArrayUtils.clone(intArray65);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.contains(intArray65, (int) (byte) 1);
        int[] intArray73 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray74 = org.apache.commons.lang3.ArrayUtils.clone(intArray73);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray74);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.contains(intArray74, (int) (byte) -1);
        int[] intArray78 = org.apache.commons.lang3.ArrayUtils.addAll(intArray65, intArray74);
        int[] intArray79 = org.apache.commons.lang3.ArrayUtils.addAll(intArray59, intArray65);
        int[] intArray81 = org.apache.commons.lang3.ArrayUtils.add(intArray59, 0);
        int[] intArray83 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray59, 0);
        boolean boolean84 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 100, (java.lang.Object) 0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[-1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[1]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[1]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, -1, -1, 0, 4]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 5 + "'", int60 == 5);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, -1, -1, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, -1, -1, 0, 4, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, -1, -1, 0, 4, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, -1, -1, 4]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test11458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11458");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((int) (short) 1, (int) (byte) 0);
        float[] floatArray7 = new float[] { (short) 100, 0, 10 };
        float[] floatArray10 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(floatArray10, (float) 0);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.add(floatArray10, 10.0f);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray7, floatArray10);
        float[] floatArray19 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray19);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(floatArray19, (float) 0);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.add(floatArray19, 10.0f);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray7, floatArray19);
        java.lang.Float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray19);
        float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray26);
        float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray27, (float) (short) -1);
        float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.clone(floatArray29);
        float[] floatArray33 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray33);
        float[] floatArray37 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray37);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(floatArray37, (float) 0);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray33, floatArray37);
        float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray33);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray42, (float) 2, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder0.append(floatArray30, floatArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder46.appendSuper(false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[1.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[1.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder48);
    }

    @Test
    public void test11459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11459");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream35 = objEntrySet32.parallelStream();
        java.lang.Boolean[][] booleanArray36 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray43 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray50 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray57 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray64 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray65 = new java.lang.Boolean[][] { booleanArray43, booleanArray50, booleanArray57, booleanArray64 };
        java.lang.Boolean[][] booleanArray66 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray36, booleanArray65);
        java.util.Map<java.lang.Object, java.lang.Object> objMap67 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray36);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = objMap67.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList69 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean71 = objEntryList69.remove((java.lang.Object) byteArray70);
        boolean boolean72 = objEntrySet68.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList69);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor73 = objEntrySet68.iterator();
        java.lang.Object[] objArray74 = objEntrySet68.toArray();
        boolean boolean76 = objEntrySet68.remove((java.lang.Object) '4');
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList77 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor78 = objEntryList77.iterator();
        java.lang.String[] strArray79 = new java.lang.String[] {};
        java.lang.String[] strArray83 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray84 = org.apache.commons.lang3.ArrayUtils.addAll(strArray79, strArray83);
        java.lang.Comparable<java.lang.String>[] strComparableArray85 = objEntryList77.toArray((java.lang.Comparable<java.lang.String>[]) strArray79);
        boolean boolean86 = objEntrySet68.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList77);
        boolean boolean87 = objEntrySet32.removeAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntrySet68);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream88 = objEntrySet32.parallelStream();
        objEntrySet32.clear();
        java.util.Map.Entry<java.lang.Object, java.lang.Object> objEntry90 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean91 = objEntrySet32.add(objEntry90);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEntryStream35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNotNull(objMap67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objEntryItor73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objEntryItor78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strComparableArray85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(objEntryStream88);
    }

    @Test
    public void test11460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11460");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (short) 0);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray10);
        long[] longArray17 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.clone(longArray17);
        java.lang.Long[] longArray19 = org.apache.commons.lang3.ArrayUtils.toObject(longArray18);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.clone(longArray18);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray20, (long) (short) 0);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.addAll(longArray11, longArray20);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.subarray(longArray11, (int) (short) -1, (int) '4');
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray11, (long) 10, (int) (short) 0);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray11);
        long[] longArray33 = org.apache.commons.lang3.ArrayUtils.subarray(longArray11, (int) '4', (int) '#');
        java.lang.Long[] longArray34 = org.apache.commons.lang3.ArrayUtils.toObject(longArray11);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray37 = org.apache.commons.lang3.ArrayUtils.remove(longArray35, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[32, 100, 10, 10, 1, 0]");
    }

    @Test
    public void test11461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11461");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder0.appendSuper(false);
        java.lang.Boolean boolean18 = equalsBuilder17.build();
        java.lang.Character[] charArray24 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray24, ' ');
        java.lang.Character[] charArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray24);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray27);
        java.lang.Character[] charArray29 = org.apache.commons.lang3.ArrayUtils.toObject(charArray28);
        java.lang.Character[] charArray35 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray35);
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray35, 'a');
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.clone(charArray38);
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray38, ' ');
        char[] charArray42 = org.apache.commons.lang3.ArrayUtils.addAll(charArray28, charArray38);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray28, '4');
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray28);
        java.lang.Character[] charArray51 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray51, 'a');
        int int56 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray53, 'a', (-1));
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray53, '#', 1);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray53);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder17.append(charArray28, charArray53);
        int int63 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray28, '#');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 3 + "'", int41 == 3);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), " 44a44## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), " 44a44## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[ , 4, 4, a, 4, 4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 4 + "'", int59 == 4);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    }

    @Test
    public void test11462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11462");
        byte[] byteArray3 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 10, (int) (short) -1);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray3, (byte) 10);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray3, (byte) 100);
        byte[] byteArray16 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray16, (byte) 10, (int) (short) -1);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray16);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray16, (byte) 1, (int) ' ');
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray3, byteArray16);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        java.lang.Byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray25);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray3, byteArray25);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray3, (byte) 10);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(byteArray29, (byte) -1);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray29, (byte) 10);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray29, (byte) 0);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, 10, 0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 10, 10]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
    }

    @Test
    public void test11463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11463");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((double) (byte) 0, (double) (short) 10);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray7);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray8);
        java.lang.Long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray8);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray8);
        java.lang.Long[] longArray12 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray12);
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray12);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.subarray(longArray14, (int) (short) -1, (int) '#');
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray14);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray18, 0L);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray11, longArray18);
        long[] longArray27 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray28 = org.apache.commons.lang3.ArrayUtils.clone(longArray27);
        java.lang.Long[] longArray29 = org.apache.commons.lang3.ArrayUtils.toObject(longArray28);
        long[] longArray35 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray36 = org.apache.commons.lang3.ArrayUtils.clone(longArray35);
        java.lang.Long[] longArray37 = org.apache.commons.lang3.ArrayUtils.toObject(longArray36);
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.clone(longArray36);
        long[] longArray39 = org.apache.commons.lang3.ArrayUtils.addAll(longArray28, longArray38);
        int[] intArray44 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray45 = org.apache.commons.lang3.ArrayUtils.clone(intArray44);
        int[] intArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray44);
        boolean boolean48 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray38, (java.lang.Object) intArray46, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder49.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray58 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.clone(longArray58);
        long[] longArray65 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray66 = org.apache.commons.lang3.ArrayUtils.clone(longArray65);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder52.append(longArray59, longArray65);
        long[] longArray70 = org.apache.commons.lang3.ArrayUtils.add(longArray59, (int) (byte) 0, (long) 2);
        long[] longArray72 = org.apache.commons.lang3.ArrayUtils.add(longArray70, (long) 2);
        long[] longArray74 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray70, (long) (short) 100);
        long[] longArray75 = org.apache.commons.lang3.ArrayUtils.addAll(longArray38, longArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder6.append(longArray11, longArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder76.append('4', '#');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(longArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray70), "[2, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[2, 32, 100, 10, 10, 1, 2]");
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[2, 32, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[32, 100, 10, 10, 1, 2, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
    }

    @Test
    public void test11464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11464");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        int[] intArray23 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.clone(intArray23);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray23, 100);
        long[] longArray32 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray33 = org.apache.commons.lang3.ArrayUtils.clone(longArray32);
        java.lang.Long[] longArray34 = org.apache.commons.lang3.ArrayUtils.toObject(longArray33);
        long[] longArray40 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        java.lang.Long[] longArray42 = org.apache.commons.lang3.ArrayUtils.toObject(longArray41);
        long[] longArray43 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.addAll(longArray33, longArray43);
        int[] intArray49 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray50 = org.apache.commons.lang3.ArrayUtils.clone(intArray49);
        int[] intArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray49);
        boolean boolean53 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray43, (java.lang.Object) intArray51, false);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(intArray51, (int) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder18.append(intArray23, intArray51);
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray51);
        int[] intArray59 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray57, (int) (byte) -1);
        int int62 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray59, (int) (short) 100, (int) (short) 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
    }

    @Test
    public void test11465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11465");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        java.lang.Character[] charArray15 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray15);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, 'a');
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray9, charArray18);
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.subarray(charArray18, 5, 3);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray18, '#', (int) ' ');
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.clone(charArray18);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray26, '4');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test11466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11466");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        java.lang.Character[] charArray21 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, 'a');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.clone(charArray24);
        java.lang.Character[] charArray31 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray31, 'a');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.add(charArray33, '#');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.remove(charArray33, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.append(charArray25, charArray33);
        short[] shortArray43 = new short[] { (byte) 0, (byte) 1, (short) -1, (byte) -1 };
        java.lang.Short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray43);
        short[] shortArray45 = null;
        java.lang.Short[] shortArray47 = new java.lang.Short[] { (short) 1 };
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray47);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray47);
        short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray47, (short) (byte) 100);
        short[] shortArray52 = new short[] {};
        java.lang.Short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray52);
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray51, shortArray52);
        java.lang.Short[] shortArray56 = new java.lang.Short[] { (short) 1 };
        short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray56);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray56);
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray56, (short) (byte) 100);
        short[] shortArray61 = new short[] {};
        java.lang.Short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray61);
        short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray60, shortArray61);
        short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray54, shortArray61);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray45, shortArray64);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray65, 3, 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder0.append(shortArray43, shortArray68);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray68);
        int int71 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) shortArray70);
        java.lang.Short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray70);
        short[] shortArray73 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray72);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[1]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[1]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[1]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[1]");
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[]");
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[1]");
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[1]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[1]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[]");
    }

    @Test
    public void test11467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11467");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 4, 4, (-1), 0 };
        java.lang.Integer[] intArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4);
        boolean[] booleanArray10 = new boolean[] { false, false, false, false };
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray10, false);
        java.lang.Boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray5, (java.lang.Object) booleanArray14, (int) '#');
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray5);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.add(intArray17, 3, (int) (byte) 100);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.add(intArray17, 100);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.add(intArray22, (int) (byte) -1);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray22, 2, (int) (byte) -1);
        java.lang.Integer[] intArray28 = org.apache.commons.lang3.ArrayUtils.toObject(intArray22);
        java.lang.Integer[] intArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray28);
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { 4, 4, (-1), 0 };
        java.lang.Integer[] intArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray34);
        boolean[] booleanArray40 = new boolean[] { false, false, false, false };
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray40, false);
        java.lang.Boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray40);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray35, (java.lang.Object) booleanArray44, (int) '#');
        int[] intArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray35);
        int[] intArray50 = org.apache.commons.lang3.ArrayUtils.add(intArray47, 3, (int) (byte) 100);
        int[] intArray51 = org.apache.commons.lang3.ArrayUtils.clone(intArray50);
        int[] intArray53 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray50, (int) (byte) -1);
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray53);
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray54);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray29, (java.lang.Object) intArray55);
        java.lang.Character[] charArray62 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray62, 'a');
        char[] charArray66 = org.apache.commons.lang3.ArrayUtils.add(charArray64, '#');
        char[] charArray69 = org.apache.commons.lang3.ArrayUtils.subarray(charArray64, (int) (byte) -1, (int) '#');
        java.lang.Character[] charArray75 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray75);
        char[] charArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray75, 'a');
        char[] charArray79 = org.apache.commons.lang3.ArrayUtils.clone(charArray78);
        char[] charArray80 = org.apache.commons.lang3.ArrayUtils.addAll(charArray64, charArray78);
        int int82 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray80, 'a');
        char[] charArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray80);
        int int86 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray80, 'a', (int) (short) 1);
        int int88 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray29, (java.lang.Object) 'a', 3);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[4, 4, -1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[4, 4, -1, 100, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[4, 4, -1, 0, 100]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[4, 4, -1, 0, 100, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[4, 4, -1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[4, 4, -1, 100, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[4, 4, -1, 100, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[4, 4, 100, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[4, 4, 100, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[4, 4, 100, 0]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 9 + "'", int82 == 9);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 2 + "'", int86 == 2);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
    }

    @Test
    public void test11468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11468");
        java.lang.Character[] charArray5 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        boolean[] booleanArray13 = new boolean[] { false, true, true, true };
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray5, (java.lang.Object) booleanArray13);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '4');
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '4');
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray20);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray20, 'a');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4, #, #,  ]");
    }

    @Test
    public void test11469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11469");
        java.lang.Short[] shortArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray1);
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) shortArray0, (java.lang.Object) byteArray2, 4);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray2);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(byteArray5, (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray5);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray5, (byte) 0);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
    }

    @Test
    public void test11470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11470");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) -1);
        java.lang.Character[] charArray6 = null;
        java.lang.Character[] charArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray6);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray1, (java.lang.Object[]) charArray6);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) 0);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1]");
    }

    @Test
    public void test11471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11471");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 4, 4, (-1), 0 };
        java.lang.Integer[] intArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4);
        boolean[] booleanArray10 = new boolean[] { false, false, false, false };
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray10, false);
        java.lang.Boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray5, (java.lang.Object) booleanArray14, (int) '#');
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray5);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.add(intArray17, 3, (int) (byte) 100);
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.clone(intArray20);
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray20, (int) (byte) -1);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.clone(intArray23);
        int[] intArray25 = new int[] {};
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.add(intArray25, 0, 100);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray28);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.clone(intArray28);
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray28);
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray28);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray23, intArray28);
        int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray23, 2, 9);
        int[] intArray41 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.clone(intArray41);
        int[] intArray44 = org.apache.commons.lang3.ArrayUtils.add(intArray41, (int) 'a');
        int[] intArray49 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray50 = org.apache.commons.lang3.ArrayUtils.clone(intArray49);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray50);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray44, intArray50);
        int[] intArray53 = org.apache.commons.lang3.ArrayUtils.clone(intArray50);
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.add(intArray53, 4);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray23, intArray53);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[4, 4, -1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[4, 4, -1, 100, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[4, 4, -1, 100, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[4, 4, 100, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[4, 4, 100, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, -1, -1, 100, 4]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test11472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11472");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.add(charArray7, '#');
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.add(charArray9, 4, '#');
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray14 = org.apache.commons.lang3.ArrayUtils.remove(charArray12, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 9, Length: 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a a ###");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a a ###");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a,  , a,  , #, #, #]");
    }

    @Test
    public void test11473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11473");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor1 = objEntryList0.iterator();
        boolean boolean2 = objEntryList0.isEmpty();
        boolean[] booleanArray7 = new boolean[] { false, false, false, false };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray7);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray7, false);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray7);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray7);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray12);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray12);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray12, (int) (short) 1);
        java.lang.String[] strArray18 = new java.lang.String[] {};
        java.lang.String[] strArray22 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray23 = org.apache.commons.lang3.ArrayUtils.addAll(strArray18, strArray22);
        java.lang.String[] strArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray18);
        java.lang.String[] strArray25 = org.apache.commons.lang3.ArrayUtils.toArray(strArray24);
        java.util.Map<java.lang.Object, java.lang.Object> objMap26 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) strArray25);
        java.lang.String[] strArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray25);
        boolean boolean28 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) objEntryList0, (java.lang.Object) booleanArray17, strArray27);
        java.lang.Boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray17);
        boolean[] booleanArray34 = new boolean[] { false, false, false, false };
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray34, false);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.add(booleanArray34, true);
        boolean[] booleanArray44 = new boolean[] { false, false, false, false };
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray44);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray44, false);
        java.lang.Boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray44);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray34, booleanArray44);
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.add(booleanArray34, 3, false);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray17, booleanArray52);
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray17, (-1), (int) (short) 1);
        org.junit.Assert.assertNotNull(objEntryItor1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false]");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(objMap26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false]");
    }

    @Test
    public void test11474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11474");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray6);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray6);
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray6, (float) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray6);
        java.lang.String str21 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) floatArray6, "{}");
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray6, (float) 10);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray6);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.clone(floatArray6);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder26.append(true, true);
        java.lang.Short[] shortArray31 = new java.lang.Short[] { (short) 1 };
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31);
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31);
        boolean[] booleanArray39 = new boolean[] { false, false, false, false };
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray39);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray39, false);
        java.lang.Boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray39);
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray39);
        java.lang.Boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray39);
        java.lang.Short[] shortArray47 = new java.lang.Short[] { (short) 1 };
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray47);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray47);
        short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray47, (short) (byte) 100);
        short[] shortArray52 = new short[] {};
        java.lang.Short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray52);
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray51, shortArray52);
        float[] floatArray57 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray57);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.contains(floatArray57, (float) 0);
        float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.add(floatArray57, 10.0f);
        java.lang.Float[] floatArray63 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray57);
        boolean boolean65 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray51, (java.lang.Object) floatArray63, false);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray45, (java.lang.Object[]) floatArray63);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray31, (java.lang.Object[]) floatArray63);
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray63, (java.lang.Object) 1, 0);
        java.lang.Float[] floatArray74 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f };
        java.lang.Float[] floatArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray74);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder26.append((java.lang.Object[]) floatArray63, (java.lang.Object[]) floatArray75);
        float[] floatArray77 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray63);
        float[] floatArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray63, (float) 2);
        float[] floatArray82 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray83 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray82);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.contains(floatArray82, (float) 0);
        float[] floatArray87 = org.apache.commons.lang3.ArrayUtils.add(floatArray82, 10.0f);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.contains(floatArray82, (float) (-1));
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray82);
        float[] floatArray91 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray79, floatArray82);
        boolean boolean92 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray6, floatArray79);
        float[] floatArray95 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray6, (int) 'a', (int) (byte) 0);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{1.0,-1.0}" + "'", str21, "{1.0,-1.0}");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[1]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[1]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[1]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[1]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[1]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(floatArray74);
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray77), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray79), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray82), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray87), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(floatArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray91), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(floatArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray95), "[]");
    }

    @Test
    public void test11475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11475");
        java.lang.Long[] longArray6 = new java.lang.Long[] { 100L, 100L, 0L, 10L, 1L, (-1L) };
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray6);
        java.lang.Short[] shortArray9 = new java.lang.Short[] { (short) 1 };
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray10, (short) 10);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray10, (short) 100, (int) (byte) 1);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray10);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray16);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray16, 1, (int) (short) 0);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.add(shortArray16, (short) 100);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) longArray7, (java.lang.Object) shortArray22);
        long[] longArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray7, (long) 11);
        java.lang.Long[] longArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray7);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[100, 100, 0, 10, 1, -1]");
        org.junit.Assert.assertNotNull(longArray26);
    }

    @Test
    public void test11476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11476");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray42, longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder19.append(longArray26, longArray50);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray50, (long) (short) 0, 2);
        java.lang.Long[] longArray57 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        long[] longArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray57);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray57);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray57, 100L);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray64 = org.apache.commons.lang3.ArrayUtils.add(longArray61, (int) (byte) -1, 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[32, 100, 10, 10, 1]");
    }

    @Test
    public void test11477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11477");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray5, 4, (-1));
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray11, (int) (byte) -1, (int) '4');
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.clone(shortArray11);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray11, (short) 100, 100);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray11);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray19);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test11478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11478");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        double[] doubleArray6 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6);
        double[] doubleArray11 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray11);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.add(doubleArray11, (double) (byte) 10);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.add(doubleArray11, 0.0d);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray6, doubleArray11);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.add(doubleArray6, (double) (-1));
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.add(doubleArray6, 0, 0.0d);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray22, (double) 0.0f, 2, 10.0d);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray22, (double) 10);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray22);
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) charArray0, (java.lang.Object) doubleArray29);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, 'a');
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 10.0, -1.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 10.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 0.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[]");
    }

    @Test
    public void test11479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11479");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (short) 0);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray10);
        long[] longArray17 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.clone(longArray17);
        java.lang.Long[] longArray19 = org.apache.commons.lang3.ArrayUtils.toObject(longArray18);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.clone(longArray18);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray20, (long) (short) 0);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.addAll(longArray11, longArray20);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.subarray(longArray11, (int) (short) -1, (int) '4');
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray11, (long) 10, (int) (short) 0);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray11);
        long[] longArray32 = org.apache.commons.lang3.ArrayUtils.add(longArray11, (long) (byte) 1);
        java.lang.Long[] longArray33 = org.apache.commons.lang3.ArrayUtils.toObject(longArray11);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray33, (long) 0);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[32, 100, 10, 10, 1, 0, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[32, 100, 10, 10, 1, 0]");
    }

    @Test
    public void test11480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11480");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f);
        double[] doubleArray12 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray12);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray12, (double) (byte) 10);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray12, (double) 0L, 0);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray12);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray6, doubleArray12);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray12, (double) (byte) -1);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) '4', 7, (double) (short) 0);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray25, (-1.0d), 6);
        java.lang.String str34 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) int32, "{-1.0,1.0}");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1" + "'", str34, "-1");
    }

    @Test
    public void test11481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11481");
        java.lang.Byte[] byteArray1 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray1);
        java.lang.Byte[] byteArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray1);
        byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray3);
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray3, (byte) 1);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray6, (byte) 0, 7);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray6);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray6, (byte) -1);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray6, (byte) 0, (int) (byte) 0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[1]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test11482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11482");
        char[] charArray1 = new char[] { 'a' };
        java.lang.Character[] charArray2 = org.apache.commons.lang3.ArrayUtils.toObject(charArray1);
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray1);
        java.lang.Character[] charArray9 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray9, 'a');
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray11, 'a', (-1));
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray1, charArray11);
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.clone(charArray11);
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.subarray(charArray16, (int) ' ', (int) (short) 10);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray16, '#');
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 4 + "'", int21 == 4);
    }

    @Test
    public void test11483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11483");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) 0);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, 10.0f);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray2, 7, (int) (short) 100);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray2, 11, (int) '#');
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray2, (float) (byte) 100);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.clone(floatArray2);
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.add(floatArray16, (float) 11);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.remove(floatArray18, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0, 11.0]");
    }

    @Test
    public void test11484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11484");
        float[] floatArray0 = null;
        float[] floatArray3 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray4 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray3);
        float[] floatArray7 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray7);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(floatArray7, (float) 0);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray3, floatArray7);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray3);
        float[] floatArray16 = new float[] { (short) 100, 0, 10 };
        float[] floatArray19 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray19);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(floatArray19, (float) 0);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.add(floatArray19, 10.0f);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray16, floatArray19);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray19);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(floatArray19, (float) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray19);
        float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray19);
        float[] floatArray34 = new float[] { (short) 100, 0, 10 };
        float[] floatArray37 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray37);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(floatArray37, (float) 0);
        float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.add(floatArray37, 10.0f);
        float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray34, floatArray37);
        float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray37);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(floatArray37, 0.0f);
        float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray0, floatArray37);
        float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.add(floatArray37, (float) 2);
        int int50 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) floatArray49);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 1.0, 2.0]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3 + "'", int50 == 3);
    }

    @Test
    public void test11485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11485");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray7, 'a', (-1));
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray7, '#', 1);
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.clone(charArray7);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray14);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 4 + "'", int13 == 4);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test11486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11486");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        objMap31.clear();
        java.lang.Object obj40 = null;
        long[] longArray46 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray47 = org.apache.commons.lang3.ArrayUtils.clone(longArray46);
        java.lang.Long[] longArray48 = org.apache.commons.lang3.ArrayUtils.toObject(longArray47);
        long[] longArray49 = org.apache.commons.lang3.ArrayUtils.clone(longArray47);
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.add(longArray49, (long) (short) 0);
        long[] longArray52 = org.apache.commons.lang3.ArrayUtils.clone(longArray51);
        long[] longArray58 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.clone(longArray58);
        java.lang.Long[] longArray60 = org.apache.commons.lang3.ArrayUtils.toObject(longArray59);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.clone(longArray59);
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.add(longArray61, (long) (short) 0);
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.addAll(longArray52, longArray61);
        long[] longArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray52, (long) 10);
        java.lang.Object obj67 = objMap31.putIfAbsent(obj40, (java.lang.Object) longArray52);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = objMap31.entrySet();
        int int69 = objEntrySet68.size();
        java.util.Spliterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySpliterator70 = objEntrySet68.spliterator();
        boolean[] booleanArray75 = new boolean[] { false, false, false, false };
        boolean[] booleanArray76 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray75);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray75, false);
        java.lang.Boolean[] booleanArray79 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray75);
        boolean boolean80 = objEntrySet68.contains((java.lang.Object) booleanArray75);
        int int83 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray75, true, 5);
        boolean[] booleanArray86 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray75, 9, (int) (byte) -1);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[32, 100, 10, 1, 0]");
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(objEntrySpliterator70);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray75), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(booleanArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray86), "[]");
    }

    @Test
    public void test11487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11487");
        java.lang.Integer[][][][] intArray0 = new java.lang.Integer[][][][] {};
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { 11, 6, 100, 6, 7, 7 };
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { 11, 6, 100, 6, 7, 7 };
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { 11, 6, 100, 6, 7, 7 };
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 11, 6, 100, 6, 7, 7 };
        java.lang.Integer[][] intArray29 = new java.lang.Integer[][] { intArray7, intArray14, intArray21, intArray28 };
        java.lang.Integer[][][] intArray30 = new java.lang.Integer[][][] { intArray29 };
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray30);
        java.lang.Integer[][][][] intArray32 = org.apache.commons.lang3.ArrayUtils.add(intArray0, intArray30);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { 4, 4, (-1), 0 };
        java.lang.Integer[] intArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray37);
        boolean[] booleanArray43 = new boolean[] { false, false, false, false };
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray43, false);
        java.lang.Boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray43);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray38, (java.lang.Object) booleanArray47, (int) '#');
        java.lang.Character[] charArray55 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray55, 'a');
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) intArray38, (java.lang.Object[]) charArray55);
        int[] intArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray38, (int) (byte) -1);
        java.lang.Integer[] intArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray38);
        java.lang.Object[] objArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) intArray61);
        int int63 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray0, (java.lang.Object) intArray61);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[4, 4, -1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[4, 4, -1, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[4, 4, -1, 0]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    }

    @Test
    public void test11488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11488");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.String[] strArray4 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray5 = org.apache.commons.lang3.ArrayUtils.addAll(strArray0, strArray4);
        double[] doubleArray11 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray11);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) strArray4, (java.lang.Object) doubleArray11, (int) '4');
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray11);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray11);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray11, (double) 10L, 13);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test11489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11489");
        double[] doubleArray5 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray5);
        java.lang.Double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray5);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray7);
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
    }

    @Test
    public void test11490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11490");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray42, longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder19.append(longArray26, longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder19.append((-1), (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder19.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder19.append((long) 'a', (long) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder62);
    }

    @Test
    public void test11491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11491");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray2, 0, 100);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray2);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) (byte) 10);
        float[] floatArray12 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray12);
        float[] floatArray16 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray16);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(floatArray16, (float) 0);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray12, floatArray16);
        float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.clone(floatArray16);
        float[] floatArray25 = new float[] { (short) 100, 0, 10 };
        float[] floatArray28 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray28);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(floatArray28, (float) 0);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.add(floatArray28, 10.0f);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray25, floatArray28);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray16, floatArray25);
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray35, (float) (short) 100);
        float[] floatArray40 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(floatArray40, (float) 0);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.add(floatArray40, 10.0f);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray37, floatArray40);
        float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray2, floatArray37);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 1.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0, -1.0, 1.0, 0.0, 10.0]");
    }

    @Test
    public void test11492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11492");
        java.lang.Object[] objArray0 = null;
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { (-1.0d), 100.0d, 1.0d, 10.0d, (-1.0d), 100.0d };
        java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray7);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray8, (double) ' ');
        java.lang.Double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray8);
        java.lang.Double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray12, (double) 100);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(objArray0, (java.lang.Object[]) doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test11493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11493");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        float[] floatArray4 = new float[] { (short) 100, 0, 10 };
        float[] floatArray7 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray7);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(floatArray7, (float) 0);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.add(floatArray7, 10.0f);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray4, floatArray7);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(floatArray7, (float) (byte) 10);
        boolean boolean16 = objEntryList0.equals((java.lang.Object) boolean15);
        boolean boolean17 = objEntryList0.isEmpty();
        java.lang.Object[] objArray18 = objEntryList0.toArray();
        java.lang.String str19 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) objEntryList0);
        java.lang.String[][] strArray20 = new java.lang.String[][] {};
        java.lang.String[][] strArray21 = new java.lang.String[][] {};
        java.lang.String[][] strArray22 = new java.lang.String[][] {};
        java.lang.String[][] strArray23 = new java.lang.String[][] {};
        java.lang.String[][] strArray24 = new java.lang.String[][] {};
        java.lang.String[][][] strArray25 = new java.lang.String[][][] { strArray20, strArray21, strArray22, strArray23, strArray24 };
        java.lang.String[][] strArray26 = new java.lang.String[][] {};
        java.lang.String[][] strArray27 = new java.lang.String[][] {};
        java.lang.String[][] strArray28 = new java.lang.String[][] {};
        java.lang.String[][] strArray29 = new java.lang.String[][] {};
        java.lang.String[][] strArray30 = new java.lang.String[][] {};
        java.lang.String[][][] strArray31 = new java.lang.String[][][] { strArray26, strArray27, strArray28, strArray29, strArray30 };
        java.lang.String[][] strArray32 = new java.lang.String[][] {};
        java.lang.String[][] strArray33 = new java.lang.String[][] {};
        java.lang.String[][] strArray34 = new java.lang.String[][] {};
        java.lang.String[][] strArray35 = new java.lang.String[][] {};
        java.lang.String[][] strArray36 = new java.lang.String[][] {};
        java.lang.String[][][] strArray37 = new java.lang.String[][][] { strArray32, strArray33, strArray34, strArray35, strArray36 };
        java.lang.String[][] strArray38 = new java.lang.String[][] {};
        java.lang.String[][] strArray39 = new java.lang.String[][] {};
        java.lang.String[][] strArray40 = new java.lang.String[][] {};
        java.lang.String[][] strArray41 = new java.lang.String[][] {};
        java.lang.String[][] strArray42 = new java.lang.String[][] {};
        java.lang.String[][][] strArray43 = new java.lang.String[][][] { strArray38, strArray39, strArray40, strArray41, strArray42 };
        java.lang.String[][][][] strArray44 = new java.lang.String[][][][] { strArray25, strArray31, strArray37, strArray43 };
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(strArray44);
        java.lang.CharSequence[][][][] charSequenceArray46 = org.apache.commons.lang3.ArrayUtils.toArray((java.lang.CharSequence[][][][]) strArray44);
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray47 = objEntryList0.toArray((java.lang.Comparable<java.lang.String>[][][][]) strArray44);
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray48 = org.apache.commons.lang3.ArrayUtils.toArray((java.lang.Comparable<java.lang.String>[][][][]) strArray44);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[]" + "'", str19, "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertNotNull(strComparableArray47);
        org.junit.Assert.assertNotNull(strComparableArray48);
    }

    @Test
    public void test11494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11494");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (short) 0);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray10);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.clone(longArray11);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.clone(longArray11);
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray11);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray11);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray11, (long) 2);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test11495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11495");
        java.lang.Byte[] byteArray1 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray1);
        java.lang.Byte[] byteArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray1);
        byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray3);
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray3, (byte) 1);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray6, (byte) 0, 7);
        java.lang.Byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray6);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray6);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[1]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test11496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11496");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray7);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray7);
        java.lang.Character[] charArray15 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, ' ');
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray17);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray7, charArray17);
        java.lang.Character[] charArray25 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray25, ' ');
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray27);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray28);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray7, charArray28);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray7, ' ');
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray32);
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray33, '#');
        int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray33, 'a', (int) '4');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4a44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4a44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, a, 4, 4]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4a44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4a44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4, a, 4, 4]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
    }

    @Test
    public void test11497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11497");
        int[] intArray2 = new int[] { 1, (byte) 1 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.add(intArray2, (int) (short) 0, (int) '4');
        org.apache.commons.lang3.ArrayUtils.reverse(intArray5);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.toObject(intArray5);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray8);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[1, 1]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 1, 52]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1, 1, 52]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test11498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11498");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray3, 100.0f);
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray3);
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray3);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertNotNull(floatArray7);
    }

    @Test
    public void test11499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11499");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor35 = objEntryList33.iterator();
        boolean[] booleanArray40 = new boolean[] { false, false, false, false };
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray40, false);
        java.lang.Boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray40);
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray45);
        boolean boolean47 = objEntryList33.remove((java.lang.Object) booleanArray45);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.add(booleanArray45, false);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray49, false, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray49);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray49, true);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray49, false);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEntryItor35);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, false, false, false]");
    }

    @Test
    public void test11500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11500");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        java.lang.Short[] shortArray12 = new java.lang.Short[] { (short) 1 };
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray12);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12, (short) (byte) 100);
        short[] shortArray17 = new short[] {};
        java.lang.Short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray17);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray16, shortArray17);
        float[] floatArray22 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray22);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(floatArray22, (float) 0);
        float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.add(floatArray22, 10.0f);
        java.lang.Float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray22);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray16, (java.lang.Object) floatArray28, false);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray10, (java.lang.Object[]) floatArray28);
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray28);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray32);
        java.lang.Float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray32);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray32, (float) (byte) 100);
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray32);
        float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray32);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 1.0]");
    }
}

