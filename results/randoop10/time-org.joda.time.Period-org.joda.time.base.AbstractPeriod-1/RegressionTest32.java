import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest32 {

    public static boolean debug = false;

    @Test
    public void test16001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16001");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        java.util.Locale locale3 = periodFormatter2.getLocale();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds7 = duration6.toStandardSeconds();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds10 = duration9.toStandardSeconds();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType14 = periodType13.withMinutesRemoved();
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant12, periodType13);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration9);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period18 = duration9.toPeriod(periodType17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(readableInstant20, readableDuration21);
        mutablePeriod22.setHours((int) (short) 100);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology27 = null;
        mutablePeriod22.setPeriod((org.joda.time.ReadableDuration) duration26, chronology27);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType30 = periodType29.withWeeksRemoved();
        org.joda.time.PeriodType periodType31 = periodType30.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(readableInstant19, (org.joda.time.ReadableDuration) duration26, periodType30);
        org.joda.time.Period period33 = duration9.toPeriod(periodType30);
        org.joda.time.format.PeriodFormatter periodFormatter34 = periodFormatter2.withParseType(periodType30);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType37 = periodType36.withMonthsRemoved();
        org.joda.time.PeriodType periodType38 = periodType37.withMinutesRemoved();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((long) (short) 0, periodType37, chronology39);
        org.joda.time.PeriodType periodType41 = periodType37.withMinutesRemoved();
        org.joda.time.PeriodType periodType42 = periodType41.withMinutesRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter43 = periodFormatter2.withParseType(periodType42);
        org.joda.time.format.PeriodPrinter periodPrinter44 = periodFormatter2.getPrinter();
        org.joda.time.format.PeriodPrinter periodPrinter45 = periodFormatter2.getPrinter();
        org.junit.Assert.assertNull(locale3);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(periodFormatter34);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodFormatter43);
        org.junit.Assert.assertNull(periodPrinter44);
        org.junit.Assert.assertNull(periodPrinter45);
    }

    @Test
    public void test16002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16002");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(42);
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test16003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16003");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType2 = periodType1.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (-1), periodType2);
        org.joda.time.MutablePeriod mutablePeriod4 = mutablePeriod3.copy();
        int int5 = mutablePeriod3.getMonths();
        int int6 = mutablePeriod3.getMinutes();
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test16004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16004");
        org.joda.time.Duration duration2 = new org.joda.time.Duration(60000L, (long) 100);
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = duration2.toPeriod(chronology3);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardSeconds((long) 2147483647);
        org.joda.time.ReadableDuration readableDuration7 = null;
        boolean boolean8 = duration6.isLongerThan(readableDuration7);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period11 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days12 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period11);
        org.joda.time.Period period14 = period11.withSeconds((int) ' ');
        int int15 = period14.getSeconds();
        org.joda.time.Period period17 = period14.withHours((int) '#');
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((long) 'a', (long) 0);
        mutablePeriod20.addYears((int) '4');
        org.joda.time.Chronology chronology24 = null;
        mutablePeriod20.add((long) 100, chronology24);
        mutablePeriod20.setMillis((int) (byte) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableInstant readableInstant29 = null;
        mutablePeriod20.setPeriod(readableInstant28, readableInstant29);
        mutablePeriod20.clear();
        org.joda.time.Period period32 = period14.plus((org.joda.time.ReadablePeriod) mutablePeriod20);
        org.joda.time.PeriodType periodType33 = mutablePeriod20.getPeriodType();
        org.joda.time.Period period34 = mutablePeriod20.toPeriod();
        org.joda.time.Days days35 = org.joda.time.Days.ZERO;
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((java.lang.Object) days35, periodType36, chronology37);
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod20, periodType36);
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant9, periodType36);
        boolean boolean41 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Days days43 = org.joda.time.Days.days((int) (byte) 10);
        org.joda.time.Days days44 = org.joda.time.Days.ZERO;
        org.joda.time.Period period46 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days47 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period46);
        org.joda.time.Days days49 = days47.minus(10);
        boolean boolean50 = days44.isGreaterThan(days47);
        org.joda.time.Period period52 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days53 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period52);
        org.joda.time.Period period55 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days56 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period55);
        org.joda.time.PeriodType periodType57 = days56.getPeriodType();
        boolean boolean58 = days53.isGreaterThan(days56);
        org.joda.time.Period period60 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days61 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period60);
        org.joda.time.Days days62 = days56.minus(days61);
        int int63 = days56.size();
        org.joda.time.Days days64 = org.joda.time.Days.ZERO;
        org.joda.time.Period period66 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days67 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period66);
        org.joda.time.Days days69 = days67.minus(10);
        boolean boolean70 = days64.isGreaterThan(days67);
        org.joda.time.Days days71 = days56.minus(days67);
        org.joda.time.Days days72 = days44.minus(days67);
        boolean boolean73 = days43.isGreaterThan(days44);
        org.joda.time.PeriodType periodType74 = days44.getPeriodType();
        org.joda.time.Period period75 = new org.joda.time.Period((java.lang.Object) duration6, periodType74);
        org.joda.time.Period period76 = period75.toPeriod();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(days71);
        org.junit.Assert.assertNotNull(days72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(period76);
    }

    @Test
    public void test16005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16005");
        org.joda.time.Period period1 = org.joda.time.Period.millis((-609));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test16006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16006");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((-1L), (long) ' ');
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration4 = mutablePeriod2.toDurationFrom(readableInstant3);
        mutablePeriod2.setMonths((-1073741824));
        mutablePeriod2.addSeconds(596);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds11 = duration10.toStandardSeconds();
        org.joda.time.Seconds seconds13 = seconds11.plus(100);
        org.joda.time.Seconds seconds15 = seconds11.plus((-1));
        org.joda.time.Seconds seconds17 = seconds11.plus((int) (byte) -1);
        org.joda.time.Seconds seconds19 = seconds17.multipliedBy((-12));
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn(readableInterval20);
        int int22 = seconds21.getSeconds();
        org.joda.time.Seconds seconds24 = seconds21.dividedBy(32);
        org.joda.time.Seconds seconds25 = seconds17.plus(seconds24);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardSeconds((long) (short) 100);
        org.joda.time.Duration duration29 = duration27.plus((long) (byte) 1);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant31, (org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration37 = duration34.toDuration();
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration27.equals((java.lang.Object) readableInstant30);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.TWO;
        org.joda.time.Duration duration42 = seconds41.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType43 = seconds41.getFieldType();
        org.joda.time.PeriodType periodType44 = seconds41.getPeriodType();
        org.joda.time.Period period45 = duration27.toPeriodTo(readableInstant40, periodType44);
        org.joda.time.Seconds seconds46 = duration27.toStandardSeconds();
        org.joda.time.Seconds seconds48 = seconds46.plus((-2));
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.TWO;
        org.joda.time.Duration duration50 = seconds49.toStandardDuration();
        org.joda.time.Seconds seconds52 = seconds49.minus((int) ' ');
        org.joda.time.Seconds seconds53 = seconds48.minus(seconds49);
        boolean boolean54 = seconds24.isLessThan(seconds53);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) seconds53);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test16007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16007");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (short) 1);
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = duration2.toPeriod(chronology3);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds7 = duration6.toStandardSeconds();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds10 = duration9.toStandardSeconds();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType14 = periodType13.withMinutesRemoved();
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant12, periodType13);
        org.joda.time.PeriodType periodType16 = periodType13.withSecondsRemoved();
        org.joda.time.PeriodType periodType17 = periodType16.withWeeksRemoved();
        org.joda.time.PeriodType periodType18 = periodType17.withYearsRemoved();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2, periodType17);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) 13);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds24 = duration23.toStandardSeconds();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds27 = duration26.toStandardSeconds();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType31 = periodType30.withMinutesRemoved();
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant29, periodType30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(readableInstant33, readableDuration34);
        mutablePeriod35.setHours((int) (short) 100);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology40 = null;
        mutablePeriod35.setPeriod((org.joda.time.ReadableDuration) duration39, chronology40);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds44 = duration43.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType45 = seconds44.getFieldType();
        mutablePeriod35.add(durationFieldType45, (int) (short) 0);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(readableInstant48, readableDuration49);
        mutablePeriod50.setHours((int) (short) 100);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology55 = null;
        mutablePeriod50.setPeriod((org.joda.time.ReadableDuration) duration54, chronology55);
        org.joda.time.Chronology chronology57 = null;
        mutablePeriod35.setPeriod((org.joda.time.ReadableDuration) duration54, chronology57);
        int int59 = duration26.compareTo((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration61 = duration54.minus(1L);
        long long62 = duration61.getStandardDays();
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.yearWeekDayTime();
        org.joda.time.PeriodType periodType64 = periodType63.withMillisRemoved();
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.Period period66 = duration61.toPeriod(periodType63, chronology65);
        org.joda.time.Duration duration67 = duration21.minus((org.joda.time.ReadableDuration) duration61);
        long long68 = duration67.getStandardDays();
        boolean boolean69 = duration2.isEqual((org.joda.time.ReadableDuration) duration67);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Period period71 = duration2.toPeriodFrom(readableInstant70);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(period71);
    }

    @Test
    public void test16008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16008");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period(52, (int) (byte) 10, (-32), (int) (byte) 0, 0, (int) (short) 0, (int) ' ', 52, periodType8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Duration duration11 = period9.toDurationFrom(readableInstant10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.parse("PT-539.948S");
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = duration16.toPeriodTo(readableInstant17);
        org.joda.time.PeriodType periodType19 = period18.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(readableInstant13, readableInstant14, periodType19);
        org.joda.time.Period period21 = duration11.toPeriodTo(readableInstant12, periodType19);
        org.joda.time.Period period23 = period21.minusMonths((-91));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
    }

    @Test
    public void test16009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16009");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("P97DT100H52M100.051S");
        org.junit.Assert.assertNotNull(mutablePeriod1);
    }

    @Test
    public void test16010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16010");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType3 = periodType2.withWeeksRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.Period period5 = duration1.toPeriod(periodType2, chronology4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType8 = periodType7.withMonthsRemoved();
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant6, periodType8);
        org.joda.time.Minutes minutes10 = duration1.toStandardMinutes();
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes14 = minutes10.minus((int) (short) 0);
        org.joda.time.PeriodType periodType15 = minutes10.getPeriodType();
        int int16 = periodType15.size();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test16011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16011");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.ZERO;
        long long3 = duration2.getStandardDays();
        org.joda.time.Hours hours4 = duration2.toStandardHours();
        org.joda.time.Duration duration6 = duration2.withMillis(0L);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.yearDay();
        org.joda.time.PeriodType periodType11 = periodType10.withSecondsRemoved();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(readableInstant8, readableInstant9, periodType10);
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration2, periodType10);
        org.joda.time.Duration duration15 = duration2.withMillis(46740L);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(duration15);
    }

    @Test
    public void test16012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16012");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds(900);
        org.joda.time.Duration duration2 = seconds1.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(duration2);
    }

    @Test
    public void test16013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16013");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("PT0S");
        org.joda.time.MutablePeriod mutablePeriod2 = mutablePeriod1.toMutablePeriod();
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
    }

    @Test
    public void test16014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16014");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) 100);
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = duration1.toPeriod(chronology2);
        org.joda.time.Period period5 = period3.withWeeks((-8));
        org.joda.time.Period period7 = period3.withSeconds((-2147483648));
        int[] intArray8 = period3.getValues();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0, 0, 0, 0, 1, 40, 0]");
    }

    @Test
    public void test16015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16015");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(20, 0, 2400, 18, 671, (-29), 20, (-2147483588));
        int int9 = mutablePeriod8.getMillis();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2147483588) + "'", int9 == (-2147483588));
    }

    @Test
    public void test16016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16016");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((-1L));
        mutablePeriod3.addSeconds(100);
        java.lang.Object obj6 = null;
        org.joda.time.Duration duration7 = new org.joda.time.Duration(obj6);
        org.joda.time.Duration duration8 = duration7.toDuration();
        mutablePeriod3.add((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType12 = periodType11.withHoursRemoved();
        org.joda.time.PeriodType periodType13 = periodType12.withMinutesRemoved();
        org.joda.time.Period period14 = duration8.toPeriodTo(readableInstant10, periodType12);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.THREE;
        org.joda.time.DurationFieldType durationFieldType17 = hours16.getFieldType();
        boolean boolean18 = hours15.isGreaterThan(hours16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(readableInstant19, readableDuration20);
        org.joda.time.Period period22 = mutablePeriod21.toPeriod();
        org.joda.time.Period period24 = period22.withHours(0);
        org.joda.time.Hours hours25 = period24.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType26 = hours25.getFieldType();
        int int27 = hours25.getHours();
        boolean boolean28 = hours16.isLessThan(hours25);
        org.joda.time.Hours hours30 = hours16.plus(10);
        boolean boolean31 = periodType12.equals((java.lang.Object) hours16);
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType12);
        org.joda.time.PeriodType periodType33 = periodType12.withWeeksRemoved();
        java.lang.String str34 = periodType33.toString();
        org.joda.time.PeriodType periodType35 = periodType33.withYearsRemoved();
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PeriodType[WeeksNoWeeks]" + "'", str34, "PeriodType[WeeksNoWeeks]");
        org.junit.Assert.assertNotNull(periodType35);
    }

    @Test
    public void test16017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16017");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ZERO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        java.lang.String str2 = seconds0.toString();
        org.joda.time.Seconds seconds4 = seconds0.plus((int) (short) 1);
        org.joda.time.PeriodType periodType5 = seconds0.getPeriodType();
        org.joda.time.PeriodType periodType6 = periodType5.withSecondsRemoved();
        int int7 = periodType5.size();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT0S" + "'", str2, "PT0S");
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test16018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16018");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.ZERO;
        boolean boolean2 = minutes0.isLessThan(minutes1);
        org.joda.time.Minutes minutes4 = minutes0.plus(52);
        int int5 = minutes4.getMinutes();
        org.joda.time.Period period10 = new org.joda.time.Period(10, 0, (int) (byte) 10, (int) (byte) 10);
        org.joda.time.Minutes minutes11 = period10.toStandardMinutes();
        org.joda.time.DurationFieldType durationFieldType12 = minutes11.getFieldType();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.ZERO;
        boolean boolean15 = minutes13.isLessThan(minutes14);
        org.joda.time.Minutes minutes17 = minutes13.plus(52);
        boolean boolean18 = minutes11.isGreaterThan(minutes13);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType20 = minutes19.getPeriodType();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes22 = minutes19.plus(minutes21);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.ZERO;
        boolean boolean25 = minutes23.isLessThan(minutes24);
        boolean boolean26 = minutes19.isLessThan(minutes23);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.minutes(6);
        org.joda.time.Minutes minutes29 = minutes19.plus(minutes28);
        boolean boolean30 = minutes11.isGreaterThan(minutes28);
        org.joda.time.Minutes minutes31 = minutes4.plus(minutes28);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours((long) 25);
        org.joda.time.Minutes minutes34 = duration33.toStandardMinutes();
        org.joda.time.Minutes minutes36 = minutes34.dividedBy((-2147483638));
        org.joda.time.Minutes minutes38 = minutes34.multipliedBy(59);
        org.joda.time.DurationFieldType durationFieldType39 = minutes38.getFieldType();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(readableInstant45, readableDuration46);
        mutablePeriod47.setPeriod((long) ' ', (long) 52);
        mutablePeriod47.addDays(100);
        org.joda.time.PeriodType periodType53 = mutablePeriod47.getPeriodType();
        org.joda.time.Period period54 = new org.joda.time.Period((long) (short) 0, periodType53);
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(readableInstant42, readableInstant43, periodType53);
        org.joda.time.Period period56 = new org.joda.time.Period(readableInstant40, readableInstant41, periodType53);
        org.joda.time.Period period58 = period56.plusMonths(13);
        org.joda.time.Duration duration59 = period56.toStandardDuration();
        org.joda.time.Period period60 = period56.negated();
        org.joda.time.Minutes minutes61 = period60.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.ReadableDuration readableDuration63 = null;
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod(readableInstant62, readableDuration63);
        org.joda.time.Period period65 = mutablePeriod64.toPeriod();
        int int66 = period65.size();
        org.joda.time.Period period68 = period65.plusDays(1);
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.THREE;
        org.joda.time.Period period70 = period65.withFields((org.joda.time.ReadablePeriod) minutes69);
        org.joda.time.Minutes minutes72 = org.joda.time.Minutes.parseMinutes("P0D");
        org.joda.time.Minutes minutes73 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType74 = minutes73.getPeriodType();
        int int75 = minutes73.getMinutes();
        java.lang.String str76 = minutes73.toString();
        org.joda.time.Minutes minutes77 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType78 = minutes77.getFieldType();
        java.lang.String str79 = minutes77.toString();
        boolean boolean80 = minutes73.isLessThan(minutes77);
        org.joda.time.Minutes minutes81 = minutes73.negated();
        org.joda.time.Minutes minutes83 = org.joda.time.Minutes.parseMinutes("P0D");
        org.joda.time.Minutes minutes85 = minutes83.dividedBy((int) '#');
        org.joda.time.Minutes minutes86 = minutes73.minus(minutes83);
        boolean boolean87 = minutes72.isGreaterThan(minutes83);
        org.joda.time.Minutes minutes88 = minutes69.minus(minutes83);
        org.joda.time.Duration duration89 = minutes69.toStandardDuration();
        org.joda.time.Minutes minutes91 = minutes69.multipliedBy(5);
        org.joda.time.MutablePeriod mutablePeriod92 = minutes69.toMutablePeriod();
        org.joda.time.Minutes minutes93 = minutes69.negated();
        org.joda.time.Minutes minutes94 = minutes61.plus(minutes69);
        org.joda.time.Minutes minutes96 = minutes69.minus((-12));
        org.joda.time.Minutes minutes97 = minutes38.minus(minutes96);
        boolean boolean98 = minutes4.isLessThan(minutes96);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 54 + "'", int5 == 54);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 8 + "'", int66 == 8);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "PT0M" + "'", str76, "PT0M");
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "PT-2147483648M" + "'", str79, "PT-2147483648M");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertNotNull(minutes85);
        org.junit.Assert.assertNotNull(minutes86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(minutes88);
        org.junit.Assert.assertNotNull(duration89);
        org.junit.Assert.assertNotNull(minutes91);
        org.junit.Assert.assertNotNull(mutablePeriod92);
        org.junit.Assert.assertNotNull(minutes93);
        org.junit.Assert.assertNotNull(minutes94);
        org.junit.Assert.assertNotNull(minutes96);
        org.junit.Assert.assertNotNull(minutes97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test16019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16019");
        org.joda.time.Duration duration1 = org.joda.time.Duration.parse("PT0S");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Interval interval3 = duration1.toIntervalTo(readableInstant2);
        org.joda.time.Days days4 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval3);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType6 = days4.getFieldType((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(interval3);
        org.junit.Assert.assertNotNull(days4);
    }

    @Test
    public void test16020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16020");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 100, (int) (short) 0, 10, 1, 2, 0, 8);
        mutablePeriod8.add(74, (-21167965), (-5), 40, (-12), (-97), 21, 4);
    }

    @Test
    public void test16021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16021");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.Period period4 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days5 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period4);
        org.joda.time.Period period7 = period4.withSeconds((int) ' ');
        org.joda.time.Period period8 = period1.minus((org.joda.time.ReadablePeriod) period4);
        int int9 = period4.getDays();
        java.lang.String str10 = period4.toString();
        org.joda.time.Period period12 = period4.plusHours((-8));
        org.joda.time.Period period14 = period12.withWeeks(2147483647);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period16 = period14.minusWeeks((-672));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483647 + 672");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT1M" + "'", str10, "PT1M");
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
    }

    @Test
    public void test16022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16022");
        org.joda.time.Period period0 = new org.joda.time.Period();
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableDuration readableDuration2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(readableInstant1, readableDuration2);
        org.joda.time.Period period4 = mutablePeriod3.toPeriod();
        org.joda.time.Period period6 = period4.withHours(0);
        int int7 = period4.getWeeks();
        org.joda.time.Period period9 = period4.plusSeconds((int) (byte) 100);
        org.joda.time.Period period11 = period4.withWeeks((int) '#');
        org.joda.time.PeriodType periodType12 = period4.getPeriodType();
        org.joda.time.Period period13 = period0.normalizedStandard(periodType12);
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(periodType12);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test16023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16023");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodParser periodParser3 = periodFormatter2.getParser();
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter2.getPrinter();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        java.util.Locale locale7 = periodFormatter2.getLocale();
        org.joda.time.PeriodType periodType8 = periodFormatter2.getParseType();
        java.util.Locale locale9 = null;
        org.joda.time.format.PeriodFormatter periodFormatter10 = periodFormatter2.withLocale(locale9);
        boolean boolean11 = periodFormatter2.isPrinter();
        boolean boolean12 = periodFormatter2.isParser();
        org.junit.Assert.assertNull(periodParser3);
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNull(locale7);
        org.junit.Assert.assertNull(periodType8);
        org.junit.Assert.assertNotNull(periodFormatter10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test16024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16024");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-6048000L));
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardSeconds((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.PeriodType periodType9 = periodType8.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant7, periodType8);
        java.lang.String str11 = periodType8.toString();
        org.joda.time.PeriodType periodType12 = periodType8.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(864000000L, (long) (-515), periodType8);
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant2, periodType8);
        org.joda.time.Period period15 = duration1.toPeriod();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PeriodType[YearWeekDay]" + "'", str11, "PeriodType[YearWeekDay]");
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test16025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16025");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType1 = minutes0.getPeriodType();
        int int2 = minutes0.getMinutes();
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = minutes4.getFieldType();
        java.lang.String str6 = minutes4.toString();
        boolean boolean7 = minutes0.isLessThan(minutes4);
        org.joda.time.Minutes minutes8 = minutes0.negated();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.parseMinutes("P0D");
        org.joda.time.Minutes minutes12 = minutes10.dividedBy((int) '#');
        org.joda.time.Minutes minutes13 = minutes0.minus(minutes10);
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT0M" + "'", str3, "PT0M");
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT-2147483648M" + "'", str6, "PT-2147483648M");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
    }

    @Test
    public void test16026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16026");
        org.joda.time.Days days0 = org.joda.time.Days.ZERO;
        org.joda.time.Days days1 = days0.negated();
        int int2 = days0.size();
        org.joda.time.Days days4 = days0.minus(0);
        java.lang.String str5 = days0.toString();
        org.joda.time.Period period7 = org.joda.time.Period.weeks((int) (short) 100);
        boolean boolean8 = days0.equals((java.lang.Object) period7);
        org.joda.time.Days days9 = org.joda.time.Days.ZERO;
        int int10 = days9.getDays();
        org.joda.time.Period period12 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days13 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period12);
        org.joda.time.Period period15 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days16 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period15);
        org.joda.time.PeriodType periodType17 = days16.getPeriodType();
        boolean boolean18 = days13.isGreaterThan(days16);
        org.joda.time.Period period20 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days21 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period20);
        org.joda.time.Days days22 = days16.minus(days21);
        org.joda.time.Days days23 = days9.minus(days16);
        org.joda.time.Period period25 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days26 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period25);
        org.joda.time.Period period28 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days29 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period28);
        org.joda.time.PeriodType periodType30 = days29.getPeriodType();
        boolean boolean31 = days26.isGreaterThan(days29);
        org.joda.time.Period period33 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days34 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period33);
        org.joda.time.Days days35 = days29.minus(days34);
        org.joda.time.Days days36 = days9.plus(days35);
        org.joda.time.Period period38 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days39 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period38);
        org.joda.time.Period period41 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days42 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period41);
        org.joda.time.PeriodType periodType43 = days42.getPeriodType();
        boolean boolean44 = days39.isGreaterThan(days42);
        int int45 = days39.size();
        org.joda.time.Days days46 = days39.negated();
        org.joda.time.Days days48 = days46.minus(3);
        org.joda.time.Days days49 = days48.negated();
        java.lang.String str50 = days49.toString();
        org.joda.time.Period period52 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days53 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period52);
        org.joda.time.Period period55 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days56 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period55);
        org.joda.time.PeriodType periodType57 = days56.getPeriodType();
        boolean boolean58 = days53.isGreaterThan(days56);
        org.joda.time.Days days60 = days53.minus(1);
        org.joda.time.Days days62 = days60.dividedBy(60);
        org.joda.time.Days days63 = days49.plus(days60);
        org.joda.time.Duration duration64 = days49.toStandardDuration();
        boolean boolean65 = days36.isGreaterThan(days49);
        boolean boolean66 = days0.isLessThan(days49);
        java.lang.String str67 = days49.toString();
        org.joda.time.PeriodType periodType68 = days49.getPeriodType();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P0D" + "'", str5, "P0D");
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P3D" + "'", str50, "P3D");
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "P3D" + "'", str67, "P3D");
        org.junit.Assert.assertNotNull(periodType68);
    }

    @Test
    public void test16027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16027");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.Period period4 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days5 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period4);
        org.joda.time.PeriodType periodType6 = days5.getPeriodType();
        boolean boolean7 = days2.isGreaterThan(days5);
        int int8 = days2.size();
        org.joda.time.Days days9 = days2.negated();
        org.joda.time.Days days11 = days9.minus(3);
        org.joda.time.Days days12 = org.joda.time.Days.ZERO;
        int int13 = days12.getDays();
        org.joda.time.Period period15 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days16 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period15);
        org.joda.time.Period period18 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days19 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period18);
        org.joda.time.PeriodType periodType20 = days19.getPeriodType();
        boolean boolean21 = days16.isGreaterThan(days19);
        org.joda.time.Period period23 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days24 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period23);
        org.joda.time.Days days25 = days19.minus(days24);
        org.joda.time.Days days26 = days12.minus(days19);
        org.joda.time.Days days28 = days19.plus((int) (byte) 1);
        org.joda.time.DurationFieldType durationFieldType30 = days28.getFieldType((int) (short) 0);
        boolean boolean31 = days11.isLessThan(days28);
        org.joda.time.Days days32 = org.joda.time.Days.ZERO;
        org.joda.time.Period period34 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days35 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period34);
        org.joda.time.Days days37 = days35.minus(10);
        boolean boolean38 = days32.isGreaterThan(days35);
        boolean boolean39 = days11.isGreaterThan(days35);
        org.joda.time.Days days41 = days11.dividedBy((int) (short) 10);
        org.joda.time.Days days43 = days41.minus((-596828));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days43);
    }

    @Test
    public void test16028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16028");
        org.joda.time.Period period1 = org.joda.time.Period.days((-112));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test16029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16029");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 1, (long) (byte) 1, chronology2);
        org.joda.time.Minutes minutes4 = period3.toStandardMinutes();
        org.joda.time.Minutes minutes6 = minutes4.minus(2);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType10 = periodType9.withWeeksRemoved();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration8.toPeriod(periodType9, chronology11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType15 = periodType14.withMonthsRemoved();
        org.joda.time.Period period16 = duration8.toPeriodTo(readableInstant13, periodType15);
        org.joda.time.Minutes minutes17 = duration8.toStandardMinutes();
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy((int) (short) -1);
        org.joda.time.PeriodType periodType20 = minutes17.getPeriodType();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.ZERO;
        boolean boolean23 = minutes21.isLessThan(minutes22);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType25 = minutes24.getPeriodType();
        int int26 = minutes24.getMinutes();
        java.lang.String str27 = minutes24.toString();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = minutes28.getFieldType();
        java.lang.String str30 = minutes28.toString();
        boolean boolean31 = minutes24.isLessThan(minutes28);
        int int32 = minutes24.size();
        org.joda.time.Minutes minutes33 = minutes21.plus(minutes24);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.ZERO;
        boolean boolean36 = minutes34.isLessThan(minutes35);
        org.joda.time.Minutes minutes38 = minutes35.multipliedBy((int) (short) 10);
        org.joda.time.Minutes minutes39 = minutes24.plus(minutes38);
        org.joda.time.Minutes minutes40 = minutes17.minus(minutes24);
        int int41 = minutes24.size();
        org.joda.time.Minutes minutes43 = minutes24.dividedBy((-6));
        org.joda.time.Minutes minutes44 = minutes4.minus(minutes43);
        org.joda.time.Minutes minutes46 = minutes4.multipliedBy(1);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT0M" + "'", str27, "PT0M");
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT-2147483648M" + "'", str30, "PT-2147483648M");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
    }

    @Test
    public void test16030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16030");
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((-1L));
        mutablePeriod3.addSeconds(100);
        java.lang.Object obj6 = null;
        org.joda.time.Duration duration7 = new org.joda.time.Duration(obj6);
        org.joda.time.Duration duration8 = duration7.toDuration();
        mutablePeriod3.add((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType12 = periodType11.withHoursRemoved();
        org.joda.time.PeriodType periodType13 = periodType12.withMinutesRemoved();
        org.joda.time.Period period14 = duration8.toPeriodTo(readableInstant10, periodType12);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.THREE;
        org.joda.time.DurationFieldType durationFieldType17 = hours16.getFieldType();
        boolean boolean18 = hours15.isGreaterThan(hours16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(readableInstant19, readableDuration20);
        org.joda.time.Period period22 = mutablePeriod21.toPeriod();
        org.joda.time.Period period24 = period22.withHours(0);
        org.joda.time.Hours hours25 = period24.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType26 = hours25.getFieldType();
        int int27 = hours25.getHours();
        boolean boolean28 = hours16.isLessThan(hours25);
        org.joda.time.Hours hours30 = hours16.plus(10);
        boolean boolean31 = periodType12.equals((java.lang.Object) hours16);
        org.joda.time.PeriodType periodType32 = periodType12.withDaysRemoved();
        org.joda.time.Period period33 = new org.joda.time.Period((long) 97, 6000000L, periodType12);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(periodType32);
    }

    @Test
    public void test16031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16031");
        org.joda.time.Duration duration0 = org.joda.time.Duration.ZERO;
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = duration0.toPeriod(chronology1);
        int int3 = period2.size();
        org.joda.time.Period period5 = period2.plusHours((int) (short) 1);
        org.joda.time.Period period6 = period2.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.ZERO;
        long long8 = duration7.getStandardDays();
        org.joda.time.Hours hours9 = duration7.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType10 = hours9.getFieldType();
        org.joda.time.Hours hours11 = null;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        org.joda.time.Period period13 = period6.plus((org.joda.time.ReadablePeriod) hours12);
        org.joda.time.Hours hours15 = hours12.minus((-596526));
        org.joda.time.PeriodType periodType16 = hours12.getPeriodType();
        org.joda.time.Hours hours18 = hours12.dividedBy((-8));
        org.junit.Assert.assertNotNull(duration0);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(hours18);
    }

    @Test
    public void test16032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16032");
        org.joda.time.Duration duration2 = new org.joda.time.Duration(41L, (long) (-100));
        org.joda.time.Duration duration4 = duration2.plus(0L);
        org.joda.time.Period period6 = org.joda.time.Period.hours(0);
        org.joda.time.DurationFieldType durationFieldType8 = period6.getFieldType((int) (short) 1);
        org.joda.time.Period period10 = period6.plusDays(10);
        org.joda.time.Period period12 = period6.plusHours(25);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period12);
        boolean boolean14 = duration2.equals((java.lang.Object) period12);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType16 = period12.getFieldType((-73));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test16033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16033");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType3 = minutes2.getPeriodType();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes5 = minutes2.plus(minutes4);
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.ZERO;
        boolean boolean8 = minutes6.isLessThan(minutes7);
        boolean boolean9 = minutes2.isLessThan(minutes6);
        org.joda.time.PeriodType periodType10 = minutes2.getPeriodType();
        org.joda.time.PeriodType periodType11 = periodType10.withSecondsRemoved();
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType11);
        org.joda.time.MutablePeriod mutablePeriod13 = period12.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(mutablePeriod13);
    }

    @Test
    public void test16034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16034");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (byte) -1);
        org.joda.time.Hours hours3 = hours1.multipliedBy((-1));
        org.joda.time.Hours hours5 = hours3.minus((int) (byte) 1);
        org.joda.time.Hours hours6 = hours5.negated();
        int int7 = hours6.getHours();
        org.joda.time.Hours hours9 = hours6.multipliedBy((-73));
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
    }

    @Test
    public void test16035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16035");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Period period3 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days4 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period3);
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = periodType5.indexOf(durationFieldType6);
        org.joda.time.PeriodType periodType8 = periodType5.withWeeksRemoved();
        org.joda.time.PeriodType periodType9 = periodType8.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType8);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        mutablePeriod10.setPeriod(readableInstant11, readableInstant12);
        int int14 = mutablePeriod10.getDays();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test16036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16036");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.PeriodType periodType3 = days2.getPeriodType();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(readableInstant4, readableDuration5);
        mutablePeriod6.setHours((int) (short) 100);
        boolean boolean9 = periodType3.equals((java.lang.Object) mutablePeriod6);
        org.joda.time.Duration duration10 = org.joda.time.Duration.ZERO;
        long long11 = duration10.getStandardDays();
        mutablePeriod6.add((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period14 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days15 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period14);
        org.joda.time.PeriodType periodType16 = days15.getPeriodType();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(readableInstant17, readableDuration18);
        mutablePeriod19.setHours((int) (short) 100);
        boolean boolean22 = periodType16.equals((java.lang.Object) mutablePeriod19);
        org.joda.time.Duration duration23 = org.joda.time.Duration.ZERO;
        long long24 = duration23.getStandardDays();
        mutablePeriod19.add((org.joda.time.ReadableDuration) duration23);
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((long) (byte) 10, (long) '#', periodType28);
        org.joda.time.DurationFieldType durationFieldType30 = org.joda.time.DurationFieldType.weekyears();
        int int31 = period29.get(durationFieldType30);
        int int32 = mutablePeriod19.get(durationFieldType30);
        int int33 = mutablePeriod6.get(durationFieldType30);
        mutablePeriod6.setYears(8);
        mutablePeriod6.addMonths(71);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test16037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16037");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.Period period4 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days5 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period4);
        org.joda.time.Period period7 = period4.withSeconds((int) ' ');
        org.joda.time.Period period8 = period1.minus((org.joda.time.ReadablePeriod) period4);
        org.joda.time.Period period10 = period1.plusHours((-1));
        org.joda.time.Period period12 = period1.withDays((int) 'a');
        org.joda.time.Period period14 = period1.withMonths((-32));
        java.lang.String str15 = period1.toString();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((-1L));
        org.joda.time.Duration duration20 = duration18.withMillis(0L);
        org.joda.time.Period period22 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days23 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period22);
        org.joda.time.PeriodType periodType24 = days23.getPeriodType();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(readableInstant25, readableDuration26);
        mutablePeriod27.setHours((int) (short) 100);
        boolean boolean30 = periodType24.equals((java.lang.Object) mutablePeriod27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.ZERO;
        long long32 = duration31.getStandardDays();
        mutablePeriod27.add((org.joda.time.ReadableDuration) duration31);
        long long34 = duration31.getStandardMinutes();
        org.joda.time.Duration duration36 = duration31.withMillis((long) 0);
        boolean boolean37 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType42 = periodType41.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((long) (-1), periodType42);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod(10L, (long) 8, periodType42, chronology44);
        org.joda.time.PeriodType periodType46 = mutablePeriod45.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(readableInstant16, (org.joda.time.ReadableDuration) duration31, periodType46);
        org.joda.time.Period period48 = period1.minus((org.joda.time.ReadablePeriod) mutablePeriod47);
        org.joda.time.Chronology chronology50 = null;
        mutablePeriod47.setPeriod((long) 88500, chronology50);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT1M" + "'", str15, "PT1M");
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period48);
    }

    @Test
    public void test16038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16038");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-52M");
        org.joda.time.Days days2 = minutes1.toStandardDays();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(days2);
    }

    @Test
    public void test16039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16039");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.weeksIn(readableInterval1);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.weeksIn(readableInterval3);
        boolean boolean5 = weeks2.isLessThan(weeks4);
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeksIn(readableInterval7);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeksIn(readableInterval9);
        boolean boolean11 = weeks8.isLessThan(weeks10);
        org.joda.time.Weeks weeks12 = weeks8.negated();
        org.joda.time.Weeks weeks14 = weeks12.minus((int) (byte) 100);
        org.joda.time.Weeks weeks15 = weeks6.plus(weeks12);
        boolean boolean16 = weeks0.isLessThan(weeks12);
        org.joda.time.Weeks weeks18 = weeks0.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) '4');
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        org.joda.time.Weeks weeks23 = weeks20.dividedBy(88500);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks23);
    }

    @Test
    public void test16040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16040");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) 5);
        long long2 = duration1.getStandardDays();
        java.lang.String str3 = duration1.toString();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardDays((long) 600);
        org.joda.time.Seconds seconds6 = duration5.toStandardSeconds();
        org.joda.time.Duration duration8 = duration5.withMillis((-8L));
        org.joda.time.Duration duration10 = duration5.withMillis((long) 2);
        boolean boolean11 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration5);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT300S" + "'", str3, "PT300S");
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test16041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16041");
        org.joda.time.Period period1 = new org.joda.time.Period((long) '4');
        org.joda.time.Period period3 = period1.withHours(32);
        org.joda.time.Period period5 = period3.minusYears(3);
        org.joda.time.Period period7 = period5.withMillis((int) (byte) 0);
        org.joda.time.ReadablePeriod readablePeriod8 = null;
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn(readablePeriod8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.ZERO;
        boolean boolean12 = minutes10.isLessThan(minutes11);
        boolean boolean13 = minutes9.isGreaterThan(minutes10);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        org.joda.time.Minutes minutes16 = minutes14.minus((int) (byte) 100);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType18 = minutes17.getPeriodType();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes20 = minutes17.plus(minutes19);
        org.joda.time.DurationFieldType durationFieldType21 = minutes17.getFieldType();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(readableInstant22, readableDuration23);
        org.joda.time.Period period25 = mutablePeriod24.toPeriod();
        org.joda.time.Period period27 = period25.withHours(0);
        int int28 = period25.getWeeks();
        org.joda.time.Period period30 = period25.plusSeconds((int) (byte) 100);
        org.joda.time.Period period32 = period25.withWeeks((int) '#');
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.millis();
        org.joda.time.Period period34 = period25.withPeriodType(periodType33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.time();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(readableInstant36, readableDuration37);
        org.joda.time.Period period39 = mutablePeriod38.toPeriod();
        org.joda.time.Period period41 = period39.withHours(0);
        org.joda.time.DurationFieldType durationFieldType42 = org.joda.time.DurationFieldType.days();
        int int43 = period39.indexOf(durationFieldType42);
        int int44 = periodType35.indexOf(durationFieldType42);
        boolean boolean45 = periodType33.isSupported(durationFieldType42);
        int int46 = minutes17.get(durationFieldType42);
        org.joda.time.Minutes minutes47 = minutes14.minus(minutes17);
        org.joda.time.Period period48 = period5.withFields((org.joda.time.ReadablePeriod) minutes47);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 3 + "'", int43 == 3);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(period48);
    }

    @Test
    public void test16042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16042");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) '4', chronology1);
        org.joda.time.Duration duration3 = org.joda.time.Duration.ZERO;
        long long4 = duration3.getStandardDays();
        org.joda.time.Hours hours5 = duration3.toStandardHours();
        long long6 = duration3.getStandardMinutes();
        long long7 = duration3.getStandardDays();
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration3);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration3.toIntervalFrom(readableInstant9);
        long long11 = duration3.getStandardDays();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test16043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16043");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration1 = org.joda.time.Duration.ZERO;
        long long2 = duration1.getStandardDays();
        org.joda.time.Hours hours3 = duration1.toStandardHours();
        org.joda.time.Duration duration5 = duration1.withMillis(0L);
        org.joda.time.Period period6 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration1);
        org.joda.time.Period period8 = period6.withDays((int) (short) 0);
        org.joda.time.Period period10 = period8.withDays((int) (byte) -1);
        org.joda.time.Period period11 = period8.normalizedStandard();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test16044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16044");
        org.joda.time.Period period4 = new org.joda.time.Period(0, 100, (int) '#', 100);
        org.joda.time.Period period5 = period4.negated();
        org.joda.time.Period period7 = period5.withWeeks((int) '#');
        org.joda.time.Period period8 = period7.toPeriod();
        org.joda.time.Period period10 = period8.withDays(600);
        org.joda.time.Period period12 = period10.minusYears((int) (short) 0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType14 = minutes13.getPeriodType();
        org.joda.time.PeriodType periodType15 = periodType14.withMinutesRemoved();
        org.joda.time.PeriodType periodType16 = periodType14.withSecondsRemoved();
        org.joda.time.PeriodType periodType17 = periodType16.withHoursRemoved();
        org.joda.time.PeriodType periodType18 = periodType16.withWeeksRemoved();
        org.joda.time.PeriodType periodType19 = periodType18.withDaysRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period20 = period12.withPeriodType(periodType19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'weeks'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
    }

    @Test
    public void test16045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16045");
        org.joda.time.Duration duration0 = org.joda.time.Duration.ZERO;
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = duration0.toPeriod(chronology1);
        int int3 = period2.size();
        org.joda.time.Period period5 = period2.plusHours((int) (short) 1);
        org.joda.time.Period period6 = period2.toPeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray7 = period2.getFieldTypes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds10 = duration9.toStandardSeconds();
        org.joda.time.Seconds seconds12 = seconds10.plus(100);
        boolean boolean13 = period2.equals((java.lang.Object) seconds12);
        org.joda.time.Seconds seconds14 = seconds12.negated();
        org.joda.time.Seconds seconds16 = seconds12.dividedBy((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            int int18 = seconds16.getValue((-2147483588));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483588");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration0);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(durationFieldTypeArray7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
    }

    @Test
    public void test16046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16046");
        org.joda.time.Period period1 = org.joda.time.Period.weeks((-91));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test16047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16047");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableDuration1);
        mutablePeriod2.setSeconds(8);
        mutablePeriod2.setValue(1, 2);
        mutablePeriod2.add((long) '4');
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((long) 0, (long) (byte) 10, periodType12, chronology13);
        org.joda.time.Duration duration15 = org.joda.time.Duration.ZERO;
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration15.toPeriod(chronology16);
        org.joda.time.Period period18 = period14.withFields((org.joda.time.ReadablePeriod) period17);
        org.joda.time.Period period19 = period14.normalizedStandard();
        org.joda.time.Period period21 = period19.plusDays((int) (short) 100);
        org.joda.time.Period period23 = period21.plusDays(35);
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period23);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours26 = org.joda.time.Hours.THREE;
        org.joda.time.DurationFieldType durationFieldType27 = hours26.getFieldType();
        boolean boolean28 = hours25.isGreaterThan(hours26);
        org.joda.time.PeriodType periodType29 = hours26.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType30 = hours26.getFieldType();
        org.joda.time.Period period32 = period23.withFieldAdded(durationFieldType30, (-8));
        org.joda.time.Period period34 = period32.plusHours((int) (short) 1);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
    }

    @Test
    public void test16048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16048");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds4 = duration3.toStandardSeconds();
        java.lang.String str5 = seconds4.toString();
        org.joda.time.PeriodType periodType6 = seconds4.getPeriodType();
        org.joda.time.PeriodType periodType7 = periodType6.withSecondsRemoved();
        org.joda.time.PeriodType periodType8 = periodType7.withDaysRemoved();
        org.joda.time.PeriodType periodType9 = periodType8.withWeeksRemoved();
        org.joda.time.PeriodType periodType10 = periodType9.withHoursRemoved();
        java.lang.String str11 = periodType9.toString();
        org.joda.time.PeriodType periodType12 = periodType9.withDaysRemoved();
        org.joda.time.PeriodType periodType13 = periodType9.withSecondsRemoved();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType9);
        org.joda.time.Chronology chronology17 = null;
        mutablePeriod14.setPeriod(0L, 25200000L, chronology17);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT60S" + "'", str5, "PT60S");
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PeriodType[SecondsNoSeconds]" + "'", str11, "PeriodType[SecondsNoSeconds]");
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
    }

    @Test
    public void test16049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16049");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        java.lang.Object obj2 = null;
        org.joda.time.Duration duration3 = new org.joda.time.Duration(obj2);
        org.joda.time.Period period4 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration3);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType9 = periodType8.withWeeksRemoved();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration7.toPeriod(periodType8, chronology10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType14 = periodType13.withMonthsRemoved();
        org.joda.time.Period period15 = duration7.toPeriodTo(readableInstant12, periodType14);
        org.joda.time.Period period16 = duration7.toPeriod();
        org.joda.time.Duration duration17 = duration3.plus((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration18 = duration3.toDuration();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((java.lang.Object) duration3, chronology19);
        org.joda.time.Period period22 = period20.plusWeeks((int) '4');
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period20);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((java.lang.Object) period20, chronology24);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(minutes23);
    }

    @Test
    public void test16050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16050");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.Seconds seconds5 = seconds3.dividedBy(32);
        org.joda.time.PeriodType periodType6 = seconds3.getPeriodType();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((-3600L), periodType6, chronology7);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((long) 8);
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Duration duration14 = duration10.withDurationAdded((long) 100, 0);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Interval interval16 = duration10.toIntervalFrom(readableInstant15);
        mutablePeriod8.setPeriod((org.joda.time.ReadableInterval) interval16);
        int int18 = mutablePeriod8.getHours();
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.seconds(0);
        org.joda.time.Duration duration21 = seconds20.toStandardDuration();
        org.joda.time.Duration duration23 = duration21.withMillis((-7L));
        long long24 = duration23.getMillis();
        long long25 = duration23.getStandardDays();
        org.joda.time.Chronology chronology26 = null;
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration23, chronology26);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 8L + "'", long11 == 8L);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-7L) + "'", long24 == (-7L));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
    }

    @Test
    public void test16051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16051");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) (short) 1);
        org.joda.time.Period period2 = period1.toPeriod();
        int int3 = period2.getSeconds();
        java.lang.String str4 = period2.toString();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT0.001S" + "'", str4, "PT0.001S");
    }

    @Test
    public void test16052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16052");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds2 = duration1.toStandardSeconds();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds5 = duration4.toStandardSeconds();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds9 = duration8.toStandardSeconds();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds12 = duration11.toStandardSeconds();
        boolean boolean13 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Period period14 = duration8.toPeriod();
        boolean boolean15 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = duration4.toPeriodTo(readableInstant16);
        long long18 = duration4.getStandardDays();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.Period period21 = duration20.toPeriod();
        long long22 = duration20.getStandardSeconds();
        boolean boolean23 = duration4.isEqual((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((long) 10);
        java.lang.String str26 = duration25.toString();
        org.joda.time.Duration duration28 = duration25.minus((long) (byte) 10);
        boolean boolean29 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.PeriodType periodType33 = null;
        org.joda.time.Period period34 = duration28.toPeriodTo(readableInstant32, periodType33);
        org.joda.time.Period period36 = period34.plusYears(1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes37 = period36.toStandardMinutes();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Minutes as this period contains years and years vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-60L) + "'", long22 == (-60L));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT600S" + "'", str26, "PT600S");
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
    }

    @Test
    public void test16053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16053");
        org.joda.time.Days days0 = org.joda.time.Days.ZERO;
        org.joda.time.Period period2 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days3 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period2);
        org.joda.time.Days days5 = days3.minus(10);
        boolean boolean6 = days0.isGreaterThan(days3);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = days0.get(durationFieldType7);
        org.joda.time.Days days10 = days0.plus(35);
        org.joda.time.Days days11 = org.joda.time.Days.ZERO;
        int int12 = days11.getDays();
        org.joda.time.Period period14 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days15 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period14);
        org.joda.time.Period period17 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days18 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period17);
        org.joda.time.PeriodType periodType19 = days18.getPeriodType();
        boolean boolean20 = days15.isGreaterThan(days18);
        org.joda.time.Period period22 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days23 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period22);
        org.joda.time.Days days24 = days18.minus(days23);
        org.joda.time.Days days25 = days11.minus(days18);
        org.joda.time.Days days26 = days0.minus(days18);
        org.joda.time.Days days28 = days18.minus((int) 'a');
        org.joda.time.Days days29 = days28.negated();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
    }

    @Test
    public void test16054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16054");
        java.lang.Object obj0 = null;
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(obj0);
        mutablePeriod1.setMonths(8);
        mutablePeriod1.setWeeks(99);
    }

    @Test
    public void test16055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16055");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((-515));
        org.junit.Assert.assertNotNull(seconds1);
    }

    @Test
    public void test16056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16056");
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.secondsIn(readableInterval2);
        int int4 = seconds3.getSeconds();
        org.joda.time.Seconds seconds6 = seconds3.dividedBy(32);
        org.joda.time.PeriodType periodType7 = seconds6.getPeriodType();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(600L, 101L, periodType7, chronology8);
        org.joda.time.Duration duration12 = new org.joda.time.Duration(0L, 10L);
        mutablePeriod9.add((org.joda.time.ReadableDuration) duration12);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(periodType7);
    }

    @Test
    public void test16057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16057");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((long) (byte) 100);
        mutablePeriod1.setMillis(100);
        org.joda.time.Chronology chronology6 = null;
        mutablePeriod1.setPeriod((-7L), (long) '4', chronology6);
        mutablePeriod1.setSeconds(10);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod1.add((-5184000000L), chronology11);
        mutablePeriod1.add(7L);
    }

    @Test
    public void test16058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16058");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) ' ');
        org.joda.time.Period period3 = minutes0.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test16059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16059");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Period period3 = period1.minusWeeks(52);
        org.joda.time.Days days4 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.Period period5 = period1.toPeriod();
        org.joda.time.Period period7 = period5.minusDays((int) (short) 100);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration9 = period7.toDurationFrom(readableInstant8);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = period7.getValue((-21167965));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -21167965");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
    }

    @Test
    public void test16060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16060");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeksIn(readableInterval2);
        boolean boolean4 = weeks1.isLessThan(weeks3);
        org.joda.time.Weeks weeks6 = weeks3.minus((int) (short) -1);
        org.joda.time.Weeks weeks8 = weeks6.multipliedBy(0);
        org.joda.time.Weeks weeks9 = null;
        boolean boolean10 = weeks6.isLessThan(weeks9);
        int int12 = weeks6.getValue((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Chronology chronology14 = null;
        boolean boolean15 = durationFieldType13.isSupported(chronology14);
        boolean boolean16 = weeks6.isSupported(durationFieldType13);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.TWO;
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.weeksIn(readableInterval18);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeksIn(readableInterval20);
        boolean boolean22 = weeks19.isLessThan(weeks21);
        org.joda.time.Weeks weeks23 = weeks19.negated();
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeksIn(readableInterval24);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.weeksIn(readableInterval26);
        boolean boolean28 = weeks25.isLessThan(weeks27);
        org.joda.time.Weeks weeks29 = weeks25.negated();
        org.joda.time.Weeks weeks31 = weeks29.minus((int) (byte) 100);
        org.joda.time.Weeks weeks32 = weeks23.plus(weeks29);
        boolean boolean33 = weeks17.isLessThan(weeks29);
        org.joda.time.Weeks weeks34 = weeks6.minus(weeks29);
        org.joda.time.Weeks weeks36 = weeks34.plus((int) (byte) 0);
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.weeksIn(readableInterval37);
        org.joda.time.ReadableInterval readableInterval39 = null;
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.weeksIn(readableInterval39);
        boolean boolean41 = weeks38.isLessThan(weeks40);
        org.joda.time.Weeks weeks42 = weeks38.negated();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((java.lang.Object) weeks38, chronology43);
        org.joda.time.Weeks weeks46 = weeks38.multipliedBy((int) (byte) 1);
        org.joda.time.Weeks weeks48 = weeks46.multipliedBy((int) (short) -1);
        org.joda.time.PeriodType periodType49 = weeks48.getPeriodType();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.weeks(1);
        java.lang.String str52 = weeks51.toString();
        org.joda.time.Weeks weeks53 = weeks48.plus(weeks51);
        boolean boolean54 = weeks34.isGreaterThan(weeks51);
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.weeksIn(readableInterval55);
        org.joda.time.ReadableInterval readableInterval57 = null;
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.weeksIn(readableInterval57);
        boolean boolean59 = weeks56.isLessThan(weeks58);
        org.joda.time.Weeks weeks60 = weeks56.negated();
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((java.lang.Object) weeks56, chronology61);
        org.joda.time.Weeks weeks64 = weeks56.multipliedBy((int) (byte) 1);
        org.joda.time.Duration duration65 = weeks56.toStandardDuration();
        org.joda.time.Weeks weeks66 = weeks51.minus(weeks56);
        java.lang.String str67 = weeks56.toString();
        org.joda.time.Hours hours68 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Days days69 = hours68.toStandardDays();
        // The following exception was thrown during execution in test generation
        try {
            int int70 = weeks56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours68);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class org.joda.time.Weeks cannot be compared to class org.joda.time.Hours");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "P1W" + "'", str52, "P1W");
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "P0W" + "'", str67, "P0W");
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(days69);
    }

    @Test
    public void test16061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16061");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds6 = duration5.toStandardSeconds();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType10 = periodType9.withMinutesRemoved();
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant8, periodType9);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration14 = duration5.plus(540000L);
        org.joda.time.Duration duration16 = duration5.plus((long) (byte) 1);
        org.joda.time.Period period18 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Period period20 = period18.withMillis((int) (byte) -1);
        org.joda.time.Period period22 = period18.withMillis(0);
        org.joda.time.Seconds seconds23 = period22.toStandardSeconds();
        org.joda.time.Seconds seconds25 = seconds23.multipliedBy((int) (byte) 100);
        org.joda.time.Seconds seconds27 = seconds25.plus((-60));
        boolean boolean28 = duration5.equals((java.lang.Object) seconds25);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test16062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16062");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) (-15));
        org.joda.time.Period period3 = org.joda.time.Period.weeks(1);
        org.joda.time.Period period5 = period3.withWeeks((int) ' ');
        org.joda.time.DurationFieldType[] durationFieldTypeArray6 = period5.getFieldTypes();
        org.joda.time.Hours hours7 = period5.toStandardHours();
        org.joda.time.Period period9 = period5.withHours((-160));
        org.joda.time.Period period11 = period9.minusMonths((-940));
        boolean boolean12 = duration1.equals((java.lang.Object) (-940));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(durationFieldTypeArray6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test16063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16063");
        org.joda.time.format.PeriodPrinter periodPrinter2 = null;
        org.joda.time.format.PeriodParser periodParser3 = null;
        org.joda.time.format.PeriodFormatter periodFormatter4 = new org.joda.time.format.PeriodFormatter(periodPrinter2, periodParser3);
        java.util.Locale locale5 = periodFormatter4.getLocale();
        org.joda.time.format.PeriodParser periodParser6 = periodFormatter4.getParser();
        org.joda.time.Duration duration8 = new org.joda.time.Duration((long) (-1));
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = duration8.toPeriodFrom(readableInstant9);
        org.joda.time.DurationFieldType[] durationFieldTypeArray11 = period10.getFieldTypes();
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.forFields(durationFieldTypeArray11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds15 = duration14.toStandardSeconds();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds18 = duration17.toStandardSeconds();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Period period20 = duration14.toPeriod();
        org.joda.time.Period period21 = period20.negated();
        org.joda.time.Seconds seconds22 = period21.toStandardSeconds();
        org.joda.time.Period period23 = period21.negated();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Duration duration25 = period21.toDurationTo(readableInstant24);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((long) 10);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration27.toPeriod(chronology28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration27);
        long long31 = duration27.getMillis();
        boolean boolean32 = periodType12.equals((java.lang.Object) long31);
        org.joda.time.format.PeriodFormatter periodFormatter33 = periodFormatter4.withParseType(periodType12);
        org.joda.time.PeriodType periodType34 = periodType12.withDaysRemoved();
        org.joda.time.Period period35 = new org.joda.time.Period((-40320L), (long) (-86400), periodType34);
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNull(periodParser6);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(durationFieldTypeArray11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 600000L + "'", long31 == 600000L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(periodFormatter33);
        org.junit.Assert.assertNotNull(periodType34);
    }

    @Test
    public void test16064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16064");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableDuration1);
        mutablePeriod2.setSeconds(8);
        mutablePeriod2.setValue(1, 2);
        mutablePeriod2.setHours(32);
        int int10 = mutablePeriod2.getMillis();
        mutablePeriod2.setPeriod(5, 10, (int) 'a', (-8), 2147483622, 2147483622, (-2147483648), (-1));
        org.joda.time.MutablePeriod mutablePeriod20 = mutablePeriod2.toMutablePeriod();
        mutablePeriod2.addHours(0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod20);
    }

    @Test
    public void test16065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16065");
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.minutesIn(readableInterval1);
        java.lang.String str3 = minutes2.toString();
        org.joda.time.Minutes minutes5 = minutes2.plus(2);
        org.joda.time.Minutes minutes7 = minutes2.multipliedBy(4);
        org.joda.time.Minutes minutes8 = null;
        org.joda.time.Minutes minutes9 = minutes7.minus(minutes8);
        org.joda.time.PeriodType periodType10 = minutes9.getPeriodType();
        org.joda.time.PeriodType periodType11 = periodType10.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((long) (-609), periodType10);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT0M" + "'", str3, "PT0M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
    }

    @Test
    public void test16066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16066");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((long) 0, (long) (byte) 10, periodType2, chronology3);
        org.joda.time.Duration duration5 = org.joda.time.Duration.ZERO;
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration5.toPeriod(chronology6);
        org.joda.time.Period period8 = period4.withFields((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Period period9 = period4.normalizedStandard();
        org.joda.time.Period period11 = period4.plusYears(3);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = period4.get(durationFieldType12);
        org.joda.time.Period period15 = period4.minusYears(2147483647);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test16067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16067");
        org.joda.time.Duration duration0 = org.joda.time.Duration.ZERO;
        long long1 = duration0.getStandardDays();
        org.joda.time.Hours hours2 = duration0.toStandardHours();
        long long3 = duration0.getStandardMinutes();
        org.joda.time.Hours hours4 = duration0.toStandardHours();
        org.joda.time.Hours hours5 = null;
        boolean boolean6 = hours4.isGreaterThan(hours5);
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((int) (short) -1, (int) '#', (int) ' ', 100);
        org.joda.time.DurationFieldType durationFieldType12 = org.joda.time.DurationFieldType.days();
        int int13 = mutablePeriod11.get(durationFieldType12);
        org.joda.time.Hours hours14 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) mutablePeriod11);
        org.joda.time.Hours hours16 = hours14.dividedBy((int) (short) -1);
        org.joda.time.Hours hours17 = org.joda.time.Hours.FOUR;
        org.joda.time.Hours hours19 = hours17.minus(0);
        org.joda.time.Hours hours20 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours22 = org.joda.time.Hours.hours((int) (byte) -1);
        boolean boolean23 = hours20.isGreaterThan(hours22);
        boolean boolean24 = hours19.isLessThan(hours22);
        java.lang.String str25 = hours19.toString();
        org.joda.time.Hours hours26 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours27 = hours19.plus(hours26);
        org.joda.time.Hours hours28 = hours14.minus(hours19);
        org.joda.time.Hours hours29 = org.joda.time.Hours.TWO;
        int int30 = hours29.getHours();
        org.joda.time.Hours hours31 = hours29.negated();
        boolean boolean32 = hours19.isGreaterThan(hours31);
        java.lang.String str33 = hours19.toString();
        boolean boolean34 = hours4.isLessThan(hours19);
        org.joda.time.Hours hours36 = org.joda.time.Hours.hours((int) (byte) -1);
        org.joda.time.Hours hours38 = hours36.multipliedBy((-1));
        org.joda.time.Hours hours40 = hours38.minus((int) (byte) 1);
        org.joda.time.MutablePeriod mutablePeriod42 = org.joda.time.MutablePeriod.parse("PT0S");
        org.joda.time.Chronology chronology45 = null;
        mutablePeriod42.setPeriod((long) 25, (long) (byte) 100, chronology45);
        mutablePeriod42.setWeeks((int) '4');
        int int49 = mutablePeriod42.size();
        boolean boolean50 = hours38.equals((java.lang.Object) mutablePeriod42);
        org.joda.time.Hours hours51 = org.joda.time.Hours.FIVE;
        int int52 = hours51.getHours();
        org.joda.time.PeriodType periodType53 = hours51.getPeriodType();
        boolean boolean54 = hours38.equals((java.lang.Object) hours51);
        boolean boolean55 = hours19.isLessThan(hours38);
        org.joda.time.Hours hours56 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours19);
        org.junit.Assert.assertNotNull(duration0);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT4H" + "'", str25, "PT4H");
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT4H" + "'", str33, "PT4H");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 8 + "'", int49 == 8);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 5 + "'", int52 == 5);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(hours56);
    }

    @Test
    public void test16068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16068");
        org.joda.time.Period period9 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days10 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Period period12 = period9.withSeconds((int) ' ');
        int int13 = period12.getSeconds();
        org.joda.time.Period period15 = period12.minusMillis(0);
        org.joda.time.Days days16 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period12);
        org.joda.time.Period period18 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days19 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Period period21 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days22 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period21);
        org.joda.time.PeriodType periodType23 = days22.getPeriodType();
        boolean boolean24 = days19.isGreaterThan(days22);
        int int25 = days19.size();
        org.joda.time.Days days26 = days19.negated();
        org.joda.time.Days days28 = days26.minus(3);
        org.joda.time.Days days29 = days28.negated();
        java.lang.String str30 = days29.toString();
        org.joda.time.Period period32 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days33 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period32);
        org.joda.time.Period period35 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days36 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period35);
        org.joda.time.PeriodType periodType37 = days36.getPeriodType();
        boolean boolean38 = days33.isGreaterThan(days36);
        org.joda.time.Days days40 = days33.minus(1);
        org.joda.time.Days days42 = days40.dividedBy(60);
        org.joda.time.Days days43 = days29.plus(days40);
        org.joda.time.Days days44 = days16.minus(days43);
        org.joda.time.Days days46 = days43.plus((-672));
        org.joda.time.Days days48 = days46.multipliedBy((-637));
        org.joda.time.Days days51 = org.joda.time.Days.ZERO;
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((java.lang.Object) days51, periodType52, chronology53);
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod((long) 60, (long) (byte) 100, periodType52);
        org.joda.time.PeriodType periodType56 = periodType52.withMonthsRemoved();
        org.joda.time.Period period57 = new org.joda.time.Period((java.lang.Object) days46, periodType56);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period58 = new org.joda.time.Period(0, (-1073741824), 194, (-97), 125, (-35), (-8), 8384459, periodType56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'months'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "P3D" + "'", str30, "P3D");
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(periodType56);
    }

    @Test
    public void test16069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16069");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days1 = org.joda.time.Days.parseDays("PT-675H");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'hours'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test16070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16070");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (-13));
        org.joda.time.Hours hours2 = duration1.toStandardHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(hours2);
    }

    @Test
    public void test16071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16071");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ZERO;
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        java.lang.String str3 = seconds1.toString();
        org.joda.time.Seconds seconds5 = seconds1.plus((int) (short) 1);
        org.joda.time.PeriodType periodType6 = seconds1.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(168L, periodType6);
        org.joda.time.Period period8 = mutablePeriod7.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT0S" + "'", str3, "PT0S");
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test16072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16072");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.Days days2 = days0.minus((-32));
        org.joda.time.Days days4 = days2.multipliedBy((-672));
        org.joda.time.Period period6 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days7 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period6);
        org.joda.time.Period period9 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days10 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period9);
        org.joda.time.PeriodType periodType11 = days10.getPeriodType();
        boolean boolean12 = days7.isGreaterThan(days10);
        org.joda.time.Days days14 = days7.minus(1);
        org.joda.time.Days days16 = days14.dividedBy(60);
        org.joda.time.Days days17 = days14.negated();
        org.joda.time.Days days19 = days14.plus((-637));
        boolean boolean20 = days4.isLessThan(days19);
        org.joda.time.Duration duration21 = days19.toStandardDuration();
        org.joda.time.Days days22 = days19.negated();
        java.lang.String str23 = days22.toString();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P638D" + "'", str23, "P638D");
    }

    @Test
    public void test16073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16073");
        org.joda.time.Duration duration0 = org.joda.time.Duration.ZERO;
        long long1 = duration0.getStandardDays();
        org.joda.time.Hours hours2 = duration0.toStandardHours();
        org.joda.time.Hours hours3 = hours2.negated();
        org.joda.time.Hours hours5 = hours3.plus((int) '#');
        org.joda.time.Duration duration6 = hours5.toStandardDuration();
        long long7 = duration6.getMillis();
        org.joda.time.Chronology chronology8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period9 = new org.joda.time.Period((java.lang.Object) long7, chronology8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Long");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration0);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 126000000L + "'", long7 == 126000000L);
    }

    @Test
    public void test16074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16074");
        org.joda.time.Period period1 = org.joda.time.Period.millis(135);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test16075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16075");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableDuration1);
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds5 = duration4.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType6 = seconds5.getFieldType();
        mutablePeriod2.add(durationFieldType6, 52);
        int int9 = mutablePeriod2.getMinutes();
        int int10 = mutablePeriod2.getMinutes();
        org.joda.time.Duration duration13 = new org.joda.time.Duration((long) (short) 10, (long) '4');
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Period period15 = mutablePeriod2.toPeriod();
        int int16 = mutablePeriod2.getYears();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test16076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16076");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        java.lang.String str4 = seconds3.toString();
        org.joda.time.PeriodType periodType5 = seconds3.getPeriodType();
        org.joda.time.PeriodType periodType6 = periodType5.withSecondsRemoved();
        org.joda.time.PeriodType periodType7 = periodType6.withDaysRemoved();
        java.lang.String str8 = periodType7.toString();
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(periodType7);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((-4L), periodType7, chronology10);
        org.joda.time.PeriodType periodType12 = periodType7.withYearsRemoved();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT60S" + "'", str4, "PT60S");
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PeriodType[SecondsNoSeconds]" + "'", str8, "PeriodType[SecondsNoSeconds]");
        org.junit.Assert.assertNotNull(periodType12);
    }

    @Test
    public void test16077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16077");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType3 = periodType2.withWeeksRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.Period period5 = duration1.toPeriod(periodType2, chronology4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType8 = periodType7.withMonthsRemoved();
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant6, periodType8);
        org.joda.time.Duration duration10 = duration1.toDuration();
        org.joda.time.Period period12 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days13 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period12);
        org.joda.time.PeriodType periodType14 = days13.getPeriodType();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(readableInstant15, readableDuration16);
        mutablePeriod17.setHours((int) (short) 100);
        boolean boolean20 = periodType14.equals((java.lang.Object) mutablePeriod17);
        org.joda.time.Duration duration21 = org.joda.time.Duration.ZERO;
        long long22 = duration21.getStandardDays();
        mutablePeriod17.add((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType26 = periodType25.withWeeksRemoved();
        org.joda.time.PeriodType periodType27 = periodType26.withDaysRemoved();
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant24, periodType26);
        boolean boolean29 = duration1.isEqual((org.joda.time.ReadableDuration) duration21);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration21.toPeriod(chronology30);
        long long32 = duration21.getStandardSeconds();
        org.joda.time.Days days33 = org.joda.time.Days.ZERO;
        int int34 = days33.getDays();
        org.joda.time.Period period36 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days37 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period36);
        org.joda.time.Period period39 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days40 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period39);
        org.joda.time.PeriodType periodType41 = days40.getPeriodType();
        boolean boolean42 = days37.isGreaterThan(days40);
        org.joda.time.Period period44 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days45 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period44);
        org.joda.time.Days days46 = days40.minus(days45);
        org.joda.time.Days days47 = days33.minus(days40);
        org.joda.time.Days days48 = org.joda.time.Days.ZERO;
        int int49 = days48.getDays();
        org.joda.time.Period period51 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days52 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period51);
        org.joda.time.Period period54 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days55 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period54);
        org.joda.time.PeriodType periodType56 = days55.getPeriodType();
        boolean boolean57 = days52.isGreaterThan(days55);
        org.joda.time.Period period59 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days60 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period59);
        org.joda.time.Days days61 = days55.minus(days60);
        org.joda.time.Days days62 = days48.minus(days55);
        org.joda.time.Days days64 = days55.plus((int) (byte) 1);
        org.joda.time.Days days65 = days64.negated();
        boolean boolean66 = days33.isGreaterThan(days64);
        org.joda.time.Period period68 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days69 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period68);
        org.joda.time.Period period71 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days72 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period71);
        org.joda.time.PeriodType periodType73 = days72.getPeriodType();
        boolean boolean74 = days69.isGreaterThan(days72);
        org.joda.time.Period period76 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days77 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period76);
        org.joda.time.Days days78 = days72.minus(days77);
        int int79 = days72.size();
        org.joda.time.Days days80 = org.joda.time.Days.ZERO;
        org.joda.time.Period period82 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days83 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period82);
        org.joda.time.Days days85 = days83.minus(10);
        boolean boolean86 = days80.isGreaterThan(days83);
        org.joda.time.Days days87 = days72.minus(days83);
        org.joda.time.Duration duration88 = days87.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType89 = days87.getFieldType();
        org.joda.time.Days days90 = org.joda.time.Days.ONE;
        boolean boolean91 = days87.isGreaterThan(days90);
        org.joda.time.Days days93 = days87.dividedBy(6);
        org.joda.time.Days days94 = days33.plus(days87);
        org.joda.time.Duration duration95 = days87.toStandardDuration();
        boolean boolean96 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration95);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(days72);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(days77);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(days80);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(days83);
        org.junit.Assert.assertNotNull(days85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(days87);
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertNotNull(durationFieldType89);
        org.junit.Assert.assertNotNull(days90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(days93);
        org.junit.Assert.assertNotNull(days94);
        org.junit.Assert.assertNotNull(duration95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test16078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16078");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableDuration1);
        mutablePeriod2.setHours((int) (short) 100);
        mutablePeriod2.addMillis(1);
        int int7 = mutablePeriod2.getSeconds();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours(600000L);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Interval interval11 = duration9.toIntervalTo(readableInstant10);
        mutablePeriod2.add((org.joda.time.ReadableInterval) interval11);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(interval11);
    }

    @Test
    public void test16079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16079");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) -1, (int) '#', (int) ' ', 100);
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.days();
        int int6 = mutablePeriod4.get(durationFieldType5);
        org.joda.time.Hours hours7 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) mutablePeriod4);
        org.joda.time.Hours hours9 = hours7.dividedBy((int) (short) -1);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(readableInstant10, readableDuration11);
        org.joda.time.Period period13 = mutablePeriod12.toPeriod();
        org.joda.time.Period period15 = period13.withHours(0);
        org.joda.time.Hours hours16 = period15.toStandardHours();
        org.joda.time.Hours hours17 = hours9.minus(hours16);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType21 = periodType20.withWeeksRemoved();
        org.joda.time.PeriodType periodType22 = periodType21.withDaysRemoved();
        org.joda.time.Period period23 = new org.joda.time.Period((long) 'a', (long) (short) 0, periodType22);
        org.joda.time.Hours hours24 = period23.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType25 = hours24.getFieldType();
        boolean boolean26 = hours16.isLessThan(hours24);
        org.joda.time.DurationFieldType durationFieldType27 = org.joda.time.DurationFieldType.days();
        int int28 = hours16.get(durationFieldType27);
        org.joda.time.Chronology chronology29 = null;
        boolean boolean30 = durationFieldType27.isSupported(chronology29);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test16080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16080");
        org.joda.time.Period period1 = org.joda.time.Period.hours(0);
        org.joda.time.DurationFieldType durationFieldType3 = period1.getFieldType((int) (short) 1);
        org.joda.time.Period period5 = period1.plusDays(10);
        org.joda.time.Seconds seconds6 = period1.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        org.joda.time.DurationFieldType durationFieldType8 = seconds6.getFieldType();
        org.joda.time.Seconds seconds10 = seconds6.minus(52);
        org.joda.time.Duration duration11 = seconds6.toStandardDuration();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(duration11);
    }

    @Test
    public void test16081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16081");
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.ZERO;
        org.joda.time.PeriodType periodType3 = seconds2.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((long) (byte) 100, periodType3);
        org.joda.time.PeriodType periodType5 = mutablePeriod4.getPeriodType();
        org.joda.time.Period period6 = new org.joda.time.Period((long) (-3603160), periodType5);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType5);
    }

    @Test
    public void test16082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16082");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableDuration1);
        org.joda.time.Period period3 = mutablePeriod2.toPeriod();
        int int4 = period3.size();
        org.joda.time.Period period6 = period3.plusDays(1);
        org.joda.time.Days days7 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period6);
        org.joda.time.Period period9 = period6.plusMonths(25);
        org.joda.time.Period period11 = period9.minusMinutes((int) (byte) -1);
        org.joda.time.Period period13 = period11.plusMinutes((-1));
        org.joda.time.Period period15 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days16 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period15);
        org.joda.time.Period period18 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days19 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Period period21 = period18.withSeconds((int) ' ');
        org.joda.time.Period period22 = period15.minus((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Period period24 = period15.plusHours((-1));
        org.joda.time.Period period26 = period15.withDays((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod28 = org.joda.time.MutablePeriod.parse("PT60S");
        org.joda.time.Period period29 = period15.plus((org.joda.time.ReadablePeriod) mutablePeriod28);
        org.joda.time.Period period30 = period13.withFields((org.joda.time.ReadablePeriod) period29);
        org.joda.time.MutablePeriod mutablePeriod31 = period30.toMutablePeriod();
        org.joda.time.Days days32 = org.joda.time.Days.ZERO;
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((java.lang.Object) days32, periodType33, chronology34);
        org.joda.time.DurationFieldType durationFieldType36 = org.joda.time.DurationFieldType.minutes();
        boolean boolean37 = days32.isSupported(durationFieldType36);
        int int38 = mutablePeriod31.get(durationFieldType36);
        mutablePeriod31.setMinutes((int) (byte) -1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
    }

    @Test
    public void test16083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16083");
        org.joda.time.Duration duration0 = org.joda.time.Duration.ZERO;
        long long1 = duration0.getStandardDays();
        org.joda.time.Hours hours2 = duration0.toStandardHours();
        long long3 = duration0.getStandardMinutes();
        long long4 = duration0.getStandardDays();
        org.joda.time.Hours hours5 = duration0.toStandardHours();
        org.joda.time.ReadableDuration readableDuration6 = null;
        org.joda.time.Duration duration8 = duration0.withDurationAdded(readableDuration6, 4);
        org.joda.time.Duration duration10 = duration8.withMillis(60L);
        org.joda.time.Duration duration11 = duration8.toDuration();
        org.joda.time.ReadableDuration readableDuration12 = null;
        boolean boolean13 = duration8.isEqual(readableDuration12);
        org.junit.Assert.assertNotNull(duration0);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test16084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16084");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeksIn(readableInterval2);
        boolean boolean4 = weeks1.isLessThan(weeks3);
        org.joda.time.Weeks weeks6 = weeks3.minus((int) (short) -1);
        org.joda.time.Weeks weeks8 = weeks6.multipliedBy(0);
        org.joda.time.Weeks weeks9 = null;
        boolean boolean10 = weeks6.isLessThan(weeks9);
        int int12 = weeks6.getValue((int) (byte) 0);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.weeksIn(readableInterval13);
        org.joda.time.Weeks weeks16 = weeks14.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks17 = weeks6.minus(weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks20 = weeks18.dividedBy(52);
        org.joda.time.DurationFieldType durationFieldType21 = org.joda.time.DurationFieldType.weeks();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.DurationField durationField23 = durationFieldType21.getField(chronology22);
        boolean boolean24 = weeks18.isSupported(durationFieldType21);
        org.joda.time.Weeks weeks25 = weeks17.plus(weeks18);
        org.joda.time.DurationFieldType durationFieldType26 = weeks25.getFieldType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(durationField23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(durationFieldType26);
    }

    @Test
    public void test16085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16085");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableDuration1);
        org.joda.time.Period period3 = mutablePeriod2.toPeriod();
        int int4 = period3.size();
        org.joda.time.Period period6 = period3.plusDays(1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.THREE;
        org.joda.time.Period period8 = period3.withFields((org.joda.time.ReadablePeriod) minutes7);
        org.joda.time.Minutes minutes10 = minutes7.dividedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes7.multipliedBy(4);
        org.joda.time.Period period14 = org.joda.time.Period.minutes(100);
        org.joda.time.Period period16 = period14.withMinutes(4);
        int int17 = period14.size();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period14);
        org.joda.time.Minutes minutes19 = minutes7.minus(minutes18);
        org.joda.time.Duration duration20 = minutes18.toStandardDuration();
        org.joda.time.Duration duration21 = duration20.toDuration();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration21);
    }

    @Test
    public void test16086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16086");
        org.joda.time.Period period2 = new org.joda.time.Period((long) (byte) 100, 864000000L);
        org.joda.time.Period period4 = period2.minusHours(5);
        org.joda.time.Period period6 = period4.withYears((-87));
        org.joda.time.Period period8 = period4.plusMinutes(52);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) period8);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(weeks9);
    }

    @Test
    public void test16087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16087");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) 2);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType5 = periodType4.withWeeksRemoved();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration3.toPeriod(periodType4, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType10 = periodType9.withMonthsRemoved();
        org.joda.time.Period period11 = duration3.toPeriodTo(readableInstant8, periodType10);
        org.joda.time.Duration duration12 = duration3.toDuration();
        org.joda.time.Duration duration13 = duration1.plus((org.joda.time.ReadableDuration) duration12);
        long long14 = duration1.getMillis();
        org.joda.time.Period period16 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days17 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period16);
        org.joda.time.Period period19 = period16.withSeconds((int) ' ');
        int int20 = period19.getSeconds();
        org.joda.time.Period period22 = period19.withHours((int) '#');
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((long) 'a', (long) 0);
        mutablePeriod25.addYears((int) '4');
        org.joda.time.Chronology chronology29 = null;
        mutablePeriod25.add((long) 100, chronology29);
        mutablePeriod25.setMillis((int) (byte) 10);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableInstant readableInstant34 = null;
        mutablePeriod25.setPeriod(readableInstant33, readableInstant34);
        mutablePeriod25.clear();
        org.joda.time.Period period37 = period19.plus((org.joda.time.ReadablePeriod) mutablePeriod25);
        org.joda.time.PeriodType periodType38 = mutablePeriod25.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, periodType38);
        mutablePeriod39.add(8744020, 25, (-2), 671, (-8), (-97), (-32), 0);
        mutablePeriod39.addMonths((-29));
        mutablePeriod39.addMinutes((-13));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 172800000L + "'", long14 == 172800000L);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 32 + "'", int20 == 32);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(periodType38);
    }

    @Test
    public void test16088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16088");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodParser periodParser3 = periodFormatter2.getParser();
        java.util.Locale locale4 = periodFormatter2.getLocale();
        org.joda.time.PeriodType periodType5 = periodFormatter2.getParseType();
        java.util.Locale locale6 = null;
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter2.withLocale(locale6);
        org.joda.time.Period period9 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days10 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period9);
        org.joda.time.PeriodType periodType11 = days10.getPeriodType();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(readableInstant12, readableDuration13);
        mutablePeriod14.setHours((int) (short) 100);
        boolean boolean17 = periodType11.equals((java.lang.Object) mutablePeriod14);
        org.joda.time.PeriodType periodType18 = periodType11.withYearsRemoved();
        int int19 = periodType18.size();
        org.joda.time.format.PeriodFormatter periodFormatter20 = periodFormatter7.withParseType(periodType18);
        org.joda.time.PeriodType periodType21 = periodFormatter20.getParseType();
        java.util.Locale locale22 = null;
        org.joda.time.format.PeriodFormatter periodFormatter23 = periodFormatter20.withLocale(locale22);
        java.util.Locale locale24 = periodFormatter20.getLocale();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType28 = periodType27.withWeeksRemoved();
        org.joda.time.PeriodType periodType29 = periodType28.withDaysRemoved();
        org.joda.time.Period period30 = new org.joda.time.Period(readableInstant25, readableInstant26, periodType29);
        org.joda.time.PeriodType periodType31 = periodType29.withSecondsRemoved();
        org.joda.time.PeriodType periodType32 = periodType31.withSecondsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter33 = periodFormatter20.withParseType(periodType32);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.weeks(1);
        int int36 = weeks35.getWeeks();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.TWO;
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.weeksIn(readableInterval38);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.weeksIn(readableInterval40);
        boolean boolean42 = weeks39.isLessThan(weeks41);
        org.joda.time.Weeks weeks43 = weeks39.negated();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.weeksIn(readableInterval44);
        org.joda.time.ReadableInterval readableInterval46 = null;
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.weeksIn(readableInterval46);
        boolean boolean48 = weeks45.isLessThan(weeks47);
        org.joda.time.Weeks weeks49 = weeks45.negated();
        org.joda.time.Weeks weeks51 = weeks49.minus((int) (byte) 100);
        org.joda.time.Weeks weeks52 = weeks43.plus(weeks49);
        boolean boolean53 = weeks37.isLessThan(weeks49);
        org.joda.time.Weeks weeks55 = weeks37.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks57 = weeks37.plus((int) '4');
        org.joda.time.Weeks weeks58 = weeks35.plus(weeks37);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = new org.joda.time.Period((long) 0, (long) (byte) 10, periodType61, chronology62);
        org.joda.time.Duration duration64 = org.joda.time.Duration.ZERO;
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.Period period66 = duration64.toPeriod(chronology65);
        org.joda.time.Period period67 = period63.withFields((org.joda.time.ReadablePeriod) period66);
        org.joda.time.Weeks weeks68 = period67.toStandardWeeks();
        org.joda.time.Weeks weeks70 = weeks68.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Period period74 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Period period76 = period74.withMillis((int) (byte) -1);
        org.joda.time.Weeks weeks77 = period76.toStandardWeeks();
        org.joda.time.Weeks weeks78 = weeks72.plus(weeks77);
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.Period period80 = new org.joda.time.Period((java.lang.Object) weeks77, chronology79);
        boolean boolean81 = weeks70.isLessThan(weeks77);
        org.joda.time.ReadableInterval readableInterval82 = null;
        org.joda.time.Weeks weeks83 = org.joda.time.Weeks.weeksIn(readableInterval82);
        org.joda.time.ReadableInterval readableInterval84 = null;
        org.joda.time.Weeks weeks85 = org.joda.time.Weeks.weeksIn(readableInterval84);
        boolean boolean86 = weeks83.isLessThan(weeks85);
        org.joda.time.Weeks weeks87 = weeks83.negated();
        org.joda.time.Chronology chronology88 = null;
        org.joda.time.Period period89 = new org.joda.time.Period((java.lang.Object) weeks83, chronology88);
        org.joda.time.Weeks weeks91 = weeks83.multipliedBy((int) (byte) 1);
        org.joda.time.Weeks weeks92 = weeks83.negated();
        boolean boolean93 = weeks70.isLessThan(weeks92);
        org.joda.time.Weeks weeks94 = weeks35.plus(weeks70);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str95 = periodFormatter20.print((org.joda.time.ReadablePeriod) weeks70);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodParser3);
        org.junit.Assert.assertNull(locale4);
        org.junit.Assert.assertNull(periodType5);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(periodFormatter20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodFormatter23);
        org.junit.Assert.assertNull(locale24);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodFormatter33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertNotNull(weeks91);
        org.junit.Assert.assertNotNull(weeks92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(weeks94);
    }

    @Test
    public void test16089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16089");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(25);
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Duration duration3 = org.joda.time.Duration.ZERO;
        long long4 = duration3.getStandardDays();
        org.joda.time.Hours hours5 = duration3.toStandardHours();
        boolean boolean6 = hours1.isLessThan(hours5);
        org.joda.time.Hours hours8 = hours1.dividedBy((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType9 = hours8.getFieldType();
        org.joda.time.Hours hours10 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours12 = org.joda.time.Hours.hours((int) (byte) -1);
        boolean boolean13 = hours10.isGreaterThan(hours12);
        org.joda.time.Hours hours15 = hours10.minus((int) (byte) 0);
        org.joda.time.Hours hours17 = hours15.plus(0);
        org.joda.time.Hours hours18 = hours8.plus(hours17);
        org.joda.time.Hours hours19 = org.joda.time.Hours.FOUR;
        org.joda.time.Hours hours21 = hours19.minus(0);
        org.joda.time.Hours hours22 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours24 = org.joda.time.Hours.hours((int) (byte) -1);
        boolean boolean25 = hours22.isGreaterThan(hours24);
        boolean boolean26 = hours21.isLessThan(hours24);
        java.lang.String str27 = hours21.toString();
        java.lang.String str28 = hours21.toString();
        org.joda.time.Duration duration29 = org.joda.time.Duration.ZERO;
        long long30 = duration29.getStandardDays();
        org.joda.time.Hours hours31 = duration29.toStandardHours();
        org.joda.time.Hours hours32 = hours21.minus(hours31);
        org.joda.time.Hours hours33 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours35 = org.joda.time.Hours.hours((int) (byte) -1);
        boolean boolean36 = hours33.isGreaterThan(hours35);
        org.joda.time.Duration duration37 = hours35.toStandardDuration();
        boolean boolean38 = hours32.isLessThan(hours35);
        boolean boolean39 = hours18.isGreaterThan(hours32);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT4H" + "'", str27, "PT4H");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT4H" + "'", str28, "PT4H");
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test16090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16090");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeksIn(readableInterval2);
        boolean boolean4 = weeks1.isLessThan(weeks3);
        org.joda.time.Weeks weeks5 = weeks1.negated();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((java.lang.Object) weeks1, chronology6);
        org.joda.time.Weeks weeks9 = weeks1.multipliedBy((int) (byte) 1);
        org.joda.time.Weeks weeks11 = weeks9.multipliedBy((int) (short) -1);
        org.joda.time.PeriodType periodType12 = weeks11.getPeriodType();
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.weeksIn(readableInterval13);
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeksIn(readableInterval15);
        boolean boolean17 = weeks14.isLessThan(weeks16);
        org.joda.time.Weeks weeks18 = weeks14.negated();
        org.joda.time.Weeks weeks20 = weeks18.minus((int) (byte) 100);
        org.joda.time.Weeks weeks22 = weeks18.minus((int) (short) 10);
        boolean boolean23 = weeks11.isLessThan(weeks22);
        org.joda.time.Weeks weeks25 = weeks22.minus((int) (byte) 0);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.weeksIn(readableInterval26);
        org.joda.time.Weeks weeks29 = weeks27.multipliedBy(8);
        org.joda.time.Weeks weeks31 = weeks29.minus(0);
        org.joda.time.Period period36 = new org.joda.time.Period(0, (int) '4', (int) (short) 100, (int) (byte) -1);
        org.joda.time.Period period38 = period36.withDays((int) 'a');
        org.joda.time.Weeks weeks39 = period38.toStandardWeeks();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.TWO;
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.weeksIn(readableInterval41);
        org.joda.time.ReadableInterval readableInterval43 = null;
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.weeksIn(readableInterval43);
        boolean boolean45 = weeks42.isLessThan(weeks44);
        org.joda.time.Weeks weeks46 = weeks42.negated();
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.weeksIn(readableInterval47);
        org.joda.time.ReadableInterval readableInterval49 = null;
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.weeksIn(readableInterval49);
        boolean boolean51 = weeks48.isLessThan(weeks50);
        org.joda.time.Weeks weeks52 = weeks48.negated();
        org.joda.time.Weeks weeks54 = weeks52.minus((int) (byte) 100);
        org.joda.time.Weeks weeks55 = weeks46.plus(weeks52);
        boolean boolean56 = weeks40.isLessThan(weeks52);
        org.joda.time.Weeks weeks58 = weeks40.multipliedBy((int) (short) 1);
        org.joda.time.ReadableInterval readableInterval59 = null;
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.weeksIn(readableInterval59);
        org.joda.time.Weeks weeks62 = weeks60.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks63 = weeks58.plus(weeks60);
        boolean boolean64 = weeks39.isGreaterThan(weeks63);
        boolean boolean65 = weeks29.isLessThan(weeks63);
        java.lang.String str66 = weeks29.toString();
        boolean boolean67 = weeks22.equals((java.lang.Object) str66);
        java.lang.String str68 = weeks22.toString();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Period period72 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Period period74 = period72.withMillis((int) (byte) -1);
        org.joda.time.Weeks weeks75 = period74.toStandardWeeks();
        org.joda.time.Weeks weeks76 = weeks70.plus(weeks75);
        org.joda.time.Weeks weeks78 = weeks70.plus((int) (byte) 10);
        org.joda.time.Weeks weeks80 = weeks70.multipliedBy((-2147483648));
        int int81 = weeks70.size();
        int int82 = weeks70.size();
        org.joda.time.Weeks weeks84 = weeks70.multipliedBy(30);
        org.joda.time.PeriodType periodType85 = weeks70.getPeriodType();
        boolean boolean86 = weeks22.isLessThan(weeks70);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "P0W" + "'", str66, "P0W");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "P-10W" + "'", str68, "P-10W");
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test16091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16091");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ZERO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        java.lang.String str2 = seconds0.toString();
        org.joda.time.Seconds seconds4 = seconds0.plus((int) (short) 1);
        org.joda.time.PeriodType periodType5 = seconds0.getPeriodType();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds9 = duration8.toStandardSeconds();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds12 = duration11.toStandardSeconds();
        boolean boolean13 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType16 = periodType15.withMinutesRemoved();
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant14, periodType15);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration11);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period20 = duration11.toPeriod(periodType19);
        org.joda.time.Period period22 = period20.withWeeks((int) ' ');
        org.joda.time.Period period23 = period20.toPeriod();
        org.joda.time.Seconds seconds24 = period20.toStandardSeconds();
        boolean boolean25 = seconds0.isGreaterThan(seconds24);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.seconds(0);
        org.joda.time.Duration duration28 = seconds27.toStandardDuration();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds31 = duration30.toStandardSeconds();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds34 = duration33.toStandardSeconds();
        boolean boolean35 = duration30.isLongerThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Interval interval37 = duration33.toIntervalTo(readableInstant36);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval37);
        org.joda.time.Seconds seconds39 = seconds27.minus(seconds38);
        org.joda.time.Seconds seconds41 = seconds38.multipliedBy(5);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.parseSeconds("PT25S");
        boolean boolean44 = seconds38.isLessThan(seconds43);
        org.joda.time.Seconds seconds45 = seconds24.minus(seconds38);
        org.joda.time.Seconds seconds47 = seconds24.dividedBy(74);
        org.joda.time.Seconds seconds48 = seconds47.negated();
        org.joda.time.Seconds seconds50 = seconds48.minus(74);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.ONE;
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds54 = duration53.toStandardSeconds();
        java.lang.String str55 = seconds54.toString();
        org.joda.time.PeriodType periodType56 = seconds54.getPeriodType();
        org.joda.time.PeriodType periodType57 = seconds54.getPeriodType();
        org.joda.time.Seconds seconds58 = seconds51.minus(seconds54);
        org.joda.time.Seconds seconds60 = seconds54.plus(0);
        org.joda.time.Seconds seconds62 = seconds54.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds64 = seconds62.plus((-13));
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Duration duration66 = org.joda.time.Duration.ZERO;
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.Period period68 = duration66.toPeriod(chronology67);
        org.joda.time.Period period69 = new org.joda.time.Period(readableInstant65, (org.joda.time.ReadableDuration) duration66);
        org.joda.time.Seconds seconds70 = duration66.toStandardSeconds();
        java.lang.String str71 = seconds70.toString();
        boolean boolean72 = seconds62.isGreaterThan(seconds70);
        boolean boolean73 = seconds48.isLessThan(seconds62);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT0S" + "'", str2, "PT0S");
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "PT60S" + "'", str55, "PT60S");
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "PT0S" + "'", str71, "PT0S");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test16092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16092");
        org.joda.time.Period period1 = new org.joda.time.Period((long) '4');
        org.joda.time.Period period3 = period1.withHours(32);
        org.joda.time.Period period4 = period1.normalizedStandard();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration6 = period1.toDurationTo(readableInstant5);
        org.joda.time.Period period8 = period1.plusDays((int) 'a');
        org.joda.time.Duration duration10 = org.joda.time.Duration.millis(0L);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant11, periodType12);
        org.joda.time.Period period14 = period8.normalizedStandard(periodType12);
        org.joda.time.Period period15 = period8.toPeriod();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test16093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16093");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodParser periodParser3 = periodFormatter2.getParser();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds6 = duration5.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        org.joda.time.Seconds seconds9 = seconds6.plus(25);
        org.joda.time.Seconds seconds10 = seconds6.negated();
        org.joda.time.PeriodType periodType11 = seconds10.getPeriodType();
        org.joda.time.format.PeriodFormatter periodFormatter12 = periodFormatter2.withParseType(periodType11);
        boolean boolean13 = periodFormatter12.isPrinter();
        java.util.Locale locale14 = periodFormatter12.getLocale();
        org.joda.time.PeriodType periodType15 = periodFormatter12.getParseType();
        java.io.Writer writer16 = null;
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(readableInstant17, readableDuration18);
        mutablePeriod19.setHours((int) (short) 100);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology24 = null;
        mutablePeriod19.setPeriod((org.joda.time.ReadableDuration) duration23, chronology24);
        org.joda.time.Period period26 = duration23.toPeriod();
        org.joda.time.Period period28 = period26.plusWeeks(0);
        org.joda.time.Period period29 = period28.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod30 = period28.toMutablePeriod();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((java.lang.Object) mutablePeriod30, chronology31);
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter12.printTo(writer16, (org.joda.time.ReadablePeriod) period32);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodParser3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodFormatter12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(locale14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
    }

    @Test
    public void test16094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16094");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Period period3 = period2.toPeriod();
        org.joda.time.Period period5 = period3.plusYears((-58));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
    }

    @Test
    public void test16095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16095");
        org.joda.time.Hours hours0 = org.joda.time.Hours.FOUR;
        org.joda.time.Hours hours2 = hours0.minus(0);
        org.joda.time.Hours hours3 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours5 = org.joda.time.Hours.hours((int) (byte) -1);
        boolean boolean6 = hours3.isGreaterThan(hours5);
        boolean boolean7 = hours2.isLessThan(hours5);
        java.lang.String str8 = hours2.toString();
        org.joda.time.Duration duration9 = hours2.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT4H" + "'", str8, "PT4H");
        org.junit.Assert.assertNotNull(duration9);
    }

    @Test
    public void test16096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16096");
        org.joda.time.Period period4 = new org.joda.time.Period(40, 60, (int) (short) 10, (-60));
        org.joda.time.Period period6 = period4.withSeconds(97);
        int[] intArray7 = period6.getValues();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0, 0, 0, 40, 60, 97, -60]");
    }

    @Test
    public void test16097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16097");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType1 = minutes0.getPeriodType();
        int int2 = minutes0.getMinutes();
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = minutes4.getFieldType();
        java.lang.String str6 = minutes4.toString();
        boolean boolean7 = minutes0.isLessThan(minutes4);
        org.joda.time.Minutes minutes9 = minutes4.minus(0);
        org.joda.time.Minutes minutes11 = minutes4.dividedBy((int) (short) 100);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.ZERO;
        org.joda.time.Minutes minutes14 = minutes12.plus((int) (byte) 0);
        java.lang.String str15 = minutes12.toString();
        boolean boolean16 = minutes4.isLessThan(minutes12);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType18 = minutes17.getPeriodType();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes20 = minutes17.plus(minutes19);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.ZERO;
        boolean boolean23 = minutes21.isLessThan(minutes22);
        boolean boolean24 = minutes17.isLessThan(minutes21);
        org.joda.time.Minutes minutes26 = minutes21.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes27 = minutes26.negated();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType29 = minutes28.getPeriodType();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes31 = minutes28.plus(minutes30);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.ZERO;
        boolean boolean34 = minutes32.isLessThan(minutes33);
        boolean boolean35 = minutes28.isLessThan(minutes32);
        org.joda.time.Duration duration36 = minutes28.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableInstant readableInstant38 = null;
        java.lang.Object obj39 = null;
        org.joda.time.Duration duration40 = new org.joda.time.Duration(obj39);
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant38, (org.joda.time.ReadableDuration) duration40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration40);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType46 = periodType45.withWeeksRemoved();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = duration44.toPeriod(periodType45, chronology47);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType51 = periodType50.withMonthsRemoved();
        org.joda.time.Period period52 = duration44.toPeriodTo(readableInstant49, periodType51);
        org.joda.time.Period period53 = duration44.toPeriod();
        org.joda.time.Duration duration54 = duration40.plus((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration56 = duration36.withDurationAdded((org.joda.time.ReadableDuration) duration44, 25);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Interval interval58 = duration36.toIntervalFrom(readableInstant57);
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval58);
        org.joda.time.Minutes minutes60 = minutes26.plus(minutes59);
        org.joda.time.Minutes minutes61 = minutes12.minus(minutes60);
        org.joda.time.Minutes minutes62 = minutes61.negated();
        java.lang.Class<?> wildcardClass63 = minutes62.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT0M" + "'", str3, "PT0M");
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT-2147483648M" + "'", str6, "PT-2147483648M");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT0M" + "'", str15, "PT0M");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test16098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16098");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 8, (long) 10);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.ZERO;
        org.joda.time.Duration duration4 = seconds3.toStandardDuration();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), (long) ' ');
        boolean boolean8 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        long long9 = duration4.getStandardDays();
        boolean boolean10 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration12 = duration2.plus((long) 4);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType22 = periodType21.withWeeksRemoved();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration20.toPeriod(periodType21, chronology23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType27 = periodType26.withMonthsRemoved();
        org.joda.time.Period period28 = duration20.toPeriodTo(readableInstant25, periodType27);
        org.joda.time.Period period29 = duration20.toPeriod();
        org.joda.time.Duration duration30 = duration16.plus((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration31 = duration16.toDuration();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((long) 10);
        java.lang.String str34 = duration33.toString();
        org.joda.time.Duration duration36 = duration33.minus((long) (byte) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod(readableInstant37, readableDuration38);
        mutablePeriod39.setHours((int) (short) 100);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology44 = null;
        mutablePeriod39.setPeriod((org.joda.time.ReadableDuration) duration43, chronology44);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds48 = duration47.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType49 = seconds48.getFieldType();
        mutablePeriod39.add(durationFieldType49, (int) (short) 0);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod(readableInstant52, readableDuration53);
        mutablePeriod54.setHours((int) (short) 100);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology59 = null;
        mutablePeriod54.setPeriod((org.joda.time.ReadableDuration) duration58, chronology59);
        org.joda.time.Chronology chronology61 = null;
        mutablePeriod39.setPeriod((org.joda.time.ReadableDuration) duration58, chronology61);
        org.joda.time.ReadableDuration readableDuration63 = null;
        boolean boolean64 = duration58.isEqual(readableDuration63);
        org.joda.time.Duration duration65 = duration33.minus((org.joda.time.ReadableDuration) duration58);
        long long66 = duration33.getStandardSeconds();
        long long67 = duration33.getMillis();
        boolean boolean68 = duration16.isEqual((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration70 = duration2.withDurationAdded((org.joda.time.ReadableDuration) duration33, (int) (byte) 0);
        org.joda.time.Duration duration72 = duration2.withMillis((long) 99);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT600S" + "'", str34, "PT600S");
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 600L + "'", long66 == 600L);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 600000L + "'", long67 == 600000L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(duration72);
    }

    @Test
    public void test16099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16099");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter3.getParser();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds7 = duration6.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType8 = seconds7.getFieldType();
        org.joda.time.Seconds seconds10 = seconds7.plus(25);
        org.joda.time.Seconds seconds11 = seconds7.negated();
        org.joda.time.PeriodType periodType12 = seconds11.getPeriodType();
        org.joda.time.format.PeriodFormatter periodFormatter13 = periodFormatter3.withParseType(periodType12);
        boolean boolean14 = periodFormatter3.isParser();
        java.util.Locale locale15 = null;
        org.joda.time.format.PeriodFormatter periodFormatter16 = periodFormatter3.withLocale(locale15);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds19 = duration18.toStandardSeconds();
        java.lang.String str20 = seconds19.toString();
        org.joda.time.PeriodType periodType21 = seconds19.getPeriodType();
        org.joda.time.PeriodType periodType22 = periodType21.withSecondsRemoved();
        org.joda.time.PeriodType periodType23 = periodType22.withDaysRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter24 = periodFormatter16.withParseType(periodType23);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((long) (-100), periodType23, chronology25);
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(periodType23);
        org.joda.time.DurationFieldType[] durationFieldTypeArray28 = mutablePeriod27.getFieldTypes();
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodFormatter13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(periodFormatter16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT60S" + "'", str20, "PT60S");
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodFormatter24);
        org.junit.Assert.assertNotNull(durationFieldTypeArray28);
    }

    @Test
    public void test16100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16100");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.Period period4 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days5 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period4);
        org.joda.time.PeriodType periodType6 = days5.getPeriodType();
        boolean boolean7 = days2.isGreaterThan(days5);
        org.joda.time.Period period9 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days10 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Days days11 = days5.minus(days10);
        int int12 = days5.size();
        org.joda.time.Days days14 = days5.dividedBy((-1));
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((java.lang.Object) days14);
        org.joda.time.Days days17 = days14.plus(40);
        org.joda.time.DurationFieldType durationFieldType18 = days17.getFieldType();
        org.joda.time.Days days20 = days17.dividedBy(54);
        org.joda.time.PeriodType periodType21 = days17.getPeriodType();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(periodType21);
    }

    @Test
    public void test16101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16101");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.ONE;
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeksIn(readableInterval2);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeksIn(readableInterval4);
        boolean boolean6 = weeks3.isLessThan(weeks5);
        org.joda.time.Weeks weeks7 = weeks3.negated();
        org.joda.time.Weeks weeks9 = weeks7.minus((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType10 = weeks9.getFieldType();
        boolean boolean11 = weeks1.isGreaterThan(weeks9);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeksIn(readableInterval12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeksIn(readableInterval14);
        boolean boolean16 = weeks13.isLessThan(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.minus((int) (short) -1);
        org.joda.time.Weeks weeks20 = weeks18.multipliedBy(0);
        org.joda.time.Weeks weeks21 = weeks9.minus(weeks18);
        org.joda.time.Weeks weeks23 = weeks21.minus(0);
        org.joda.time.PeriodType periodType24 = weeks21.getPeriodType();
        org.joda.time.Period period25 = new org.joda.time.Period(35L, periodType24);
        int int26 = period25.getMillis();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test16102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16102");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableDuration1);
        mutablePeriod2.setHours((int) (short) 100);
        mutablePeriod2.addMillis(1);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) mutablePeriod2);
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((-515));
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeksIn(readableInterval10);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeksIn(readableInterval12);
        boolean boolean14 = weeks11.isLessThan(weeks13);
        org.joda.time.Weeks weeks15 = weeks11.negated();
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeksIn(readableInterval16);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.weeksIn(readableInterval18);
        boolean boolean20 = weeks17.isLessThan(weeks19);
        org.joda.time.Weeks weeks21 = weeks17.negated();
        org.joda.time.Weeks weeks23 = weeks21.minus((int) (byte) 100);
        org.joda.time.Weeks weeks24 = weeks15.plus(weeks21);
        org.joda.time.Weeks weeks25 = null;
        org.joda.time.Weeks weeks26 = weeks15.plus(weeks25);
        org.joda.time.Weeks weeks28 = weeks26.multipliedBy((int) ' ');
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.weeksIn(readableInterval29);
        org.joda.time.Weeks weeks32 = weeks30.multipliedBy(8);
        org.joda.time.Weeks weeks34 = weeks32.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = weeks34.get(durationFieldType35);
        org.joda.time.DurationFieldType durationFieldType37 = weeks34.getFieldType();
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.weeksIn(readableInterval38);
        org.joda.time.Weeks weeks41 = weeks39.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks43 = weeks39.dividedBy((int) 'a');
        org.joda.time.Weeks weeks45 = weeks43.multipliedBy((-60));
        org.joda.time.MutablePeriod mutablePeriod46 = weeks45.toMutablePeriod();
        org.joda.time.PeriodType periodType47 = weeks45.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((java.lang.Object) weeks34, periodType47);
        boolean boolean49 = weeks26.isGreaterThan(weeks34);
        boolean boolean50 = weeks9.isGreaterThan(weeks34);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test16103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16103");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType2);
        org.joda.time.DurationFieldType durationFieldType4 = org.joda.time.DurationFieldType.eras();
        int int5 = period3.get(durationFieldType4);
        int int6 = period3.getYears();
        java.lang.String str7 = period3.toString();
        org.joda.time.Period period8 = period3.normalizedStandard();
        org.joda.time.Period period10 = period3.plusMinutes((int) (short) 1);
        org.joda.time.Period period11 = period10.negated();
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT0S" + "'", str7, "PT0S");
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test16104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16104");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.THREE;
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        boolean boolean3 = hours0.isGreaterThan(hours1);
        org.joda.time.Hours hours4 = org.joda.time.Hours.FOUR;
        org.joda.time.Hours hours6 = hours4.minus(0);
        org.joda.time.Hours hours8 = hours4.multipliedBy((-1));
        org.joda.time.Hours hours9 = hours4.negated();
        org.joda.time.Hours hours10 = hours4.negated();
        boolean boolean11 = hours1.isLessThan(hours10);
        int int12 = hours10.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test16105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16105");
        org.joda.time.Period period1 = org.joda.time.Period.minutes(50);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test16106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16106");
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType4 = minutes3.getPeriodType();
        org.joda.time.PeriodType periodType5 = periodType4.withMinutesRemoved();
        org.joda.time.PeriodType periodType6 = periodType4.withDaysRemoved();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((-3600L), (-84326300L), periodType6, chronology7);
        org.joda.time.Period period9 = new org.joda.time.Period((long) 35, periodType6);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
    }

    @Test
    public void test16107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16107");
        org.joda.time.Days days0 = org.joda.time.Days.ZERO;
        int int1 = days0.getDays();
        org.joda.time.Period period3 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days4 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period3);
        org.joda.time.Period period6 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days7 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period6);
        org.joda.time.PeriodType periodType8 = days7.getPeriodType();
        boolean boolean9 = days4.isGreaterThan(days7);
        org.joda.time.Period period11 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days12 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period11);
        org.joda.time.Days days13 = days7.minus(days12);
        org.joda.time.Days days14 = days0.minus(days7);
        org.joda.time.Days days15 = days0.negated();
        org.joda.time.Days days16 = days15.negated();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
    }

    @Test
    public void test16108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16108");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeksIn(readableInterval2);
        boolean boolean4 = weeks1.isLessThan(weeks3);
        org.joda.time.Weeks weeks6 = weeks3.minus((int) (short) -1);
        org.joda.time.Weeks weeks8 = weeks6.multipliedBy(0);
        org.joda.time.Weeks weeks9 = null;
        boolean boolean10 = weeks6.isLessThan(weeks9);
        int int12 = weeks6.getValue((int) (byte) 0);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.weeksIn(readableInterval13);
        org.joda.time.Weeks weeks16 = weeks14.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks17 = weeks6.minus(weeks16);
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks20 = weeks17.minus(weeks19);
        org.joda.time.Weeks weeks22 = weeks17.minus(2147483647);
        org.joda.time.Weeks weeks23 = weeks17.negated();
        org.joda.time.DurationFieldType durationFieldType24 = weeks23.getFieldType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(durationFieldType24);
    }

    @Test
    public void test16109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16109");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.standardMinutesIn(readablePeriod0);
        org.joda.time.Minutes minutes2 = minutes1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        mutablePeriod3.setSeconds(6);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration7 = mutablePeriod3.toDurationTo(readableInstant6);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(duration7);
    }

    @Test
    public void test16110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16110");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.parse("PT0.052S");
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType6 = periodType5.withMinutesRemoved();
        org.joda.time.PeriodType periodType7 = periodType5.withYearsRemoved();
        java.lang.String str8 = periodType7.toString();
        org.joda.time.PeriodType periodType9 = periodType7.withWeeksRemoved();
        org.joda.time.PeriodType periodType10 = periodType7.withMillisRemoved();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType13 = minutes12.getPeriodType();
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((long) (byte) 10, (long) '#', periodType16);
        org.joda.time.DurationFieldType durationFieldType18 = org.joda.time.DurationFieldType.weekyears();
        int int19 = period17.get(durationFieldType18);
        boolean boolean20 = periodType13.isSupported(durationFieldType18);
        org.joda.time.PeriodType periodType21 = periodType13.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((long) 3, periodType13);
        boolean boolean23 = periodType7.equals((java.lang.Object) 3);
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4, periodType7);
        org.joda.time.PeriodType periodType25 = periodType7.withMinutesRemoved();
        org.joda.time.PeriodType periodType26 = periodType25.withYearsRemoved();
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType26);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PeriodType[Millis]" + "'", str8, "PeriodType[Millis]");
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
    }

    @Test
    public void test16111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16111");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableDuration1);
        org.joda.time.Period period3 = mutablePeriod2.toPeriod();
        org.joda.time.Period period5 = period3.withHours(0);
        org.joda.time.Hours hours6 = period5.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType7 = hours6.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((int) (short) -1, (int) '#', (int) ' ', 100);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.days();
        int int14 = mutablePeriod12.get(durationFieldType13);
        org.joda.time.Hours hours15 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) mutablePeriod12);
        org.joda.time.Hours hours17 = hours15.dividedBy((int) (short) -1);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(readableInstant18, readableDuration19);
        org.joda.time.Period period21 = mutablePeriod20.toPeriod();
        org.joda.time.Period period23 = period21.withHours(0);
        org.joda.time.Hours hours24 = period23.toStandardHours();
        org.joda.time.Hours hours25 = hours17.minus(hours24);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType29 = periodType28.withWeeksRemoved();
        org.joda.time.PeriodType periodType30 = periodType29.withDaysRemoved();
        org.joda.time.Period period31 = new org.joda.time.Period((long) 'a', (long) (short) 0, periodType30);
        org.joda.time.Hours hours32 = period31.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType33 = hours32.getFieldType();
        boolean boolean34 = hours24.isLessThan(hours32);
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours35.negated();
        org.joda.time.Hours hours37 = org.joda.time.Hours.ONE;
        boolean boolean38 = hours36.isLessThan(hours37);
        org.joda.time.DurationFieldType durationFieldType39 = hours36.getFieldType();
        org.joda.time.Hours hours40 = hours24.minus(hours36);
        org.joda.time.Hours hours41 = hours6.minus(hours24);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
    }

    @Test
    public void test16112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16112");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ZERO;
        org.joda.time.Duration duration1 = seconds0.toStandardDuration();
        org.joda.time.Duration duration4 = new org.joda.time.Duration((-1L), (long) ' ');
        boolean boolean5 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration7 = duration1.withMillis((long) 10);
        org.joda.time.Period period8 = duration1.toPeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test16113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16113");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 8, (long) 10);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.ZERO;
        org.joda.time.Duration duration4 = seconds3.toStandardDuration();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), (long) ' ');
        boolean boolean8 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        long long9 = duration4.getStandardDays();
        boolean boolean10 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Interval interval12 = duration2.toIntervalFrom(readableInstant11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval12);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertNotNull(seconds13);
    }

    @Test
    public void test16114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16114");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 'a', (long) 194, chronology2);
    }

    @Test
    public void test16115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16115");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days1 = org.joda.time.Days.parseDays("PT0.104S");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'millis'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test16116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16116");
        org.joda.time.Days days2 = org.joda.time.Days.days(32);
        org.joda.time.Days days3 = org.joda.time.Days.ZERO;
        int int4 = days3.getDays();
        org.joda.time.Period period6 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days7 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period6);
        org.joda.time.Period period9 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days10 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period9);
        org.joda.time.PeriodType periodType11 = days10.getPeriodType();
        boolean boolean12 = days7.isGreaterThan(days10);
        org.joda.time.Period period14 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days15 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period14);
        org.joda.time.Days days16 = days10.minus(days15);
        org.joda.time.Days days17 = days3.minus(days10);
        java.lang.String str18 = days17.toString();
        org.joda.time.Days days19 = days2.minus(days17);
        org.joda.time.DurationFieldType durationFieldType20 = days2.getFieldType();
        org.joda.time.PeriodType periodType21 = days2.getPeriodType();
        int int22 = periodType21.size();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((long) (-302), periodType21, chronology23);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P0D" + "'", str18, "P0D");
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
    }

    @Test
    public void test16117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16117");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(3600000000L, 4320L, chronology2);
    }

    @Test
    public void test16118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16118");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) 1, chronology2);
        org.joda.time.MutablePeriod mutablePeriod4 = mutablePeriod3.copy();
        org.joda.time.Period period9 = new org.joda.time.Period(3, 8, (int) (short) -1, (int) (short) 1);
        org.joda.time.Duration duration10 = period9.toStandardDuration();
        org.joda.time.Seconds seconds11 = duration10.toStandardSeconds();
        mutablePeriod3.add((org.joda.time.ReadableDuration) duration10);
        int int13 = mutablePeriod3.getMinutes();
        int int14 = mutablePeriod3.size();
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 7 + "'", int13 == 7);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
    }

    @Test
    public void test16119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16119");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 8, (long) 10);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.ZERO;
        org.joda.time.Duration duration4 = seconds3.toStandardDuration();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), (long) ' ');
        boolean boolean8 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        long long9 = duration4.getStandardDays();
        boolean boolean10 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration12 = duration2.plus((long) 4);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant13);
        org.joda.time.Period period15 = duration2.toPeriod();
        org.joda.time.Duration duration16 = duration2.toDuration();
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration16);
    }

    @Test
    public void test16120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16120");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) 40);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test16121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16121");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType3 = periodType2.withWeeksRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.Period period5 = duration1.toPeriod(periodType2, chronology4);
        org.joda.time.Days days6 = org.joda.time.Days.ZERO;
        int int7 = days6.getDays();
        org.joda.time.Period period9 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days10 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Period period12 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days13 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period12);
        org.joda.time.PeriodType periodType14 = days13.getPeriodType();
        boolean boolean15 = days10.isGreaterThan(days13);
        org.joda.time.Period period17 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days18 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period17);
        org.joda.time.Days days19 = days13.minus(days18);
        org.joda.time.Days days20 = days6.minus(days13);
        boolean boolean21 = duration1.equals((java.lang.Object) days13);
        org.joda.time.Period period23 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days24 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period23);
        org.joda.time.Days days26 = days24.minus(10);
        org.joda.time.Days days28 = days26.plus((int) (short) -1);
        org.joda.time.Days days29 = days13.plus(days26);
        org.joda.time.Period period31 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days32 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period31);
        org.joda.time.PeriodType periodType33 = days32.getPeriodType();
        org.joda.time.Period period35 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days36 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period35);
        org.joda.time.Period period38 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days39 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period38);
        org.joda.time.PeriodType periodType40 = days39.getPeriodType();
        boolean boolean41 = days36.isGreaterThan(days39);
        org.joda.time.Period period43 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days44 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period43);
        org.joda.time.Days days45 = days39.minus(days44);
        org.joda.time.Period period47 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days48 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period47);
        org.joda.time.Days days50 = days48.minus(10);
        org.joda.time.Days days51 = days39.plus(days48);
        org.joda.time.Days days53 = days51.dividedBy(100);
        org.joda.time.Days days54 = null;
        org.joda.time.Days days55 = days53.plus(days54);
        org.joda.time.Days days56 = days53.negated();
        boolean boolean57 = days32.isGreaterThan(days56);
        org.joda.time.Period period59 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days60 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period59);
        org.joda.time.Period period62 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days63 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period62);
        org.joda.time.PeriodType periodType64 = days63.getPeriodType();
        boolean boolean65 = days60.isGreaterThan(days63);
        org.joda.time.Days days67 = days60.minus(1);
        org.joda.time.Days days69 = days67.dividedBy(60);
        org.joda.time.Days days71 = days67.plus((int) (short) 100);
        org.joda.time.Days days73 = days67.minus((int) (byte) 10);
        org.joda.time.Days days74 = days56.minus(days73);
        org.joda.time.Days days75 = days26.plus(days56);
        org.joda.time.Duration duration76 = days26.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.Period period78 = duration76.toPeriodTo(readableInstant77);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertNotNull(days71);
        org.junit.Assert.assertNotNull(days73);
        org.junit.Assert.assertNotNull(days74);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(period78);
    }

    @Test
    public void test16122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16122");
        org.joda.time.Period period1 = org.joda.time.Period.days((-15));
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds4 = duration3.toStandardSeconds();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds7 = duration6.toStandardSeconds();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType11 = periodType10.withMinutesRemoved();
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant9, periodType10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(readableInstant13, readableDuration14);
        mutablePeriod15.setHours((int) (short) 100);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology20 = null;
        mutablePeriod15.setPeriod((org.joda.time.ReadableDuration) duration19, chronology20);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds24 = duration23.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType25 = seconds24.getFieldType();
        mutablePeriod15.add(durationFieldType25, (int) (short) 0);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(readableInstant28, readableDuration29);
        mutablePeriod30.setHours((int) (short) 100);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology35 = null;
        mutablePeriod30.setPeriod((org.joda.time.ReadableDuration) duration34, chronology35);
        org.joda.time.Chronology chronology37 = null;
        mutablePeriod15.setPeriod((org.joda.time.ReadableDuration) duration34, chronology37);
        int int39 = duration6.compareTo((org.joda.time.ReadableDuration) duration34);
        java.lang.Object obj40 = null;
        boolean boolean41 = duration6.equals(obj40);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.seconds(2);
        org.joda.time.Duration duration44 = seconds43.toStandardDuration();
        boolean boolean45 = duration6.equals((java.lang.Object) seconds43);
        int int46 = seconds43.getSeconds();
        org.joda.time.DurationFieldType durationFieldType47 = seconds43.getFieldType();
        org.joda.time.Period period49 = period1.withFieldAdded(durationFieldType47, 7);
        org.joda.time.Seconds seconds50 = period1.toStandardSeconds();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(seconds50);
    }

    @Test
    public void test16123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16123");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableDuration readableDuration2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(readableInstant1, readableDuration2);
        mutablePeriod3.setHours((int) (short) 100);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration7, chronology8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType11 = periodType10.withWeeksRemoved();
        org.joda.time.PeriodType periodType12 = periodType11.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration7, periodType11);
        org.joda.time.ReadableDuration readableDuration14 = null;
        mutablePeriod13.add(readableDuration14);
        mutablePeriod13.clear();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
    }

    @Test
    public void test16124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16124");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.Duration duration1 = seconds0.toStandardDuration();
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds4 = duration3.toStandardSeconds();
        java.lang.String str5 = seconds4.toString();
        org.joda.time.Seconds seconds6 = seconds0.minus(seconds4);
        org.joda.time.Seconds seconds7 = seconds0.negated();
        org.joda.time.Period period12 = new org.joda.time.Period(0, (int) '4', (int) (short) 100, (int) (byte) -1);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.secondsIn(readableInterval14);
        int int16 = seconds15.getSeconds();
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.ZERO;
        org.joda.time.PeriodType periodType18 = seconds17.getPeriodType();
        java.lang.String str19 = seconds17.toString();
        org.joda.time.Seconds seconds21 = seconds17.plus((int) (short) 1);
        java.lang.String str22 = seconds21.toString();
        java.lang.String str23 = seconds21.toString();
        boolean boolean24 = seconds15.isGreaterThan(seconds21);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.seconds(1);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (short) 0);
        org.joda.time.Period period30 = org.joda.time.Period.hours(0);
        org.joda.time.DurationFieldType durationFieldType32 = period30.getFieldType((int) (short) 1);
        org.joda.time.Period period34 = period30.plusDays(10);
        org.joda.time.Seconds seconds35 = period30.toStandardSeconds();
        boolean boolean36 = seconds28.isLessThan(seconds35);
        boolean boolean37 = seconds26.isLessThan(seconds28);
        org.joda.time.Seconds seconds38 = seconds15.minus(seconds28);
        boolean boolean39 = seconds13.isGreaterThan(seconds15);
        org.joda.time.Seconds seconds41 = seconds15.plus((int) (short) 10);
        boolean boolean42 = seconds7.isLessThan(seconds15);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT60S" + "'", str5, "PT60S");
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT0S" + "'", str19, "PT0S");
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT1S" + "'", str22, "PT1S");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT1S" + "'", str23, "PT1S");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test16125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16125");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 0, (long) (byte) 10, periodType3, chronology4);
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = minutes6.getFieldType();
        boolean boolean8 = periodType3.isSupported(durationFieldType7);
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period(9L, periodType3, chronology9);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period12 = period10.plusMillis(1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test16126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16126");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) 100);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (byte) 1);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period8 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days9 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period8);
        org.joda.time.PeriodType periodType10 = days9.getPeriodType();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(readableInstant11, readableDuration12);
        mutablePeriod13.setHours((int) (short) 100);
        boolean boolean16 = periodType10.equals((java.lang.Object) mutablePeriod13);
        org.joda.time.Period period17 = new org.joda.time.Period((long) 0, 0L, periodType10);
        org.joda.time.Period period18 = duration3.toPeriodTo(readableInstant4, periodType10);
        org.joda.time.MutablePeriod mutablePeriod19 = period18.toMutablePeriod();
        org.joda.time.PeriodType periodType20 = mutablePeriod19.getPeriodType();
        org.joda.time.PeriodType periodType21 = periodType20.withYearsRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((java.lang.Object) 100, periodType20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Integer");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
    }

    @Test
    public void test16127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16127");
        org.joda.time.Period period8 = new org.joda.time.Period((-31), (-60), (int) (short) 1, 35, 96, 8, 6, 596);
        org.joda.time.Period period10 = period8.withMinutes(0);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test16128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16128");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableDuration1);
        org.joda.time.Period period3 = mutablePeriod2.toPeriod();
        int int4 = period3.size();
        org.joda.time.Period period6 = period3.plusDays(1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.THREE;
        org.joda.time.Period period8 = period3.withFields((org.joda.time.ReadablePeriod) minutes7);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.parseMinutes("P0D");
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType12 = minutes11.getPeriodType();
        int int13 = minutes11.getMinutes();
        java.lang.String str14 = minutes11.toString();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = minutes15.getFieldType();
        java.lang.String str17 = minutes15.toString();
        boolean boolean18 = minutes11.isLessThan(minutes15);
        org.joda.time.Minutes minutes19 = minutes11.negated();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.parseMinutes("P0D");
        org.joda.time.Minutes minutes23 = minutes21.dividedBy((int) '#');
        org.joda.time.Minutes minutes24 = minutes11.minus(minutes21);
        boolean boolean25 = minutes10.isGreaterThan(minutes21);
        org.joda.time.Minutes minutes26 = minutes7.minus(minutes21);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(readableInstant32, readableDuration33);
        mutablePeriod34.setPeriod((long) ' ', (long) 52);
        mutablePeriod34.addDays(100);
        org.joda.time.PeriodType periodType40 = mutablePeriod34.getPeriodType();
        org.joda.time.Period period41 = new org.joda.time.Period((long) (short) 0, periodType40);
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(readableInstant29, readableInstant30, periodType40);
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant27, readableInstant28, periodType40);
        org.joda.time.Period period45 = period43.plusMonths(13);
        org.joda.time.Duration duration46 = period43.toStandardDuration();
        org.joda.time.Period period47 = period43.negated();
        org.joda.time.Minutes minutes48 = period47.toStandardMinutes();
        org.joda.time.Minutes minutes50 = minutes48.multipliedBy(100);
        org.joda.time.Period period51 = minutes50.toPeriod();
        boolean boolean52 = minutes21.isLessThan(minutes50);
        org.joda.time.DurationFieldType durationFieldType53 = minutes21.getFieldType();
        org.joda.time.Minutes minutes54 = minutes21.negated();
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.ZERO;
        boolean boolean57 = minutes55.isLessThan(minutes56);
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType59 = minutes58.getPeriodType();
        int int60 = minutes58.getMinutes();
        java.lang.String str61 = minutes58.toString();
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType63 = minutes62.getFieldType();
        java.lang.String str64 = minutes62.toString();
        boolean boolean65 = minutes58.isLessThan(minutes62);
        int int66 = minutes58.size();
        org.joda.time.Minutes minutes67 = minutes55.plus(minutes58);
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.ZERO;
        boolean boolean70 = minutes68.isLessThan(minutes69);
        org.joda.time.Minutes minutes72 = minutes69.multipliedBy((int) (short) 10);
        org.joda.time.Minutes minutes73 = minutes58.plus(minutes72);
        org.joda.time.Minutes minutes74 = minutes73.negated();
        org.joda.time.PeriodType periodType75 = minutes74.getPeriodType();
        boolean boolean76 = minutes54.isLessThan(minutes74);
        int int77 = minutes74.size();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT0M" + "'", str14, "PT0M");
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT-2147483648M" + "'", str17, "PT-2147483648M");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "PT0M" + "'", str61, "PT0M");
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "PT-2147483648M" + "'", str64, "PT-2147483648M");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
    }

    @Test
    public void test16129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16129");
        org.joda.time.Days days3 = org.joda.time.Days.days(32);
        org.joda.time.Days days4 = org.joda.time.Days.ZERO;
        int int5 = days4.getDays();
        org.joda.time.Period period7 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days8 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Period period10 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days11 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period10);
        org.joda.time.PeriodType periodType12 = days11.getPeriodType();
        boolean boolean13 = days8.isGreaterThan(days11);
        org.joda.time.Period period15 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days16 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period15);
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days18 = days4.minus(days11);
        java.lang.String str19 = days18.toString();
        org.joda.time.Days days20 = days3.minus(days18);
        org.joda.time.DurationFieldType durationFieldType21 = days3.getFieldType();
        org.joda.time.PeriodType periodType22 = days3.getPeriodType();
        org.joda.time.Period period23 = new org.joda.time.Period(0L, (long) 100, periodType22);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P0D" + "'", str19, "P0D");
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(periodType22);
    }

    @Test
    public void test16130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16130");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(540000L, (long) '4');
        java.lang.String str3 = mutablePeriod2.toString();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration5 = mutablePeriod2.toDurationTo(readableInstant4);
        org.joda.time.Period period7 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days8 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period7);
        org.joda.time.PeriodType periodType9 = days8.getPeriodType();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(readableInstant10, readableDuration11);
        mutablePeriod12.setHours((int) (short) 100);
        boolean boolean15 = periodType9.equals((java.lang.Object) mutablePeriod12);
        org.joda.time.PeriodType periodType16 = periodType9.withYearsRemoved();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration5.toPeriod(periodType9, chronology17);
        org.joda.time.PeriodType periodType19 = periodType9.withYearsRemoved();
        org.joda.time.PeriodType periodType20 = periodType9.withHoursRemoved();
        org.joda.time.Duration duration22 = new org.joda.time.Duration((long) (-1));
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period27 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days28 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period27);
        org.joda.time.Period period30 = period27.withSeconds((int) ' ');
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.millis();
        org.joda.time.Period period32 = period30.normalizedStandard(periodType31);
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(readableInstant24, readableInstant25, periodType31);
        org.joda.time.PeriodType periodType34 = periodType31.withYearsRemoved();
        org.joda.time.Period period35 = duration22.toPeriodTo(readableInstant23, periodType34);
        org.joda.time.Days days36 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period35);
        org.joda.time.DurationFieldType durationFieldType38 = days36.getFieldType((int) (short) 0);
        boolean boolean39 = periodType9.isSupported(durationFieldType38);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT-8M-59.948S" + "'", str3, "PT-8M-59.948S");
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test16131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16131");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) 'a', (long) 0);
        mutablePeriod3.addYears((int) '4');
        org.joda.time.Chronology chronology7 = null;
        mutablePeriod3.add((long) 100, chronology7);
        org.joda.time.Period period10 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days11 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period10);
        org.joda.time.PeriodType periodType12 = days11.getPeriodType();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(readableInstant13, readableDuration14);
        mutablePeriod15.setHours((int) (short) 100);
        boolean boolean18 = periodType12.equals((java.lang.Object) mutablePeriod15);
        org.joda.time.Duration duration19 = org.joda.time.Duration.ZERO;
        long long20 = duration19.getStandardDays();
        mutablePeriod15.add((org.joda.time.ReadableDuration) duration19);
        long long22 = duration19.getStandardMinutes();
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration26 = duration19.withDurationAdded((long) (byte) -1, (int) (byte) 100);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration19, readableInstant27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration19);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(duration26);
    }

    @Test
    public void test16132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16132");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period5 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days6 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period5);
        org.joda.time.Period period8 = period5.withSeconds((int) ' ');
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.millis();
        org.joda.time.Period period10 = period8.normalizedStandard(periodType9);
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(readableInstant2, readableInstant3, periodType9);
        org.joda.time.PeriodType periodType12 = periodType9.withYearsRemoved();
        org.joda.time.Period period13 = new org.joda.time.Period((-1L), 60000L, periodType12);
        org.joda.time.PeriodType periodType14 = periodType12.withHoursRemoved();
        org.joda.time.PeriodType periodType15 = periodType12.withWeeksRemoved();
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
    }

    @Test
    public void test16133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16133");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds2 = duration1.toStandardSeconds();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds5 = duration4.toStandardSeconds();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds9 = duration8.toStandardSeconds();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds12 = duration11.toStandardSeconds();
        boolean boolean13 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Period period14 = duration8.toPeriod();
        boolean boolean15 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = duration4.toPeriodTo(readableInstant16);
        long long18 = duration4.getStandardDays();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.Period period21 = duration20.toPeriod();
        long long22 = duration20.getStandardSeconds();
        boolean boolean23 = duration4.isEqual((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds26 = duration25.toStandardSeconds();
        java.lang.String str27 = seconds26.toString();
        org.joda.time.PeriodType periodType28 = seconds26.getPeriodType();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((java.lang.Object) duration4, periodType28, chronology29);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds33 = duration32.toStandardSeconds();
        java.lang.String str34 = seconds33.toString();
        org.joda.time.PeriodType periodType35 = seconds33.getPeriodType();
        org.joda.time.PeriodType periodType36 = periodType35.withSecondsRemoved();
        org.joda.time.PeriodType periodType37 = periodType36.withDaysRemoved();
        org.joda.time.Period period38 = duration4.toPeriod(periodType36);
        org.joda.time.Duration duration39 = duration4.toDuration();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, readableInstant40);
        long long42 = duration39.getStandardDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-60L) + "'", long22 == (-60L));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT60S" + "'", str27, "PT60S");
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT60S" + "'", str34, "PT60S");
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
    }

    @Test
    public void test16134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16134");
        org.joda.time.Duration duration0 = org.joda.time.Duration.ZERO;
        long long1 = duration0.getStandardDays();
        org.joda.time.Hours hours2 = duration0.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType3 = hours2.getFieldType();
        org.joda.time.Hours hours4 = null;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.Period period7 = new org.joda.time.Period((long) '4');
        org.joda.time.Period period9 = period7.withHours(32);
        org.joda.time.Hours hours10 = period7.toStandardHours();
        org.joda.time.Hours hours11 = hours10.negated();
        boolean boolean12 = hours5.isGreaterThan(hours10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.FOUR;
        org.joda.time.Duration duration14 = hours13.toStandardDuration();
        org.joda.time.Hours hours16 = hours13.dividedBy((int) ' ');
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((int) (short) -1, (int) '#', (int) ' ', 100);
        org.joda.time.DurationFieldType durationFieldType22 = org.joda.time.DurationFieldType.days();
        int int23 = mutablePeriod21.get(durationFieldType22);
        org.joda.time.Hours hours24 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) mutablePeriod21);
        org.joda.time.Hours hours26 = hours24.dividedBy((int) (short) -1);
        org.joda.time.Hours hours28 = hours26.plus((int) (short) 10);
        boolean boolean29 = hours16.isGreaterThan(hours28);
        org.joda.time.Hours hours30 = hours5.plus(hours28);
        org.joda.time.Hours hours32 = hours5.minus(13);
        org.joda.time.Hours hours34 = hours5.dividedBy((int) '#');
        org.joda.time.Hours hours36 = hours5.minus((int) (byte) 0);
        org.joda.time.Hours hours38 = hours36.dividedBy(100);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((long) 0, (long) (byte) 10, periodType41, chronology42);
        org.joda.time.Duration duration44 = org.joda.time.Duration.ZERO;
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration44.toPeriod(chronology45);
        org.joda.time.Period period47 = period43.withFields((org.joda.time.ReadablePeriod) period46);
        org.joda.time.Hours hours48 = period46.toStandardHours();
        org.joda.time.Hours hours50 = hours48.plus(1);
        org.joda.time.Duration duration51 = org.joda.time.Duration.ZERO;
        long long52 = duration51.getStandardDays();
        org.joda.time.Hours hours53 = duration51.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType54 = hours53.getFieldType();
        org.joda.time.Hours hours55 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours57 = org.joda.time.Hours.hours((int) (byte) -1);
        boolean boolean58 = hours55.isGreaterThan(hours57);
        org.joda.time.Hours hours60 = hours55.minus((int) (byte) 0);
        org.joda.time.Hours hours61 = hours53.minus(hours55);
        org.joda.time.Hours hours63 = hours55.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours65 = hours63.dividedBy(10);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableDuration readableDuration67 = null;
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod(readableInstant66, readableDuration67);
        org.joda.time.Period period69 = mutablePeriod68.toPeriod();
        org.joda.time.Period period71 = period69.withHours(0);
        org.joda.time.Hours hours72 = period71.toStandardHours();
        org.joda.time.Hours hours74 = hours72.plus((int) (byte) 1);
        org.joda.time.Hours hours76 = hours74.dividedBy((int) (byte) 100);
        org.joda.time.Hours hours77 = hours63.minus(hours76);
        boolean boolean78 = hours48.isGreaterThan(hours76);
        org.joda.time.Hours hours79 = hours36.minus(hours48);
        org.joda.time.PeriodType periodType80 = hours48.getPeriodType();
        org.joda.time.Hours hours82 = hours48.dividedBy((-7));
        org.joda.time.Hours hours84 = hours82.dividedBy(416);
        org.junit.Assert.assertNotNull(duration0);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertNotNull(hours84);
    }

    @Test
    public void test16135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16135");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) 60, chronology1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration4 = period2.toDurationTo(readableInstant3);
        org.joda.time.Hours hours5 = period2.toStandardHours();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(hours5);
    }

    @Test
    public void test16136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16136");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) (-1));
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period6 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days7 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period6);
        org.joda.time.Period period9 = period6.withSeconds((int) ' ');
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.millis();
        org.joda.time.Period period11 = period9.normalizedStandard(periodType10);
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(readableInstant3, readableInstant4, periodType10);
        org.joda.time.PeriodType periodType13 = periodType10.withYearsRemoved();
        org.joda.time.Period period14 = duration1.toPeriodTo(readableInstant2, periodType13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = duration1.toPeriodFrom(readableInstant15);
        org.joda.time.Period period17 = duration1.toPeriod();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period17);
    }

    @Test
    public void test16137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16137");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) (short) 0, 52, (int) (short) -1, 52, (-1), (int) ' ', (int) '4', 8);
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod8);
        int int10 = mutablePeriod8.size();
        mutablePeriod8.setMonths(671);
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 100, (int) (short) 0, 10, 1, 2, 0, 8);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType25 = periodType24.withWeeksRemoved();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration23.toPeriod(periodType24, chronology26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType30 = periodType29.withMonthsRemoved();
        org.joda.time.Period period31 = duration23.toPeriodTo(readableInstant28, periodType30);
        org.joda.time.Duration duration32 = duration23.toDuration();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration32, readableInstant33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration41 = duration38.toDuration();
        int int42 = duration32.compareTo((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Interval interval44 = duration41.toIntervalTo(readableInstant43);
        org.joda.time.Hours hours45 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval44);
        mutablePeriod21.add((org.joda.time.ReadableInterval) interval44);
        mutablePeriod8.setPeriod((org.joda.time.ReadableInterval) interval44);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 8 + "'", int10 == 8);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(hours45);
    }

    @Test
    public void test16138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16138");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(75, (-20), 8744020, (-6));
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Period period8 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Period period10 = period8.withMillis((int) (byte) -1);
        org.joda.time.Weeks weeks11 = period10.toStandardWeeks();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks11);
        org.joda.time.Weeks weeks14 = weeks6.plus((int) (byte) 10);
        org.joda.time.Weeks weeks16 = weeks6.multipliedBy((-2147483648));
        org.joda.time.Weeks weeks17 = weeks6.negated();
        mutablePeriod4.mergePeriod((org.joda.time.ReadablePeriod) weeks6);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
    }

    @Test
    public void test16139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16139");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodParser periodParser3 = periodFormatter2.getParser();
        java.util.Locale locale4 = null;
        org.joda.time.format.PeriodFormatter periodFormatter5 = periodFormatter2.withLocale(locale4);
        java.util.Locale locale6 = null;
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter2.withLocale(locale6);
        java.util.Locale locale8 = null;
        org.joda.time.format.PeriodFormatter periodFormatter9 = periodFormatter2.withLocale(locale8);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period11 = periodFormatter2.parsePeriod("PT90000S");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodParser3);
        org.junit.Assert.assertNotNull(periodFormatter5);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNotNull(periodFormatter9);
    }

    @Test
    public void test16140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16140");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableDuration readableDuration2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType5 = periodType4.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType5.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(readableDuration2, readableInstant3, periodType5);
        org.joda.time.PeriodType periodType8 = periodType5.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType5);
        org.joda.time.PeriodType periodType10 = periodType5.withMinutesRemoved();
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType10);
    }

    @Test
    public void test16141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16141");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.PeriodType periodType4 = periodType3.withDaysRemoved();
        org.joda.time.Period period5 = new org.joda.time.Period((-60L), periodType4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds8 = duration7.toStandardSeconds();
        java.lang.String str9 = seconds8.toString();
        org.joda.time.PeriodType periodType10 = seconds8.getPeriodType();
        org.joda.time.PeriodType periodType11 = seconds8.getPeriodType();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration13 = org.joda.time.Duration.ZERO;
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration13.toPeriod(chronology14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration13);
        boolean boolean17 = periodType11.equals((java.lang.Object) duration13);
        org.joda.time.PeriodType periodType18 = periodType11.withMonthsRemoved();
        org.joda.time.Period period19 = period5.withPeriodType(periodType11);
        org.joda.time.Period period20 = new org.joda.time.Period((long) (-59), (long) 99, periodType11);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT60S" + "'", str9, "PT60S");
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period19);
    }

    @Test
    public void test16142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16142");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.Period period4 = period1.withSeconds((int) ' ');
        int int5 = period4.getSeconds();
        org.joda.time.Period period7 = period4.minusMillis(0);
        int int8 = period4.getWeeks();
        org.joda.time.Period period10 = period4.multipliedBy(4);
        org.joda.time.Period period11 = period4.toPeriod();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 32 + "'", int5 == 32);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test16143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16143");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) (short) 100);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType5 = periodType4.withWeeksRemoved();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration3.toPeriod(periodType4, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType10 = periodType9.withMonthsRemoved();
        org.joda.time.Period period11 = duration3.toPeriodTo(readableInstant8, periodType10);
        org.joda.time.Period period12 = duration3.toPeriod();
        boolean boolean13 = duration1.equals((java.lang.Object) period12);
        org.joda.time.Period period15 = period12.plusYears(4);
        org.joda.time.Period period17 = period12.plusMillis((int) (byte) 1);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardSeconds((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.PeriodType periodType22 = periodType21.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration19, readableInstant20, periodType21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableInstant readableInstant25 = null;
        mutablePeriod23.setPeriod(readableInstant24, readableInstant25);
        int int27 = mutablePeriod23.getWeeks();
        org.joda.time.Period period28 = period17.plus((org.joda.time.ReadablePeriod) mutablePeriod23);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = mutablePeriod23.getValue((-27));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -27");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(period28);
    }

    @Test
    public void test16144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16144");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodParser periodParser3 = periodFormatter2.getParser();
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter2.getPrinter();
        boolean boolean5 = periodFormatter2.isParser();
        boolean boolean6 = periodFormatter2.isParser();
        java.util.Locale locale7 = periodFormatter2.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod9 = periodFormatter2.parseMutablePeriod("PT-100M-35.100S");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodParser3);
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(locale7);
    }

    @Test
    public void test16145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16145");
        org.joda.time.Period period1 = org.joda.time.Period.weeks((int) (byte) -1);
        org.joda.time.Period period3 = period1.plusYears((int) (byte) 100);
        org.joda.time.Period period4 = period3.normalizedStandard();
        int[] intArray5 = period3.getValues();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(readableInstant6, readableInstant7);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeksIn(readableInterval9);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.weeksIn(readableInterval11);
        boolean boolean13 = weeks10.isLessThan(weeks12);
        org.joda.time.Weeks weeks14 = weeks10.negated();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((java.lang.Object) weeks10, chronology15);
        org.joda.time.Weeks weeks18 = weeks10.multipliedBy((int) (byte) 1);
        org.joda.time.DurationFieldType durationFieldType20 = weeks10.getFieldType(0);
        mutablePeriod8.set(durationFieldType20, (-2));
        int int23 = period3.get(durationFieldType20);
        java.lang.Class<?> wildcardClass24 = durationFieldType20.getClass();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 0, -1, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test16146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16146");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType3 = periodType2.withWeeksRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.Period period5 = duration1.toPeriod(periodType2, chronology4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType8 = periodType7.withMonthsRemoved();
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant6, periodType8);
        org.joda.time.Minutes minutes10 = duration1.toStandardMinutes();
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes14 = minutes10.minus((int) (short) 0);
        int int15 = minutes10.getMinutes();
        org.joda.time.Minutes minutes17 = minutes10.plus(52);
        org.joda.time.PeriodType periodType18 = minutes17.getPeriodType();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(periodType18);
    }

    @Test
    public void test16147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16147");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.PeriodType periodType3 = days2.getPeriodType();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(readableInstant4, readableDuration5);
        mutablePeriod6.setHours((int) (short) 100);
        boolean boolean9 = periodType3.equals((java.lang.Object) mutablePeriod6);
        org.joda.time.Duration duration10 = org.joda.time.Duration.ZERO;
        long long11 = duration10.getStandardDays();
        mutablePeriod6.add((org.joda.time.ReadableDuration) duration10);
        mutablePeriod6.clear();
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) 'a', (long) 0);
        mutablePeriod16.addYears((int) '4');
        int int19 = mutablePeriod16.getYears();
        mutablePeriod6.add((org.joda.time.ReadablePeriod) mutablePeriod16);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(readableInstant21, readableDuration22);
        mutablePeriod23.setSeconds(8);
        org.joda.time.MutablePeriod mutablePeriod26 = mutablePeriod23.toMutablePeriod();
        mutablePeriod16.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod26);
        mutablePeriod26.addMonths((int) ' ');
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardSeconds((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.PeriodType periodType34 = periodType33.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration31, readableInstant32, periodType33);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((long) 0, (long) 2, chronology38);
        mutablePeriod39.add((long) (byte) -1);
        mutablePeriod39.addWeeks((int) (byte) -1);
        mutablePeriod39.setWeeks((int) (byte) 100);
        mutablePeriod39.setPeriod((long) 2147483647, (long) (-60));
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Period period52 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days53 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period52);
        org.joda.time.Period period55 = period52.withSeconds((int) ' ');
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.millis();
        org.joda.time.Period period57 = period55.normalizedStandard(periodType56);
        org.joda.time.MutablePeriod mutablePeriod58 = new org.joda.time.MutablePeriod(readableInstant49, readableInstant50, periodType56);
        org.joda.time.DurationFieldType[] durationFieldTypeArray59 = mutablePeriod58.getFieldTypes();
        org.joda.time.MutablePeriod mutablePeriod60 = mutablePeriod58.copy();
        mutablePeriod58.add((long) (short) 1);
        java.lang.Object obj63 = mutablePeriod58.clone();
        org.joda.time.Duration duration65 = new org.joda.time.Duration((long) (-1));
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes(100L);
        org.joda.time.Period period69 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days70 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period69);
        org.joda.time.PeriodType periodType71 = days70.getPeriodType();
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.ReadableDuration readableDuration73 = null;
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod(readableInstant72, readableDuration73);
        mutablePeriod74.setHours((int) (short) 100);
        boolean boolean77 = periodType71.equals((java.lang.Object) mutablePeriod74);
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod((java.lang.Object) duration67, periodType71, chronology78);
        boolean boolean80 = duration65.isEqual((org.joda.time.ReadableDuration) duration67);
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.Interval interval82 = duration67.toIntervalTo(readableInstant81);
        mutablePeriod58.setPeriod((org.joda.time.ReadableInterval) interval82);
        mutablePeriod39.add((org.joda.time.ReadableInterval) interval82);
        mutablePeriod35.setPeriod((org.joda.time.ReadableInterval) interval82);
        mutablePeriod26.setPeriod((org.joda.time.ReadableInterval) interval82);
        org.joda.time.Days days87 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval82);
        org.joda.time.DurationFieldType durationFieldType88 = days87.getFieldType();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(durationFieldTypeArray59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "PT6000S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "PT6000S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "PT6000S");
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(days70);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(interval82);
        org.junit.Assert.assertNotNull(days87);
        org.junit.Assert.assertNotNull(durationFieldType88);
    }

    @Test
    public void test16148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16148");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period(52, (int) (byte) 10, (-32), (int) (byte) 0, 0, (int) (short) 0, (int) ' ', 52, periodType8);
        org.joda.time.Period period11 = period9.minusMillis((-2));
        int int12 = period9.getMinutes();
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test16149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16149");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours((int) (byte) -1);
        boolean boolean3 = hours0.isGreaterThan(hours2);
        org.joda.time.Hours hours5 = hours0.plus(596);
        org.joda.time.Duration duration6 = org.joda.time.Duration.ZERO;
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration6.toPeriod(chronology7);
        int int9 = period8.size();
        org.joda.time.Period period11 = period8.plusHours((int) (short) 1);
        org.joda.time.Period period12 = period8.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.ZERO;
        long long14 = duration13.getStandardDays();
        org.joda.time.Hours hours15 = duration13.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType16 = hours15.getFieldType();
        org.joda.time.Hours hours17 = null;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        org.joda.time.Period period19 = period12.plus((org.joda.time.ReadablePeriod) hours18);
        org.joda.time.Hours hours20 = hours0.minus(hours18);
        org.joda.time.Hours hours22 = hours18.minus((int) (short) 0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours22);
    }

    @Test
    public void test16150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16150");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds5 = duration4.toStandardSeconds();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds8 = duration7.toStandardSeconds();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType12 = periodType11.withMinutesRemoved();
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant10, periodType11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(readableInstant14, readableDuration15);
        mutablePeriod16.setHours((int) (short) 100);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology21 = null;
        mutablePeriod16.setPeriod((org.joda.time.ReadableDuration) duration20, chronology21);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds25 = duration24.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        mutablePeriod16.add(durationFieldType26, (int) (short) 0);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(readableInstant29, readableDuration30);
        mutablePeriod31.setHours((int) (short) 100);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology36 = null;
        mutablePeriod31.setPeriod((org.joda.time.ReadableDuration) duration35, chronology36);
        org.joda.time.Chronology chronology38 = null;
        mutablePeriod16.setPeriod((org.joda.time.ReadableDuration) duration35, chronology38);
        int int40 = duration7.compareTo((org.joda.time.ReadableDuration) duration35);
        org.joda.time.Duration duration42 = duration35.minus(1L);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((long) 10);
        java.lang.String str45 = duration44.toString();
        org.joda.time.Duration duration47 = duration44.minus((long) (byte) 10);
        org.joda.time.Duration duration49 = duration44.withMillis((long) (short) -1);
        org.joda.time.Period period50 = duration44.toPeriod();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds53 = duration52.toStandardSeconds();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds56 = duration55.toStandardSeconds();
        boolean boolean57 = duration52.isLongerThan((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds60 = duration59.toStandardSeconds();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds63 = duration62.toStandardSeconds();
        boolean boolean64 = duration59.isLongerThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Period period65 = duration59.toPeriod();
        boolean boolean66 = duration55.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration67 = duration59.toDuration();
        org.joda.time.Period period68 = duration67.toPeriod();
        boolean boolean69 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration67);
        org.joda.time.Duration duration71 = duration42.withDurationAdded((org.joda.time.ReadableDuration) duration44, (int) '#');
        org.joda.time.Period period72 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration71);
        org.joda.time.PeriodType periodType75 = null;
        org.joda.time.Period period76 = new org.joda.time.Period((long) (byte) 10, (long) '#', periodType75);
        int int77 = period76.getMillis();
        org.joda.time.Period period79 = period76.plusDays((int) 'a');
        org.joda.time.Duration duration81 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds82 = duration81.toStandardSeconds();
        java.lang.String str83 = seconds82.toString();
        org.joda.time.PeriodType periodType84 = seconds82.getPeriodType();
        org.joda.time.PeriodType periodType85 = periodType84.withSecondsRemoved();
        org.joda.time.PeriodType periodType86 = periodType85.withDaysRemoved();
        org.joda.time.Period period87 = period79.normalizedStandard(periodType86);
        org.joda.time.PeriodType periodType88 = periodType86.withMonthsRemoved();
        org.joda.time.PeriodType periodType89 = periodType88.withMinutesRemoved();
        org.joda.time.Period period90 = duration71.toPeriod(periodType88);
        org.joda.time.Period period91 = new org.joda.time.Period(84326400L, (long) 0, periodType88);
        int int92 = periodType88.size();
        org.joda.time.PeriodType periodType93 = periodType88.withWeeksRemoved();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "PT600S" + "'", str45, "PT600S");
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 25 + "'", int77 == 25);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "PT60S" + "'", str83, "PT60S");
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(periodType88);
        org.junit.Assert.assertNotNull(periodType89);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(periodType93);
    }

    @Test
    public void test16151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16151");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableDuration1);
        mutablePeriod2.setHours((int) (short) 100);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology7 = null;
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration6, chronology7);
        int int9 = mutablePeriod2.getWeeks();
        mutablePeriod2.setHours(4);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableInstant readableInstant13 = null;
        mutablePeriod2.setPeriod(readableInstant12, readableInstant13);
        int int15 = mutablePeriod2.getHours();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.TWO;
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.weeksIn(readableInterval17);
        org.joda.time.ReadableInterval readableInterval19 = null;
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeksIn(readableInterval19);
        boolean boolean21 = weeks18.isLessThan(weeks20);
        org.joda.time.Weeks weeks22 = weeks18.negated();
        org.joda.time.ReadableInterval readableInterval23 = null;
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.weeksIn(readableInterval23);
        org.joda.time.ReadableInterval readableInterval25 = null;
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.weeksIn(readableInterval25);
        boolean boolean27 = weeks24.isLessThan(weeks26);
        org.joda.time.Weeks weeks28 = weeks24.negated();
        org.joda.time.Weeks weeks30 = weeks28.minus((int) (byte) 100);
        org.joda.time.Weeks weeks31 = weeks22.plus(weeks28);
        boolean boolean32 = weeks16.isLessThan(weeks28);
        org.joda.time.Weeks weeks34 = weeks16.multipliedBy((int) (short) 1);
        org.joda.time.ReadableInterval readableInterval35 = null;
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.weeksIn(readableInterval35);
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.weeksIn(readableInterval37);
        boolean boolean39 = weeks36.isLessThan(weeks38);
        org.joda.time.Weeks weeks40 = weeks36.negated();
        org.joda.time.Weeks weeks42 = weeks40.minus((int) (byte) 100);
        org.joda.time.ReadableInterval readableInterval43 = null;
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.weeksIn(readableInterval43);
        org.joda.time.ReadableInterval readableInterval45 = null;
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.weeksIn(readableInterval45);
        boolean boolean47 = weeks44.isLessThan(weeks46);
        org.joda.time.Weeks weeks49 = weeks46.minus((int) (short) -1);
        org.joda.time.Weeks weeks51 = weeks49.multipliedBy(0);
        boolean boolean52 = weeks42.isGreaterThan(weeks51);
        org.joda.time.Period period57 = new org.joda.time.Period(0, (int) '4', (int) (short) 100, (int) (byte) -1);
        org.joda.time.Period period59 = period57.withDays((int) 'a');
        org.joda.time.Weeks weeks60 = period59.toStandardWeeks();
        int int61 = weeks60.getWeeks();
        org.joda.time.ReadableInterval readableInterval62 = null;
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.weeksIn(readableInterval62);
        org.joda.time.ReadableInterval readableInterval64 = null;
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.weeksIn(readableInterval64);
        boolean boolean66 = weeks63.isLessThan(weeks65);
        org.joda.time.Weeks weeks68 = weeks65.minus((int) (short) -1);
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks71 = weeks68.multipliedBy(0);
        boolean boolean72 = weeks60.isGreaterThan(weeks71);
        org.joda.time.Weeks weeks73 = weeks51.minus(weeks60);
        org.joda.time.Weeks weeks74 = weeks34.minus(weeks73);
        org.joda.time.Duration duration75 = weeks34.toStandardDuration();
        org.joda.time.PeriodType periodType76 = weeks34.getPeriodType();
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) weeks34);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 13 + "'", int61 == 13);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(periodType76);
    }

    @Test
    public void test16152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16152");
        org.joda.time.Period period1 = new org.joda.time.Period((long) '4');
        org.joda.time.Period period3 = period1.withHours(32);
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.Duration duration5 = org.joda.time.Duration.ZERO;
        long long6 = duration5.getStandardDays();
        org.joda.time.Hours hours7 = duration5.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType8 = hours7.getFieldType();
        boolean boolean9 = periodType4.isSupported(durationFieldType8);
        org.joda.time.Period period11 = period1.withFieldAdded(durationFieldType8, (-8));
        org.joda.time.Chronology chronology12 = null;
        boolean boolean13 = durationFieldType8.isSupported(chronology12);
        org.joda.time.Chronology chronology14 = null;
        boolean boolean15 = durationFieldType8.isSupported(chronology14);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test16153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16153");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds2 = duration1.toStandardSeconds();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds5 = duration4.toStandardSeconds();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration1.toPeriod();
        org.joda.time.Period period8 = period7.negated();
        org.joda.time.Seconds seconds9 = period8.toStandardSeconds();
        org.joda.time.Period period10 = period8.negated();
        org.joda.time.Period period12 = period8.plusMonths((-2));
        org.joda.time.Period period14 = period12.minusMinutes((-672));
        org.joda.time.Period period16 = period14.multipliedBy(54);
        org.joda.time.Period period17 = period14.toPeriod();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period17);
    }

    @Test
    public void test16154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16154");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType4 = periodType3.withWeeksRemoved();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(periodType3, chronology5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType9 = periodType8.withMonthsRemoved();
        org.joda.time.Period period10 = duration2.toPeriodTo(readableInstant7, periodType9);
        org.joda.time.Minutes minutes11 = duration2.toStandardMinutes();
        java.lang.String str12 = duration2.toString();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = duration2.toPeriodFrom(readableInstant13);
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType18 = periodType17.withHoursRemoved();
        org.joda.time.PeriodType periodType19 = periodType17.withMonthsRemoved();
        org.joda.time.Period period20 = duration2.toPeriodTo(readableInstant16, periodType19);
        org.joda.time.Period period22 = period20.minusWeeks(50);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT-60S" + "'", str12, "PT-60S");
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
    }

    @Test
    public void test16155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16155");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) (short) 1);
        org.joda.time.Period period3 = period1.plusMillis((int) (byte) 0);
        org.joda.time.Period period5 = period3.withMinutes(32);
        org.joda.time.Days days6 = period3.toStandardDays();
        org.joda.time.Period period8 = new org.joda.time.Period((long) (-637));
        org.joda.time.MutablePeriod mutablePeriod9 = period8.toMutablePeriod();
        boolean boolean10 = days6.equals((java.lang.Object) mutablePeriod9);
        org.joda.time.Days days12 = days6.minus(38);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(days12);
    }

    @Test
    public void test16156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16156");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((long) 10);
        java.lang.String str3 = duration2.toString();
        org.joda.time.Duration duration5 = duration2.minus((long) (byte) 10);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(readableInstant6, readableDuration7);
        mutablePeriod8.setHours((int) (short) 100);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology13 = null;
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration12, chronology13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds17 = duration16.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        mutablePeriod8.add(durationFieldType18, (int) (short) 0);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(readableInstant21, readableDuration22);
        mutablePeriod23.setHours((int) (short) 100);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology28 = null;
        mutablePeriod23.setPeriod((org.joda.time.ReadableDuration) duration27, chronology28);
        org.joda.time.Chronology chronology30 = null;
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration27, chronology30);
        org.joda.time.ReadableDuration readableDuration32 = null;
        boolean boolean33 = duration27.isEqual(readableDuration32);
        org.joda.time.Duration duration34 = duration2.minus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardDays(0L);
        long long42 = duration41.getStandardHours();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, readableInstant45, periodType46);
        org.joda.time.PeriodType periodType48 = periodType46.withWeeksRemoved();
        org.joda.time.Period period49 = duration41.toPeriodFrom(readableInstant43, periodType46);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(0L, (long) 52, periodType46, chronology50);
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((long) 40, (long) (-2147483648), periodType46, chronology52);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds56 = duration55.toStandardSeconds();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds59 = duration58.toStandardSeconds();
        boolean boolean60 = duration55.isLongerThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Interval interval62 = duration58.toIntervalTo(readableInstant61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval62);
        org.joda.time.Duration duration64 = seconds63.toStandardDuration();
        org.joda.time.Seconds seconds65 = seconds63.negated();
        org.joda.time.DurationFieldType durationFieldType66 = seconds65.getFieldType();
        boolean boolean67 = periodType46.equals((java.lang.Object) durationFieldType66);
        org.joda.time.Period period68 = duration34.toPeriodFrom(readableInstant35, periodType46);
        org.joda.time.PeriodType periodType69 = periodType46.withHoursRemoved();
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.Period period71 = new org.joda.time.Period(120L, periodType46, chronology70);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT600S" + "'", str3, "PT600S");
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(periodType69);
    }

    @Test
    public void test16157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16157");
        org.joda.time.Duration duration2 = new org.joda.time.Duration(8384460000L, 84326400000L);
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds5 = duration4.toStandardSeconds();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds8 = duration7.toStandardSeconds();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType12 = periodType11.withMinutesRemoved();
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant10, periodType11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(readableInstant14, readableDuration15);
        mutablePeriod16.setHours((int) (short) 100);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology21 = null;
        mutablePeriod16.setPeriod((org.joda.time.ReadableDuration) duration20, chronology21);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds25 = duration24.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        mutablePeriod16.add(durationFieldType26, (int) (short) 0);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(readableInstant29, readableDuration30);
        mutablePeriod31.setHours((int) (short) 100);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology36 = null;
        mutablePeriod31.setPeriod((org.joda.time.ReadableDuration) duration35, chronology36);
        org.joda.time.Chronology chronology38 = null;
        mutablePeriod16.setPeriod((org.joda.time.ReadableDuration) duration35, chronology38);
        int int40 = duration7.compareTo((org.joda.time.ReadableDuration) duration35);
        org.joda.time.Duration duration41 = duration35.toDuration();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardDays(0L);
        boolean boolean44 = duration35.isLongerThan((org.joda.time.ReadableDuration) duration43);
        java.lang.String str45 = duration43.toString();
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.seconds(600);
        boolean boolean48 = duration43.equals((java.lang.Object) 600);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardDays(0L);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Interval interval52 = duration50.toIntervalFrom(readableInstant51);
        long long53 = duration50.getMillis();
        boolean boolean54 = duration43.isEqual((org.joda.time.ReadableDuration) duration50);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((long) 10);
        java.lang.String str57 = duration56.toString();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds60 = duration59.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType61 = seconds60.getFieldType();
        org.joda.time.PeriodType periodType62 = seconds60.getPeriodType();
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.Period period64 = duration56.toPeriod(periodType62, chronology63);
        boolean boolean65 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration56);
        boolean boolean66 = duration2.isEqual((org.joda.time.ReadableDuration) duration56);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "PT0S" + "'", str45, "PT0S");
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PT600S" + "'", str57, "PT600S");
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test16158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16158");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        java.lang.String str4 = seconds3.toString();
        org.joda.time.PeriodType periodType5 = seconds3.getPeriodType();
        org.joda.time.PeriodType periodType6 = periodType5.withSecondsRemoved();
        org.joda.time.PeriodType periodType7 = periodType6.withDaysRemoved();
        org.joda.time.PeriodType periodType8 = periodType7.withWeeksRemoved();
        org.joda.time.PeriodType periodType9 = periodType7.withMonthsRemoved();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((long) (-2147483648), periodType9, chronology10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds14 = duration13.toStandardSeconds();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds17 = duration16.toStandardSeconds();
        boolean boolean18 = duration13.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType21 = periodType20.withMinutesRemoved();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant19, periodType20);
        org.joda.time.Duration duration23 = period22.toStandardDuration();
        org.joda.time.Duration duration25 = new org.joda.time.Duration((long) (-1));
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = duration25.toPeriodFrom(readableInstant26);
        long long28 = duration25.getStandardMinutes();
        int int29 = duration23.compareTo((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration31 = org.joda.time.Duration.millis(8L);
        org.joda.time.Duration duration32 = duration23.plus((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType37 = periodType36.withWeeksRemoved();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration35.toPeriod(periodType36, chronology38);
        org.joda.time.PeriodType periodType40 = periodType36.withMinutesRemoved();
        org.joda.time.Period period41 = duration23.toPeriodFrom(readableInstant33, periodType36);
        org.joda.time.Chronology chronology42 = null;
        mutablePeriod11.setPeriod((org.joda.time.ReadableDuration) duration23, chronology42);
        int int44 = mutablePeriod11.size();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT60S" + "'", str4, "PT60S");
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
    }

    @Test
    public void test16159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16159");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (short) 0, (long) 42);
    }

    @Test
    public void test16160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16160");
        org.joda.time.Period period8 = new org.joda.time.Period((int) ' ', (int) 'a', 8, 8, (int) (short) 100, 0, 2, 13);
        org.joda.time.Period period10 = period8.minusMinutes(10);
        int int11 = period10.getDays();
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
    }

    @Test
    public void test16161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16161");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.PeriodType periodType3 = days2.getPeriodType();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(readableInstant4, readableDuration5);
        mutablePeriod6.setHours((int) (short) 100);
        boolean boolean9 = periodType3.equals((java.lang.Object) mutablePeriod6);
        org.joda.time.Duration duration10 = org.joda.time.Duration.ZERO;
        long long11 = duration10.getStandardDays();
        mutablePeriod6.add((org.joda.time.ReadableDuration) duration10);
        mutablePeriod6.clear();
        org.joda.time.Period period15 = org.joda.time.Period.hours(0);
        org.joda.time.DurationFieldType durationFieldType17 = period15.getFieldType((int) (short) 1);
        mutablePeriod6.set(durationFieldType17, (int) (short) -1);
        mutablePeriod6.setYears((int) '#');
        mutablePeriod6.setHours((-672));
        int int24 = mutablePeriod6.getDays();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test16162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16162");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ZERO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        java.lang.String str2 = seconds0.toString();
        org.joda.time.Seconds seconds4 = seconds0.plus((int) (short) 1);
        int int5 = seconds4.getSeconds();
        int int6 = seconds4.getSeconds();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds9 = duration8.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType10 = seconds9.getFieldType();
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.parseSeconds("P0W");
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        int int14 = seconds13.getSeconds();
        org.joda.time.Seconds seconds16 = seconds13.multipliedBy((int) (byte) 0);
        org.joda.time.Duration duration17 = seconds16.toStandardDuration();
        org.joda.time.Seconds seconds19 = seconds16.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.parseSeconds("P0W");
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds24 = duration23.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType25 = seconds24.getFieldType();
        org.joda.time.Seconds seconds27 = seconds24.plus(25);
        org.joda.time.Seconds seconds28 = seconds24.negated();
        org.joda.time.Seconds seconds30 = seconds24.dividedBy(10);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds33 = duration32.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType34 = seconds33.getFieldType();
        org.joda.time.Seconds seconds36 = seconds33.plus(25);
        org.joda.time.Seconds seconds37 = seconds30.plus(seconds33);
        org.joda.time.Seconds seconds39 = seconds37.plus((int) (byte) 1);
        org.joda.time.Seconds seconds41 = seconds37.minus((-1));
        org.joda.time.Seconds seconds42 = seconds21.minus(seconds41);
        org.joda.time.Period period43 = seconds21.toPeriod();
        boolean boolean44 = seconds19.isGreaterThan(seconds21);
        org.joda.time.Seconds seconds45 = seconds21.negated();
        org.joda.time.Period period46 = seconds21.toPeriod();
        org.joda.time.Seconds seconds47 = seconds4.plus(seconds21);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT0S" + "'", str2, "PT0S");
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 60 + "'", int14 == 60);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(seconds47);
    }

    @Test
    public void test16163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16163");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.PeriodType periodType4 = periodType3.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2, periodType3);
        org.joda.time.MutablePeriod mutablePeriod6 = mutablePeriod5.copy();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds9 = duration8.toStandardSeconds();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds12 = duration11.toStandardSeconds();
        boolean boolean13 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType16 = periodType15.withMinutesRemoved();
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant14, periodType15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration11.toIntervalFrom(readableInstant18);
        mutablePeriod6.add((org.joda.time.ReadableInterval) interval19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval19);
        org.joda.time.Seconds seconds23 = seconds21.minus((int) (short) -1);
        org.joda.time.Seconds seconds25 = seconds23.dividedBy((-1073741824));
        org.joda.time.Seconds seconds27 = seconds23.multipliedBy(13);
        int int28 = seconds27.getSeconds();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 793 + "'", int28 == 793);
    }

    @Test
    public void test16164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16164");
        org.joda.time.Period period1 = org.joda.time.Period.millis(658);
        org.joda.time.Period period3 = period1.withMinutes(596);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test16165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16165");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(13);
        org.joda.time.Hours hours3 = hours1.multipliedBy(20);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
    }

    @Test
    public void test16166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16166");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) (byte) 10, (long) '#', periodType2);
        int int4 = period3.getMillis();
        org.joda.time.Period period6 = period3.plusYears(13);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((java.lang.Object) period6, chronology7);
        org.joda.time.Period period10 = period8.plusMillis(3);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds13 = duration12.toStandardSeconds();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds16 = duration15.toStandardSeconds();
        boolean boolean17 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType20 = periodType19.withMinutesRemoved();
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant18, periodType19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(readableInstant22, readableDuration23);
        mutablePeriod24.setHours((int) (short) 100);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology29 = null;
        mutablePeriod24.setPeriod((org.joda.time.ReadableDuration) duration28, chronology29);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds33 = duration32.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType34 = seconds33.getFieldType();
        mutablePeriod24.add(durationFieldType34, (int) (short) 0);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod(readableInstant37, readableDuration38);
        mutablePeriod39.setHours((int) (short) 100);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology44 = null;
        mutablePeriod39.setPeriod((org.joda.time.ReadableDuration) duration43, chronology44);
        org.joda.time.Chronology chronology46 = null;
        mutablePeriod24.setPeriod((org.joda.time.ReadableDuration) duration43, chronology46);
        int int48 = duration15.compareTo((org.joda.time.ReadableDuration) duration43);
        java.lang.Object obj49 = null;
        boolean boolean50 = duration15.equals(obj49);
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.seconds(2);
        org.joda.time.Duration duration53 = seconds52.toStandardDuration();
        boolean boolean54 = duration15.equals((java.lang.Object) seconds52);
        int int55 = seconds52.getSeconds();
        org.joda.time.DurationFieldType durationFieldType56 = seconds52.getFieldType();
        int int57 = period10.get(durationFieldType56);
        int int58 = period10.getHours();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 25 + "'", int4 == 25);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
    }

    @Test
    public void test16167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16167");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) -1, (int) '#', (int) ' ', 100);
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.days();
        int int6 = mutablePeriod4.get(durationFieldType5);
        org.joda.time.Hours hours7 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) mutablePeriod4);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType11 = periodType10.withWeeksRemoved();
        org.joda.time.PeriodType periodType12 = periodType11.withDaysRemoved();
        org.joda.time.Period period13 = new org.joda.time.Period((long) 'a', (long) (short) 0, periodType12);
        mutablePeriod4.add((org.joda.time.ReadablePeriod) period13);
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod4, periodType15, chronology16);
        mutablePeriod4.addDays((int) (short) 1);
        mutablePeriod4.setPeriod((long) (-32));
        java.lang.String str22 = mutablePeriod4.toString();
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT0.032S" + "'", str22, "PT0.032S");
    }

    @Test
    public void test16168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16168");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.Period period4 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days5 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period4);
        org.joda.time.PeriodType periodType6 = days5.getPeriodType();
        boolean boolean7 = days2.isGreaterThan(days5);
        int int8 = days2.size();
        org.joda.time.Days days9 = days2.negated();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((java.lang.Object) days9, chronology10);
        org.joda.time.MutablePeriod mutablePeriod12 = period11.toMutablePeriod();
        int int13 = mutablePeriod12.getYears();
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType15 = periodType14.withMinutesRemoved();
        boolean boolean16 = mutablePeriod12.equals((java.lang.Object) periodType15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableInstant readableInstant18 = null;
        java.lang.Object obj19 = null;
        org.joda.time.Duration duration20 = new org.joda.time.Duration(obj19);
        org.joda.time.Period period21 = new org.joda.time.Period(readableInstant18, (org.joda.time.ReadableDuration) duration20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType26 = periodType25.withWeeksRemoved();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration24.toPeriod(periodType25, chronology27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType31 = periodType30.withMonthsRemoved();
        org.joda.time.Period period32 = duration24.toPeriodTo(readableInstant29, periodType31);
        org.joda.time.Period period33 = duration24.toPeriod();
        org.joda.time.Duration duration34 = duration20.plus((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration35 = duration20.toDuration();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = duration35.toPeriodFrom(readableInstant36);
        mutablePeriod12.add((org.joda.time.ReadableDuration) duration35);
        org.joda.time.Chronology chronology40 = null;
        mutablePeriod12.add((long) (-39648), chronology40);
        org.joda.time.Days days42 = org.joda.time.Days.ZERO;
        int int43 = days42.getDays();
        org.joda.time.Period period45 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days46 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period45);
        org.joda.time.Period period48 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days49 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period48);
        org.joda.time.PeriodType periodType50 = days49.getPeriodType();
        boolean boolean51 = days46.isGreaterThan(days49);
        org.joda.time.Period period53 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days54 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period53);
        org.joda.time.Days days55 = days49.minus(days54);
        org.joda.time.Days days56 = days42.minus(days49);
        org.joda.time.Days days57 = org.joda.time.Days.ZERO;
        org.joda.time.Period period59 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days60 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period59);
        org.joda.time.Days days62 = days60.minus(10);
        boolean boolean63 = days57.isGreaterThan(days60);
        org.joda.time.Days days64 = days49.minus(days57);
        org.joda.time.Days days65 = days64.negated();
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.PeriodType periodType68 = null;
        org.joda.time.Period period69 = new org.joda.time.Period(readableInstant66, readableInstant67, periodType68);
        org.joda.time.DurationFieldType durationFieldType70 = org.joda.time.DurationFieldType.eras();
        int int71 = period69.get(durationFieldType70);
        org.joda.time.Days days72 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period69);
        org.joda.time.Days days74 = days72.dividedBy(7);
        org.joda.time.PeriodType periodType75 = days74.getPeriodType();
        boolean boolean76 = days65.isLessThan(days74);
        org.joda.time.Days days78 = days65.dividedBy((-637));
        org.joda.time.DurationFieldType durationFieldType79 = days78.getFieldType();
        mutablePeriod12.add(durationFieldType79, 97);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(days72);
        org.junit.Assert.assertNotNull(days74);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertNotNull(durationFieldType79);
    }

    @Test
    public void test16169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16169");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType1 = minutes0.getPeriodType();
        int int2 = minutes0.getMinutes();
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = minutes4.getFieldType();
        java.lang.String str6 = minutes4.toString();
        boolean boolean7 = minutes0.isLessThan(minutes4);
        org.joda.time.Minutes minutes9 = minutes4.minus(0);
        org.joda.time.Minutes minutes11 = minutes9.dividedBy(2);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType13 = minutes12.getPeriodType();
        int int14 = minutes12.getMinutes();
        java.lang.String str15 = minutes12.toString();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = minutes16.getFieldType();
        java.lang.String str18 = minutes16.toString();
        boolean boolean19 = minutes12.isLessThan(minutes16);
        org.joda.time.Minutes minutes20 = minutes12.negated();
        boolean boolean21 = minutes11.isLessThan(minutes20);
        org.joda.time.Minutes minutes23 = minutes11.minus((int) (byte) 1);
        int int24 = minutes11.size();
        org.joda.time.Minutes minutes26 = minutes11.minus((int) (short) 100);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT0M" + "'", str3, "PT0M");
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT-2147483648M" + "'", str6, "PT-2147483648M");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT0M" + "'", str15, "PT0M");
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT-2147483648M" + "'", str18, "PT-2147483648M");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(minutes26);
    }

    @Test
    public void test16170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16170");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeksIn(readableInterval2);
        boolean boolean4 = weeks1.isLessThan(weeks3);
        org.joda.time.Weeks weeks5 = weeks1.negated();
        org.joda.time.Weeks weeks7 = weeks5.minus((int) (byte) 100);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.weeksIn(readableInterval8);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeksIn(readableInterval10);
        boolean boolean12 = weeks9.isLessThan(weeks11);
        org.joda.time.Weeks weeks14 = weeks11.minus((int) (short) -1);
        org.joda.time.Weeks weeks16 = weeks14.multipliedBy(0);
        boolean boolean17 = weeks7.isGreaterThan(weeks16);
        org.joda.time.Period period22 = new org.joda.time.Period(0, (int) '4', (int) (short) 100, (int) (byte) -1);
        org.joda.time.Period period24 = period22.withDays((int) 'a');
        org.joda.time.Weeks weeks25 = period24.toStandardWeeks();
        int int26 = weeks25.getWeeks();
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.weeksIn(readableInterval27);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.weeksIn(readableInterval29);
        boolean boolean31 = weeks28.isLessThan(weeks30);
        org.joda.time.Weeks weeks33 = weeks30.minus((int) (short) -1);
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks36 = weeks33.multipliedBy(0);
        boolean boolean37 = weeks25.isGreaterThan(weeks36);
        org.joda.time.Weeks weeks38 = weeks16.minus(weeks25);
        org.joda.time.ReadableInterval readableInterval39 = null;
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.weeksIn(readableInterval39);
        org.joda.time.Weeks weeks42 = weeks40.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks43 = weeks25.plus(weeks42);
        org.joda.time.Weeks weeks45 = weeks42.multipliedBy((int) 'a');
        org.joda.time.Duration duration46 = weeks45.toStandardDuration();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((long) 0);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType53 = periodType52.withWeeksRemoved();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = duration51.toPeriod(periodType52, chronology54);
        org.joda.time.ReadableInterval readableInterval56 = null;
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.weeksIn(readableInterval56);
        org.joda.time.ReadableInterval readableInterval58 = null;
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.weeksIn(readableInterval58);
        boolean boolean60 = weeks57.isLessThan(weeks59);
        org.joda.time.Weeks weeks62 = weeks59.minus((int) (short) -1);
        org.joda.time.Weeks weeks64 = weeks62.multipliedBy(0);
        org.joda.time.Weeks weeks65 = null;
        boolean boolean66 = weeks62.isLessThan(weeks65);
        int int68 = weeks62.getValue((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType69 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Chronology chronology70 = null;
        boolean boolean71 = durationFieldType69.isSupported(chronology70);
        boolean boolean72 = weeks62.isSupported(durationFieldType69);
        org.joda.time.DurationFieldType durationFieldType73 = weeks62.getFieldType();
        boolean boolean74 = periodType52.isSupported(durationFieldType73);
        org.joda.time.PeriodType periodType75 = periodType52.withSecondsRemoved();
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration48, readableInstant49, periodType75);
        long long77 = duration48.getMillis();
        boolean boolean78 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration48);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 13 + "'", int26 == 13);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 0L + "'", long77 == 0L);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test16171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16171");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Period period3 = period1.plusYears((int) ' ');
        int int4 = period1.getWeeks();
        org.joda.time.Duration duration5 = period1.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Interval interval7 = duration5.toIntervalFrom(readableInstant6);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(interval7);
    }

    @Test
    public void test16172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16172");
        org.joda.time.Period period8 = new org.joda.time.Period(25, (-32), (int) (short) -1, 7, (-1), (int) (short) 10, (int) (byte) 10, 5);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((long) '4', chronology10);
        org.joda.time.Duration duration12 = org.joda.time.Duration.ZERO;
        long long13 = duration12.getStandardDays();
        org.joda.time.Hours hours14 = duration12.toStandardHours();
        long long15 = duration12.getStandardMinutes();
        long long16 = duration12.getStandardDays();
        mutablePeriod11.setPeriod((org.joda.time.ReadableDuration) duration12);
        int int18 = mutablePeriod11.getDays();
        mutablePeriod11.addMillis((-1));
        org.joda.time.Period period21 = period8.plus((org.joda.time.ReadablePeriod) mutablePeriod11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(period21);
    }

    @Test
    public void test16173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16173");
        org.joda.time.Duration duration2 = new org.joda.time.Duration(60000L, (long) 'a');
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodTo(readableInstant3);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test16174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16174");
        org.joda.time.Duration duration1 = org.joda.time.Duration.parse("PT0.052S");
        org.joda.time.Duration duration3 = duration1.minus((long) 'a');
        org.joda.time.Hours hours4 = duration1.toStandardHours();
        org.joda.time.ReadablePeriod readablePeriod5 = null;
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn(readablePeriod5);
        org.joda.time.Hours hours8 = hours6.plus(2);
        boolean boolean9 = hours4.isGreaterThan(hours6);
        org.joda.time.Hours hours10 = org.joda.time.Hours.FOUR;
        org.joda.time.Hours hours12 = hours10.minus(0);
        org.joda.time.Hours hours13 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours15 = org.joda.time.Hours.hours((int) (byte) -1);
        boolean boolean16 = hours13.isGreaterThan(hours15);
        boolean boolean17 = hours12.isLessThan(hours15);
        java.lang.String str18 = hours12.toString();
        org.joda.time.Hours hours20 = hours12.dividedBy((int) (short) 10);
        org.joda.time.Duration duration21 = hours12.toStandardDuration();
        int int22 = hours12.getHours();
        org.joda.time.Hours hours24 = hours12.dividedBy((-672));
        boolean boolean25 = hours6.isGreaterThan(hours24);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT4H" + "'", str18, "PT4H");
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test16175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16175");
        org.joda.time.Days days1 = org.joda.time.Days.days((-2147483648));
        int int2 = days1.size();
        org.joda.time.Period period3 = days1.toPeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test16176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16176");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 1, (long) (byte) 100);
        int int3 = mutablePeriod2.size();
        org.joda.time.MutablePeriod mutablePeriod4 = mutablePeriod2.copy();
        org.joda.time.Period period6 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days7 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period6);
        org.joda.time.PeriodType periodType8 = days7.getPeriodType();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(readableInstant9, readableDuration10);
        mutablePeriod11.setHours((int) (short) 100);
        boolean boolean14 = periodType8.equals((java.lang.Object) mutablePeriod11);
        org.joda.time.Duration duration15 = org.joda.time.Duration.ZERO;
        long long16 = duration15.getStandardDays();
        mutablePeriod11.add((org.joda.time.ReadableDuration) duration15);
        long long18 = duration15.getStandardMinutes();
        org.joda.time.Duration duration20 = duration15.withMillis((long) 0);
        org.joda.time.Duration duration22 = duration15.minus((-60L));
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType28 = periodType27.withMonthsRemoved();
        org.joda.time.PeriodType periodType29 = periodType28.withMinutesRemoved();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((long) (short) 0, periodType28, chronology30);
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(4L, (long) 671, periodType28, chronology32);
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration15, readableInstant23, periodType28);
        mutablePeriod4.setPeriod((org.joda.time.ReadableDuration) duration15);
        long long36 = duration15.getMillis();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
    }

    @Test
    public void test16177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16177");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) (byte) -1);
        org.joda.time.Hours hours2 = duration1.toStandardHours();
        org.joda.time.Duration duration4 = duration1.withMillis(194400L);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(duration4);
    }

    @Test
    public void test16178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16178");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds2 = duration1.toStandardSeconds();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds5 = duration4.toStandardSeconds();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration1.toPeriod();
        org.joda.time.Period period8 = period7.negated();
        org.joda.time.Period period10 = period7.withMillis(100);
        org.joda.time.Period period12 = period7.minusMillis((int) 'a');
        org.joda.time.Period period14 = period12.plusWeeks((-609));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
    }

    @Test
    public void test16179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16179");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((-86400000L));
        org.joda.time.Days days2 = duration1.toStandardDays();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardDays((-1L));
        long long5 = duration4.getMillis();
        long long6 = duration4.getMillis();
        org.joda.time.Duration duration7 = duration1.minus((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration4.toPeriodTo(readableInstant8);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-86400000L) + "'", long5 == (-86400000L));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-86400000L) + "'", long6 == (-86400000L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test16180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16180");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.PeriodType periodType3 = days2.getPeriodType();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(readableInstant4, readableDuration5);
        mutablePeriod6.setHours((int) (short) 100);
        boolean boolean9 = periodType3.equals((java.lang.Object) mutablePeriod6);
        org.joda.time.Duration duration10 = org.joda.time.Duration.ZERO;
        long long11 = duration10.getStandardDays();
        mutablePeriod6.add((org.joda.time.ReadableDuration) duration10);
        mutablePeriod6.clear();
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) 'a', (long) 0);
        mutablePeriod16.addYears((int) '4');
        int int19 = mutablePeriod16.getYears();
        mutablePeriod6.add((org.joda.time.ReadablePeriod) mutablePeriod16);
        mutablePeriod6.setMinutes(10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardSeconds((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.PeriodType periodType27 = periodType26.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration24, readableInstant25, periodType26);
        int int29 = mutablePeriod28.getWeeks();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((java.lang.Object) mutablePeriod28, chronology30);
        org.joda.time.Days days32 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period31);
        org.joda.time.Days days34 = days32.plus((int) (short) 0);
        org.joda.time.Days days36 = days32.dividedBy((int) ' ');
        org.joda.time.PeriodType periodType37 = days36.getPeriodType();
        org.joda.time.PeriodType periodType38 = periodType37.withYearsRemoved();
        org.joda.time.Chronology chronology39 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period40 = new org.joda.time.Period((java.lang.Object) 10, periodType38, chronology39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Integer");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType38);
    }

    @Test
    public void test16181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16181");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("PT0.002S");
        org.junit.Assert.assertNotNull(mutablePeriod1);
    }

    @Test
    public void test16182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16182");
        org.joda.time.Period period1 = new org.joda.time.Period((long) '4');
        org.joda.time.Period period3 = period1.withHours(32);
        org.joda.time.Period period4 = period1.normalizedStandard();
        org.joda.time.Period period6 = period1.plusHours((int) (short) 1);
        org.joda.time.Period period8 = period1.withYears(52);
        org.joda.time.Period period10 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days11 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period10);
        org.joda.time.PeriodType periodType12 = days11.getPeriodType();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(readableInstant13, readableDuration14);
        mutablePeriod15.setHours((int) (short) 100);
        boolean boolean18 = periodType12.equals((java.lang.Object) mutablePeriod15);
        org.joda.time.Duration duration19 = org.joda.time.Duration.ZERO;
        long long20 = duration19.getStandardDays();
        mutablePeriod15.add((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Period period23 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days24 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period23);
        org.joda.time.PeriodType periodType25 = days24.getPeriodType();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant26, readableDuration27);
        mutablePeriod28.setHours((int) (short) 100);
        boolean boolean31 = periodType25.equals((java.lang.Object) mutablePeriod28);
        org.joda.time.Duration duration32 = org.joda.time.Duration.ZERO;
        long long33 = duration32.getStandardDays();
        mutablePeriod28.add((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((long) (byte) 10, (long) '#', periodType37);
        org.joda.time.DurationFieldType durationFieldType39 = org.joda.time.DurationFieldType.weekyears();
        int int40 = period38.get(durationFieldType39);
        int int41 = mutablePeriod28.get(durationFieldType39);
        int int42 = mutablePeriod15.get(durationFieldType39);
        mutablePeriod15.setSeconds(100);
        org.joda.time.PeriodType periodType45 = mutablePeriod15.getPeriodType();
        org.joda.time.Period period46 = period8.normalizedStandard(periodType45);
        org.joda.time.Period period48 = period46.plusMonths((-8));
        org.joda.time.Period period49 = period46.toPeriod();
        org.joda.time.Period period51 = period46.minusWeeks((-87));
        org.joda.time.MutablePeriod mutablePeriod53 = org.joda.time.MutablePeriod.parse("PT0.001S");
        mutablePeriod53.setWeeks((-1));
        int int56 = mutablePeriod53.getWeeks();
        int int57 = mutablePeriod53.getMillis();
        org.joda.time.MutablePeriod mutablePeriod58 = mutablePeriod53.toMutablePeriod();
        org.joda.time.Period period59 = period46.minus((org.joda.time.ReadablePeriod) mutablePeriod58);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(period59);
    }

    @Test
    public void test16183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16183");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds4 = duration3.toStandardSeconds();
        java.lang.String str5 = seconds4.toString();
        org.joda.time.PeriodType periodType6 = seconds4.getPeriodType();
        org.joda.time.PeriodType periodType7 = periodType6.withSecondsRemoved();
        org.joda.time.PeriodType periodType8 = periodType7.withDaysRemoved();
        org.joda.time.PeriodType periodType9 = periodType8.withWeeksRemoved();
        org.joda.time.PeriodType periodType10 = periodType8.withMonthsRemoved();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((long) (-2147483648), periodType10, chronology11);
        org.joda.time.Period period13 = new org.joda.time.Period((long) (byte) 10, periodType10);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.ZERO;
        org.joda.time.Seconds seconds16 = seconds14.dividedBy((int) (byte) 1);
        org.joda.time.DurationFieldType durationFieldType17 = seconds16.getFieldType();
        int int18 = periodType10.indexOf(durationFieldType17);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT60S" + "'", str5, "PT60S");
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test16184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16184");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds4 = duration3.toStandardSeconds();
        java.lang.String str5 = seconds4.toString();
        org.joda.time.PeriodType periodType6 = seconds4.getPeriodType();
        org.joda.time.PeriodType periodType7 = periodType6.withSecondsRemoved();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((long) (-1), (long) 100, periodType7, chronology8);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeksIn(readableInterval10);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeksIn(readableInterval12);
        boolean boolean14 = weeks11.isLessThan(weeks13);
        org.joda.time.Weeks weeks15 = weeks11.negated();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((java.lang.Object) weeks11, chronology16);
        int[] intArray18 = period17.getValues();
        org.joda.time.DurationFieldType[] durationFieldTypeArray19 = period17.getFieldTypes();
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.forFields(durationFieldTypeArray19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.forFields(durationFieldTypeArray19);
        org.joda.time.Chronology chronology22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((java.lang.Object) (-1), periodType21, chronology22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Integer");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT60S" + "'", str5, "PT60S");
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0]");
        org.junit.Assert.assertNotNull(durationFieldTypeArray19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
    }

    @Test
    public void test16185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16185");
        org.joda.time.Period period1 = org.joda.time.Period.weeks((-32));
        org.joda.time.Days days2 = period1.toStandardDays();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
    }

    @Test
    public void test16186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16186");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((-2));
        org.joda.time.Period period3 = period1.plusWeeks(2);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test16187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16187");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(3600000000L);
    }

    @Test
    public void test16188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16188");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 100, (-6), (-672), 2, 0, (int) (short) 0, (int) (byte) -1, (int) (byte) 0, periodType8);
    }

    @Test
    public void test16189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16189");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.weeksIn(readableInterval1);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.weeksIn(readableInterval3);
        boolean boolean5 = weeks2.isLessThan(weeks4);
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeksIn(readableInterval7);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeksIn(readableInterval9);
        boolean boolean11 = weeks8.isLessThan(weeks10);
        org.joda.time.Weeks weeks12 = weeks8.negated();
        org.joda.time.Weeks weeks14 = weeks12.minus((int) (byte) 100);
        org.joda.time.Weeks weeks15 = weeks6.plus(weeks12);
        boolean boolean16 = weeks0.isLessThan(weeks12);
        org.joda.time.Weeks weeks18 = weeks0.multipliedBy((int) (short) 1);
        int int19 = weeks18.getWeeks();
        org.joda.time.Weeks weeks21 = weeks18.plus(658);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.weeksIn(readableInterval22);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeksIn(readableInterval24);
        boolean boolean26 = weeks23.isLessThan(weeks25);
        org.joda.time.Weeks weeks27 = weeks23.negated();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((java.lang.Object) weeks23, chronology28);
        org.joda.time.Weeks weeks31 = weeks23.multipliedBy((int) (byte) 1);
        org.joda.time.ReadableInterval readableInterval32 = null;
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeksIn(readableInterval32);
        org.joda.time.ReadableInterval readableInterval34 = null;
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.weeksIn(readableInterval34);
        boolean boolean36 = weeks33.isLessThan(weeks35);
        org.joda.time.Weeks weeks37 = weeks33.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks23.minus(weeks37);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.weeksIn(readableInterval40);
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.weeksIn(readableInterval42);
        boolean boolean44 = weeks41.isLessThan(weeks43);
        org.joda.time.Weeks weeks46 = weeks43.minus((int) (short) -1);
        org.joda.time.Weeks weeks48 = weeks46.multipliedBy(0);
        org.joda.time.Weeks weeks49 = null;
        boolean boolean50 = weeks46.isLessThan(weeks49);
        org.joda.time.ReadableInterval readableInterval51 = null;
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.weeksIn(readableInterval51);
        org.joda.time.ReadableInterval readableInterval53 = null;
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.weeksIn(readableInterval53);
        boolean boolean55 = weeks52.isLessThan(weeks54);
        org.joda.time.Weeks weeks56 = weeks52.negated();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = new org.joda.time.Period((java.lang.Object) weeks52, chronology57);
        int[] intArray59 = period58.getValues();
        org.joda.time.DurationFieldType[] durationFieldTypeArray60 = period58.getFieldTypes();
        boolean boolean61 = weeks46.equals((java.lang.Object) durationFieldTypeArray60);
        org.joda.time.Weeks weeks62 = weeks39.minus(weeks46);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.TWO;
        org.joda.time.ReadableInterval readableInterval64 = null;
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.weeksIn(readableInterval64);
        org.joda.time.ReadableInterval readableInterval66 = null;
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.weeksIn(readableInterval66);
        boolean boolean68 = weeks65.isLessThan(weeks67);
        org.joda.time.Weeks weeks69 = weeks65.negated();
        org.joda.time.ReadableInterval readableInterval70 = null;
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.weeksIn(readableInterval70);
        org.joda.time.ReadableInterval readableInterval72 = null;
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.weeksIn(readableInterval72);
        boolean boolean74 = weeks71.isLessThan(weeks73);
        org.joda.time.Weeks weeks75 = weeks71.negated();
        org.joda.time.Weeks weeks77 = weeks75.minus((int) (byte) 100);
        org.joda.time.Weeks weeks78 = weeks69.plus(weeks75);
        boolean boolean79 = weeks63.isLessThan(weeks75);
        org.joda.time.Weeks weeks81 = weeks63.multipliedBy((int) (short) 1);
        org.joda.time.ReadableInterval readableInterval82 = null;
        org.joda.time.Weeks weeks83 = org.joda.time.Weeks.weeksIn(readableInterval82);
        org.joda.time.Weeks weeks85 = weeks83.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks86 = weeks81.plus(weeks83);
        org.joda.time.Weeks weeks87 = weeks62.plus(weeks86);
        int int88 = weeks62.getWeeks();
        org.joda.time.Weeks weeks90 = weeks62.dividedBy((-637));
        org.joda.time.Weeks weeks91 = weeks21.minus(weeks90);
        org.joda.time.Duration duration92 = weeks90.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0]");
        org.junit.Assert.assertNotNull(durationFieldTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(weeks90);
        org.junit.Assert.assertNotNull(weeks91);
        org.junit.Assert.assertNotNull(duration92);
    }

    @Test
    public void test16190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16190");
        java.lang.Object obj0 = null;
        org.joda.time.Duration duration1 = new org.joda.time.Duration(obj0);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds4 = duration3.toStandardSeconds();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds7 = duration6.toStandardSeconds();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period9 = duration3.toPeriod();
        int int10 = duration1.compareTo((org.joda.time.ReadableDuration) duration3);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds13 = duration12.toStandardSeconds();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds16 = duration15.toStandardSeconds();
        boolean boolean17 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration19 = duration12.minus((long) 3);
        boolean boolean20 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes(540000L);
        boolean boolean23 = duration1.isEqual((org.joda.time.ReadableDuration) duration22);
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((java.lang.Object) duration22);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test16191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16191");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.Period period3 = org.joda.time.Period.hours(0);
        org.joda.time.DurationFieldType durationFieldType5 = period3.getFieldType((int) (short) 1);
        org.joda.time.Period period7 = period3.plusDays(10);
        boolean boolean8 = periodType1.equals((java.lang.Object) 10);
        org.joda.time.Period period9 = new org.joda.time.Period((long) ' ', periodType1);
        org.joda.time.PeriodType periodType10 = periodType1.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(periodType1);
        org.joda.time.MutablePeriod mutablePeriod12 = mutablePeriod11.copy();
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(mutablePeriod12);
    }

    @Test
    public void test16192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16192");
        org.joda.time.Period period5 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days6 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period5);
        org.joda.time.Period period8 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days9 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period8);
        org.joda.time.Period period11 = period8.withSeconds((int) ' ');
        org.joda.time.Period period12 = period5.minus((org.joda.time.ReadablePeriod) period8);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType14 = periodType13.withMonthsRemoved();
        org.joda.time.Period period15 = period12.withPeriodType(periodType13);
        org.joda.time.Period period16 = new org.joda.time.Period((long) (short) 0, (-1L), periodType13);
        org.joda.time.Period period17 = new org.joda.time.Period((long) 74, periodType13);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period(540000L, (long) (-1), chronology20);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((int) (short) -1, (int) '#', (int) ' ', 100);
        org.joda.time.DurationFieldType durationFieldType27 = org.joda.time.DurationFieldType.days();
        int int28 = mutablePeriod26.get(durationFieldType27);
        org.joda.time.Chronology chronology29 = null;
        boolean boolean30 = durationFieldType27.isSupported(chronology29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.DurationField durationField32 = durationFieldType27.getField(chronology31);
        java.lang.String str33 = durationFieldType27.getName();
        boolean boolean34 = period21.isSupported(durationFieldType27);
        boolean boolean35 = periodType13.isSupported(durationFieldType27);
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((-2419200L), periodType13);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(durationField32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "days" + "'", str33, "days");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test16193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16193");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) (short) 100);
        org.joda.time.Seconds seconds2 = period1.toStandardSeconds();
        org.joda.time.Seconds seconds4 = seconds2.minus(1);
        java.lang.String str5 = seconds4.toString();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds8 = duration7.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.plus(25);
        org.joda.time.Seconds seconds12 = seconds8.negated();
        org.joda.time.Seconds seconds14 = seconds8.dividedBy(10);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.ZERO;
        org.joda.time.PeriodType periodType16 = seconds15.getPeriodType();
        java.lang.String str17 = seconds15.toString();
        org.joda.time.Seconds seconds19 = seconds15.plus((int) (short) 1);
        int int20 = seconds19.getSeconds();
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        boolean boolean22 = seconds14.isLessThan(seconds19);
        org.joda.time.Seconds seconds23 = seconds4.minus(seconds14);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds26 = duration25.toStandardSeconds();
        java.lang.String str27 = seconds26.toString();
        org.joda.time.DurationFieldType durationFieldType28 = org.joda.time.DurationFieldType.days();
        boolean boolean29 = seconds26.isSupported(durationFieldType28);
        org.joda.time.Seconds seconds30 = null;
        org.joda.time.Seconds seconds31 = seconds26.minus(seconds30);
        org.joda.time.Seconds seconds32 = seconds26.negated();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(readableInstant33, readableDuration34);
        mutablePeriod35.setHours((int) (short) 100);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology40 = null;
        mutablePeriod35.setPeriod((org.joda.time.ReadableDuration) duration39, chronology40);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds44 = duration43.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType45 = seconds44.getFieldType();
        mutablePeriod35.add(durationFieldType45, (int) (short) 0);
        java.lang.String str48 = durationFieldType45.toString();
        java.lang.String str49 = durationFieldType45.toString();
        boolean boolean50 = seconds32.isSupported(durationFieldType45);
        boolean boolean51 = seconds4.isGreaterThan(seconds32);
        org.joda.time.Seconds seconds53 = seconds32.minus(8384459);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT99S" + "'", str5, "PT99S");
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT0S" + "'", str17, "PT0S");
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT60S" + "'", str27, "PT60S");
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "seconds" + "'", str48, "seconds");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "seconds" + "'", str49, "seconds");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(seconds53);
    }

    @Test
    public void test16194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16194");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period(168L, (long) 160, chronology2);
    }

    @Test
    public void test16195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16195");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.Period period4 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days5 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period4);
        org.joda.time.PeriodType periodType6 = days5.getPeriodType();
        boolean boolean7 = days2.isGreaterThan(days5);
        org.joda.time.Period period9 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days10 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Days days11 = days5.minus(days10);
        org.joda.time.Days days12 = null;
        boolean boolean13 = days11.isGreaterThan(days12);
        org.joda.time.Period period15 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days16 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period15);
        org.joda.time.Period period18 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days19 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period18);
        org.joda.time.PeriodType periodType20 = days19.getPeriodType();
        boolean boolean21 = days16.isGreaterThan(days19);
        int int22 = days16.size();
        org.joda.time.Days days23 = days16.negated();
        org.joda.time.Days days25 = days23.minus(3);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((java.lang.Object) days23, chronology26);
        boolean boolean28 = days11.isLessThan(days23);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardDays((-1L));
        org.joda.time.Days days31 = duration30.toStandardDays();
        org.joda.time.Days days33 = days31.minus(7);
        org.joda.time.Period period34 = days33.toPeriod();
        org.joda.time.Days days35 = days33.negated();
        org.joda.time.MutablePeriod mutablePeriod36 = days33.toMutablePeriod();
        boolean boolean37 = days11.isGreaterThan(days33);
        org.joda.time.Days days39 = days33.multipliedBy((-5));
        org.joda.time.Days days40 = org.joda.time.Days.ZERO;
        int int41 = days40.getDays();
        org.joda.time.Period period43 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days44 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period43);
        org.joda.time.Period period46 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days47 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period46);
        org.joda.time.PeriodType periodType48 = days47.getPeriodType();
        boolean boolean49 = days44.isGreaterThan(days47);
        org.joda.time.Period period51 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days52 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period51);
        org.joda.time.Days days53 = days47.minus(days52);
        org.joda.time.Days days54 = days40.minus(days47);
        org.joda.time.Days days56 = days47.plus((int) (byte) 1);
        org.joda.time.DurationFieldType durationFieldType58 = days56.getFieldType((int) (short) 0);
        org.joda.time.Days days59 = org.joda.time.Days.ZERO;
        org.joda.time.Period period61 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days62 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period61);
        org.joda.time.Days days64 = days62.minus(10);
        boolean boolean65 = days59.isGreaterThan(days62);
        org.joda.time.Days days66 = days56.plus(days59);
        org.joda.time.Duration duration67 = days66.toStandardDuration();
        org.joda.time.Days days69 = days66.dividedBy(10);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.ReadableInstant readableInstant71 = null;
        java.lang.Object obj72 = null;
        org.joda.time.Duration duration73 = new org.joda.time.Duration(obj72);
        org.joda.time.Period period74 = new org.joda.time.Period(readableInstant71, (org.joda.time.ReadableDuration) duration73);
        org.joda.time.Period period75 = new org.joda.time.Period(readableInstant70, (org.joda.time.ReadableDuration) duration73);
        org.joda.time.Duration duration76 = duration73.toDuration();
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.ReadableInstant readableInstant78 = null;
        java.lang.Object obj79 = null;
        org.joda.time.Duration duration80 = new org.joda.time.Duration(obj79);
        org.joda.time.Period period81 = new org.joda.time.Period(readableInstant78, (org.joda.time.ReadableDuration) duration80);
        org.joda.time.Period period82 = new org.joda.time.Period(readableInstant77, (org.joda.time.ReadableDuration) duration80);
        int int83 = duration73.compareTo((org.joda.time.ReadableDuration) duration80);
        long long84 = duration73.getStandardSeconds();
        org.joda.time.ReadableInstant readableInstant85 = null;
        org.joda.time.ReadableInstant readableInstant86 = null;
        org.joda.time.Duration duration87 = new org.joda.time.Duration(readableInstant85, readableInstant86);
        boolean boolean88 = duration73.isEqual((org.joda.time.ReadableDuration) duration87);
        org.joda.time.MutablePeriod mutablePeriod89 = new org.joda.time.MutablePeriod((java.lang.Object) duration87);
        org.joda.time.ReadableInstant readableInstant90 = null;
        org.joda.time.Interval interval91 = duration87.toIntervalTo(readableInstant90);
        org.joda.time.Days days92 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval91);
        org.joda.time.Days days93 = days66.minus(days92);
        org.joda.time.Days days94 = days33.minus(days66);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 0L + "'", long84 == 0L);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(interval91);
        org.junit.Assert.assertNotNull(days92);
        org.junit.Assert.assertNotNull(days93);
        org.junit.Assert.assertNotNull(days94);
    }

    @Test
    public void test16196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16196");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT0.006S");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'millis'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test16197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16197");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.weeksIn(readableInterval1);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.weeksIn(readableInterval3);
        boolean boolean5 = weeks2.isLessThan(weeks4);
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeksIn(readableInterval7);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeksIn(readableInterval9);
        boolean boolean11 = weeks8.isLessThan(weeks10);
        org.joda.time.Weeks weeks12 = weeks8.negated();
        org.joda.time.Weeks weeks14 = weeks12.minus((int) (byte) 100);
        org.joda.time.Weeks weeks15 = weeks6.plus(weeks12);
        boolean boolean16 = weeks0.isLessThan(weeks12);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.weeks(1);
        org.joda.time.DurationFieldType durationFieldType19 = weeks18.getFieldType();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Period period23 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Period period25 = period23.withMillis((int) (byte) -1);
        org.joda.time.Weeks weeks26 = period25.toStandardWeeks();
        org.joda.time.Weeks weeks27 = weeks21.plus(weeks26);
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeksIn(readableInterval28);
        org.joda.time.Weeks weeks31 = weeks29.multipliedBy(8);
        org.joda.time.Weeks weeks33 = weeks31.minus(0);
        boolean boolean34 = weeks27.isLessThan(weeks31);
        org.joda.time.Weeks weeks35 = weeks18.minus(weeks31);
        org.joda.time.Weeks weeks36 = weeks12.plus(weeks18);
        java.lang.String str37 = weeks36.toString();
        org.joda.time.Period period38 = weeks36.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P1W" + "'", str37, "P1W");
        org.junit.Assert.assertNotNull(period38);
    }

    @Test
    public void test16198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16198");
        org.joda.time.Duration duration2 = new org.joda.time.Duration(0L, 1L);
        org.joda.time.Minutes minutes3 = duration2.toStandardMinutes();
        org.joda.time.Duration duration4 = minutes3.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableDuration readableDuration6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(readableInstant5, readableDuration6);
        org.joda.time.Period period8 = mutablePeriod7.toPeriod();
        org.joda.time.Period period10 = period8.withHours(0);
        int int11 = period8.getWeeks();
        org.joda.time.Period period13 = period8.withMillis((int) 'a');
        boolean boolean14 = duration4.equals((java.lang.Object) period13);
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((java.lang.Object) period13);
        mutablePeriod15.setMonths(0);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod15.setValue(32, (-20));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 32");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test16199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16199");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        java.util.Locale locale3 = periodFormatter2.getLocale();
        java.util.Locale locale4 = periodFormatter2.getLocale();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        java.io.Writer writer7 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((long) 100, (long) '#');
        int int11 = period10.getSeconds();
        org.joda.time.Period period12 = period10.toPeriod();
        org.joda.time.Period period14 = period10.plusWeeks(0);
        org.joda.time.Period period16 = period10.withSeconds(600);
        org.joda.time.Period period18 = period16.withMinutes((int) (byte) 100);
        org.joda.time.Period period20 = period18.withHours(97);
        org.joda.time.Period period22 = period20.plusDays((int) '#');
        int int23 = period20.getYears();
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter6.printTo(writer7, (org.joda.time.ReadablePeriod) period20);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(locale3);
        org.junit.Assert.assertNull(locale4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test16200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16200");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType1 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.ZERO;
        boolean boolean6 = minutes4.isLessThan(minutes5);
        boolean boolean7 = minutes0.isLessThan(minutes4);
        org.joda.time.Minutes minutes9 = minutes4.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = minutes10.getFieldType();
        org.joda.time.PeriodType periodType12 = minutes10.getPeriodType();
        org.joda.time.Minutes minutes13 = minutes9.plus(minutes10);
        org.joda.time.PeriodType periodType14 = minutes9.getPeriodType();
        org.joda.time.PeriodType periodType15 = minutes9.getPeriodType();
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.minutesIn(readableInterval16);
        org.joda.time.Minutes minutes19 = minutes17.dividedBy((int) (byte) 1);
        boolean boolean20 = minutes9.isLessThan(minutes17);
        org.joda.time.Minutes minutes22 = minutes9.multipliedBy(8384459);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(minutes22);
    }

    @Test
    public void test16201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16201");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Period period3 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days4 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period3);
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(readableInstant6, readableDuration7);
        mutablePeriod8.setHours((int) (short) 100);
        boolean boolean11 = periodType5.equals((java.lang.Object) mutablePeriod8);
        org.joda.time.Duration duration12 = org.joda.time.Duration.ZERO;
        long long13 = duration12.getStandardDays();
        mutablePeriod8.add((org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType17 = periodType16.withWeeksRemoved();
        org.joda.time.PeriodType periodType18 = periodType17.withDaysRemoved();
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant15, periodType17);
        java.lang.String str20 = periodType17.getName();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((long) (short) -1, periodType17, chronology21);
        org.joda.time.Duration duration24 = new org.joda.time.Duration(240L);
        java.lang.String str25 = duration24.toString();
        org.joda.time.Duration duration27 = duration24.plus(540000L);
        org.joda.time.Days days28 = duration24.toStandardDays();
        mutablePeriod22.add((org.joda.time.ReadableDuration) duration24);
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration24);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Millis" + "'", str20, "Millis");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT0.240S" + "'", str25, "PT0.240S");
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(days28);
    }

    @Test
    public void test16202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16202");
        org.joda.time.Period period1 = org.joda.time.Period.parse("PT60S");
        int int2 = period1.getMinutes();
        org.joda.time.Period period4 = period1.plusMillis((-1));
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean6 = period4.equals((java.lang.Object) durationFieldType5);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((long) (short) 0, periodType8, chronology9);
        mutablePeriod10.setMonths((int) (byte) 100);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.DurationFieldType durationFieldType15 = periodType13.getFieldType(2);
        int int16 = mutablePeriod10.indexOf(durationFieldType15);
        org.joda.time.Period period18 = period4.withFieldAdded(durationFieldType15, (int) (byte) -1);
        org.joda.time.Period period19 = period4.negated();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((long) 0, (long) 2, chronology22);
        mutablePeriod23.add((long) (byte) -1);
        mutablePeriod23.addWeeks((int) (byte) -1);
        mutablePeriod23.setWeeks((int) (byte) 100);
        org.joda.time.MutablePeriod mutablePeriod30 = mutablePeriod23.toMutablePeriod();
        org.joda.time.Period period31 = period4.minus((org.joda.time.ReadablePeriod) mutablePeriod23);
        int int32 = period4.size();
        org.joda.time.Period period34 = period4.plusWeeks((-637));
        org.joda.time.Period period36 = period4.plusYears(515);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 8 + "'", int32 == 8);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
    }

    @Test
    public void test16203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16203");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(60L);
        org.joda.time.Hours hours2 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) mutablePeriod1);
        java.lang.Object obj3 = mutablePeriod1.clone();
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "PT0.060S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "PT0.060S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "PT0.060S");
    }

    @Test
    public void test16204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16204");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.PeriodType periodType3 = days2.getPeriodType();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(readableInstant4, readableDuration5);
        mutablePeriod6.setHours((int) (short) 100);
        boolean boolean9 = periodType3.equals((java.lang.Object) mutablePeriod6);
        org.joda.time.Duration duration10 = org.joda.time.Duration.ZERO;
        long long11 = duration10.getStandardDays();
        mutablePeriod6.add((org.joda.time.ReadableDuration) duration10);
        long long13 = duration10.getStandardMinutes();
        org.joda.time.Duration duration15 = duration10.withMillis((long) 0);
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(0L);
        org.joda.time.Period period19 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days20 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period19);
        org.joda.time.PeriodType periodType21 = days20.getPeriodType();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(readableInstant22, readableDuration23);
        mutablePeriod24.setHours((int) (short) 100);
        boolean boolean27 = periodType21.equals((java.lang.Object) mutablePeriod24);
        org.joda.time.Duration duration28 = org.joda.time.Duration.ZERO;
        long long29 = duration28.getStandardDays();
        mutablePeriod24.add((org.joda.time.ReadableDuration) duration28);
        mutablePeriod24.clear();
        org.joda.time.Period period33 = org.joda.time.Period.hours(0);
        org.joda.time.DurationFieldType durationFieldType35 = period33.getFieldType((int) (short) 1);
        mutablePeriod24.set(durationFieldType35, (int) (short) -1);
        mutablePeriod17.set(durationFieldType35, 32);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Duration duration41 = mutablePeriod17.toDurationTo(readableInstant40);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableInstant readableInstant43 = null;
        java.lang.Object obj44 = null;
        org.joda.time.Duration duration45 = new org.joda.time.Duration(obj44);
        org.joda.time.Period period46 = new org.joda.time.Period(readableInstant43, (org.joda.time.ReadableDuration) duration45);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration48 = duration45.toDuration();
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        java.lang.Object obj51 = null;
        org.joda.time.Duration duration52 = new org.joda.time.Duration(obj51);
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant50, (org.joda.time.ReadableDuration) duration52);
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration52);
        int int55 = duration45.compareTo((org.joda.time.ReadableDuration) duration52);
        long long56 = duration45.getStandardSeconds();
        mutablePeriod17.add((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration58 = duration45.toDuration();
        boolean boolean59 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.Duration duration61 = duration58.plus(readableDuration60);
        long long62 = duration61.getStandardSeconds();
        org.joda.time.Duration duration63 = duration61.toDuration();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertNotNull(duration63);
    }

    @Test
    public void test16205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16205");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableDuration1);
        mutablePeriod2.setHours((int) (short) 100);
        mutablePeriod2.addMillis(1);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) mutablePeriod2);
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((-515));
        org.joda.time.DurationFieldType durationFieldType10 = weeks9.getFieldType();
        int int11 = weeks9.getWeeks();
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test16206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16206");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 'a', (long) 0);
        mutablePeriod2.addYears((int) '4');
        org.joda.time.Chronology chronology6 = null;
        mutablePeriod2.add((long) 100, chronology6);
        mutablePeriod2.setMillis((int) (byte) 10);
        mutablePeriod2.setPeriod((long) '#');
        org.joda.time.Duration duration12 = org.joda.time.Duration.ZERO;
        long long13 = duration12.getStandardDays();
        org.joda.time.Hours hours14 = duration12.toStandardHours();
        org.joda.time.Hours hours15 = hours14.negated();
        mutablePeriod2.mergePeriod((org.joda.time.ReadablePeriod) hours15);
        org.joda.time.PeriodType periodType17 = hours15.getPeriodType();
        org.joda.time.PeriodType periodType18 = periodType17.withMinutesRemoved();
        org.joda.time.PeriodType periodType19 = periodType18.withDaysRemoved();
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
    }

    @Test
    public void test16207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16207");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.THREE;
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        boolean boolean3 = hours0.isGreaterThan(hours1);
        org.joda.time.Hours hours5 = hours1.plus((int) ' ');
        int int6 = hours1.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }

    @Test
    public void test16208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16208");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) 0, 0L, chronology2);
        org.joda.time.Duration duration4 = org.joda.time.Duration.ZERO;
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration4.toPeriod(chronology5);
        org.joda.time.Period period8 = new org.joda.time.Period((long) '4');
        org.joda.time.Period period10 = period8.withHours(32);
        org.joda.time.Period period11 = period8.normalizedStandard();
        java.lang.String str12 = period11.toString();
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.Period period14 = period11.normalizedStandard(periodType13);
        org.joda.time.Period period16 = period11.minusHours(3);
        int int17 = period16.getYears();
        org.joda.time.Period period18 = period6.withFields((org.joda.time.ReadablePeriod) period16);
        org.joda.time.Period period20 = period16.withSeconds((int) (short) -1);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration22 = period20.toDurationFrom(readableInstant21);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(readableInstant25, readableDuration26);
        mutablePeriod27.setPeriod((long) ' ', (long) 52);
        mutablePeriod27.addDays(100);
        org.joda.time.PeriodType periodType33 = mutablePeriod27.getPeriodType();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period(10L, (long) 13, periodType33, chronology34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.TWO;
        org.joda.time.DurationFieldType durationFieldType37 = seconds36.getFieldType();
        boolean boolean38 = periodType33.isSupported(durationFieldType37);
        org.joda.time.Period period40 = period20.withFieldAdded(durationFieldType37, 27);
        mutablePeriod3.set(durationFieldType37, 107);
        int int43 = mutablePeriod3.getMinutes();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT0.052S" + "'", str12, "PT0.052S");
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
    }

    @Test
    public void test16209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16209");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        java.util.Locale locale3 = periodFormatter2.getLocale();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds7 = duration6.toStandardSeconds();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds10 = duration9.toStandardSeconds();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType14 = periodType13.withMinutesRemoved();
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant12, periodType13);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration9);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period18 = duration9.toPeriod(periodType17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(readableInstant20, readableDuration21);
        mutablePeriod22.setHours((int) (short) 100);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology27 = null;
        mutablePeriod22.setPeriod((org.joda.time.ReadableDuration) duration26, chronology27);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType30 = periodType29.withWeeksRemoved();
        org.joda.time.PeriodType periodType31 = periodType30.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(readableInstant19, (org.joda.time.ReadableDuration) duration26, periodType30);
        org.joda.time.Period period33 = duration9.toPeriod(periodType30);
        org.joda.time.format.PeriodFormatter periodFormatter34 = periodFormatter2.withParseType(periodType30);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType37 = periodType36.withMonthsRemoved();
        org.joda.time.PeriodType periodType38 = periodType37.withMinutesRemoved();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((long) (short) 0, periodType37, chronology39);
        org.joda.time.PeriodType periodType41 = periodType37.withMinutesRemoved();
        org.joda.time.PeriodType periodType42 = periodType41.withMinutesRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter43 = periodFormatter2.withParseType(periodType42);
        org.joda.time.format.PeriodParser periodParser44 = periodFormatter2.getParser();
        java.util.Locale locale45 = periodFormatter2.getLocale();
        java.util.Locale locale46 = periodFormatter2.getLocale();
        org.junit.Assert.assertNull(locale3);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(periodFormatter34);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodFormatter43);
        org.junit.Assert.assertNull(periodParser44);
        org.junit.Assert.assertNull(locale45);
        org.junit.Assert.assertNull(locale46);
    }

    @Test
    public void test16210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16210");
        org.joda.time.Period period2 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days3 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period2);
        org.joda.time.PeriodType periodType4 = days3.getPeriodType();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableDuration readableDuration6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(readableInstant5, readableDuration6);
        mutablePeriod7.setHours((int) (short) 100);
        boolean boolean10 = periodType4.equals((java.lang.Object) mutablePeriod7);
        org.joda.time.PeriodType periodType11 = periodType4.withMinutesRemoved();
        org.joda.time.Period period12 = new org.joda.time.Period((-3600000L), periodType11);
        org.joda.time.Period period13 = period12.toPeriod();
        org.joda.time.Period period15 = period12.minusYears(0);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, readableInstant17, periodType18);
        org.joda.time.PeriodType periodType20 = periodType18.withWeeksRemoved();
        org.joda.time.Period period21 = period15.withPeriodType(periodType18);
        org.joda.time.Period period22 = period15.normalizedStandard();
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
    }

    @Test
    public void test16211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16211");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) -1, (int) '#', (int) ' ', 100);
        mutablePeriod4.setPeriod(10, (int) 'a', (-2147483638), (-8), 2147483647, (-2), (int) 'a', (int) (byte) 10);
        mutablePeriod4.setDays(7);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableInstant readableInstant17 = null;
        mutablePeriod4.setPeriod(readableInstant16, readableInstant17);
        mutablePeriod4.addWeeks((-3));
    }

    @Test
    public void test16212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16212");
        org.joda.time.Duration duration0 = org.joda.time.Duration.ZERO;
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = duration0.toPeriod(chronology1);
        int int3 = period2.size();
        org.joda.time.Period period5 = period2.plusHours((int) (short) 1);
        org.joda.time.Period period7 = period2.minusHours(3);
        org.joda.time.Period period9 = period7.plusDays((int) (short) 100);
        org.joda.time.Period period11 = period9.plusYears((int) (short) 0);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.ZERO;
        boolean boolean14 = minutes12.isLessThan(minutes13);
        org.joda.time.Minutes minutes16 = minutes13.plus((int) (byte) 0);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType18 = minutes17.getPeriodType();
        org.joda.time.Minutes minutes19 = minutes16.plus(minutes17);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.parseMinutes("P0D");
        org.joda.time.Minutes minutes23 = minutes21.dividedBy((int) '#');
        org.joda.time.Minutes minutes24 = minutes17.minus(minutes21);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.ZERO;
        boolean boolean27 = minutes25.isLessThan(minutes26);
        org.joda.time.Minutes minutes29 = minutes26.plus((int) (byte) 0);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType31 = minutes30.getPeriodType();
        org.joda.time.Minutes minutes32 = minutes29.plus(minutes30);
        org.joda.time.Minutes minutes33 = minutes21.plus(minutes30);
        org.joda.time.Period period34 = period11.minus((org.joda.time.ReadablePeriod) minutes30);
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((long) 'a', (long) 0);
        mutablePeriod37.addYears((int) '4');
        mutablePeriod37.addDays((int) (byte) 100);
        org.joda.time.Period period43 = org.joda.time.Period.hours(0);
        org.joda.time.DurationFieldType durationFieldType45 = period43.getFieldType((int) (short) 1);
        org.joda.time.Period period47 = period43.plusDays(10);
        mutablePeriod37.setPeriod((org.joda.time.ReadablePeriod) period43);
        org.joda.time.Period period50 = period43.plusYears((int) (short) 10);
        org.joda.time.Period period52 = period50.withMonths(35);
        int int53 = period50.getSeconds();
        org.joda.time.Period period55 = period50.plusYears(60);
        org.joda.time.Period period57 = period55.minusMinutes((-637));
        org.joda.time.Period period58 = period34.withFields((org.joda.time.ReadablePeriod) period57);
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((long) 1, (long) (byte) 100);
        int int62 = mutablePeriod61.size();
        org.joda.time.MutablePeriod mutablePeriod63 = mutablePeriod61.copy();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableDuration readableDuration65 = null;
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod(readableInstant64, readableDuration65);
        mutablePeriod66.setPeriod((long) ' ', (long) 52);
        mutablePeriod66.addDays(100);
        org.joda.time.PeriodType periodType72 = mutablePeriod66.getPeriodType();
        org.joda.time.Duration duration74 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds75 = duration74.toStandardSeconds();
        org.joda.time.Duration duration77 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds78 = duration77.toStandardSeconds();
        boolean boolean79 = duration74.isLongerThan((org.joda.time.ReadableDuration) duration77);
        org.joda.time.ReadableInstant readableInstant80 = null;
        org.joda.time.PeriodType periodType81 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType82 = periodType81.withMinutesRemoved();
        org.joda.time.Period period83 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration77, readableInstant80, periodType81);
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.Interval interval85 = duration77.toIntervalFrom(readableInstant84);
        mutablePeriod66.add((org.joda.time.ReadableInterval) interval85);
        mutablePeriod63.add((org.joda.time.ReadableInterval) interval85);
        org.joda.time.Duration duration89 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds90 = duration89.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType91 = seconds90.getFieldType();
        org.joda.time.Seconds seconds93 = seconds90.plus(25);
        org.joda.time.Seconds seconds94 = seconds90.negated();
        org.joda.time.PeriodType periodType95 = seconds94.getPeriodType();
        org.joda.time.Period period96 = new org.joda.time.Period((java.lang.Object) interval85, periodType95);
        org.joda.time.PeriodType periodType97 = periodType95.withMinutesRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period98 = period57.normalizedStandard(periodType97);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration0);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 8 + "'", int62 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod63);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(interval85);
        org.junit.Assert.assertNotNull(duration89);
        org.junit.Assert.assertNotNull(seconds90);
        org.junit.Assert.assertNotNull(durationFieldType91);
        org.junit.Assert.assertNotNull(seconds93);
        org.junit.Assert.assertNotNull(seconds94);
        org.junit.Assert.assertNotNull(periodType95);
        org.junit.Assert.assertNotNull(periodType97);
    }

    @Test
    public void test16213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16213");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((-58), (int) (byte) 10, (-58), 15120008);
    }

    @Test
    public void test16214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16214");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((long) 10);
        java.lang.String str3 = duration2.toString();
        org.joda.time.ReadableDuration readableDuration4 = null;
        boolean boolean5 = duration2.isLongerThan(readableDuration4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.ZERO;
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration7.toPeriod(chronology8);
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(readableInstant6, (org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period17 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days18 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period17);
        org.joda.time.Period period20 = period17.withSeconds((int) ' ');
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.millis();
        org.joda.time.Period period22 = period20.normalizedStandard(periodType21);
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(readableInstant14, readableInstant15, periodType21);
        org.joda.time.PeriodType periodType24 = periodType21.withYearsRemoved();
        org.joda.time.Period period25 = new org.joda.time.Period((-1L), 60000L, periodType24);
        java.lang.String str26 = periodType24.getName();
        org.joda.time.PeriodType periodType27 = periodType24.withDaysRemoved();
        org.joda.time.Period period28 = duration7.toPeriodFrom(readableInstant11, periodType24);
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(readableInstant0, readableDuration4, periodType24);
        org.joda.time.MutablePeriod mutablePeriod30 = mutablePeriod29.copy();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT600S" + "'", str3, "PT600S");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Millis" + "'", str26, "Millis");
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(mutablePeriod30);
    }

    @Test
    public void test16215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16215");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (byte) 0, 13, 8, 10);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds7 = duration6.toStandardSeconds();
        org.joda.time.Seconds seconds9 = seconds7.dividedBy(32);
        org.joda.time.Duration duration10 = seconds9.toStandardDuration();
        org.joda.time.Seconds seconds12 = seconds9.minus((-2147483638));
        org.joda.time.Seconds seconds14 = seconds9.multipliedBy(6);
        boolean boolean15 = period4.equals((java.lang.Object) seconds14);
        org.joda.time.Period period17 = period4.minusHours(194);
        org.joda.time.Period period19 = period17.plusDays((-32));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
    }

    @Test
    public void test16216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16216");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.millis(0L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period5 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant3, periodType4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds8 = duration7.toStandardSeconds();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds11 = duration10.toStandardSeconds();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType15 = periodType14.withMinutesRemoved();
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant13, periodType14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(readableInstant17, readableDuration18);
        mutablePeriod19.setHours((int) (short) 100);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology24 = null;
        mutablePeriod19.setPeriod((org.joda.time.ReadableDuration) duration23, chronology24);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds28 = duration27.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType29 = seconds28.getFieldType();
        mutablePeriod19.add(durationFieldType29, (int) (short) 0);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(readableInstant32, readableDuration33);
        mutablePeriod34.setHours((int) (short) 100);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology39 = null;
        mutablePeriod34.setPeriod((org.joda.time.ReadableDuration) duration38, chronology39);
        org.joda.time.Chronology chronology41 = null;
        mutablePeriod19.setPeriod((org.joda.time.ReadableDuration) duration38, chronology41);
        int int43 = duration10.compareTo((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration44 = duration38.toDuration();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardDays(0L);
        boolean boolean47 = duration38.isLongerThan((org.joda.time.ReadableDuration) duration46);
        java.lang.String str48 = duration46.toString();
        long long49 = duration46.getMillis();
        boolean boolean50 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration46);
        long long51 = duration46.getMillis();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = duration46.toPeriodFrom(readableInstant52);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds56 = duration55.toStandardSeconds();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds59 = duration58.toStandardSeconds();
        boolean boolean60 = duration55.isLongerThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Period period61 = duration55.toPeriod();
        org.joda.time.Period period62 = period61.negated();
        org.joda.time.Seconds seconds63 = period62.toStandardSeconds();
        org.joda.time.Period period64 = period62.negated();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Duration duration66 = period62.toDurationTo(readableInstant65);
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardMinutes((long) 10);
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.Period period70 = duration68.toPeriod(chronology69);
        boolean boolean71 = duration66.isShorterThan((org.joda.time.ReadableDuration) duration68);
        long long72 = duration68.getMillis();
        java.lang.String str73 = duration68.toString();
        boolean boolean74 = duration46.isEqual((org.joda.time.ReadableDuration) duration68);
        org.joda.time.Duration duration75 = org.joda.time.Duration.ZERO;
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.Period period77 = duration75.toPeriod(chronology76);
        int int78 = period77.size();
        org.joda.time.Period period80 = period77.plusHours((int) (short) 1);
        org.joda.time.Period period81 = period77.toPeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray82 = period77.getFieldTypes();
        org.joda.time.PeriodType periodType83 = org.joda.time.PeriodType.forFields(durationFieldTypeArray82);
        org.joda.time.PeriodType periodType84 = periodType83.withSecondsRemoved();
        org.joda.time.MutablePeriod mutablePeriod85 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration46, periodType84);
        org.joda.time.ReadableInstant readableInstant86 = null;
        org.joda.time.Period period87 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, readableInstant86);
        org.joda.time.ReadableInstant readableInstant88 = null;
        org.joda.time.Interval interval89 = duration46.toIntervalTo(readableInstant88);
        org.joda.time.Chronology chronology90 = null;
        org.joda.time.Period period91 = new org.joda.time.Period((java.lang.Object) readableInstant88, chronology90);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "PT0S" + "'", str48, "PT0S");
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 600000L + "'", long72 == 600000L);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "PT600S" + "'", str73, "PT600S");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 8 + "'", int78 == 8);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(durationFieldTypeArray82);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(interval89);
    }

    @Test
    public void test16217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16217");
        org.joda.time.Period period1 = org.joda.time.Period.millis(13);
        org.joda.time.Period period3 = period1.minusMonths((int) (byte) -1);
        int[] intArray4 = period3.getValues();
        org.joda.time.Period period6 = period3.multipliedBy((int) '4');
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(readableInstant7, readableDuration8);
        mutablePeriod9.setSeconds(8);
        mutablePeriod9.setValue(1, 2);
        mutablePeriod9.add((long) '4');
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((long) 0, (long) (byte) 10, periodType19, chronology20);
        org.joda.time.Duration duration22 = org.joda.time.Duration.ZERO;
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration22.toPeriod(chronology23);
        org.joda.time.Period period25 = period21.withFields((org.joda.time.ReadablePeriod) period24);
        org.joda.time.Period period26 = period21.normalizedStandard();
        org.joda.time.Period period28 = period26.plusDays((int) (short) 100);
        org.joda.time.Period period30 = period28.plusDays(35);
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) period30);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.THREE;
        org.joda.time.DurationFieldType durationFieldType34 = hours33.getFieldType();
        boolean boolean35 = hours32.isGreaterThan(hours33);
        org.joda.time.PeriodType periodType36 = hours33.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType37 = hours33.getFieldType();
        org.joda.time.Period period39 = period30.withFieldAdded(durationFieldType37, (-8));
        org.joda.time.Period period41 = period39.withHours((-2147483648));
        org.joda.time.Period period43 = period41.withMonths(2);
        org.joda.time.PeriodType periodType44 = period43.getPeriodType();
        org.joda.time.Period period45 = period3.withPeriodType(periodType44);
        int int47 = period45.getValue(0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 1, 0, 0, 0, 0, 0, 13]");
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    }

    @Test
    public void test16218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16218");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType1 = minutes0.getPeriodType();
        int int2 = minutes0.getMinutes();
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = minutes4.getFieldType();
        java.lang.String str6 = minutes4.toString();
        boolean boolean7 = minutes0.isLessThan(minutes4);
        org.joda.time.Minutes minutes8 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType9 = minutes0.getFieldType();
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.minutesIn(readableInterval10);
        java.lang.String str12 = minutes11.toString();
        boolean boolean13 = minutes0.isLessThan(minutes11);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes11);
        org.joda.time.DurationFieldType durationFieldType15 = minutes14.getFieldType();
        org.joda.time.Minutes minutes17 = minutes14.minus((int) (short) 0);
        org.joda.time.Minutes minutes19 = minutes17.dividedBy(7);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.minutesIn(readableInterval20);
        java.lang.String str22 = minutes21.toString();
        org.joda.time.Minutes minutes24 = minutes21.plus(2);
        org.joda.time.Minutes minutes26 = minutes21.multipliedBy(4);
        org.joda.time.Minutes minutes27 = null;
        org.joda.time.Minutes minutes28 = minutes26.minus(minutes27);
        boolean boolean29 = minutes17.isLessThan(minutes28);
        org.joda.time.DurationFieldType durationFieldType30 = minutes17.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT0M" + "'", str3, "PT0M");
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT-2147483648M" + "'", str6, "PT-2147483648M");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT0M" + "'", str12, "PT0M");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT0M" + "'", str22, "PT0M");
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(durationFieldType30);
    }

    @Test
    public void test16219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16219");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.PeriodType periodType4 = seconds1.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(periodType4);
    }

    @Test
    public void test16220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16220");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((long) 0, (long) (byte) 10, periodType2, chronology3);
        org.joda.time.Duration duration5 = org.joda.time.Duration.ZERO;
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration5.toPeriod(chronology6);
        org.joda.time.Period period8 = period4.withFields((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Weeks weeks9 = period8.toStandardWeeks();
        org.joda.time.DurationFieldType durationFieldType10 = null;
        boolean boolean11 = weeks9.isSupported(durationFieldType10);
        org.joda.time.Period period13 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Period period15 = period13.withMillis((int) (byte) -1);
        org.joda.time.Weeks weeks16 = period15.toStandardWeeks();
        org.joda.time.Duration duration17 = weeks16.toStandardDuration();
        org.joda.time.Weeks weeks18 = weeks9.plus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks21 = weeks19.dividedBy(52);
        org.joda.time.DurationFieldType durationFieldType22 = org.joda.time.DurationFieldType.weeks();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.DurationField durationField24 = durationFieldType22.getField(chronology23);
        boolean boolean25 = weeks19.isSupported(durationFieldType22);
        int int26 = weeks9.get(durationFieldType22);
        org.joda.time.Weeks weeks27 = weeks9.negated();
        java.lang.String str28 = weeks27.toString();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(durationField24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P0W" + "'", str28, "P0W");
    }

    @Test
    public void test16221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16221");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.Period period4 = period1.withSeconds((int) ' ');
        java.lang.String str5 = period1.toString();
        org.joda.time.Period period7 = period1.withYears(0);
        org.joda.time.Period period9 = period1.withYears((int) (byte) -1);
        org.joda.time.Period period11 = period9.withMonths(0);
        org.joda.time.Period period13 = period9.minusMinutes(2147483647);
        org.joda.time.Period period14 = period9.normalizedStandard();
        org.joda.time.Period period16 = period9.multipliedBy(6);
        org.joda.time.format.PeriodPrinter periodPrinter17 = null;
        org.joda.time.format.PeriodParser periodParser18 = null;
        org.joda.time.format.PeriodFormatter periodFormatter19 = new org.joda.time.format.PeriodFormatter(periodPrinter17, periodParser18);
        org.joda.time.format.PeriodParser periodParser20 = periodFormatter19.getParser();
        java.util.Locale locale21 = periodFormatter19.getLocale();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = minutes22.getFieldType();
        org.joda.time.PeriodType periodType24 = minutes22.getPeriodType();
        org.joda.time.format.PeriodFormatter periodFormatter25 = periodFormatter19.withParseType(periodType24);
        boolean boolean26 = periodFormatter19.isPrinter();
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType28 = periodType27.withMinutesRemoved();
        org.joda.time.PeriodType periodType29 = periodType27.withYearsRemoved();
        java.lang.String str30 = periodType29.toString();
        org.joda.time.PeriodType periodType31 = periodType29.withWeeksRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter32 = periodFormatter19.withParseType(periodType29);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(readableInstant33, readableDuration34);
        org.joda.time.Period period36 = mutablePeriod35.toPeriod();
        org.joda.time.Period period38 = period36.withHours(0);
        int int39 = period36.getWeeks();
        org.joda.time.Period period41 = period36.plusSeconds((int) (byte) 100);
        org.joda.time.Period period43 = period36.withWeeks((int) '#');
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.millis();
        org.joda.time.Period period45 = period36.withPeriodType(periodType44);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.time();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableDuration readableDuration48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(readableInstant47, readableDuration48);
        org.joda.time.Period period50 = mutablePeriod49.toPeriod();
        org.joda.time.Period period52 = period50.withHours(0);
        org.joda.time.DurationFieldType durationFieldType53 = org.joda.time.DurationFieldType.days();
        int int54 = period50.indexOf(durationFieldType53);
        int int55 = periodType46.indexOf(durationFieldType53);
        boolean boolean56 = periodType44.isSupported(durationFieldType53);
        org.joda.time.format.PeriodFormatter periodFormatter57 = periodFormatter19.withParseType(periodType44);
        org.joda.time.format.PeriodPrinter periodPrinter58 = null;
        org.joda.time.format.PeriodParser periodParser59 = null;
        org.joda.time.format.PeriodFormatter periodFormatter60 = new org.joda.time.format.PeriodFormatter(periodPrinter58, periodParser59);
        org.joda.time.format.PeriodParser periodParser61 = periodFormatter60.getParser();
        java.util.Locale locale62 = periodFormatter60.getLocale();
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType64 = minutes63.getPeriodType();
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes66 = minutes63.plus(minutes65);
        org.joda.time.Minutes minutes67 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.ZERO;
        boolean boolean69 = minutes67.isLessThan(minutes68);
        boolean boolean70 = minutes63.isLessThan(minutes67);
        org.joda.time.PeriodType periodType71 = minutes63.getPeriodType();
        org.joda.time.format.PeriodFormatter periodFormatter72 = periodFormatter60.withParseType(periodType71);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.ReadableDuration readableDuration74 = null;
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod(readableInstant73, readableDuration74);
        org.joda.time.Period period76 = mutablePeriod75.toPeriod();
        org.joda.time.Period period78 = period76.withHours(0);
        int int79 = period76.getWeeks();
        org.joda.time.Period period81 = period76.plusSeconds((int) (byte) 100);
        org.joda.time.Period period83 = period76.withWeeks((int) '#');
        org.joda.time.PeriodType periodType84 = period76.getPeriodType();
        org.joda.time.format.PeriodFormatter periodFormatter85 = periodFormatter60.withParseType(periodType84);
        boolean boolean86 = periodFormatter85.isParser();
        org.joda.time.PeriodType periodType87 = periodFormatter85.getParseType();
        org.joda.time.format.PeriodFormatter periodFormatter88 = periodFormatter19.withParseType(periodType87);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str89 = period9.toString(periodFormatter19);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT1M" + "'", str5, "PT1M");
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNull(periodParser20);
        org.junit.Assert.assertNull(locale21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodFormatter25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PeriodType[Millis]" + "'", str30, "PeriodType[Millis]");
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodFormatter32);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(periodFormatter57);
        org.junit.Assert.assertNull(periodParser61);
        org.junit.Assert.assertNull(locale62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(periodFormatter72);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(periodFormatter85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(periodType87);
        org.junit.Assert.assertNotNull(periodFormatter88);
    }

    @Test
    public void test16222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16222");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        org.joda.time.format.PeriodFormatter periodFormatter3 = null;
        java.lang.String str4 = mutablePeriod2.toString(periodFormatter3);
        int int5 = mutablePeriod2.getMillis();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration7 = mutablePeriod2.toDurationFrom(readableInstant6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) mutablePeriod2);
        mutablePeriod2.clear();
        mutablePeriod2.setPeriod(97, 54, 2147483647, (int) '4', 51, 54, (int) '4', 13);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT0S" + "'", str4, "PT0S");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(seconds8);
    }

    @Test
    public void test16223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16223");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType2 = periodType1.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (-1), periodType2);
        int int4 = mutablePeriod3.getSeconds();
        org.joda.time.Chronology chronology6 = null;
        mutablePeriod3.add((long) 4, chronology6);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration8 = new org.joda.time.Duration((java.lang.Object) 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No duration converter found for type: java.lang.Integer");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test16224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16224");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeksIn(readableInterval2);
        boolean boolean4 = weeks1.isLessThan(weeks3);
        org.joda.time.Weeks weeks6 = weeks3.minus((int) (short) -1);
        org.joda.time.Weeks weeks8 = weeks6.dividedBy(88500);
        org.joda.time.Weeks weeks10 = weeks8.dividedBy(96);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration11 = new org.joda.time.Duration((java.lang.Object) weeks10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No duration converter found for type: org.joda.time.Weeks");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
    }

    @Test
    public void test16225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16225");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 'a', (long) 0);
        mutablePeriod2.addYears((int) '4');
        mutablePeriod2.addDays((int) (byte) 100);
        org.joda.time.Period period8 = org.joda.time.Period.hours(0);
        org.joda.time.DurationFieldType durationFieldType10 = period8.getFieldType((int) (short) 1);
        org.joda.time.Period period12 = period8.plusDays(10);
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period8);
        org.joda.time.Period period15 = period8.plusYears((int) (short) 10);
        org.joda.time.Period period17 = period15.withMonths(35);
        int int18 = period15.getSeconds();
        org.joda.time.Period period20 = period15.plusYears(60);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(readableInstant21, readableDuration22);
        org.joda.time.Period period24 = mutablePeriod23.toPeriod();
        org.joda.time.Period period26 = period24.withHours(0);
        int int27 = period24.getWeeks();
        org.joda.time.Period period29 = period24.plusSeconds((int) (byte) 100);
        org.joda.time.Weeks weeks30 = period24.toStandardWeeks();
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.weeksIn(readableInterval31);
        org.joda.time.Weeks weeks34 = weeks32.multipliedBy((int) (byte) 100);
        boolean boolean35 = weeks30.isGreaterThan(weeks32);
        org.joda.time.Duration duration36 = weeks30.toStandardDuration();
        org.joda.time.Weeks weeks38 = weeks30.minus(2147483647);
        org.joda.time.Period period39 = period20.minus((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks41 = weeks38.minus((-637));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours42 = weeks38.toStandardHours();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483647 * 168");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(weeks41);
    }

    @Test
    public void test16226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16226");
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds10 = duration9.toStandardSeconds();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds13 = duration12.toStandardSeconds();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration16 = duration9.minus((long) 3);
        org.joda.time.Duration duration17 = duration9.toDuration();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration17.toIntervalFrom(readableInstant18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds23 = duration22.toStandardSeconds();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds26 = duration25.toStandardSeconds();
        boolean boolean27 = duration22.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Period period28 = duration22.toPeriod();
        org.joda.time.Period period29 = period28.negated();
        org.joda.time.Seconds seconds30 = period29.toStandardSeconds();
        org.joda.time.Period period31 = period29.negated();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Duration duration33 = period29.toDurationTo(readableInstant32);
        org.joda.time.DurationFieldType[] durationFieldTypeArray34 = period29.getFieldTypes();
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.forFields(durationFieldTypeArray34);
        org.joda.time.PeriodType periodType36 = periodType35.withDaysRemoved();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant20, periodType35);
        org.joda.time.Period period38 = new org.joda.time.Period((int) '4', 2147483647, 7, (-97), 0, (int) (short) 10, 23, 793, periodType35);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(durationFieldTypeArray34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(periodType36);
    }

    @Test
    public void test16227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16227");
        org.joda.time.Period period4 = new org.joda.time.Period(0, 100, (int) '#', 100);
        org.joda.time.Period period5 = period4.negated();
        org.joda.time.Period period7 = period5.withWeeks((int) '#');
        org.joda.time.Duration duration8 = period5.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((java.lang.Object) period5);
        org.joda.time.Hours hours10 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period5);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(hours10);
    }

    @Test
    public void test16228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16228");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType1 = minutes0.getPeriodType();
        int int2 = minutes0.getMinutes();
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = minutes4.getFieldType();
        java.lang.String str6 = minutes4.toString();
        boolean boolean7 = minutes0.isLessThan(minutes4);
        org.joda.time.Minutes minutes9 = minutes4.minus(0);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType13 = periodType12.withWeeksRemoved();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration11.toPeriod(periodType12, chronology14);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType18 = periodType17.withMonthsRemoved();
        org.joda.time.Period period19 = duration11.toPeriodTo(readableInstant16, periodType18);
        org.joda.time.Minutes minutes20 = duration11.toStandardMinutes();
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes24 = minutes20.minus((int) (short) 0);
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.minutes(54);
        org.joda.time.Minutes minutes28 = minutes25.minus(minutes27);
        org.joda.time.Minutes minutes30 = minutes25.minus((int) (short) 10);
        org.joda.time.Minutes minutes31 = minutes9.minus(minutes30);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.THREE;
        org.joda.time.DurationFieldType durationFieldType33 = minutes32.getFieldType();
        org.joda.time.Minutes minutes35 = minutes32.plus(54);
        org.joda.time.Minutes minutes37 = minutes32.dividedBy((int) (short) 1);
        org.joda.time.Minutes minutes39 = minutes37.multipliedBy(7);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes40 = minutes31.minus(minutes39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483639 + -21");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT0M" + "'", str3, "PT0M");
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT-2147483648M" + "'", str6, "PT-2147483648M");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
    }

    @Test
    public void test16229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16229");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        org.joda.time.format.PeriodFormatter periodFormatter3 = null;
        java.lang.String str4 = mutablePeriod2.toString(periodFormatter3);
        int int5 = mutablePeriod2.getMillis();
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        int int8 = seconds7.getSeconds();
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) seconds7);
        mutablePeriod2.addWeeks((-2147483638));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT0S" + "'", str4, "PT0S");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test16230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16230");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableDuration1);
        org.joda.time.Period period3 = mutablePeriod2.toPeriod();
        org.joda.time.Period period5 = period3.withHours(0);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.days();
        int int7 = period3.indexOf(durationFieldType6);
        org.joda.time.Weeks weeks8 = period3.toStandardWeeks();
        org.joda.time.Weeks weeks10 = weeks8.minus(600);
        java.lang.String str11 = weeks10.toString();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P-600W" + "'", str11, "P-600W");
    }

    @Test
    public void test16231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16231");
        org.joda.time.Period period1 = org.joda.time.Period.days(1);
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.Period period4 = period2.minusWeeks((int) ' ');
        org.joda.time.MutablePeriod mutablePeriod5 = period2.toMutablePeriod();
        org.joda.time.Period period7 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days8 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period7);
        org.joda.time.PeriodType periodType9 = days8.getPeriodType();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(readableInstant10, readableDuration11);
        mutablePeriod12.setHours((int) (short) 100);
        boolean boolean15 = periodType9.equals((java.lang.Object) mutablePeriod12);
        org.joda.time.Duration duration16 = org.joda.time.Duration.ZERO;
        long long17 = duration16.getStandardDays();
        mutablePeriod12.add((org.joda.time.ReadableDuration) duration16);
        mutablePeriod12.setWeeks((int) (byte) 10);
        mutablePeriod5.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod12);
        mutablePeriod5.setDays(990);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    }

    @Test
    public void test16232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16232");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.Period period4 = period1.withSeconds((int) ' ');
        java.lang.String str5 = period1.toString();
        int int6 = period1.getMinutes();
        org.joda.time.Period period7 = period1.toPeriod();
        org.joda.time.Period period9 = period7.minusDays(900);
        org.joda.time.Period period10 = period7.toPeriod();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT1M" + "'", str5, "PT1M");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test16233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16233");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 8, (long) 10);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.ZERO;
        org.joda.time.Duration duration4 = seconds3.toStandardDuration();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), (long) ' ');
        boolean boolean8 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        long long9 = duration4.getStandardDays();
        boolean boolean10 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Interval interval12 = duration2.toIntervalFrom(readableInstant11);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((java.lang.Object) duration2, chronology13);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(interval12);
    }

    @Test
    public void test16234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16234");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType3 = periodType2.withWeeksRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.Period period5 = duration1.toPeriod(periodType2, chronology4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType8 = periodType7.withMonthsRemoved();
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant6, periodType8);
        org.joda.time.DurationFieldType durationFieldType11 = period9.getFieldType((int) (byte) 0);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration13 = period9.toDurationFrom(readableInstant12);
        org.joda.time.Duration duration14 = period9.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) 25);
        int int17 = mutablePeriod16.getYears();
        mutablePeriod16.addMillis(3);
        org.joda.time.Duration duration22 = new org.joda.time.Duration(60000L, (long) 100);
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(0L);
        org.joda.time.Period period26 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days27 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period26);
        org.joda.time.PeriodType periodType28 = days27.getPeriodType();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(readableInstant29, readableDuration30);
        mutablePeriod31.setHours((int) (short) 100);
        boolean boolean34 = periodType28.equals((java.lang.Object) mutablePeriod31);
        org.joda.time.Duration duration35 = org.joda.time.Duration.ZERO;
        long long36 = duration35.getStandardDays();
        mutablePeriod31.add((org.joda.time.ReadableDuration) duration35);
        mutablePeriod31.clear();
        org.joda.time.Period period40 = org.joda.time.Period.hours(0);
        org.joda.time.DurationFieldType durationFieldType42 = period40.getFieldType((int) (short) 1);
        mutablePeriod31.set(durationFieldType42, (int) (short) -1);
        mutablePeriod24.set(durationFieldType42, 32);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Duration duration48 = mutablePeriod24.toDurationTo(readableInstant47);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        java.lang.Object obj51 = null;
        org.joda.time.Duration duration52 = new org.joda.time.Duration(obj51);
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant50, (org.joda.time.ReadableDuration) duration52);
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration52);
        org.joda.time.Duration duration55 = duration52.toDuration();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableInstant readableInstant57 = null;
        java.lang.Object obj58 = null;
        org.joda.time.Duration duration59 = new org.joda.time.Duration(obj58);
        org.joda.time.Period period60 = new org.joda.time.Period(readableInstant57, (org.joda.time.ReadableDuration) duration59);
        org.joda.time.Period period61 = new org.joda.time.Period(readableInstant56, (org.joda.time.ReadableDuration) duration59);
        int int62 = duration52.compareTo((org.joda.time.ReadableDuration) duration59);
        long long63 = duration52.getStandardSeconds();
        mutablePeriod24.add((org.joda.time.ReadableDuration) duration52);
        org.joda.time.Duration duration65 = duration22.plus((org.joda.time.ReadableDuration) duration52);
        org.joda.time.Days days66 = org.joda.time.Days.ZERO;
        org.joda.time.Days days67 = org.joda.time.Days.ZERO;
        org.joda.time.Period period69 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days70 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period69);
        org.joda.time.Days days72 = days70.minus(10);
        boolean boolean73 = days67.isGreaterThan(days70);
        org.joda.time.Days days74 = days66.minus(days67);
        org.joda.time.Days days76 = days74.plus(658);
        org.joda.time.Days days78 = days74.dividedBy((-1073741824));
        boolean boolean79 = duration52.equals((java.lang.Object) days74);
        mutablePeriod16.add((org.joda.time.ReadableDuration) duration52);
        boolean boolean81 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration52);
        long long82 = duration52.getStandardDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(days70);
        org.junit.Assert.assertNotNull(days72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(days74);
        org.junit.Assert.assertNotNull(days76);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 0L + "'", long82 == 0L);
    }

    @Test
    public void test16235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16235");
        org.joda.time.Duration duration0 = org.joda.time.Duration.ZERO;
        long long1 = duration0.getStandardDays();
        org.joda.time.Hours hours2 = duration0.toStandardHours();
        org.joda.time.Duration duration4 = duration0.withMillis(0L);
        org.joda.time.Duration duration5 = duration0.toDuration();
        long long6 = duration5.getMillis();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.junit.Assert.assertNotNull(duration0);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    }

    @Test
    public void test16236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16236");
        org.joda.time.Days days1 = org.joda.time.Days.days(1);
        org.joda.time.Days days3 = days1.minus(600);
        org.joda.time.Days days5 = days1.multipliedBy(600);
        org.joda.time.Days days6 = org.joda.time.Days.ZERO;
        org.joda.time.Period period8 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days9 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period8);
        org.joda.time.Days days11 = days9.minus(10);
        boolean boolean12 = days6.isGreaterThan(days9);
        org.joda.time.Days days14 = days9.multipliedBy((int) '4');
        boolean boolean15 = days5.isLessThan(days9);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test16237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16237");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (-2147483648), (long) (short) 10, chronology2);
        mutablePeriod3.addWeeks((int) 'a');
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeksIn(readableInterval6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.weeksIn(readableInterval8);
        boolean boolean10 = weeks7.isLessThan(weeks9);
        org.joda.time.Weeks weeks11 = weeks7.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        int int13 = mutablePeriod12.getWeeks();
        mutablePeriod12.addHours(0);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        org.joda.time.Period period21 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration22 = duration19.toDuration();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration26);
        int int29 = duration19.compareTo((org.joda.time.ReadableDuration) duration26);
        long long30 = duration19.getStandardSeconds();
        long long31 = duration19.getMillis();
        org.joda.time.Period period32 = duration19.toPeriod();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Duration duration34 = period32.toDurationTo(readableInstant33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Interval interval36 = duration34.toIntervalTo(readableInstant35);
        mutablePeriod12.setPeriod((org.joda.time.ReadableInterval) interval36);
        mutablePeriod3.add((org.joda.time.ReadableInterval) interval36);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval36);
        org.joda.time.Weeks weeks41 = weeks39.multipliedBy(74);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
    }

    @Test
    public void test16238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16238");
        org.joda.time.Duration duration0 = org.joda.time.Duration.ZERO;
        long long1 = duration0.getStandardDays();
        org.joda.time.Hours hours2 = duration0.toStandardHours();
        long long3 = duration0.getStandardMinutes();
        long long4 = duration0.getStandardDays();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration0.toPeriod(chronology5);
        long long7 = duration0.getStandardSeconds();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Interval interval9 = duration0.toIntervalFrom(readableInstant8);
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.junit.Assert.assertNotNull(duration0);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
    }

    @Test
    public void test16239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16239");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType1 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.ZERO;
        boolean boolean6 = minutes4.isLessThan(minutes5);
        boolean boolean7 = minutes0.isLessThan(minutes4);
        org.joda.time.Minutes minutes9 = minutes4.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy(54);
        org.joda.time.Minutes minutes12 = null;
        boolean boolean13 = minutes11.isGreaterThan(minutes12);
        org.joda.time.PeriodType periodType14 = minutes11.getPeriodType();
        org.joda.time.Duration duration15 = minutes11.toStandardDuration();
        int int16 = minutes11.getMinutes();
        org.joda.time.Minutes minutes17 = minutes11.negated();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(readableInstant18, readableDuration19);
        org.joda.time.Period period21 = mutablePeriod20.toPeriod();
        int int22 = period21.size();
        org.joda.time.Period period24 = period21.plusDays(1);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.THREE;
        org.joda.time.Period period26 = period21.withFields((org.joda.time.ReadablePeriod) minutes25);
        java.lang.String str27 = minutes25.toString();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((long) 1, (long) (byte) 1, chronology30);
        org.joda.time.Minutes minutes32 = period31.toStandardMinutes();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.ZERO;
        boolean boolean35 = minutes33.isLessThan(minutes34);
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType37 = minutes36.getPeriodType();
        int int38 = minutes36.getMinutes();
        java.lang.String str39 = minutes36.toString();
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType41 = minutes40.getFieldType();
        java.lang.String str42 = minutes40.toString();
        boolean boolean43 = minutes36.isLessThan(minutes40);
        int int44 = minutes36.size();
        org.joda.time.Minutes minutes45 = minutes33.plus(minutes36);
        org.joda.time.Minutes minutes46 = minutes33.negated();
        org.joda.time.Minutes minutes47 = minutes32.plus(minutes46);
        org.joda.time.Period period48 = minutes47.toPeriod();
        org.joda.time.Minutes minutes50 = minutes47.plus((-97));
        org.joda.time.Minutes minutes51 = minutes25.plus(minutes50);
        org.joda.time.Minutes minutes53 = minutes51.multipliedBy((-87));
        java.lang.String str54 = minutes51.toString();
        boolean boolean55 = minutes11.isGreaterThan(minutes51);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8 + "'", int22 == 8);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT3M" + "'", str27, "PT3M");
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT0M" + "'", str39, "PT0M");
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT-2147483648M" + "'", str42, "PT-2147483648M");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "PT-96M" + "'", str54, "PT-96M");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test16240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16240");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) 74);
    }

    @Test
    public void test16241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16241");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(600L, chronology1);
    }

    @Test
    public void test16242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16242");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-29));
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test16243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16243");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) (short) 1, periodType4, chronology5);
        org.joda.time.PeriodType periodType7 = mutablePeriod6.getPeriodType();
        org.joda.time.PeriodType periodType8 = periodType7.withMillisRemoved();
        org.joda.time.Period period9 = new org.joda.time.Period(readableInstant1, readableInstant2, periodType8);
        org.joda.time.PeriodType periodType10 = period9.getPeriodType();
        org.joda.time.PeriodType periodType11 = periodType10.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((long) 59, periodType10);
        int int13 = mutablePeriod12.getMinutes();
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test16244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16244");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(0, (int) (byte) -1, (-2147483648), 2);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardSeconds((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.PeriodType periodType9 = periodType8.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant7, periodType8);
        org.joda.time.MutablePeriod mutablePeriod11 = mutablePeriod10.copy();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds14 = duration13.toStandardSeconds();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds17 = duration16.toStandardSeconds();
        boolean boolean18 = duration13.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType21 = periodType20.withMinutesRemoved();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant19, periodType20);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Interval interval24 = duration16.toIntervalFrom(readableInstant23);
        mutablePeriod11.add((org.joda.time.ReadableInterval) interval24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval24);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval24);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval24);
        mutablePeriod4.add((org.joda.time.ReadableInterval) interval24);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval24);
        org.joda.time.MutablePeriod mutablePeriod31 = seconds30.toMutablePeriod();
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
    }

    @Test
    public void test16245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16245");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.plus((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(100);
        org.joda.time.Period period5 = new org.joda.time.Period((java.lang.Object) minutes4);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
    }

    @Test
    public void test16246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16246");
        java.lang.Object obj0 = null;
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(obj0, periodType1, chronology2);
        int int4 = mutablePeriod3.getSeconds();
        org.joda.time.MutablePeriod mutablePeriod5 = mutablePeriod3.copy();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod3.setValue((int) (short) 100, (-21167965));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod5);
    }

    @Test
    public void test16247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16247");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType1 = minutes0.getPeriodType();
        int int2 = minutes0.getMinutes();
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = minutes4.getFieldType();
        java.lang.String str6 = minutes4.toString();
        boolean boolean7 = minutes0.isLessThan(minutes4);
        org.joda.time.Minutes minutes8 = minutes0.negated();
        org.joda.time.Minutes minutes10 = minutes8.plus((int) (byte) 100);
        org.joda.time.Minutes minutes12 = minutes10.dividedBy((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes10.negated();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType15 = minutes14.getPeriodType();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes17 = minutes14.plus(minutes16);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.ZERO;
        boolean boolean20 = minutes18.isLessThan(minutes19);
        boolean boolean21 = minutes14.isLessThan(minutes18);
        org.joda.time.Minutes minutes23 = minutes18.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = minutes24.getFieldType();
        org.joda.time.PeriodType periodType26 = minutes24.getPeriodType();
        org.joda.time.Minutes minutes27 = minutes23.plus(minutes24);
        org.joda.time.DurationFieldType durationFieldType28 = minutes27.getFieldType();
        boolean boolean29 = minutes10.isGreaterThan(minutes27);
        org.joda.time.DurationFieldType durationFieldType30 = minutes10.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT0M" + "'", str3, "PT0M");
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT-2147483648M" + "'", str6, "PT-2147483648M");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(durationFieldType30);
    }

    @Test
    public void test16248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16248");
        org.joda.time.Period period1 = org.joda.time.Period.hours(658);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test16249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16249");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.standardMinutesIn(readablePeriod0);
        int int2 = minutes1.size();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType4 = minutes3.getPeriodType();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes6 = minutes3.plus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.ZERO;
        boolean boolean9 = minutes7.isLessThan(minutes8);
        boolean boolean10 = minutes3.isLessThan(minutes7);
        org.joda.time.Minutes minutes12 = minutes7.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = minutes13.getFieldType();
        org.joda.time.PeriodType periodType15 = minutes13.getPeriodType();
        org.joda.time.Minutes minutes16 = minutes12.plus(minutes13);
        org.joda.time.PeriodType periodType17 = minutes12.getPeriodType();
        org.joda.time.PeriodType periodType18 = minutes12.getPeriodType();
        org.joda.time.Minutes minutes19 = minutes1.plus(minutes12);
        org.joda.time.PeriodType periodType20 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes21 = minutes1.negated();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(minutes21);
    }

    @Test
    public void test16250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16250");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.PeriodType periodType4 = periodType3.withDaysRemoved();
        org.joda.time.Period period5 = new org.joda.time.Period((-60L), periodType4);
        org.joda.time.Period period6 = new org.joda.time.Period(84326400000L, (long) 27, periodType4);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds9 = duration8.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType10 = seconds9.getFieldType();
        org.joda.time.Seconds seconds12 = seconds9.plus(25);
        org.joda.time.Seconds seconds13 = seconds9.negated();
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds15 = seconds9.plus(seconds14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.ZERO;
        org.joda.time.PeriodType periodType17 = seconds16.getPeriodType();
        java.lang.String str18 = seconds16.toString();
        org.joda.time.Seconds seconds20 = seconds16.plus((int) (short) 1);
        int int21 = seconds20.getSeconds();
        boolean boolean22 = seconds15.isLessThan(seconds20);
        org.joda.time.DurationFieldType durationFieldType23 = seconds20.getFieldType();
        boolean boolean24 = period6.isSupported(durationFieldType23);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT0S" + "'", str18, "PT0S");
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test16251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16251");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) (-87));
    }

    @Test
    public void test16252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16252");
        org.joda.time.Period period4 = new org.joda.time.Period(10, 0, (int) (byte) 10, (int) (byte) 10);
        int int5 = period4.getHours();
        org.joda.time.PeriodType periodType6 = period4.getPeriodType();
        int int7 = period4.getMonths();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration9 = period4.toDurationFrom(readableInstant8);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours(172800000L);
        boolean boolean12 = duration9.isEqual((org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.ZERO;
        org.joda.time.PeriodType periodType16 = seconds15.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((long) (byte) 100, periodType16);
        org.joda.time.PeriodType periodType18 = mutablePeriod17.getPeriodType();
        org.joda.time.Period period19 = duration9.toPeriodFrom(readableInstant13, periodType18);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period19);
    }

    @Test
    public void test16253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16253");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.ZERO;
        boolean boolean2 = minutes0.isLessThan(minutes1);
        org.joda.time.Minutes minutes4 = minutes1.multipliedBy((int) (short) 10);
        org.joda.time.PeriodType periodType5 = minutes1.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(periodType5);
    }

    @Test
    public void test16254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16254");
        org.joda.time.Period period4 = new org.joda.time.Period(35, 25, (int) (short) 1, 4);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = period4.normalizedStandard(periodType5);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test16255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16255");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableDuration1);
        mutablePeriod2.setHours((int) (short) 100);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology7 = null;
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration6, chronology7);
        org.joda.time.Period period13 = new org.joda.time.Period(0, (int) (byte) 1, (int) (byte) 0, (-1));
        org.joda.time.Period period15 = period13.minusWeeks((-2));
        org.joda.time.Hours hours16 = period15.toStandardHours();
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) hours16);
        org.joda.time.Hours hours19 = hours16.dividedBy(32);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((long) 0, (long) (byte) 10, periodType22, chronology23);
        org.joda.time.Duration duration25 = org.joda.time.Duration.ZERO;
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration25.toPeriod(chronology26);
        org.joda.time.Period period28 = period24.withFields((org.joda.time.ReadablePeriod) period27);
        org.joda.time.Hours hours29 = period27.toStandardHours();
        org.joda.time.Hours hours31 = hours29.plus(1);
        org.joda.time.Duration duration32 = org.joda.time.Duration.ZERO;
        long long33 = duration32.getStandardDays();
        org.joda.time.Hours hours34 = duration32.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType35 = hours34.getFieldType();
        org.joda.time.Hours hours36 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours38 = org.joda.time.Hours.hours((int) (byte) -1);
        boolean boolean39 = hours36.isGreaterThan(hours38);
        org.joda.time.Hours hours41 = hours36.minus((int) (byte) 0);
        org.joda.time.Hours hours42 = hours34.minus(hours36);
        org.joda.time.Hours hours44 = hours36.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours46 = hours44.dividedBy(10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableDuration readableDuration48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(readableInstant47, readableDuration48);
        org.joda.time.Period period50 = mutablePeriod49.toPeriod();
        org.joda.time.Period period52 = period50.withHours(0);
        org.joda.time.Hours hours53 = period52.toStandardHours();
        org.joda.time.Hours hours55 = hours53.plus((int) (byte) 1);
        org.joda.time.Hours hours57 = hours55.dividedBy((int) (byte) 100);
        org.joda.time.Hours hours58 = hours44.minus(hours57);
        boolean boolean59 = hours29.isGreaterThan(hours57);
        org.joda.time.Hours hours61 = hours29.multipliedBy(125);
        org.joda.time.Hours hours63 = hours29.plus((-31));
        org.joda.time.Hours hours64 = hours16.plus(hours29);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
    }

    @Test
    public void test16256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16256");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodParser periodParser3 = periodFormatter2.getParser();
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter2.getPrinter();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter6.withLocale(locale7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.hours();
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(periodType9);
        org.joda.time.format.PeriodFormatter periodFormatter11 = periodFormatter6.withParseType(periodType9);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.Period period19 = duration18.toPeriod();
        long long20 = duration18.getStandardSeconds();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds23 = duration22.toStandardSeconds();
        java.lang.String str24 = seconds23.toString();
        org.joda.time.PeriodType periodType25 = seconds23.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant16, (org.joda.time.ReadableDuration) duration18, periodType25);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((long) 1, 540000L, periodType25, chronology27);
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(100L, 2L, periodType25);
        org.joda.time.format.PeriodFormatter periodFormatter30 = periodFormatter11.withParseType(periodType25);
        boolean boolean31 = periodFormatter11.isPrinter();
        boolean boolean32 = periodFormatter11.isParser();
        org.joda.time.format.PeriodPrinter periodPrinter33 = periodFormatter11.getPrinter();
        java.util.Locale locale34 = null;
        org.joda.time.format.PeriodFormatter periodFormatter35 = periodFormatter11.withLocale(locale34);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds39 = duration38.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType40 = seconds39.getFieldType();
        org.joda.time.Seconds seconds42 = seconds39.dividedBy(2);
        org.joda.time.PeriodType periodType43 = seconds42.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(2L, periodType43);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = periodFormatter35.parseInto((org.joda.time.ReadWritablePeriod) mutablePeriod44, "YearMonthDayTime", (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodParser3);
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodFormatter11);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-60L) + "'", long20 == (-60L));
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT60S" + "'", str24, "PT60S");
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodFormatter30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(periodPrinter33);
        org.junit.Assert.assertNotNull(periodFormatter35);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(periodType43);
    }

    @Test
    public void test16257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16257");
        org.joda.time.Hours hours0 = org.joda.time.Hours.FOUR;
        org.joda.time.Hours hours2 = hours0.minus(0);
        org.joda.time.Hours hours3 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours5 = org.joda.time.Hours.hours((int) (byte) -1);
        boolean boolean6 = hours3.isGreaterThan(hours5);
        boolean boolean7 = hours2.isLessThan(hours5);
        java.lang.String str8 = hours2.toString();
        org.joda.time.Hours hours9 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours10 = hours2.plus(hours9);
        org.joda.time.Hours hours12 = hours9.minus(15120008);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT4H" + "'", str8, "PT4H");
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
    }

    @Test
    public void test16258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16258");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes4 = minutes1.plus(minutes3);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.ZERO;
        boolean boolean7 = minutes5.isLessThan(minutes6);
        boolean boolean8 = minutes1.isLessThan(minutes5);
        org.joda.time.Duration duration9 = minutes1.toStandardDuration();
        org.joda.time.Minutes minutes11 = minutes1.dividedBy((int) (short) 100);
        org.joda.time.PeriodType periodType12 = minutes1.getPeriodType();
        org.joda.time.PeriodType periodType13 = periodType12.withYearsRemoved();
        org.joda.time.PeriodType periodType14 = periodType13.withHoursRemoved();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(780L, periodType13, chronology15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableInstant readableInstant18 = null;
        mutablePeriod16.setPeriod(readableInstant17, readableInstant18);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
    }

    @Test
    public void test16259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16259");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodParser periodParser3 = periodFormatter2.getParser();
        java.util.Locale locale4 = periodFormatter2.getLocale();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = minutes5.getFieldType();
        org.joda.time.PeriodType periodType7 = minutes5.getPeriodType();
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withParseType(periodType7);
        boolean boolean9 = periodFormatter2.isParser();
        org.junit.Assert.assertNull(periodParser3);
        org.junit.Assert.assertNull(locale4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test16260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16260");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) '4', chronology1);
        int int3 = mutablePeriod2.getHours();
        org.joda.time.Duration duration4 = org.joda.time.Duration.ZERO;
        long long5 = duration4.getStandardDays();
        org.joda.time.Hours hours6 = duration4.toStandardHours();
        long long7 = duration4.getStandardMinutes();
        mutablePeriod2.add((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) 25);
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration12 = new org.joda.time.Duration((java.lang.Object) duration10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType16 = periodType15.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(obj14, periodType15);
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType15);
        org.joda.time.Period period19 = duration12.toPeriod();
        org.joda.time.Duration duration21 = duration12.minus((long) 7);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = duration21.toPeriodFrom(readableInstant22);
        int int24 = period23.size();
        int int25 = period23.getMonths();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test16261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16261");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        java.lang.Object obj2 = null;
        org.joda.time.Duration duration3 = new org.joda.time.Duration(obj2);
        org.joda.time.Period period4 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration3);
        org.joda.time.Duration duration6 = duration3.toDuration();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        java.lang.Object obj9 = null;
        org.joda.time.Duration duration10 = new org.joda.time.Duration(obj9);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration10);
        int int13 = duration3.compareTo((org.joda.time.ReadableDuration) duration10);
        long long14 = duration3.getStandardSeconds();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(readableInstant15, readableInstant16);
        boolean boolean18 = duration3.isEqual((org.joda.time.ReadableDuration) duration17);
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((java.lang.Object) duration17);
        mutablePeriod19.addWeeks(4);
        org.joda.time.Duration duration23 = org.joda.time.Duration.millis((long) (byte) 0);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration23.toPeriod(chronology24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant26, readableDuration27);
        org.joda.time.Period period29 = mutablePeriod28.toPeriod();
        org.joda.time.Period period31 = period29.withHours(0);
        org.joda.time.Period period33 = org.joda.time.Period.hours(0);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(readableInstant34, readableDuration35);
        org.joda.time.Period period37 = mutablePeriod36.toPeriod();
        org.joda.time.Period period39 = period37.withHours(0);
        org.joda.time.DurationFieldType durationFieldType40 = org.joda.time.DurationFieldType.days();
        int int41 = period37.indexOf(durationFieldType40);
        int int42 = period33.indexOf(durationFieldType40);
        int int43 = period29.get(durationFieldType40);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Period period47 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days48 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period47);
        org.joda.time.Period period50 = period47.withSeconds((int) ' ');
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.millis();
        org.joda.time.Period period52 = period50.normalizedStandard(periodType51);
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(readableInstant44, readableInstant45, periodType51);
        org.joda.time.DurationFieldType[] durationFieldTypeArray54 = mutablePeriod53.getFieldTypes();
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.forFields(durationFieldTypeArray54);
        org.joda.time.Period period56 = period29.withPeriodType(periodType55);
        boolean boolean57 = period25.equals((java.lang.Object) period56);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Duration duration59 = period25.toDurationTo(readableInstant58);
        mutablePeriod19.add((org.joda.time.ReadableDuration) duration59);
        long long61 = duration59.getStandardSeconds();
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 3 + "'", int41 == 3);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 3 + "'", int42 == 3);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(durationFieldTypeArray54);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
    }

    @Test
    public void test16262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16262");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodParser periodParser3 = periodFormatter2.getParser();
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter2.getPrinter();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter6.withLocale(locale7);
        java.util.Locale locale9 = null;
        org.joda.time.format.PeriodFormatter periodFormatter10 = periodFormatter8.withLocale(locale9);
        java.util.Locale locale11 = null;
        org.joda.time.format.PeriodFormatter periodFormatter12 = periodFormatter10.withLocale(locale11);
        org.joda.time.format.PeriodParser periodParser13 = periodFormatter10.getParser();
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.format.PeriodFormatter periodFormatter15 = periodFormatter10.withParseType(periodType14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.PeriodType periodType17 = periodType16.withMinutesRemoved();
        org.joda.time.Period period19 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Period period21 = period19.plusYears((int) ' ');
        org.joda.time.Period period23 = period21.minusYears((int) (short) 10);
        org.joda.time.Period period25 = period21.withMinutes((int) (short) 10);
        org.joda.time.Period period27 = period21.plusMillis((int) (byte) 10);
        org.joda.time.Period period29 = period21.withMinutes(0);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds32 = duration31.toStandardSeconds();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds35 = duration34.toStandardSeconds();
        boolean boolean36 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Interval interval38 = duration34.toIntervalTo(readableInstant37);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval38);
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((java.lang.Object) interval38, chronology41);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval38);
        org.joda.time.DurationFieldType durationFieldType44 = seconds43.getFieldType();
        org.joda.time.Period period46 = period29.withField(durationFieldType44, 6);
        int int47 = periodType16.indexOf(durationFieldType44);
        org.joda.time.PeriodType periodType48 = periodType16.withWeeksRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter49 = periodFormatter15.withParseType(periodType16);
        boolean boolean50 = periodFormatter49.isPrinter();
        org.junit.Assert.assertNull(periodParser3);
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNotNull(periodFormatter10);
        org.junit.Assert.assertNotNull(periodFormatter12);
        org.junit.Assert.assertNull(periodParser13);
        org.junit.Assert.assertNotNull(periodFormatter15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(periodFormatter49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test16263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16263");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodParser periodParser3 = periodFormatter2.getParser();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds6 = duration5.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        org.joda.time.Seconds seconds9 = seconds6.plus(25);
        org.joda.time.Seconds seconds10 = seconds6.negated();
        org.joda.time.PeriodType periodType11 = seconds10.getPeriodType();
        org.joda.time.format.PeriodFormatter periodFormatter12 = periodFormatter2.withParseType(periodType11);
        org.joda.time.format.PeriodPrinter periodPrinter13 = periodFormatter12.getPrinter();
        org.joda.time.format.PeriodParser periodParser14 = periodFormatter12.getParser();
        org.joda.time.format.PeriodPrinter periodPrinter15 = periodFormatter12.getPrinter();
        boolean boolean16 = periodFormatter12.isPrinter();
        boolean boolean17 = periodFormatter12.isPrinter();
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.yearWeekDayTime();
        org.joda.time.PeriodType periodType19 = periodType18.withMillisRemoved();
        org.joda.time.PeriodType periodType20 = periodType18.withWeeksRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter21 = periodFormatter12.withParseType(periodType18);
        boolean boolean22 = periodFormatter12.isPrinter();
        boolean boolean23 = periodFormatter12.isParser();
        boolean boolean24 = periodFormatter12.isPrinter();
        org.junit.Assert.assertNull(periodParser3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodFormatter12);
        org.junit.Assert.assertNull(periodPrinter13);
        org.junit.Assert.assertNull(periodParser14);
        org.junit.Assert.assertNull(periodPrinter15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodFormatter21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test16264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16264");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodParser periodParser3 = periodFormatter2.getParser();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds6 = duration5.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        org.joda.time.Seconds seconds9 = seconds6.plus(25);
        org.joda.time.Seconds seconds10 = seconds6.negated();
        org.joda.time.PeriodType periodType11 = seconds10.getPeriodType();
        org.joda.time.format.PeriodFormatter periodFormatter12 = periodFormatter2.withParseType(periodType11);
        boolean boolean13 = periodFormatter2.isPrinter();
        java.util.Locale locale14 = periodFormatter2.getLocale();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType26 = periodType25.withWeeksRemoved();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration24.toPeriod(periodType25, chronology27);
        org.joda.time.Days days29 = org.joda.time.Days.ZERO;
        int int30 = days29.getDays();
        org.joda.time.Period period32 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days33 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period32);
        org.joda.time.Period period35 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days36 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period35);
        org.joda.time.PeriodType periodType37 = days36.getPeriodType();
        boolean boolean38 = days33.isGreaterThan(days36);
        org.joda.time.Period period40 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days41 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period40);
        org.joda.time.Days days42 = days36.minus(days41);
        org.joda.time.Days days43 = days29.minus(days36);
        boolean boolean44 = duration24.equals((java.lang.Object) days36);
        org.joda.time.Period period45 = duration24.toPeriod();
        org.joda.time.Duration duration46 = duration24.toDuration();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(readableInstant51, readableDuration52);
        mutablePeriod53.setPeriod((long) ' ', (long) 52);
        mutablePeriod53.addDays(100);
        org.joda.time.PeriodType periodType59 = mutablePeriod53.getPeriodType();
        org.joda.time.Period period60 = new org.joda.time.Period((long) (short) 0, periodType59);
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod(readableInstant48, readableInstant49, periodType59);
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration24, readableInstant47, periodType59);
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod(54, 20, 0, (-2147483638), 9, 2, (-15), (-2), periodType59);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = periodFormatter2.parseInto((org.joda.time.ReadWritablePeriod) mutablePeriod63, "PT-98H", 3);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodParser3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodFormatter12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(locale14);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(periodType59);
    }

    @Test
    public void test16265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16265");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) 25);
        org.joda.time.Days days2 = duration1.toStandardDays();
        org.joda.time.Days days3 = duration1.toStandardDays();
        org.joda.time.Period period5 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days6 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period5);
        org.joda.time.Period period8 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days9 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period8);
        org.joda.time.PeriodType periodType10 = days9.getPeriodType();
        boolean boolean11 = days6.isGreaterThan(days9);
        int int12 = days6.size();
        org.joda.time.Days days13 = days6.negated();
        org.joda.time.Days days15 = days13.minus(3);
        org.joda.time.Days days16 = org.joda.time.Days.ZERO;
        int int17 = days16.getDays();
        org.joda.time.Period period19 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days20 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period19);
        org.joda.time.Period period22 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days23 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period22);
        org.joda.time.PeriodType periodType24 = days23.getPeriodType();
        boolean boolean25 = days20.isGreaterThan(days23);
        org.joda.time.Period period27 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days28 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period27);
        org.joda.time.Days days29 = days23.minus(days28);
        org.joda.time.Days days30 = days16.minus(days23);
        org.joda.time.Days days32 = days23.plus((int) (byte) 1);
        org.joda.time.DurationFieldType durationFieldType34 = days32.getFieldType((int) (short) 0);
        boolean boolean35 = days15.isLessThan(days32);
        org.joda.time.Days days36 = org.joda.time.Days.ZERO;
        org.joda.time.Period period38 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days39 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period38);
        org.joda.time.Days days41 = days39.minus(10);
        boolean boolean42 = days36.isGreaterThan(days39);
        boolean boolean43 = days15.isGreaterThan(days39);
        org.joda.time.Days days44 = org.joda.time.Days.ZERO;
        org.joda.time.Period period46 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days47 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period46);
        org.joda.time.Days days49 = days47.minus(10);
        boolean boolean50 = days44.isGreaterThan(days47);
        org.joda.time.Period period52 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days53 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period52);
        org.joda.time.Period period55 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days56 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period55);
        org.joda.time.PeriodType periodType57 = days56.getPeriodType();
        boolean boolean58 = days53.isGreaterThan(days56);
        org.joda.time.Period period60 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days61 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period60);
        org.joda.time.Days days62 = days56.minus(days61);
        int int63 = days56.size();
        org.joda.time.Days days64 = org.joda.time.Days.ZERO;
        org.joda.time.Period period66 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days67 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period66);
        org.joda.time.Days days69 = days67.minus(10);
        boolean boolean70 = days64.isGreaterThan(days67);
        org.joda.time.Days days71 = days56.minus(days67);
        org.joda.time.Days days72 = days44.minus(days67);
        org.joda.time.Days days74 = days44.minus((int) '#');
        org.joda.time.Days days75 = days15.minus(days44);
        org.joda.time.DurationFieldType durationFieldType76 = days15.getFieldType();
        boolean boolean77 = days3.isSupported(durationFieldType76);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(days71);
        org.junit.Assert.assertNotNull(days72);
        org.junit.Assert.assertNotNull(days74);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test16266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16266");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks3 = weeks1.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks5 = weeks1.dividedBy((int) 'a');
        org.joda.time.Weeks weeks7 = weeks5.multipliedBy((-60));
        org.joda.time.MutablePeriod mutablePeriod8 = weeks7.toMutablePeriod();
        java.lang.Object obj9 = mutablePeriod8.clone();
        java.lang.String str10 = mutablePeriod8.toString();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "PT0S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "PT0S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "PT0S");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT0S" + "'", str10, "PT0S");
    }

    @Test
    public void test16267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16267");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 1, (long) (byte) 100);
        int int3 = mutablePeriod2.size();
        org.joda.time.MutablePeriod mutablePeriod4 = mutablePeriod2.copy();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableDuration readableDuration6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(readableInstant5, readableDuration6);
        mutablePeriod7.setPeriod((long) ' ', (long) 52);
        mutablePeriod7.addDays(100);
        org.joda.time.PeriodType periodType13 = mutablePeriod7.getPeriodType();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds16 = duration15.toStandardSeconds();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds19 = duration18.toStandardSeconds();
        boolean boolean20 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType23 = periodType22.withMinutesRemoved();
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant21, periodType22);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Interval interval26 = duration18.toIntervalFrom(readableInstant25);
        mutablePeriod7.add((org.joda.time.ReadableInterval) interval26);
        mutablePeriod4.add((org.joda.time.ReadableInterval) interval26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(readableInstant29, readableInstant30);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.seconds(100);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.TWO;
        org.joda.time.DurationFieldType durationFieldType35 = seconds34.getFieldType();
        boolean boolean36 = seconds33.isGreaterThan(seconds34);
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((long) 'a', (long) 0);
        mutablePeriod39.addYears((int) '4');
        org.joda.time.Chronology chronology43 = null;
        mutablePeriod39.add((long) 100, chronology43);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds47 = duration46.toStandardSeconds();
        java.lang.String str48 = seconds47.toString();
        org.joda.time.DurationFieldType durationFieldType49 = org.joda.time.DurationFieldType.days();
        boolean boolean50 = seconds47.isSupported(durationFieldType49);
        int int51 = mutablePeriod39.get(durationFieldType49);
        boolean boolean52 = seconds34.isSupported(durationFieldType49);
        mutablePeriod31.set(durationFieldType49, (-2147483648));
        int int55 = mutablePeriod4.get(durationFieldType49);
        java.lang.String str56 = durationFieldType49.toString();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "PT60S" + "'", str48, "PT60S");
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "days" + "'", str56, "days");
    }

    @Test
    public void test16268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16268");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.PeriodType periodType3 = days2.getPeriodType();
        org.joda.time.Period period5 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days6 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period5);
        org.joda.time.Period period8 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days9 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period8);
        org.joda.time.PeriodType periodType10 = days9.getPeriodType();
        boolean boolean11 = days6.isGreaterThan(days9);
        org.joda.time.Period period13 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days14 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period13);
        org.joda.time.Days days15 = days9.minus(days14);
        org.joda.time.Period period17 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days18 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period17);
        org.joda.time.Days days20 = days18.minus(10);
        org.joda.time.Days days21 = days9.plus(days18);
        org.joda.time.Days days23 = days21.dividedBy(100);
        org.joda.time.Days days24 = null;
        org.joda.time.Days days25 = days23.plus(days24);
        org.joda.time.Days days26 = days23.negated();
        boolean boolean27 = days2.isGreaterThan(days26);
        org.joda.time.Days days28 = org.joda.time.Days.ZERO;
        int int29 = days28.getDays();
        org.joda.time.Period period31 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days32 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period31);
        org.joda.time.Period period34 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days35 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period34);
        org.joda.time.PeriodType periodType36 = days35.getPeriodType();
        boolean boolean37 = days32.isGreaterThan(days35);
        org.joda.time.Period period39 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days40 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period39);
        org.joda.time.Days days41 = days35.minus(days40);
        org.joda.time.Days days42 = days28.minus(days35);
        org.joda.time.Days days44 = days35.plus((int) (byte) 1);
        org.joda.time.DurationFieldType durationFieldType46 = days44.getFieldType((int) (short) 0);
        boolean boolean47 = days2.isLessThan(days44);
        org.joda.time.Days days48 = null;
        org.joda.time.Days days49 = days2.minus(days48);
        int int50 = days49.getDays();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
    }

    @Test
    public void test16269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16269");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeksIn(readableInterval2);
        boolean boolean4 = weeks1.isLessThan(weeks3);
        org.joda.time.Weeks weeks6 = weeks1.plus(0);
        org.joda.time.Weeks weeks8 = weeks6.multipliedBy((-2147483648));
        java.lang.String str9 = weeks6.toString();
        org.joda.time.Weeks weeks11 = weeks6.multipliedBy(5940);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeksIn(readableInterval12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeksIn(readableInterval14);
        boolean boolean16 = weeks13.isLessThan(weeks15);
        org.joda.time.Weeks weeks17 = weeks13.negated();
        org.joda.time.Weeks weeks19 = weeks17.minus((int) (byte) 100);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeksIn(readableInterval20);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.weeksIn(readableInterval22);
        boolean boolean24 = weeks21.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.minus((int) (short) -1);
        org.joda.time.Weeks weeks28 = weeks26.multipliedBy(0);
        boolean boolean29 = weeks19.isGreaterThan(weeks28);
        org.joda.time.Period period34 = new org.joda.time.Period(0, (int) '4', (int) (short) 100, (int) (byte) -1);
        org.joda.time.Period period36 = period34.withDays((int) 'a');
        org.joda.time.Weeks weeks37 = period36.toStandardWeeks();
        int int38 = weeks37.getWeeks();
        org.joda.time.ReadableInterval readableInterval39 = null;
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.weeksIn(readableInterval39);
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.weeksIn(readableInterval41);
        boolean boolean43 = weeks40.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = weeks42.minus((int) (short) -1);
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks48 = weeks45.multipliedBy(0);
        boolean boolean49 = weeks37.isGreaterThan(weeks48);
        org.joda.time.Weeks weeks50 = weeks28.minus(weeks37);
        org.joda.time.ReadableInterval readableInterval51 = null;
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.weeksIn(readableInterval51);
        org.joda.time.Weeks weeks54 = weeks52.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks55 = weeks37.plus(weeks54);
        org.joda.time.Weeks weeks57 = weeks54.multipliedBy((int) 'a');
        org.joda.time.ReadableInterval readableInterval58 = null;
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.weeksIn(readableInterval58);
        org.joda.time.ReadableInterval readableInterval60 = null;
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.weeksIn(readableInterval60);
        boolean boolean62 = weeks59.isLessThan(weeks61);
        org.joda.time.Weeks weeks63 = weeks59.negated();
        org.joda.time.Weeks weeks65 = weeks63.minus((int) (byte) 100);
        org.joda.time.Weeks weeks66 = weeks57.minus(weeks63);
        org.joda.time.Weeks weeks68 = weeks57.dividedBy((int) (short) 10);
        org.joda.time.Weeks weeks69 = weeks11.plus(weeks57);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P0W" + "'", str9, "P0W");
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 13 + "'", int38 == 13);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
    }

    @Test
    public void test16270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16270");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType2);
        org.joda.time.DurationFieldType durationFieldType4 = org.joda.time.DurationFieldType.eras();
        int int5 = period3.get(durationFieldType4);
        int int6 = period3.getYears();
        java.lang.String str7 = period3.toString();
        org.joda.time.Period period8 = period3.normalizedStandard();
        org.joda.time.Period period10 = period3.plusMinutes((int) (short) 1);
        org.joda.time.Days days11 = period3.toStandardDays();
        org.joda.time.Period period13 = period3.plusMillis(3);
        org.joda.time.Period period15 = period13.minusHours((-8));
        int int16 = period15.getDays();
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT0S" + "'", str7, "PT0S");
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test16271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16271");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((-1L));
        mutablePeriod1.addSeconds(100);
        java.lang.Object obj4 = null;
        org.joda.time.Duration duration5 = new org.joda.time.Duration(obj4);
        org.joda.time.Duration duration6 = duration5.toDuration();
        mutablePeriod1.add((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType10 = periodType9.withHoursRemoved();
        org.joda.time.PeriodType periodType11 = periodType10.withMinutesRemoved();
        org.joda.time.Period period12 = duration6.toPeriodTo(readableInstant8, periodType10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.THREE;
        org.joda.time.DurationFieldType durationFieldType15 = hours14.getFieldType();
        boolean boolean16 = hours13.isGreaterThan(hours14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(readableInstant17, readableDuration18);
        org.joda.time.Period period20 = mutablePeriod19.toPeriod();
        org.joda.time.Period period22 = period20.withHours(0);
        org.joda.time.Hours hours23 = period22.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType24 = hours23.getFieldType();
        int int25 = hours23.getHours();
        boolean boolean26 = hours14.isLessThan(hours23);
        org.joda.time.Hours hours28 = hours14.plus(10);
        boolean boolean29 = periodType10.equals((java.lang.Object) hours14);
        org.joda.time.PeriodType periodType30 = periodType10.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(periodType10);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(periodType30);
    }

    @Test
    public void test16272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16272");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (byte) -1);
        org.joda.time.Hours hours3 = hours1.multipliedBy((-1));
        org.joda.time.Hours hours5 = hours3.minus((int) (byte) 1);
        org.joda.time.DurationFieldType durationFieldType6 = hours5.getFieldType();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(readableInstant7, readableDuration8);
        mutablePeriod9.setSeconds(8);
        mutablePeriod9.setValue(1, 2);
        org.joda.time.Duration duration17 = new org.joda.time.Duration((-1L), (long) ' ');
        mutablePeriod9.add((org.joda.time.ReadableDuration) duration17);
        mutablePeriod9.clear();
        boolean boolean20 = hours5.equals((java.lang.Object) mutablePeriod9);
        mutablePeriod9.addMinutes(52);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Duration duration24 = mutablePeriod9.toDurationFrom(readableInstant23);
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 10, 1, (int) (byte) 10, (int) (short) 100, (int) (short) 100, 52, (int) (byte) -1);
        boolean boolean34 = duration24.equals((java.lang.Object) 1);
        org.joda.time.Period period35 = duration24.toPeriod();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((java.lang.Object) period35, chronology36);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(period35);
    }

    @Test
    public void test16273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16273");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.ZERO;
        boolean boolean2 = minutes0.isLessThan(minutes1);
        org.joda.time.Minutes minutes4 = minutes1.plus((int) (byte) 0);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType8 = periodType7.withWeeksRemoved();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration6.toPeriod(periodType7, chronology9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType13 = periodType12.withMonthsRemoved();
        org.joda.time.Period period14 = duration6.toPeriodTo(readableInstant11, periodType13);
        org.joda.time.Minutes minutes15 = duration6.toStandardMinutes();
        org.joda.time.Minutes minutes17 = minutes15.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType19 = minutes18.getPeriodType();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes21 = minutes18.plus(minutes20);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.ZERO;
        boolean boolean24 = minutes22.isLessThan(minutes23);
        boolean boolean25 = minutes18.isLessThan(minutes22);
        org.joda.time.Minutes minutes27 = minutes22.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes28 = minutes27.negated();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType30 = minutes29.getPeriodType();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes32 = minutes29.plus(minutes31);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.ZERO;
        boolean boolean35 = minutes33.isLessThan(minutes34);
        boolean boolean36 = minutes29.isLessThan(minutes33);
        org.joda.time.Duration duration37 = minutes29.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant38, (org.joda.time.ReadableDuration) duration41);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType47 = periodType46.withWeeksRemoved();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration45.toPeriod(periodType46, chronology48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType52 = periodType51.withMonthsRemoved();
        org.joda.time.Period period53 = duration45.toPeriodTo(readableInstant50, periodType52);
        org.joda.time.Period period54 = duration45.toPeriod();
        org.joda.time.Duration duration55 = duration41.plus((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration57 = duration37.withDurationAdded((org.joda.time.ReadableDuration) duration45, 25);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Interval interval59 = duration37.toIntervalFrom(readableInstant58);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval59);
        org.joda.time.Minutes minutes61 = minutes27.plus(minutes60);
        org.joda.time.Minutes minutes62 = minutes15.plus(minutes60);
        org.joda.time.Minutes minutes63 = minutes1.minus(minutes15);
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.ReadablePeriod readablePeriod65 = null;
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.standardMinutesIn(readablePeriod65);
        org.joda.time.Minutes minutes67 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.ZERO;
        boolean boolean69 = minutes67.isLessThan(minutes68);
        boolean boolean70 = minutes66.isGreaterThan(minutes67);
        org.joda.time.Minutes minutes71 = minutes64.plus(minutes66);
        org.joda.time.Minutes minutes73 = minutes66.multipliedBy((int) (byte) 100);
        org.joda.time.Minutes minutes74 = minutes63.plus(minutes66);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration75 = new org.joda.time.Duration((java.lang.Object) minutes66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No duration converter found for type: org.joda.time.Minutes");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(interval59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(minutes74);
    }

    @Test
    public void test16274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16274");
        org.joda.time.Duration duration1 = org.joda.time.Duration.parse("PT100S");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant2);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test16275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16275");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(25);
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Duration duration3 = org.joda.time.Duration.ZERO;
        long long4 = duration3.getStandardDays();
        org.joda.time.Hours hours5 = duration3.toStandardHours();
        boolean boolean6 = hours1.isLessThan(hours5);
        org.joda.time.Hours hours8 = hours1.dividedBy((int) (byte) 10);
        org.joda.time.Duration duration9 = org.joda.time.Duration.ZERO;
        long long10 = duration9.getStandardDays();
        org.joda.time.Hours hours11 = duration9.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType12 = hours11.getFieldType();
        org.joda.time.Hours hours13 = null;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.Period period16 = new org.joda.time.Period((long) '4');
        org.joda.time.Period period18 = period16.withHours(32);
        org.joda.time.Hours hours19 = period16.toStandardHours();
        org.joda.time.Hours hours20 = hours19.negated();
        boolean boolean21 = hours14.isGreaterThan(hours19);
        org.joda.time.Hours hours22 = org.joda.time.Hours.FOUR;
        org.joda.time.Duration duration23 = hours22.toStandardDuration();
        org.joda.time.Hours hours25 = hours22.dividedBy((int) ' ');
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((int) (short) -1, (int) '#', (int) ' ', 100);
        org.joda.time.DurationFieldType durationFieldType31 = org.joda.time.DurationFieldType.days();
        int int32 = mutablePeriod30.get(durationFieldType31);
        org.joda.time.Hours hours33 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) mutablePeriod30);
        org.joda.time.Hours hours35 = hours33.dividedBy((int) (short) -1);
        org.joda.time.Hours hours37 = hours35.plus((int) (short) 10);
        boolean boolean38 = hours25.isGreaterThan(hours37);
        org.joda.time.Hours hours39 = hours14.plus(hours37);
        org.joda.time.Hours hours41 = hours14.minus(13);
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((int) (short) -1, (int) '#', (int) ' ', 100);
        org.joda.time.DurationFieldType durationFieldType47 = org.joda.time.DurationFieldType.days();
        int int48 = mutablePeriod46.get(durationFieldType47);
        org.joda.time.Hours hours49 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) mutablePeriod46);
        org.joda.time.Hours hours51 = hours49.dividedBy(3);
        org.joda.time.Hours hours52 = hours51.negated();
        org.joda.time.Hours hours54 = hours52.plus(13);
        org.joda.time.Hours hours56 = hours52.minus((int) (byte) -1);
        org.joda.time.Hours hours58 = hours52.minus(25);
        java.lang.String str59 = hours58.toString();
        org.joda.time.Hours hours60 = hours14.minus(hours58);
        boolean boolean61 = hours8.isLessThan(hours58);
        org.joda.time.Duration duration62 = hours58.toStandardDuration();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "PT-25H" + "'", str59, "PT-25H");
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(duration62);
    }

    @Test
    public void test16276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16276");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) -1, (int) '#', (int) ' ', 100);
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.days();
        int int6 = mutablePeriod4.get(durationFieldType5);
        org.joda.time.Hours hours7 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) mutablePeriod4);
        org.joda.time.Hours hours9 = hours7.dividedBy((int) (short) -1);
        org.joda.time.Hours hours11 = hours9.plus((int) (short) 10);
        org.joda.time.Hours hours13 = hours9.dividedBy((int) '4');
        org.joda.time.Hours hours14 = hours13.negated();
        java.lang.String str15 = hours14.toString();
        org.joda.time.Duration duration16 = hours14.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = duration16.toPeriodFrom(readableInstant17);
        long long19 = duration16.getStandardMinutes();
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT0H" + "'", str15, "PT0H");
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
    }

    @Test
    public void test16277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16277");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        java.util.Locale locale3 = periodFormatter2.getLocale();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds7 = duration6.toStandardSeconds();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds10 = duration9.toStandardSeconds();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType14 = periodType13.withMinutesRemoved();
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant12, periodType13);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration9);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period18 = duration9.toPeriod(periodType17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(readableInstant20, readableDuration21);
        mutablePeriod22.setHours((int) (short) 100);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology27 = null;
        mutablePeriod22.setPeriod((org.joda.time.ReadableDuration) duration26, chronology27);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType30 = periodType29.withWeeksRemoved();
        org.joda.time.PeriodType periodType31 = periodType30.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(readableInstant19, (org.joda.time.ReadableDuration) duration26, periodType30);
        org.joda.time.Period period33 = duration9.toPeriod(periodType30);
        org.joda.time.format.PeriodFormatter periodFormatter34 = periodFormatter2.withParseType(periodType30);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType37 = periodType36.withMonthsRemoved();
        org.joda.time.PeriodType periodType38 = periodType37.withMinutesRemoved();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((long) (short) 0, periodType37, chronology39);
        org.joda.time.PeriodType periodType41 = periodType37.withMinutesRemoved();
        org.joda.time.PeriodType periodType42 = periodType41.withMinutesRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter43 = periodFormatter2.withParseType(periodType42);
        java.util.Locale locale44 = null;
        org.joda.time.format.PeriodFormatter periodFormatter45 = periodFormatter43.withLocale(locale44);
        org.joda.time.PeriodType periodType46 = periodFormatter43.getParseType();
        org.junit.Assert.assertNull(locale3);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(periodFormatter34);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodFormatter43);
        org.junit.Assert.assertNotNull(periodFormatter45);
        org.junit.Assert.assertNotNull(periodType46);
    }

    @Test
    public void test16278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16278");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.THREE;
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        boolean boolean3 = hours0.isGreaterThan(hours1);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) (byte) 10, (long) '#', periodType6);
        int int8 = period7.getMillis();
        org.joda.time.Period period10 = period7.plusYears(13);
        org.joda.time.Period period11 = period10.negated();
        org.joda.time.Period period13 = period10.minusMonths((-12));
        boolean boolean14 = hours0.equals((java.lang.Object) period13);
        java.lang.String str15 = hours0.toString();
        org.joda.time.Hours hours17 = hours0.plus((int) '#');
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 25 + "'", int8 == 25);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT7H" + "'", str15, "PT7H");
        org.junit.Assert.assertNotNull(hours17);
    }

    @Test
    public void test16279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16279");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType1 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.ZERO;
        boolean boolean6 = minutes4.isLessThan(minutes5);
        boolean boolean7 = minutes0.isLessThan(minutes4);
        org.joda.time.Duration duration8 = minutes0.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType18 = periodType17.withWeeksRemoved();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration16.toPeriod(periodType17, chronology19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType23 = periodType22.withMonthsRemoved();
        org.joda.time.Period period24 = duration16.toPeriodTo(readableInstant21, periodType23);
        org.joda.time.Period period25 = duration16.toPeriod();
        org.joda.time.Duration duration26 = duration12.plus((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration28 = duration8.withDurationAdded((org.joda.time.ReadableDuration) duration16, 25);
        org.joda.time.Period period29 = duration8.toPeriod();
        java.lang.String str30 = duration8.toString();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((int) (byte) -1, 60, 2, (int) (short) 10);
        mutablePeriod35.setPeriod(10, (-13), (-20), 74, 416, 23, (-97), (-31));
        boolean boolean45 = duration8.equals((java.lang.Object) mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT0S" + "'", str30, "PT0S");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test16280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16280");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Period period3 = period1.plusYears((int) ' ');
        org.joda.time.Period period5 = period1.plusDays((int) (byte) -1);
        java.lang.String str6 = period5.toString();
        org.joda.time.Period period8 = period5.minusWeeks((-1));
        int int9 = period5.getMonths();
        org.joda.time.Period period11 = period5.minusMinutes(20);
        org.joda.time.Period period13 = period5.plusDays(27);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType15 = period13.getFieldType((-59));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-1DT1M" + "'", str6, "P-1DT1M");
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test16281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16281");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("PT35H9.010S");
        org.joda.time.ReadableDuration readableDuration2 = null;
        mutablePeriod1.setPeriod(readableDuration2);
        org.junit.Assert.assertNotNull(mutablePeriod1);
    }

    @Test
    public void test16282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16282");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.Period period5 = duration4.toPeriod();
        long long6 = duration4.getStandardSeconds();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds9 = duration8.toStandardSeconds();
        java.lang.String str10 = seconds9.toString();
        org.joda.time.PeriodType periodType11 = seconds9.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(readableInstant2, (org.joda.time.ReadableDuration) duration4, periodType11);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((long) 1, 540000L, periodType11, chronology13);
        java.lang.String str15 = periodType11.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType17 = periodType11.getFieldType(27);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 27");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-60L) + "'", long6 == (-60L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT60S" + "'", str10, "PT60S");
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PeriodType[Seconds]" + "'", str15, "PeriodType[Seconds]");
    }

    @Test
    public void test16283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16283");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableDuration1);
        mutablePeriod2.setHours((int) (short) 100);
        org.joda.time.Duration duration5 = org.joda.time.Duration.ZERO;
        long long6 = duration5.getStandardDays();
        org.joda.time.Hours hours7 = duration5.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType8 = hours7.getFieldType();
        mutablePeriod2.add(durationFieldType8, (-1));
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(readableInstant15, readableDuration16);
        mutablePeriod17.setPeriod((long) ' ', (long) 52);
        mutablePeriod17.addDays(100);
        org.joda.time.PeriodType periodType23 = mutablePeriod17.getPeriodType();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period(10L, (long) 13, periodType23, chronology24);
        org.joda.time.Period period26 = new org.joda.time.Period(540000L, (long) (short) 100, periodType23);
        org.joda.time.PeriodType periodType27 = periodType23.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType29 = periodType23.getFieldType(0);
        mutablePeriod2.set(durationFieldType29, (-32));
        org.joda.time.Period period32 = mutablePeriod2.toPeriod();
        mutablePeriod2.setPeriod(7L);
        mutablePeriod2.addHours((-112));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(period32);
    }

    @Test
    public void test16284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16284");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeksIn(readableInterval2);
        boolean boolean4 = weeks1.isLessThan(weeks3);
        org.joda.time.Weeks weeks5 = weeks1.negated();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((java.lang.Object) weeks1, chronology6);
        org.joda.time.Weeks weeks9 = weeks1.multipliedBy((int) (byte) 1);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeksIn(readableInterval10);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeksIn(readableInterval12);
        boolean boolean14 = weeks11.isLessThan(weeks13);
        org.joda.time.Weeks weeks15 = weeks11.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks17 = weeks1.minus(weeks15);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.weeksIn(readableInterval18);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeksIn(readableInterval20);
        boolean boolean22 = weeks19.isLessThan(weeks21);
        org.joda.time.Weeks weeks24 = weeks21.minus((int) (short) -1);
        org.joda.time.Weeks weeks26 = weeks24.multipliedBy(0);
        org.joda.time.Weeks weeks27 = null;
        boolean boolean28 = weeks24.isLessThan(weeks27);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.weeksIn(readableInterval29);
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.weeksIn(readableInterval31);
        boolean boolean33 = weeks30.isLessThan(weeks32);
        org.joda.time.Weeks weeks34 = weeks30.negated();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((java.lang.Object) weeks30, chronology35);
        int[] intArray37 = period36.getValues();
        org.joda.time.DurationFieldType[] durationFieldTypeArray38 = period36.getFieldTypes();
        boolean boolean39 = weeks24.equals((java.lang.Object) durationFieldTypeArray38);
        org.joda.time.Weeks weeks40 = weeks17.minus(weeks24);
        org.joda.time.PeriodType periodType41 = weeks17.getPeriodType();
        org.joda.time.PeriodType periodType42 = periodType41.withSecondsRemoved();
        int int43 = periodType41.size();
        org.joda.time.PeriodType periodType44 = periodType41.withHoursRemoved();
        org.joda.time.PeriodType periodType45 = periodType41.withYearsRemoved();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0]");
        org.junit.Assert.assertNotNull(durationFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType45);
    }

    @Test
    public void test16285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16285");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) (short) 100);
        org.joda.time.Duration duration3 = duration1.plus((long) (byte) 1);
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.Duration duration5 = duration3.plus(readableDuration4);
        org.joda.time.Days days9 = org.joda.time.Days.ZERO;
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((java.lang.Object) days9, periodType10, chronology11);
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((long) 52, periodType10);
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((long) (short) 1, (long) 100, periodType10);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration3.toPeriod(periodType10, chronology15);
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.Period period18 = duration3.toPeriod(periodType17);
        org.joda.time.Period period20 = period18.minusMinutes((int) '4');
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
    }

    @Test
    public void test16286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16286");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks2 = weeks0.dividedBy(52);
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.weeks();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DurationField durationField5 = durationFieldType3.getField(chronology4);
        boolean boolean6 = weeks0.isSupported(durationFieldType3);
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.ONE;
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeksIn(readableInterval10);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeksIn(readableInterval12);
        boolean boolean14 = weeks11.isLessThan(weeks13);
        org.joda.time.Weeks weeks15 = weeks11.negated();
        org.joda.time.Weeks weeks17 = weeks15.minus((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType18 = weeks17.getFieldType();
        boolean boolean19 = weeks9.isGreaterThan(weeks17);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeksIn(readableInterval20);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.weeksIn(readableInterval22);
        boolean boolean24 = weeks21.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.minus((int) (short) -1);
        org.joda.time.Weeks weeks28 = weeks26.multipliedBy(0);
        org.joda.time.Weeks weeks29 = weeks17.minus(weeks26);
        boolean boolean30 = weeks0.isLessThan(weeks26);
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.weeksIn(readableInterval31);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.weeksIn(readableInterval33);
        boolean boolean35 = weeks32.isLessThan(weeks34);
        org.joda.time.Weeks weeks36 = weeks32.negated();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((java.lang.Object) weeks32, chronology37);
        org.joda.time.Weeks weeks40 = weeks32.multipliedBy((int) (byte) 1);
        org.joda.time.Weeks weeks42 = weeks40.multipliedBy((int) (short) -1);
        org.joda.time.PeriodType periodType43 = weeks42.getPeriodType();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.weeksIn(readableInterval44);
        org.joda.time.ReadableInterval readableInterval46 = null;
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.weeksIn(readableInterval46);
        boolean boolean48 = weeks45.isLessThan(weeks47);
        org.joda.time.Weeks weeks49 = weeks45.negated();
        org.joda.time.Weeks weeks51 = weeks49.minus((int) (byte) 100);
        org.joda.time.Weeks weeks53 = weeks49.minus((int) (short) 10);
        boolean boolean54 = weeks42.isLessThan(weeks53);
        org.joda.time.DurationFieldType durationFieldType55 = weeks42.getFieldType();
        org.joda.time.Weeks weeks56 = weeks26.plus(weeks42);
        org.joda.time.DurationFieldType durationFieldType57 = weeks56.getFieldType();
        java.lang.String str58 = weeks56.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(durationField5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "P1W" + "'", str58, "P1W");
    }

    @Test
    public void test16287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16287");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) -1, (int) '#', (int) ' ', 100);
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.days();
        int int6 = mutablePeriod4.get(durationFieldType5);
        org.joda.time.Hours hours7 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) mutablePeriod4);
        org.joda.time.Hours hours9 = hours7.dividedBy((int) (short) -1);
        org.joda.time.Hours hours11 = hours9.plus((int) (short) 10);
        org.joda.time.Hours hours12 = hours9.negated();
        org.joda.time.Duration duration13 = hours9.toStandardDuration();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration13.toPeriod(chronology14);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test16288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16288");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        java.lang.String str4 = periodType2.toString();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 10, periodType2);
        mutablePeriod5.setPeriod((long) (-160));
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((-1L));
        org.joda.time.Duration duration11 = duration9.withMillis(0L);
        org.joda.time.Duration duration12 = duration9.toDuration();
        org.joda.time.Chronology chronology13 = null;
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration9, chronology13);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod5.addHours((-59));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'hours'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PeriodType[Minutes]" + "'", str4, "PeriodType[Minutes]");
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration12);
    }

    @Test
    public void test16289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16289");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds6 = duration5.toStandardSeconds();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType10 = periodType9.withMinutesRemoved();
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant8, periodType9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(readableInstant12, readableDuration13);
        mutablePeriod14.setHours((int) (short) 100);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology19 = null;
        mutablePeriod14.setPeriod((org.joda.time.ReadableDuration) duration18, chronology19);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds23 = duration22.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType24 = seconds23.getFieldType();
        mutablePeriod14.add(durationFieldType24, (int) (short) 0);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(readableInstant27, readableDuration28);
        mutablePeriod29.setHours((int) (short) 100);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology34 = null;
        mutablePeriod29.setPeriod((org.joda.time.ReadableDuration) duration33, chronology34);
        org.joda.time.Chronology chronology36 = null;
        mutablePeriod14.setPeriod((org.joda.time.ReadableDuration) duration33, chronology36);
        int int38 = duration5.compareTo((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration39 = duration33.toDuration();
        org.joda.time.Duration duration40 = duration39.toDuration();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration39, readableInstant41);
        org.joda.time.Duration duration44 = duration39.minus((long) (-1));
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardSeconds((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.PeriodType periodType52 = periodType51.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration49, readableInstant50, periodType51);
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod((-7L), periodType51, chronology54);
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period(0L, (long) 60, periodType51, chronology56);
        org.joda.time.PeriodType periodType58 = periodType51.withSecondsRemoved();
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration39, periodType51);
        org.joda.time.format.PeriodPrinter periodPrinter62 = null;
        org.joda.time.format.PeriodParser periodParser63 = null;
        org.joda.time.format.PeriodFormatter periodFormatter64 = new org.joda.time.format.PeriodFormatter(periodPrinter62, periodParser63);
        org.joda.time.format.PeriodParser periodParser65 = periodFormatter64.getParser();
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds68 = duration67.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType69 = seconds68.getFieldType();
        org.joda.time.Seconds seconds71 = seconds68.plus(25);
        org.joda.time.Seconds seconds72 = seconds68.negated();
        org.joda.time.PeriodType periodType73 = seconds72.getPeriodType();
        org.joda.time.format.PeriodFormatter periodFormatter74 = periodFormatter64.withParseType(periodType73);
        org.joda.time.PeriodType periodType75 = periodType73.withYearsRemoved();
        org.joda.time.PeriodType periodType76 = periodType75.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod(6000L, 0L, periodType76);
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.Period period79 = duration39.toPeriod(periodType76, chronology78);
        org.joda.time.Duration duration81 = new org.joda.time.Duration(8384460000L);
        int int82 = duration39.compareTo((org.joda.time.ReadableDuration) duration81);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNull(periodParser65);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(periodFormatter74);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
    }

    @Test
    public void test16290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16290");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) -1, (int) '#', (int) ' ', 100);
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.days();
        int int6 = mutablePeriod4.get(durationFieldType5);
        org.joda.time.Hours hours7 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) mutablePeriod4);
        org.joda.time.Hours hours9 = hours7.dividedBy((int) (short) -1);
        org.joda.time.Hours hours11 = hours9.plus((int) (short) 10);
        org.joda.time.Hours hours12 = hours9.negated();
        org.joda.time.Duration duration13 = hours9.toStandardDuration();
        org.joda.time.Hours hours15 = org.joda.time.Hours.parseHours("PT0H");
        boolean boolean16 = hours9.isGreaterThan(hours15);
        org.joda.time.Hours hours17 = null;
        org.joda.time.Hours hours18 = hours9.minus(hours17);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours18);
    }

    @Test
    public void test16291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16291");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 60, (long) 13, chronology2);
        org.joda.time.Period period5 = period3.plusMonths((-2147483648));
        org.joda.time.Period period7 = period3.withDays(1);
        org.joda.time.Period period9 = period7.plusMinutes(27);
        int int10 = period7.getWeeks();
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test16292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16292");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(59, 6, (int) (short) -1, (-7), 40, (int) 'a', (int) (byte) 0, 1);
        java.lang.String str9 = mutablePeriod8.toString();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((long) '4', chronology11);
        mutablePeriod12.setHours((int) (byte) 1);
        mutablePeriod12.setPeriod((long) (short) 100, (long) '4');
        org.joda.time.MutablePeriod mutablePeriod18 = mutablePeriod12.copy();
        mutablePeriod12.setPeriod((long) 25);
        int int21 = mutablePeriod12.getMillis();
        org.joda.time.Period period23 = org.joda.time.Period.days(25);
        org.joda.time.Hours hours24 = org.joda.time.Hours.THREE;
        org.joda.time.DurationFieldType durationFieldType25 = hours24.getFieldType();
        org.joda.time.Period period27 = period23.withFieldAdded(durationFieldType25, (-32));
        java.lang.String str28 = durationFieldType25.toString();
        int int29 = mutablePeriod12.indexOf(durationFieldType25);
        mutablePeriod8.set(durationFieldType25, 0);
        java.lang.String str32 = durationFieldType25.getName();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P59Y6M-1W-7DT40H97M0.001S" + "'", str9, "P59Y6M-1W-7DT40H97M0.001S");
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 25 + "'", int21 == 25);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hours" + "'", str28, "hours");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hours" + "'", str32, "hours");
    }

    @Test
    public void test16293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16293");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.Period period4 = period1.withSeconds((int) ' ');
        java.lang.String str5 = period1.toString();
        org.joda.time.Period period7 = period1.withYears(0);
        org.joda.time.Period period9 = period1.withYears((int) (byte) -1);
        org.joda.time.Period period11 = period9.plusMinutes(60);
        int[] intArray12 = period9.getValues();
        org.joda.time.Period period13 = period9.toPeriod();
        org.joda.time.Period period15 = period13.plusDays(40);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT1M" + "'", str5, "PT1M");
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0, 0, 0, 0, 1, 0, 0]");
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test16294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16294");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodParser periodParser3 = periodFormatter2.getParser();
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter2.getPrinter();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter6.withLocale(locale7);
        java.util.Locale locale9 = null;
        org.joda.time.format.PeriodFormatter periodFormatter10 = periodFormatter8.withLocale(locale9);
        java.util.Locale locale11 = null;
        org.joda.time.format.PeriodFormatter periodFormatter12 = periodFormatter10.withLocale(locale11);
        org.joda.time.PeriodType periodType13 = periodFormatter10.getParseType();
        java.util.Locale locale14 = null;
        org.joda.time.format.PeriodFormatter periodFormatter15 = periodFormatter10.withLocale(locale14);
        org.joda.time.format.PeriodParser periodParser16 = periodFormatter10.getParser();
        org.joda.time.format.PeriodParser periodParser17 = periodFormatter10.getParser();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period19 = periodFormatter10.parsePeriod("DaysNoDays");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodParser3);
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNotNull(periodFormatter10);
        org.junit.Assert.assertNotNull(periodFormatter12);
        org.junit.Assert.assertNull(periodType13);
        org.junit.Assert.assertNotNull(periodFormatter15);
        org.junit.Assert.assertNull(periodParser16);
        org.junit.Assert.assertNull(periodParser17);
    }

    @Test
    public void test16295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16295");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 671);
        org.joda.time.Duration duration3 = duration1.minus(480000L);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeksIn(readableInterval4);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeksIn(readableInterval6);
        boolean boolean8 = weeks5.isLessThan(weeks7);
        org.joda.time.Weeks weeks9 = weeks5.negated();
        org.joda.time.Weeks weeks11 = weeks9.minus((int) (byte) 100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeksIn(readableInterval12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeksIn(readableInterval14);
        boolean boolean16 = weeks13.isLessThan(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.minus((int) (short) -1);
        org.joda.time.Weeks weeks20 = weeks18.multipliedBy(0);
        boolean boolean21 = weeks11.isGreaterThan(weeks20);
        org.joda.time.Period period26 = new org.joda.time.Period(0, (int) '4', (int) (short) 100, (int) (byte) -1);
        org.joda.time.Period period28 = period26.withDays((int) 'a');
        org.joda.time.Weeks weeks29 = period28.toStandardWeeks();
        int int30 = weeks29.getWeeks();
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.weeksIn(readableInterval31);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.weeksIn(readableInterval33);
        boolean boolean35 = weeks32.isLessThan(weeks34);
        org.joda.time.Weeks weeks37 = weeks34.minus((int) (short) -1);
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks40 = weeks37.multipliedBy(0);
        boolean boolean41 = weeks29.isGreaterThan(weeks40);
        org.joda.time.Weeks weeks42 = weeks20.minus(weeks29);
        org.joda.time.ReadableInterval readableInterval43 = null;
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.weeksIn(readableInterval43);
        org.joda.time.Weeks weeks46 = weeks44.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks47 = weeks29.plus(weeks46);
        org.joda.time.Weeks weeks49 = weeks46.multipliedBy((int) 'a');
        org.joda.time.Duration duration50 = weeks49.toStandardDuration();
        org.joda.time.Duration duration52 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration50, (-35));
        org.joda.time.Duration duration55 = duration50.withDurationAdded((long) 671, 2147483647);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 13 + "'", int30 == 13);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration55);
    }

    @Test
    public void test16296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16296");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (-302));
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.PeriodType periodType4 = periodType3.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration2, periodType3);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
    }

    @Test
    public void test16297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16297");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days1 = org.joda.time.Days.parseDays("YearDayTime");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"YearDayTime\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test16298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16298");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (byte) -1);
        org.joda.time.Period period3 = org.joda.time.Period.seconds((int) (short) 100);
        org.joda.time.Seconds seconds4 = period3.toStandardSeconds();
        org.joda.time.Seconds seconds6 = seconds4.minus(1);
        org.joda.time.Period period7 = new org.joda.time.Period((java.lang.Object) seconds4);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration9 = period7.toDurationFrom(readableInstant8);
        int int10 = duration1.compareTo((org.joda.time.ReadableDuration) duration9);
        long long11 = duration1.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3600000L) + "'", long11 == (-3600000L));
    }

    @Test
    public void test16299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16299");
        org.joda.time.Period period2 = org.joda.time.Period.months(25);
        org.joda.time.PeriodType periodType3 = period2.getPeriodType();
        org.joda.time.PeriodType periodType4 = periodType3.withHoursRemoved();
        org.joda.time.PeriodType periodType5 = periodType3.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType5.withWeeksRemoved();
        java.lang.String str7 = periodType6.toString();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((-115200000L), periodType6, chronology8);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds12 = duration11.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType13 = seconds12.getFieldType();
        org.joda.time.Seconds seconds15 = seconds12.plus(25);
        org.joda.time.Seconds seconds16 = seconds12.negated();
        org.joda.time.Seconds seconds18 = seconds12.dividedBy(10);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds21 = duration20.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType22 = seconds21.getFieldType();
        org.joda.time.Seconds seconds24 = seconds21.plus(25);
        org.joda.time.Seconds seconds25 = seconds18.plus(seconds21);
        org.joda.time.Seconds seconds27 = seconds25.plus((int) (byte) 1);
        boolean boolean28 = mutablePeriod9.equals((java.lang.Object) (byte) 1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PeriodType[StandardNoHoursNoWeeks]" + "'", str7, "PeriodType[StandardNoHoursNoWeeks]");
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test16300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16300");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodParser periodParser3 = periodFormatter2.getParser();
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter2.getPrinter();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter6.withLocale(locale7);
        java.util.Locale locale9 = null;
        org.joda.time.format.PeriodFormatter periodFormatter10 = periodFormatter8.withLocale(locale9);
        boolean boolean11 = periodFormatter10.isPrinter();
        boolean boolean12 = periodFormatter10.isPrinter();
        java.util.Locale locale13 = null;
        org.joda.time.format.PeriodFormatter periodFormatter14 = periodFormatter10.withLocale(locale13);
        java.lang.StringBuffer stringBuffer15 = null;
        org.joda.time.Period period17 = org.joda.time.Period.months((int) (short) -1);
        org.joda.time.Period period19 = period17.withMillis((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter14.printTo(stringBuffer15, (org.joda.time.ReadablePeriod) period17);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodParser3);
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNotNull(periodFormatter10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(periodFormatter14);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
    }

    @Test
    public void test16301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16301");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Period period3 = org.joda.time.Period.months(25);
        org.joda.time.PeriodType periodType4 = period3.getPeriodType();
        org.joda.time.PeriodType periodType5 = periodType4.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType4.withHoursRemoved();
        org.joda.time.PeriodType periodType7 = periodType6.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType6);
        int int9 = mutablePeriod8.getMinutes();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test16302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16302");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) (byte) 10, (long) '#', periodType2);
        org.joda.time.DurationFieldType durationFieldType4 = org.joda.time.DurationFieldType.weekyears();
        int int5 = period3.get(durationFieldType4);
        org.joda.time.Period period7 = period3.withMillis((int) (byte) -1);
        org.joda.time.Period period9 = period3.plusMinutes(52);
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType13 = periodType12.withHoursRemoved();
        org.joda.time.PeriodType periodType14 = periodType13.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(readableDuration10, readableInstant11, periodType13);
        org.joda.time.Period period16 = period3.normalizedStandard(periodType13);
        org.joda.time.Period period18 = period3.minusHours((int) (byte) -1);
        org.joda.time.Period period20 = period3.withHours((-97));
        org.joda.time.Period period22 = period20.plusMillis((-58));
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
    }

    @Test
    public void test16303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16303");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(3L, (long) 59, chronology2);
    }

    @Test
    public void test16304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16304");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((-3600000L));
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(readableInstant3, readableDuration4);
        mutablePeriod5.setHours((int) (short) 100);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration9, chronology10);
        org.joda.time.Period period12 = duration9.toPeriod();
        int int13 = duration2.compareTo((org.joda.time.ReadableDuration) duration9);
        long long14 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((long) (short) 1, periodType18, chronology19);
        org.joda.time.PeriodType periodType21 = mutablePeriod20.getPeriodType();
        org.joda.time.PeriodType periodType22 = periodType21.withMillisRemoved();
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant15, readableInstant16, periodType22);
        org.joda.time.PeriodType periodType24 = period23.getPeriodType();
        org.joda.time.PeriodType periodType25 = periodType24.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration9, periodType25);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType25);
    }

    @Test
    public void test16305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16305");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PeriodType[Hours]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"PeriodType[Hours]\" is malformed at \"eriodType[Hours]\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test16306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16306");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardSeconds((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.PeriodType periodType5 = periodType4.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant3, periodType4);
        org.joda.time.Duration duration7 = duration2.toDuration();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        java.lang.Object obj10 = null;
        org.joda.time.Duration duration11 = new org.joda.time.Duration(obj10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration14 = duration11.toDuration();
        org.joda.time.Duration duration15 = duration7.plus((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration11);
        org.joda.time.Period period18 = period16.withMinutes(15120008);
        org.joda.time.Period period20 = period16.plusWeeks((-31));
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
    }

    @Test
    public void test16307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16307");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds4 = duration3.toStandardSeconds();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds7 = duration6.toStandardSeconds();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds11 = duration10.toStandardSeconds();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds14 = duration13.toStandardSeconds();
        boolean boolean15 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Period period16 = duration10.toPeriod();
        boolean boolean17 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = duration6.toPeriodTo(readableInstant18);
        int int20 = period19.getMonths();
        org.joda.time.Period period22 = period19.minusMinutes(54);
        org.joda.time.Period period24 = period19.withSeconds((-2147483648));
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Duration duration26 = period19.toDurationTo(readableInstant25);
        org.joda.time.Period period27 = duration26.toPeriod();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType30 = periodType29.withWeeksRemoved();
        org.joda.time.PeriodType periodType31 = periodType30.withDaysRemoved();
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.TWO;
        org.joda.time.Duration duration33 = seconds32.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType34 = seconds32.getFieldType();
        org.joda.time.Chronology chronology35 = null;
        boolean boolean36 = durationFieldType34.isSupported(chronology35);
        int int37 = periodType31.indexOf(durationFieldType34);
        org.joda.time.PeriodType periodType38 = periodType31.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration26, readableInstant28, periodType31);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType31);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(periodType38);
    }

    @Test
    public void test16308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16308");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 25);
        org.joda.time.Minutes minutes2 = duration1.toStandardMinutes();
        org.joda.time.Minutes minutes3 = minutes2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = minutes2.getFieldType(0);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.DurationField durationField7 = durationFieldType5.getField(chronology6);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(durationField7);
    }

    @Test
    public void test16309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16309");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType1 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.ZERO;
        boolean boolean6 = minutes4.isLessThan(minutes5);
        boolean boolean7 = minutes0.isLessThan(minutes4);
        org.joda.time.Minutes minutes9 = minutes4.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = minutes10.getFieldType();
        org.joda.time.PeriodType periodType12 = minutes10.getPeriodType();
        org.joda.time.Minutes minutes13 = minutes9.plus(minutes10);
        org.joda.time.PeriodType periodType14 = minutes9.getPeriodType();
        org.joda.time.PeriodType periodType15 = minutes9.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType16 = minutes9.getFieldType();
        org.joda.time.Minutes minutes17 = minutes9.negated();
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy((-86400));
        org.joda.time.Minutes minutes20 = minutes19.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
    }

    @Test
    public void test16310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16310");
        org.joda.time.Period period1 = org.joda.time.Period.millis(0);
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = period1.withPeriodType(periodType2);
        org.joda.time.Period period5 = new org.joda.time.Period((long) '4');
        org.joda.time.Period period7 = period5.withHours(32);
        org.joda.time.DurationFieldType durationFieldType8 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Chronology chronology9 = null;
        boolean boolean10 = durationFieldType8.isSupported(chronology9);
        boolean boolean11 = period5.isSupported(durationFieldType8);
        org.joda.time.Period period13 = period3.withFieldAdded(durationFieldType8, 7);
        org.joda.time.Period period15 = period3.minusYears(214748364);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test16311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16311");
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds10 = duration9.toStandardSeconds();
        org.joda.time.Seconds seconds12 = seconds10.dividedBy(32);
        org.joda.time.Seconds seconds13 = seconds12.negated();
        org.joda.time.Seconds seconds15 = seconds12.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds17 = seconds12.plus(seconds16);
        org.joda.time.PeriodType periodType18 = seconds12.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period19 = new org.joda.time.Period((-141), (-2147483638), (-97), (-29), 0, (-39648), 97, 74, periodType18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
    }

    @Test
    public void test16312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16312");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (byte) 0, 13, 8, 10);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds7 = duration6.toStandardSeconds();
        org.joda.time.Seconds seconds9 = seconds7.dividedBy(32);
        org.joda.time.Duration duration10 = seconds9.toStandardDuration();
        org.joda.time.Seconds seconds12 = seconds9.minus((-2147483638));
        org.joda.time.Seconds seconds14 = seconds9.multipliedBy(6);
        boolean boolean15 = period4.equals((java.lang.Object) seconds14);
        java.lang.Class<?> wildcardClass16 = seconds14.getClass();
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test16313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16313");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((-2419200000L));
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test16314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16314");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds2 = duration1.toStandardSeconds();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds5 = duration4.toStandardSeconds();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration1.minus((long) 3);
        org.joda.time.Duration duration9 = duration1.toDuration();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Interval interval11 = duration9.toIntervalFrom(readableInstant10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds15 = duration14.toStandardSeconds();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds18 = duration17.toStandardSeconds();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Period period20 = duration14.toPeriod();
        org.joda.time.Period period21 = period20.negated();
        org.joda.time.Seconds seconds22 = period21.toStandardSeconds();
        org.joda.time.Period period23 = period21.negated();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Duration duration25 = period21.toDurationTo(readableInstant24);
        org.joda.time.DurationFieldType[] durationFieldTypeArray26 = period21.getFieldTypes();
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.forFields(durationFieldTypeArray26);
        org.joda.time.PeriodType periodType28 = periodType27.withDaysRemoved();
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant12, periodType27);
        org.joda.time.Seconds seconds30 = duration9.toStandardSeconds();
        org.joda.time.MutablePeriod mutablePeriod31 = seconds30.toMutablePeriod();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds35 = duration34.toStandardSeconds();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds38 = duration37.toStandardSeconds();
        boolean boolean39 = duration34.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType42 = periodType41.withMinutesRemoved();
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant40, periodType41);
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration45 = duration37.toDuration();
        org.joda.time.Chronology chronology46 = null;
        mutablePeriod31.setPeriod((org.joda.time.ReadableDuration) duration45, chronology46);
        org.joda.time.Duration duration50 = duration45.withDurationAdded(41L, 10);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Interval interval52 = duration50.toIntervalFrom(readableInstant51);
        long long53 = duration50.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(durationFieldTypeArray26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 60410L + "'", long53 == 60410L);
    }

    @Test
    public void test16315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16315");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType1 = minutes0.getPeriodType();
        int int2 = minutes0.getMinutes();
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = minutes4.getFieldType();
        java.lang.String str6 = minutes4.toString();
        boolean boolean7 = minutes0.isLessThan(minutes4);
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((long) 25);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod9);
        org.joda.time.Minutes minutes12 = minutes10.minus((int) '4');
        org.joda.time.Minutes minutes13 = minutes0.plus(minutes12);
        java.lang.String str14 = minutes13.toString();
        org.joda.time.Minutes minutes16 = minutes13.dividedBy(32);
        org.joda.time.Duration duration17 = minutes13.toStandardDuration();
        int int18 = minutes13.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT0M" + "'", str3, "PT0M");
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT-2147483648M" + "'", str6, "PT-2147483648M");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT-52M" + "'", str14, "PT-52M");
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-52) + "'", int18 == (-52));
    }

    @Test
    public void test16316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16316");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Period period3 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days4 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period3);
        org.joda.time.Period period6 = period3.withSeconds((int) ' ');
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.millis();
        org.joda.time.Period period8 = period6.normalizedStandard(periodType7);
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType7);
        org.joda.time.DurationFieldType[] durationFieldTypeArray10 = mutablePeriod9.getFieldTypes();
        org.joda.time.MutablePeriod mutablePeriod11 = mutablePeriod9.copy();
        org.joda.time.DurationFieldType[] durationFieldTypeArray12 = mutablePeriod11.getFieldTypes();
        org.joda.time.DurationFieldType[] durationFieldTypeArray13 = mutablePeriod11.getFieldTypes();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(durationFieldTypeArray10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(durationFieldTypeArray12);
        org.junit.Assert.assertNotNull(durationFieldTypeArray13);
    }

    @Test
    public void test16317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16317");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType3 = periodType2.withWeeksRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.Period period5 = duration1.toPeriod(periodType2, chronology4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType8 = periodType7.withMonthsRemoved();
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant6, periodType8);
        org.joda.time.Duration duration10 = duration1.toDuration();
        org.joda.time.Period period12 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days13 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period12);
        org.joda.time.PeriodType periodType14 = days13.getPeriodType();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(readableInstant15, readableDuration16);
        mutablePeriod17.setHours((int) (short) 100);
        boolean boolean20 = periodType14.equals((java.lang.Object) mutablePeriod17);
        org.joda.time.Duration duration21 = org.joda.time.Duration.ZERO;
        long long22 = duration21.getStandardDays();
        mutablePeriod17.add((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType26 = periodType25.withWeeksRemoved();
        org.joda.time.PeriodType periodType27 = periodType26.withDaysRemoved();
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant24, periodType26);
        boolean boolean29 = duration1.isEqual((org.joda.time.ReadableDuration) duration21);
        long long30 = duration1.getStandardSeconds();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant31);
        org.joda.time.Duration duration34 = duration1.withMillis(172800000L);
        long long35 = duration1.getStandardDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-60L) + "'", long30 == (-60L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
    }

    @Test
    public void test16318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16318");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.ZERO;
        boolean boolean2 = minutes0.isLessThan(minutes1);
        org.joda.time.Minutes minutes4 = minutes1.multipliedBy((int) (short) 10);
        int int5 = minutes4.getMinutes();
        org.joda.time.Minutes minutes7 = minutes4.multipliedBy(2147483647);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(minutes7);
    }

    @Test
    public void test16319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16319");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((-13), 40, (int) ' ', 13);
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) -1, (int) '#', (int) ' ', 100);
        org.joda.time.DurationFieldType durationFieldType10 = org.joda.time.DurationFieldType.days();
        int int11 = mutablePeriod9.get(durationFieldType10);
        org.joda.time.Chronology chronology12 = null;
        boolean boolean13 = durationFieldType10.isSupported(chronology12);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.DurationField durationField15 = durationFieldType10.getField(chronology14);
        java.lang.String str16 = durationFieldType10.getName();
        boolean boolean17 = mutablePeriod4.isSupported(durationFieldType10);
        mutablePeriod4.setSeconds(6);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(durationField15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "days" + "'", str16, "days");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test16320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16320");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeksIn(readableInterval2);
        boolean boolean4 = weeks1.isLessThan(weeks3);
        org.joda.time.Weeks weeks6 = weeks3.minus((int) (short) -1);
        org.joda.time.Weeks weeks8 = weeks6.dividedBy(88500);
        org.joda.time.Weeks weeks9 = null;
        org.joda.time.Weeks weeks10 = weeks6.plus(weeks9);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
    }

    @Test
    public void test16321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16321");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.PeriodType periodType4 = periodType2.withYearsRemoved();
        org.joda.time.PeriodType periodType5 = periodType4.withDaysRemoved();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(16830730L, 41L, periodType4, chronology6);
        org.joda.time.PeriodType periodType8 = periodType4.withHoursRemoved();
        int int9 = periodType4.size();
        org.joda.time.PeriodType periodType10 = periodType4.withWeeksRemoved();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(periodType10);
    }

    @Test
    public void test16322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16322");
        org.joda.time.Hours hours0 = org.joda.time.Hours.FOUR;
        org.joda.time.Hours hours2 = hours0.minus(0);
        org.joda.time.Hours hours3 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours5 = org.joda.time.Hours.hours((int) (byte) -1);
        boolean boolean6 = hours3.isGreaterThan(hours5);
        boolean boolean7 = hours2.isLessThan(hours5);
        java.lang.String str8 = hours2.toString();
        org.joda.time.Hours hours10 = hours2.dividedBy((int) (short) 10);
        org.joda.time.PeriodType periodType11 = hours10.getPeriodType();
        org.joda.time.PeriodType periodType12 = periodType11.withMinutesRemoved();
        org.joda.time.PeriodType periodType13 = periodType12.withHoursRemoved();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT4H" + "'", str8, "PT4H");
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
    }

    @Test
    public void test16323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16323");
        org.joda.time.Period period4 = new org.joda.time.Period(160, 135, 60, (-2147483638));
        int int5 = period4.getDays();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test16324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16324");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ZERO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        java.lang.String str2 = seconds0.toString();
        org.joda.time.Seconds seconds4 = seconds0.plus((int) (short) 1);
        int int5 = seconds4.getSeconds();
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds9 = duration8.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType10 = seconds9.getFieldType();
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.parseSeconds("P0W");
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = seconds9.negated();
        java.lang.String str15 = seconds14.toString();
        org.joda.time.Seconds seconds16 = seconds14.negated();
        boolean boolean17 = seconds6.isLessThan(seconds16);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.seconds(100);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.TWO;
        org.joda.time.DurationFieldType durationFieldType21 = seconds20.getFieldType();
        boolean boolean22 = seconds19.isGreaterThan(seconds20);
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((long) 'a', (long) 0);
        mutablePeriod25.addYears((int) '4');
        org.joda.time.Chronology chronology29 = null;
        mutablePeriod25.add((long) 100, chronology29);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds33 = duration32.toStandardSeconds();
        java.lang.String str34 = seconds33.toString();
        org.joda.time.DurationFieldType durationFieldType35 = org.joda.time.DurationFieldType.days();
        boolean boolean36 = seconds33.isSupported(durationFieldType35);
        int int37 = mutablePeriod25.get(durationFieldType35);
        boolean boolean38 = seconds20.isSupported(durationFieldType35);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((java.lang.Object) seconds20, chronology39);
        boolean boolean41 = seconds6.isGreaterThan(seconds20);
        org.joda.time.DurationFieldType durationFieldType42 = seconds20.getFieldType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT0S" + "'", str2, "PT0S");
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT-60S" + "'", str15, "PT-60S");
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT60S" + "'", str34, "PT60S");
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(durationFieldType42);
    }

    @Test
    public void test16325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16325");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(readableInstant0, readableInstant1);
        org.joda.time.Period period4 = period2.withHours((int) (byte) 100);
        int int5 = period4.getMinutes();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration7 = period4.toDurationFrom(readableInstant6);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(duration7);
    }

    @Test
    public void test16326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16326");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Period period3 = period1.plusYears((int) ' ');
        org.joda.time.Period period5 = period3.minusYears((int) (short) 10);
        org.joda.time.Period period7 = period3.withMinutes((int) (short) 10);
        int int8 = period7.getWeeks();
        org.joda.time.Period period10 = period7.minusHours(2147483647);
        org.joda.time.Period period12 = period10.plusYears(100);
        org.joda.time.Period period14 = org.joda.time.Period.seconds(7);
        org.joda.time.Period period15 = period10.plus((org.joda.time.ReadablePeriod) period14);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test16327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16327");
        org.joda.time.Period period1 = org.joda.time.Period.months((-940));
        org.joda.time.DurationFieldType[] durationFieldTypeArray2 = period1.getFieldTypes();
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.forFields(durationFieldTypeArray2);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(durationFieldTypeArray2);
        org.junit.Assert.assertNotNull(periodType3);
    }

    @Test
    public void test16328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16328");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeksIn(readableInterval2);
        boolean boolean4 = weeks1.isLessThan(weeks3);
        org.joda.time.Weeks weeks5 = weeks1.negated();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((java.lang.Object) weeks1, chronology6);
        org.joda.time.Weeks weeks9 = weeks1.multipliedBy((int) (byte) 1);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeksIn(readableInterval10);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeksIn(readableInterval12);
        boolean boolean14 = weeks11.isLessThan(weeks13);
        org.joda.time.Weeks weeks15 = weeks11.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks17 = weeks1.minus(weeks15);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.weeksIn(readableInterval18);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeksIn(readableInterval20);
        boolean boolean22 = weeks19.isLessThan(weeks21);
        org.joda.time.Weeks weeks24 = weeks21.minus((int) (short) -1);
        org.joda.time.Weeks weeks26 = weeks24.multipliedBy(0);
        org.joda.time.Weeks weeks27 = null;
        boolean boolean28 = weeks24.isLessThan(weeks27);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.weeksIn(readableInterval29);
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.weeksIn(readableInterval31);
        boolean boolean33 = weeks30.isLessThan(weeks32);
        org.joda.time.Weeks weeks34 = weeks30.negated();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((java.lang.Object) weeks30, chronology35);
        int[] intArray37 = period36.getValues();
        org.joda.time.DurationFieldType[] durationFieldTypeArray38 = period36.getFieldTypes();
        boolean boolean39 = weeks24.equals((java.lang.Object) durationFieldTypeArray38);
        org.joda.time.Weeks weeks40 = weeks17.minus(weeks24);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.TWO;
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.weeksIn(readableInterval42);
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.weeksIn(readableInterval44);
        boolean boolean46 = weeks43.isLessThan(weeks45);
        org.joda.time.Weeks weeks47 = weeks43.negated();
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.weeksIn(readableInterval48);
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.weeksIn(readableInterval50);
        boolean boolean52 = weeks49.isLessThan(weeks51);
        org.joda.time.Weeks weeks53 = weeks49.negated();
        org.joda.time.Weeks weeks55 = weeks53.minus((int) (byte) 100);
        org.joda.time.Weeks weeks56 = weeks47.plus(weeks53);
        boolean boolean57 = weeks41.isLessThan(weeks53);
        org.joda.time.Weeks weeks59 = weeks41.multipliedBy((int) (short) 1);
        org.joda.time.ReadableInterval readableInterval60 = null;
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.weeksIn(readableInterval60);
        org.joda.time.Weeks weeks63 = weeks61.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks64 = weeks59.plus(weeks61);
        org.joda.time.Weeks weeks65 = weeks40.plus(weeks64);
        org.joda.time.Weeks weeks67 = weeks64.multipliedBy((int) (byte) -1);
        org.joda.time.PeriodType periodType68 = weeks64.getPeriodType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0]");
        org.junit.Assert.assertNotNull(durationFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(periodType68);
    }

    @Test
    public void test16329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16329");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((-86400000L), (long) (-2), chronology2);
    }

    @Test
    public void test16330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16330");
        org.joda.time.Period period2 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days3 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period2);
        org.joda.time.PeriodType periodType4 = days3.getPeriodType();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableDuration readableDuration6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(readableInstant5, readableDuration6);
        mutablePeriod7.setHours((int) (short) 100);
        boolean boolean10 = periodType4.equals((java.lang.Object) mutablePeriod7);
        org.joda.time.Duration duration11 = org.joda.time.Duration.ZERO;
        long long12 = duration11.getStandardDays();
        mutablePeriod7.add((org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType16 = periodType15.withWeeksRemoved();
        org.joda.time.PeriodType periodType17 = periodType16.withDaysRemoved();
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant14, periodType16);
        java.lang.String str19 = periodType16.getName();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((long) (short) -1, periodType16, chronology20);
        mutablePeriod21.clear();
        int int23 = mutablePeriod21.getDays();
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Millis" + "'", str19, "Millis");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test16331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16331");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Period period1 = hours0.toPeriod();
        int int2 = hours0.getHours();
        java.lang.String str3 = hours0.toString();
        org.joda.time.Hours hours5 = hours0.minus((-1073741824));
        org.joda.time.Hours hours7 = hours0.minus(600);
        org.joda.time.Hours hours8 = hours7.negated();
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((int) (short) -1, (int) '#', (int) ' ', 100);
        org.joda.time.DurationFieldType durationFieldType14 = org.joda.time.DurationFieldType.days();
        int int15 = mutablePeriod13.get(durationFieldType14);
        org.joda.time.Hours hours16 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) mutablePeriod13);
        org.joda.time.Hours hours18 = hours16.dividedBy(3);
        org.joda.time.Hours hours19 = hours18.negated();
        org.joda.time.Duration duration20 = hours19.toStandardDuration();
        org.joda.time.Hours hours21 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours23 = hours21.minus(10);
        int int24 = hours21.size();
        org.joda.time.Hours hours25 = hours19.minus(hours21);
        org.joda.time.Hours hours26 = hours7.plus(hours21);
        org.joda.time.Hours hours27 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours29 = hours27.minus(10);
        int int30 = hours27.size();
        org.joda.time.Hours hours32 = hours27.minus(60);
        boolean boolean33 = hours26.isLessThan(hours27);
        org.joda.time.Hours hours35 = hours26.dividedBy(2147483622);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT1H" + "'", str3, "PT1H");
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(hours35);
    }

    @Test
    public void test16332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16332");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) 0);
        org.joda.time.Hours hours3 = org.joda.time.Hours.hours(25);
        org.joda.time.DurationFieldType durationFieldType4 = hours3.getFieldType();
        org.joda.time.Duration duration5 = org.joda.time.Duration.ZERO;
        long long6 = duration5.getStandardDays();
        org.joda.time.Hours hours7 = duration5.toStandardHours();
        boolean boolean8 = hours3.isLessThan(hours7);
        org.joda.time.Hours hours10 = hours3.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours12 = hours10.dividedBy(32);
        org.joda.time.Hours hours14 = hours10.plus(10);
        org.joda.time.Hours hours16 = org.joda.time.Hours.hours((int) (byte) -1);
        java.lang.String str17 = hours16.toString();
        org.joda.time.PeriodType periodType18 = hours16.getPeriodType();
        org.joda.time.Duration duration19 = org.joda.time.Duration.ZERO;
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration19.toPeriod(chronology20);
        org.joda.time.Hours hours22 = duration19.toStandardHours();
        java.lang.Object obj23 = null;
        boolean boolean24 = hours22.equals(obj23);
        boolean boolean25 = hours16.isLessThan(hours22);
        org.joda.time.Period period26 = hours22.toPeriod();
        org.joda.time.Hours hours27 = hours10.plus(hours22);
        org.joda.time.Hours hours29 = hours22.plus(658);
        org.joda.time.Duration duration30 = hours29.toStandardDuration();
        org.joda.time.Duration duration32 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration30, 8744020);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableInstant readableInstant34 = null;
        java.lang.Object obj35 = null;
        org.joda.time.Duration duration36 = new org.joda.time.Duration(obj35);
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant33, (org.joda.time.ReadableDuration) duration36);
        long long39 = duration36.getMillis();
        org.joda.time.Duration duration40 = duration36.toDuration();
        int int41 = duration30.compareTo((org.joda.time.ReadableDuration) duration36);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT-1H" + "'", str17, "PT-1H");
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
    }

    @Test
    public void test16333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16333");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodParser periodParser3 = periodFormatter2.getParser();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds6 = duration5.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        org.joda.time.Seconds seconds9 = seconds6.plus(25);
        org.joda.time.Seconds seconds10 = seconds6.negated();
        org.joda.time.PeriodType periodType11 = seconds10.getPeriodType();
        org.joda.time.format.PeriodFormatter periodFormatter12 = periodFormatter2.withParseType(periodType11);
        boolean boolean13 = periodFormatter2.isParser();
        java.util.Locale locale14 = null;
        org.joda.time.format.PeriodFormatter periodFormatter15 = periodFormatter2.withLocale(locale14);
        boolean boolean16 = periodFormatter2.isParser();
        boolean boolean17 = periodFormatter2.isParser();
        org.junit.Assert.assertNull(periodParser3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodFormatter12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(periodFormatter15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test16334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16334");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("PT0S");
        mutablePeriod1.setPeriod((long) (byte) -1);
        mutablePeriod1.addSeconds(6);
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) 'a', (long) 0);
        mutablePeriod8.addYears((int) '4');
        org.joda.time.Chronology chronology12 = null;
        mutablePeriod8.add((long) 100, chronology12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableInstant readableInstant15 = null;
        mutablePeriod8.setPeriod(readableInstant14, readableInstant15);
        mutablePeriod8.setSeconds((int) '#');
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(readableInstant19, readableDuration20);
        mutablePeriod21.setHours((int) (short) 100);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology26 = null;
        mutablePeriod21.setPeriod((org.joda.time.ReadableDuration) duration25, chronology26);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds30 = duration29.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        mutablePeriod21.add(durationFieldType31, (int) (short) 0);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(readableInstant34, readableDuration35);
        mutablePeriod36.setHours((int) (short) 100);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology41 = null;
        mutablePeriod36.setPeriod((org.joda.time.ReadableDuration) duration40, chronology41);
        org.joda.time.Chronology chronology43 = null;
        mutablePeriod21.setPeriod((org.joda.time.ReadableDuration) duration40, chronology43);
        org.joda.time.Duration duration45 = duration40.toDuration();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Interval interval47 = duration40.toIntervalFrom(readableInstant46);
        mutablePeriod8.add((org.joda.time.ReadableInterval) interval47);
        mutablePeriod1.add((org.joda.time.ReadableInterval) interval47);
        org.joda.time.Period period50 = mutablePeriod1.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod51 = mutablePeriod1.copy();
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
    }

    @Test
    public void test16335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16335");
        org.joda.time.Period period4 = new org.joda.time.Period(6, (-58), (int) (byte) 0, (-5));
    }

    @Test
    public void test16336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16336");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeksIn(readableInterval2);
        boolean boolean4 = weeks1.isLessThan(weeks3);
        org.joda.time.Weeks weeks5 = weeks1.negated();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((java.lang.Object) weeks1, chronology6);
        org.joda.time.Weeks weeks9 = weeks1.multipliedBy((int) (byte) 1);
        org.joda.time.Weeks weeks11 = weeks9.multipliedBy((int) (short) -1);
        org.joda.time.PeriodType periodType12 = weeks11.getPeriodType();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.weeks(1);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = weeks11.plus(weeks14);
        org.joda.time.Weeks weeks18 = weeks11.minus(2400);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P1W" + "'", str15, "P1W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
    }

    @Test
    public void test16337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16337");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period6 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType10 = periodType9.withWeeksRemoved();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration8.toPeriod(periodType9, chronology11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType15 = periodType14.withMonthsRemoved();
        org.joda.time.Period period16 = duration8.toPeriodTo(readableInstant13, periodType15);
        org.joda.time.Period period17 = duration8.toPeriod();
        org.joda.time.Duration duration18 = duration4.plus((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration19 = duration4.toDuration();
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType21 = periodType20.withMonthsRemoved();
        org.joda.time.PeriodType periodType22 = periodType21.withMinutesRemoved();
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration4, periodType22);
        org.joda.time.Days days24 = duration4.toStandardDays();
        org.joda.time.Period period25 = duration4.toPeriod();
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(period25);
    }

    @Test
    public void test16338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16338");
        org.joda.time.Period period1 = new org.joda.time.Period((long) '4');
        org.joda.time.Period period3 = period1.withHours(32);
        org.joda.time.Period period4 = period1.normalizedStandard();
        org.joda.time.Period period6 = period1.plusHours((int) (short) 1);
        org.joda.time.Period period8 = period1.withYears(52);
        org.joda.time.Period period10 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days11 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period10);
        org.joda.time.PeriodType periodType12 = days11.getPeriodType();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(readableInstant13, readableDuration14);
        mutablePeriod15.setHours((int) (short) 100);
        boolean boolean18 = periodType12.equals((java.lang.Object) mutablePeriod15);
        org.joda.time.Duration duration19 = org.joda.time.Duration.ZERO;
        long long20 = duration19.getStandardDays();
        mutablePeriod15.add((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Period period23 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days24 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period23);
        org.joda.time.PeriodType periodType25 = days24.getPeriodType();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant26, readableDuration27);
        mutablePeriod28.setHours((int) (short) 100);
        boolean boolean31 = periodType25.equals((java.lang.Object) mutablePeriod28);
        org.joda.time.Duration duration32 = org.joda.time.Duration.ZERO;
        long long33 = duration32.getStandardDays();
        mutablePeriod28.add((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((long) (byte) 10, (long) '#', periodType37);
        org.joda.time.DurationFieldType durationFieldType39 = org.joda.time.DurationFieldType.weekyears();
        int int40 = period38.get(durationFieldType39);
        int int41 = mutablePeriod28.get(durationFieldType39);
        int int42 = mutablePeriod15.get(durationFieldType39);
        mutablePeriod15.setSeconds(100);
        org.joda.time.PeriodType periodType45 = mutablePeriod15.getPeriodType();
        org.joda.time.Period period46 = period8.normalizedStandard(periodType45);
        org.joda.time.Period period48 = period46.plusMonths((-8));
        org.joda.time.Period period50 = period46.minusMinutes((-2147483647));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period50);
    }

    @Test
    public void test16339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16339");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType2 = periodType1.withMonthsRemoved();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) (short) 0, periodType2, chronology4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds8 = duration7.toStandardSeconds();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds11 = duration10.toStandardSeconds();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType15 = periodType14.withMinutesRemoved();
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant13, periodType14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(readableInstant17, readableDuration18);
        mutablePeriod19.setHours((int) (short) 100);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology24 = null;
        mutablePeriod19.setPeriod((org.joda.time.ReadableDuration) duration23, chronology24);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds28 = duration27.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType29 = seconds28.getFieldType();
        mutablePeriod19.add(durationFieldType29, (int) (short) 0);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(readableInstant32, readableDuration33);
        mutablePeriod34.setHours((int) (short) 100);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology39 = null;
        mutablePeriod34.setPeriod((org.joda.time.ReadableDuration) duration38, chronology39);
        org.joda.time.Chronology chronology41 = null;
        mutablePeriod19.setPeriod((org.joda.time.ReadableDuration) duration38, chronology41);
        int int43 = duration10.compareTo((org.joda.time.ReadableDuration) duration38);
        java.lang.Object obj44 = null;
        boolean boolean45 = duration10.equals(obj44);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.seconds(2);
        org.joda.time.Duration duration48 = seconds47.toStandardDuration();
        boolean boolean49 = duration10.equals((java.lang.Object) seconds47);
        int int50 = seconds47.getSeconds();
        org.joda.time.DurationFieldType durationFieldType51 = seconds47.getFieldType();
        boolean boolean52 = periodType2.isSupported(durationFieldType51);
        org.joda.time.PeriodType periodType53 = periodType2.withDaysRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType55 = periodType2.getFieldType(96);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 96");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(periodType53);
    }

    @Test
    public void test16340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16340");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds6 = duration5.toStandardSeconds();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds10 = duration9.toStandardSeconds();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds13 = duration12.toStandardSeconds();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Period period15 = duration9.toPeriod();
        boolean boolean16 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds19 = duration18.toStandardSeconds();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = duration18.toPeriodTo(readableInstant20);
        org.joda.time.Duration duration22 = period21.toStandardDuration();
        org.joda.time.Period period23 = duration22.toPeriod();
        org.joda.time.Duration duration24 = duration9.minus((org.joda.time.ReadableDuration) duration22);
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((long) (byte) 10, (long) '#', periodType27);
        int int29 = period28.getMillis();
        org.joda.time.Period period31 = period28.plusDays((int) 'a');
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds34 = duration33.toStandardSeconds();
        java.lang.String str35 = seconds34.toString();
        org.joda.time.PeriodType periodType36 = seconds34.getPeriodType();
        org.joda.time.PeriodType periodType37 = periodType36.withSecondsRemoved();
        org.joda.time.PeriodType periodType38 = periodType37.withDaysRemoved();
        org.joda.time.Period period39 = period31.normalizedStandard(periodType38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration9, periodType38);
        java.lang.String str41 = duration9.toString();
        org.joda.time.Period period42 = duration9.toPeriod();
        java.lang.String str43 = duration9.toString();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 25 + "'", int29 == 25);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "PT60S" + "'", str35, "PT60S");
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "PT60S" + "'", str41, "PT60S");
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "PT60S" + "'", str43, "PT60S");
    }

    @Test
    public void test16341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16341");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.Period period4 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days5 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period4);
        org.joda.time.Period period7 = period4.withSeconds((int) ' ');
        org.joda.time.Period period8 = period1.minus((org.joda.time.ReadablePeriod) period4);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType10 = periodType9.withMonthsRemoved();
        org.joda.time.Period period11 = period8.withPeriodType(periodType9);
        org.joda.time.Days days12 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period8);
        org.joda.time.Period period14 = period8.plusMonths((-32));
        java.lang.String str15 = period8.toString();
        org.joda.time.Period period17 = period8.plusMillis(7);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT0S" + "'", str15, "PT0S");
        org.junit.Assert.assertNotNull(period17);
    }

    @Test
    public void test16342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16342");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds2 = duration1.toStandardSeconds();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds5 = duration4.toStandardSeconds();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration1.toPeriod();
        org.joda.time.Period period8 = period7.negated();
        int int9 = period7.getHours();
        org.joda.time.Period period11 = period7.withMillis(2147483647);
        org.joda.time.Period period13 = period7.plusMinutes(0);
        org.joda.time.Period period15 = period7.minusYears(6);
        org.joda.time.Period period17 = period7.plusMinutes((int) 'a');
        org.joda.time.Period period19 = period17.plusWeeks(31);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
    }

    @Test
    public void test16343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16343");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.Period period4 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days5 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period4);
        org.joda.time.PeriodType periodType6 = days5.getPeriodType();
        boolean boolean7 = days2.isGreaterThan(days5);
        org.joda.time.Period period9 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days10 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Days days11 = days5.minus(days10);
        int int12 = days5.size();
        org.joda.time.Days days14 = days5.dividedBy((-1));
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((java.lang.Object) days14);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, readableInstant17, periodType18);
        org.joda.time.DurationFieldType durationFieldType20 = org.joda.time.DurationFieldType.eras();
        int int21 = period19.get(durationFieldType20);
        org.joda.time.Days days22 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period19);
        org.joda.time.Days days23 = org.joda.time.Days.ZERO;
        org.joda.time.Days days24 = days23.negated();
        int int25 = days23.size();
        boolean boolean26 = days22.isGreaterThan(days23);
        org.joda.time.Days days28 = days23.multipliedBy(97);
        boolean boolean29 = days14.isGreaterThan(days23);
        org.joda.time.Days days31 = days14.dividedBy((int) 'a');
        org.joda.time.Duration duration32 = days14.toStandardDuration();
        org.joda.time.Duration duration34 = duration32.minus((long) 54);
        long long35 = duration32.getStandardSeconds();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
    }

    @Test
    public void test16344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16344");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds5 = duration4.toStandardSeconds();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds8 = duration7.toStandardSeconds();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType12 = periodType11.withMinutesRemoved();
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant10, periodType11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(readableInstant14, readableDuration15);
        mutablePeriod16.setHours((int) (short) 100);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology21 = null;
        mutablePeriod16.setPeriod((org.joda.time.ReadableDuration) duration20, chronology21);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds25 = duration24.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        mutablePeriod16.add(durationFieldType26, (int) (short) 0);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(readableInstant29, readableDuration30);
        mutablePeriod31.setHours((int) (short) 100);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology36 = null;
        mutablePeriod31.setPeriod((org.joda.time.ReadableDuration) duration35, chronology36);
        org.joda.time.Chronology chronology38 = null;
        mutablePeriod16.setPeriod((org.joda.time.ReadableDuration) duration35, chronology38);
        int int40 = duration7.compareTo((org.joda.time.ReadableDuration) duration35);
        org.joda.time.Duration duration41 = duration35.toDuration();
        org.joda.time.Duration duration42 = duration41.toDuration();
        org.joda.time.Duration duration44 = duration41.withMillis((long) (byte) 100);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds47 = duration46.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType48 = seconds47.getFieldType();
        org.joda.time.Seconds seconds50 = seconds47.plus(25);
        org.joda.time.Seconds seconds51 = seconds47.negated();
        org.joda.time.Seconds seconds53 = seconds47.dividedBy(10);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds56 = duration55.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType57 = seconds56.getFieldType();
        org.joda.time.Seconds seconds59 = seconds56.plus(25);
        org.joda.time.Seconds seconds60 = seconds53.plus(seconds56);
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.ZERO;
        org.joda.time.PeriodType periodType62 = seconds61.getPeriodType();
        java.lang.String str63 = seconds61.toString();
        org.joda.time.Seconds seconds64 = seconds60.plus(seconds61);
        org.joda.time.PeriodType periodType65 = seconds60.getPeriodType();
        boolean boolean66 = duration41.equals((java.lang.Object) periodType65);
        org.joda.time.Period period67 = new org.joda.time.Period(readableInstant1, readableInstant2, periodType65);
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((long) 21168000, periodType65);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "PT0S" + "'", str63, "PT0S");
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test16345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16345");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType1 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) ' ');
        org.joda.time.Minutes minutes5 = minutes0.minus(minutes2);
        org.joda.time.Minutes minutes7 = minutes5.plus((int) '4');
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.ZERO;
        boolean boolean10 = minutes8.isLessThan(minutes9);
        org.joda.time.Minutes minutes12 = minutes8.plus(52);
        org.joda.time.Minutes minutes13 = minutes7.plus(minutes8);
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 25);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod15);
        boolean boolean17 = minutes8.isLessThan(minutes16);
        org.joda.time.Minutes minutes19 = minutes16.plus(596);
        org.joda.time.PeriodType periodType20 = minutes19.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(periodType20);
    }

    @Test
    public void test16346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16346");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableDuration1);
        org.joda.time.Period period3 = mutablePeriod2.toPeriod();
        org.joda.time.Period period5 = period3.withHours(0);
        org.joda.time.Period period7 = org.joda.time.Period.hours(0);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(readableInstant8, readableDuration9);
        org.joda.time.Period period11 = mutablePeriod10.toPeriod();
        org.joda.time.Period period13 = period11.withHours(0);
        org.joda.time.DurationFieldType durationFieldType14 = org.joda.time.DurationFieldType.days();
        int int15 = period11.indexOf(durationFieldType14);
        int int16 = period7.indexOf(durationFieldType14);
        int int17 = period3.get(durationFieldType14);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.minutes((-1));
        int int20 = minutes19.getMinutes();
        org.joda.time.Minutes minutes22 = minutes19.dividedBy((-2147483648));
        org.joda.time.Period period23 = period3.withFields((org.joda.time.ReadablePeriod) minutes22);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes(6000000L);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Interval interval27 = duration25.toIntervalFrom(readableInstant26);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval27);
        boolean boolean29 = minutes22.isGreaterThan(minutes28);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = minutes28.get(durationFieldType30);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test16347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16347");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) 8);
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 100, 0);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant6);
        int int8 = period7.getMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 8L + "'", long2 == 8L);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
    }

    @Test
    public void test16348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16348");
        org.joda.time.Hours hours0 = org.joda.time.Hours.FOUR;
        org.joda.time.Hours hours2 = hours0.minus(0);
        org.joda.time.Hours hours4 = hours2.multipliedBy((int) (byte) 10);
        org.joda.time.Duration duration5 = hours2.toStandardDuration();
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(readableInstant7, readableDuration8);
        mutablePeriod9.setSeconds(8);
        mutablePeriod9.setValue(1, 2);
        org.joda.time.Duration duration17 = new org.joda.time.Duration((-1L), (long) ' ');
        mutablePeriod9.add((org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration5.isEqual((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, readableInstant20);
        long long22 = duration5.getMillis();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 240L + "'", long6 == 240L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 14400000L + "'", long22 == 14400000L);
    }

    @Test
    public void test16349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16349");
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.Period period6 = duration5.toPeriod();
        long long7 = duration5.getStandardSeconds();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds10 = duration9.toStandardSeconds();
        java.lang.String str11 = seconds10.toString();
        org.joda.time.PeriodType periodType12 = seconds10.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(readableInstant3, (org.joda.time.ReadableDuration) duration5, periodType12);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 1, 540000L, periodType12, chronology14);
        java.lang.String str16 = periodType12.toString();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((long) (-29), periodType12);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType19 = mutablePeriod17.getFieldType(96);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 96");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-60L) + "'", long7 == (-60L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT60S" + "'", str11, "PT60S");
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PeriodType[Seconds]" + "'", str16, "PeriodType[Seconds]");
    }

    @Test
    public void test16350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16350");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.Period period4 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days5 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period4);
        org.joda.time.PeriodType periodType6 = days5.getPeriodType();
        boolean boolean7 = days2.isGreaterThan(days5);
        int int8 = days2.size();
        org.joda.time.Days days9 = days2.negated();
        org.joda.time.Days days11 = days9.minus(3);
        org.joda.time.DurationFieldType durationFieldType12 = days9.getFieldType();
        int int13 = days9.getDays();
        org.joda.time.Days days15 = days9.dividedBy((-20));
        org.joda.time.Period period17 = org.joda.time.Period.weeks(1);
        org.joda.time.Days days18 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days20 = days18.minus(25);
        org.joda.time.Period period21 = period17.plus((org.joda.time.ReadablePeriod) days20);
        org.joda.time.Period period23 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days24 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period23);
        org.joda.time.Period period26 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days27 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period26);
        org.joda.time.PeriodType periodType28 = days27.getPeriodType();
        boolean boolean29 = days24.isGreaterThan(days27);
        org.joda.time.Period period31 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days32 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period31);
        org.joda.time.Days days33 = days27.minus(days32);
        org.joda.time.Period period35 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days36 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period35);
        org.joda.time.Days days38 = days36.minus(10);
        org.joda.time.Days days39 = days27.plus(days36);
        org.joda.time.Days days41 = days39.dividedBy(100);
        org.joda.time.Days days43 = days41.plus((int) (short) 0);
        boolean boolean44 = days20.isLessThan(days43);
        boolean boolean45 = days9.isLessThan(days43);
        java.lang.String str46 = days9.toString();
        java.lang.String str47 = days9.toString();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P0D" + "'", str46, "P0D");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "P0D" + "'", str47, "P0D");
    }

    @Test
    public void test16351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16351");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodParser periodParser3 = periodFormatter2.getParser();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds6 = duration5.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        org.joda.time.Seconds seconds9 = seconds6.plus(25);
        org.joda.time.Seconds seconds10 = seconds6.negated();
        org.joda.time.PeriodType periodType11 = seconds10.getPeriodType();
        org.joda.time.format.PeriodFormatter periodFormatter12 = periodFormatter2.withParseType(periodType11);
        java.util.Locale locale13 = null;
        org.joda.time.format.PeriodFormatter periodFormatter14 = periodFormatter12.withLocale(locale13);
        org.joda.time.PeriodType periodType15 = periodFormatter14.getParseType();
        org.joda.time.PeriodType periodType16 = periodFormatter14.getParseType();
        boolean boolean17 = periodFormatter14.isParser();
        java.util.Locale locale18 = periodFormatter14.getLocale();
        org.junit.Assert.assertNull(periodParser3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodFormatter12);
        org.junit.Assert.assertNotNull(periodFormatter14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(locale18);
    }

    @Test
    public void test16352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16352");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.PeriodType periodType4 = periodType2.withYearsRemoved();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) (-3), (long) 54, periodType4, chronology5);
        org.joda.time.PeriodType periodType7 = periodType4.withWeeksRemoved();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType7);
    }

    @Test
    public void test16353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16353");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.Minutes minutes2 = minutes0.plus((int) (byte) 0);
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes5 = minutes0.dividedBy((-8));
        org.joda.time.Minutes minutes7 = minutes5.minus(990);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT0M" + "'", str3, "PT0M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
    }

    @Test
    public void test16354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16354");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 1, (long) (byte) 100);
        int int3 = mutablePeriod2.size();
        org.joda.time.MutablePeriod mutablePeriod4 = mutablePeriod2.copy();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableDuration readableDuration6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(readableInstant5, readableDuration6);
        mutablePeriod7.setPeriod((long) ' ', (long) 52);
        mutablePeriod7.addDays(100);
        org.joda.time.PeriodType periodType13 = mutablePeriod7.getPeriodType();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds16 = duration15.toStandardSeconds();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds19 = duration18.toStandardSeconds();
        boolean boolean20 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType23 = periodType22.withMinutesRemoved();
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant21, periodType22);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Interval interval26 = duration18.toIntervalFrom(readableInstant25);
        mutablePeriod7.add((org.joda.time.ReadableInterval) interval26);
        mutablePeriod4.add((org.joda.time.ReadableInterval) interval26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(readableInstant29, readableInstant30);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.seconds(100);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.TWO;
        org.joda.time.DurationFieldType durationFieldType35 = seconds34.getFieldType();
        boolean boolean36 = seconds33.isGreaterThan(seconds34);
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((long) 'a', (long) 0);
        mutablePeriod39.addYears((int) '4');
        org.joda.time.Chronology chronology43 = null;
        mutablePeriod39.add((long) 100, chronology43);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds47 = duration46.toStandardSeconds();
        java.lang.String str48 = seconds47.toString();
        org.joda.time.DurationFieldType durationFieldType49 = org.joda.time.DurationFieldType.days();
        boolean boolean50 = seconds47.isSupported(durationFieldType49);
        int int51 = mutablePeriod39.get(durationFieldType49);
        boolean boolean52 = seconds34.isSupported(durationFieldType49);
        mutablePeriod31.set(durationFieldType49, (-2147483648));
        int int55 = mutablePeriod4.get(durationFieldType49);
        mutablePeriod4.addWeeks((-3));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "PT60S" + "'", str48, "PT60S");
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test16355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16355");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.Period period4 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days5 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period4);
        org.joda.time.PeriodType periodType6 = days5.getPeriodType();
        boolean boolean7 = days2.isGreaterThan(days5);
        int int8 = days2.size();
        org.joda.time.Days days9 = days2.negated();
        org.joda.time.Days days11 = days9.minus(3);
        org.joda.time.Days days12 = days11.negated();
        org.joda.time.Days days13 = org.joda.time.Days.ZERO;
        int int14 = days13.getDays();
        org.joda.time.Period period16 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days17 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period16);
        org.joda.time.Period period19 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days20 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period19);
        org.joda.time.PeriodType periodType21 = days20.getPeriodType();
        boolean boolean22 = days17.isGreaterThan(days20);
        org.joda.time.Period period24 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days25 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period24);
        org.joda.time.Days days26 = days20.minus(days25);
        org.joda.time.Days days27 = days13.minus(days20);
        org.joda.time.Period period29 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days30 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period29);
        org.joda.time.Period period32 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days33 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period32);
        org.joda.time.PeriodType periodType34 = days33.getPeriodType();
        boolean boolean35 = days30.isGreaterThan(days33);
        org.joda.time.Period period37 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days38 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period37);
        org.joda.time.Days days39 = days33.minus(days38);
        org.joda.time.Days days40 = days13.plus(days39);
        org.joda.time.Days days42 = days13.dividedBy(7);
        org.joda.time.MutablePeriod mutablePeriod43 = days42.toMutablePeriod();
        boolean boolean44 = days12.isGreaterThan(days42);
        org.joda.time.Days days46 = days12.multipliedBy(67);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(days46);
    }

    @Test
    public void test16356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16356");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodParser periodParser3 = periodFormatter2.getParser();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds6 = duration5.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        org.joda.time.Seconds seconds9 = seconds6.plus(25);
        org.joda.time.Seconds seconds10 = seconds6.negated();
        org.joda.time.PeriodType periodType11 = seconds10.getPeriodType();
        org.joda.time.format.PeriodFormatter periodFormatter12 = periodFormatter2.withParseType(periodType11);
        org.joda.time.format.PeriodPrinter periodPrinter13 = periodFormatter12.getPrinter();
        org.joda.time.format.PeriodParser periodParser14 = periodFormatter12.getParser();
        boolean boolean15 = periodFormatter12.isPrinter();
        boolean boolean16 = periodFormatter12.isPrinter();
        java.util.Locale locale17 = periodFormatter12.getLocale();
        org.joda.time.format.PeriodPrinter periodPrinter18 = periodFormatter12.getPrinter();
        java.util.Locale locale19 = periodFormatter12.getLocale();
        org.junit.Assert.assertNull(periodParser3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodFormatter12);
        org.junit.Assert.assertNull(periodPrinter13);
        org.junit.Assert.assertNull(periodParser14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(locale17);
        org.junit.Assert.assertNull(periodPrinter18);
        org.junit.Assert.assertNull(locale19);
    }

    @Test
    public void test16357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16357");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodParser periodParser3 = periodFormatter2.getParser();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds6 = duration5.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        org.joda.time.Seconds seconds9 = seconds6.plus(25);
        org.joda.time.Seconds seconds10 = seconds6.negated();
        org.joda.time.PeriodType periodType11 = seconds10.getPeriodType();
        org.joda.time.format.PeriodFormatter periodFormatter12 = periodFormatter2.withParseType(periodType11);
        boolean boolean13 = periodFormatter2.isParser();
        java.util.Locale locale14 = null;
        org.joda.time.format.PeriodFormatter periodFormatter15 = periodFormatter2.withLocale(locale14);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds18 = duration17.toStandardSeconds();
        java.lang.String str19 = seconds18.toString();
        org.joda.time.PeriodType periodType20 = seconds18.getPeriodType();
        org.joda.time.PeriodType periodType21 = periodType20.withSecondsRemoved();
        org.joda.time.PeriodType periodType22 = periodType21.withDaysRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter23 = periodFormatter15.withParseType(periodType22);
        java.util.Locale locale24 = null;
        org.joda.time.format.PeriodFormatter periodFormatter25 = periodFormatter15.withLocale(locale24);
        org.joda.time.format.PeriodPrinter periodPrinter26 = periodFormatter25.getPrinter();
        java.lang.StringBuffer stringBuffer27 = null;
        org.joda.time.Period period29 = org.joda.time.Period.days((int) (byte) 100);
        int int30 = period29.getSeconds();
        org.joda.time.Hours hours31 = org.joda.time.Hours.FOUR;
        org.joda.time.Duration duration32 = hours31.toStandardDuration();
        org.joda.time.Hours hours34 = hours31.dividedBy((int) ' ');
        org.joda.time.PeriodType periodType35 = hours34.getPeriodType();
        java.lang.String str36 = periodType35.toString();
        org.joda.time.Period period37 = period29.normalizedStandard(periodType35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Duration duration39 = period29.toDurationTo(readableInstant38);
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(3, 35, 100, 25);
        mutablePeriod44.setWeeks(13);
        mutablePeriod44.setPeriod(17340L, (long) 194);
        org.joda.time.Period period51 = org.joda.time.Period.years(52);
        org.joda.time.Duration duration52 = org.joda.time.Duration.ZERO;
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration52.toPeriod(chronology53);
        org.joda.time.Hours hours55 = duration52.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType56 = hours55.getFieldType();
        int int57 = period51.get(durationFieldType56);
        java.lang.String str58 = durationFieldType56.getName();
        java.lang.String str59 = durationFieldType56.toString();
        mutablePeriod44.set(durationFieldType56, (-32));
        org.joda.time.Period period63 = period29.withField(durationFieldType56, (-59));
        org.joda.time.Period period65 = period63.withSeconds(32);
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter25.printTo(stringBuffer27, (org.joda.time.ReadablePeriod) period65);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodParser3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodFormatter12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(periodFormatter15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT60S" + "'", str19, "PT60S");
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodFormatter23);
        org.junit.Assert.assertNotNull(periodFormatter25);
        org.junit.Assert.assertNull(periodPrinter26);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PeriodType[Hours]" + "'", str36, "PeriodType[Hours]");
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hours" + "'", str58, "hours");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hours" + "'", str59, "hours");
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period65);
    }

    @Test
    public void test16358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16358");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.weeks();
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) (-2), periodType1, chronology2);
        org.joda.time.PeriodType periodType4 = periodType1.withMonthsRemoved();
        org.joda.time.PeriodType periodType5 = periodType4.withHoursRemoved();
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
    }

    @Test
    public void test16359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16359");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.Period period4 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days5 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period4);
        org.joda.time.PeriodType periodType6 = days5.getPeriodType();
        boolean boolean7 = days2.isGreaterThan(days5);
        int int8 = days2.size();
        org.joda.time.Days days9 = days2.negated();
        org.joda.time.Days days11 = days9.minus(3);
        org.joda.time.Days days12 = days11.negated();
        java.lang.String str13 = days12.toString();
        org.joda.time.Period period15 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days16 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period15);
        org.joda.time.Period period18 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days19 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period18);
        org.joda.time.PeriodType periodType20 = days19.getPeriodType();
        boolean boolean21 = days16.isGreaterThan(days19);
        org.joda.time.Days days23 = days16.minus(1);
        org.joda.time.Days days25 = days23.dividedBy(60);
        org.joda.time.Days days26 = days12.plus(days23);
        org.joda.time.Days days27 = org.joda.time.Days.ZERO;
        org.joda.time.Period period29 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days30 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period29);
        org.joda.time.Days days32 = days30.minus(10);
        boolean boolean33 = days27.isGreaterThan(days30);
        org.joda.time.Days days35 = days30.multipliedBy((int) '4');
        boolean boolean36 = days23.isGreaterThan(days30);
        org.joda.time.Days days38 = days30.dividedBy((-2147483638));
        org.joda.time.Days days40 = days30.plus(0);
        org.joda.time.DurationFieldType durationFieldType41 = days30.getFieldType();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.DurationField durationField43 = durationFieldType41.getField(chronology42);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P3D" + "'", str13, "P3D");
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(durationField43);
    }

    @Test
    public void test16360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16360");
        org.joda.time.Period period1 = new org.joda.time.Period((long) (-302));
        org.joda.time.Period period3 = period1.withHours(8);
        org.joda.time.Hours hours4 = period1.toStandardHours();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(hours4);
    }

    @Test
    public void test16361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16361");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableDuration1);
        mutablePeriod2.setHours((int) (short) 100);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology7 = null;
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration6, chronology7);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds11 = duration10.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType12 = seconds11.getFieldType();
        mutablePeriod2.add(durationFieldType12, (int) (short) 0);
        mutablePeriod2.setYears((-97));
        int int17 = mutablePeriod2.getMinutes();
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test16362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16362");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableDuration1);
        mutablePeriod2.setHours((int) (short) 100);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology7 = null;
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration6, chronology7);
        int int9 = mutablePeriod2.getWeeks();
        int int10 = mutablePeriod2.size();
        mutablePeriod2.addMonths(42);
        org.joda.time.Chronology chronology15 = null;
        mutablePeriod2.setPeriod((long) (-20), 360000000L, chronology15);
        mutablePeriod2.setPeriod(2, (-999), 88500, 416, (-596526), 20, (-637), (-13));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 8 + "'", int10 == 8);
    }

    @Test
    public void test16363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16363");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(4, (-7), (int) '4', 658);
        org.joda.time.Duration duration6 = org.joda.time.Duration.millis((long) 52);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        java.lang.Object obj9 = null;
        org.joda.time.Duration duration10 = new org.joda.time.Duration(obj9);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration13 = duration10.toDuration();
        org.joda.time.Period period14 = duration10.toPeriod();
        org.joda.time.Hours hours15 = duration10.toStandardHours();
        boolean boolean16 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Chronology chronology17 = null;
        mutablePeriod4.setPeriod((org.joda.time.ReadableDuration) duration10, chronology17);
        mutablePeriod4.setMinutes(42);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test16364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16364");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Period period3 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Period period5 = period3.withMillis((int) (byte) -1);
        org.joda.time.Weeks weeks6 = period5.toStandardWeeks();
        org.joda.time.Weeks weeks7 = weeks1.plus(weeks6);
        org.joda.time.Weeks weeks9 = weeks1.plus((int) (byte) 10);
        org.joda.time.Weeks weeks11 = weeks1.plus(0);
        org.joda.time.Weeks weeks13 = weeks11.minus(0);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks(1);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeksIn(readableInterval16);
        org.joda.time.Weeks weeks19 = weeks17.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks20 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks21 = weeks11.plus(weeks20);
        org.joda.time.Period period23 = org.joda.time.Period.hours((int) (byte) 1);
        org.joda.time.Weeks weeks24 = period23.toStandardWeeks();
        org.joda.time.Weeks weeks25 = weeks21.plus(weeks24);
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
    }

    @Test
    public void test16365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16365");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(8L, (-3600L), chronology2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.ZERO;
        org.joda.time.Duration duration5 = seconds4.toStandardDuration();
        org.joda.time.Duration duration8 = new org.joda.time.Duration((-1L), (long) ' ');
        boolean boolean9 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration11 = duration5.withMillis((long) 10);
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Interval interval14 = duration11.toIntervalFrom(readableInstant13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardSeconds((long) 8);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds19 = duration18.toStandardSeconds();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds22 = duration21.toStandardSeconds();
        boolean boolean23 = duration18.isLongerThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Seconds seconds26 = duration21.toStandardSeconds();
        boolean boolean27 = duration16.isEqual((org.joda.time.ReadableDuration) duration21);
        org.joda.time.Period period28 = duration21.toPeriod();
        int int29 = duration11.compareTo((org.joda.time.ReadableDuration) duration21);
        long long30 = duration21.getMillis();
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 60000L + "'", long30 == 60000L);
    }

    @Test
    public void test16366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16366");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours(194400000L);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test16367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16367");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(200, 4, (-35), (-596828));
    }

    @Test
    public void test16368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16368");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(60L);
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((-2), 35, (int) (short) 0, (-940));
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((long) 0, (long) 2, chronology9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType12 = periodType11.withWeeksRemoved();
        org.joda.time.PeriodType periodType13 = periodType12.withDaysRemoved();
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.TWO;
        org.joda.time.Duration duration15 = seconds14.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType16 = seconds14.getFieldType();
        org.joda.time.Chronology chronology17 = null;
        boolean boolean18 = durationFieldType16.isSupported(chronology17);
        int int19 = periodType13.indexOf(durationFieldType16);
        mutablePeriod10.set(durationFieldType16, 10);
        int int22 = mutablePeriod10.getMonths();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds25 = duration24.toStandardSeconds();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds28 = duration27.toStandardSeconds();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds32 = duration31.toStandardSeconds();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds35 = duration34.toStandardSeconds();
        boolean boolean36 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Period period37 = duration31.toPeriod();
        boolean boolean38 = duration27.isLongerThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds41 = duration40.toStandardSeconds();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = duration40.toPeriodTo(readableInstant42);
        org.joda.time.Duration duration44 = period43.toStandardDuration();
        org.joda.time.Period period45 = duration44.toPeriod();
        org.joda.time.Duration duration46 = duration31.minus((org.joda.time.ReadableDuration) duration44);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.yearWeekDayTime();
        org.joda.time.Period period48 = duration46.toPeriod(periodType47);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds51 = duration50.toStandardSeconds();
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds54 = duration53.toStandardSeconds();
        boolean boolean55 = duration50.isLongerThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Period period56 = duration50.toPeriod();
        org.joda.time.Period period57 = period56.negated();
        org.joda.time.Seconds seconds58 = period57.toStandardSeconds();
        org.joda.time.Period period59 = period57.negated();
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Duration duration61 = period57.toDurationTo(readableInstant60);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((long) 10);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration63.toPeriod(chronology64);
        boolean boolean66 = duration61.isShorterThan((org.joda.time.ReadableDuration) duration63);
        boolean boolean67 = duration46.isEqual((org.joda.time.ReadableDuration) duration63);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Interval interval69 = duration46.toIntervalFrom(readableInstant68);
        mutablePeriod10.setPeriod((org.joda.time.ReadableInterval) interval69);
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval69);
        mutablePeriod6.setPeriod((org.joda.time.ReadableInterval) interval69);
        mutablePeriod1.add((org.joda.time.ReadableInterval) interval69);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(interval69);
        org.junit.Assert.assertNotNull(seconds71);
    }

    @Test
    public void test16369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16369");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.PeriodType periodType3 = days2.getPeriodType();
        org.joda.time.Period period5 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days6 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period5);
        org.joda.time.Period period8 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days9 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period8);
        org.joda.time.PeriodType periodType10 = days9.getPeriodType();
        boolean boolean11 = days6.isGreaterThan(days9);
        org.joda.time.Period period13 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days14 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period13);
        org.joda.time.Days days15 = days9.minus(days14);
        org.joda.time.Period period17 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days18 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period17);
        org.joda.time.Days days20 = days18.minus(10);
        org.joda.time.Days days21 = days9.plus(days18);
        org.joda.time.Days days23 = days21.dividedBy(100);
        org.joda.time.Days days24 = null;
        org.joda.time.Days days25 = days23.plus(days24);
        org.joda.time.Days days26 = days23.negated();
        boolean boolean27 = days2.isGreaterThan(days26);
        org.joda.time.Days days29 = org.joda.time.Days.days(100);
        org.joda.time.Days days30 = org.joda.time.Days.TWO;
        boolean boolean31 = days29.isLessThan(days30);
        org.joda.time.Days days32 = days26.minus(days30);
        org.joda.time.Days days34 = days30.dividedBy(793);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
    }

    @Test
    public void test16370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16370");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration1 = org.joda.time.Duration.ZERO;
        long long2 = duration1.getStandardDays();
        org.joda.time.Hours hours3 = duration1.toStandardHours();
        org.joda.time.Duration duration5 = duration1.withMillis(0L);
        org.joda.time.Period period6 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration1);
        org.joda.time.Period period8 = period6.multipliedBy((int) (short) 100);
        org.joda.time.Period period10 = period6.multipliedBy((int) (byte) 100);
        org.joda.time.Period period12 = period6.minusSeconds((int) (short) -1);
        org.joda.time.Period period14 = period12.minusMinutes(25);
        org.joda.time.Period period16 = period14.minusHours(600);
        org.joda.time.Period period18 = period14.plusHours(900);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
    }

    @Test
    public void test16371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16371");
        org.joda.time.Period period1 = org.joda.time.Period.hours((-91));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test16372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16372");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("P97MT52S");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'months'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test16373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16373");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours(600000L);
        org.joda.time.Duration duration3 = duration1.withMillis((long) 10);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardHours((long) (short) -1);
        long long6 = duration5.getStandardSeconds();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = duration5.toPeriodFrom(readableInstant7);
        org.joda.time.Duration duration10 = duration3.withDurationAdded((org.joda.time.ReadableDuration) duration5, 2400);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3600L) + "'", long6 == (-3600L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration10);
    }

    @Test
    public void test16374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16374");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType3 = periodType2.withWeeksRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.Period period5 = duration1.toPeriod(periodType2, chronology4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType8 = periodType7.withMonthsRemoved();
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant6, periodType8);
        org.joda.time.DurationFieldType durationFieldType11 = period9.getFieldType((int) (byte) 0);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration13 = period9.toDurationFrom(readableInstant12);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration13.toPeriod(chronology14);
        org.joda.time.Duration duration16 = period15.toStandardDuration();
        org.joda.time.Duration duration17 = duration16.toDuration();
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.Duration duration19 = duration17.minus(readableDuration18);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration19);
    }

    @Test
    public void test16375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16375");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) 10);
        java.lang.String str2 = duration1.toString();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds5 = duration4.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType6 = seconds5.getFieldType();
        org.joda.time.PeriodType periodType7 = seconds5.getPeriodType();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration1.toPeriod(periodType7, chronology8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant10);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT600S" + "'", str2, "PT600S");
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test16376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16376");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours1 = hours0.negated();
        java.lang.String str2 = hours1.toString();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((java.lang.Object) hours1, chronology3);
        java.lang.String str5 = hours1.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT-8H" + "'", str2, "PT-8H");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT-8H" + "'", str5, "PT-8H");
    }

    @Test
    public void test16377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16377");
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.Period period8 = duration7.toPeriod();
        long long9 = duration7.getStandardSeconds();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds12 = duration11.toStandardSeconds();
        java.lang.String str13 = seconds12.toString();
        org.joda.time.PeriodType periodType14 = seconds12.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(readableInstant5, (org.joda.time.ReadableDuration) duration7, periodType14);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(readableInstant3, readableInstant4, periodType14);
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((long) 2, (long) 100, periodType14);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((long) 4, periodType14, chronology18);
        org.joda.time.PeriodType periodType20 = periodType14.withMonthsRemoved();
        org.joda.time.PeriodType periodType21 = periodType20.withMinutesRemoved();
        org.joda.time.PeriodType periodType22 = periodType20.withHoursRemoved();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-60L) + "'", long9 == (-60L));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT60S" + "'", str13, "PT60S");
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
    }

    @Test
    public void test16378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16378");
        org.joda.time.Duration duration0 = org.joda.time.Duration.ZERO;
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = duration0.toPeriod(chronology1);
        org.joda.time.Hours hours3 = duration0.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType4 = hours3.getFieldType();
        org.joda.time.Hours hours5 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType6 = hours5.getFieldType();
        org.joda.time.Hours hours7 = hours3.plus(hours5);
        org.joda.time.MutablePeriod mutablePeriod8 = hours3.toMutablePeriod();
        org.joda.time.PeriodType periodType9 = hours3.getPeriodType();
        org.joda.time.PeriodType periodType10 = periodType9.withDaysRemoved();
        org.junit.Assert.assertNotNull(duration0);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
    }

    @Test
    public void test16379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16379");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.PeriodType periodType3 = days2.getPeriodType();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(readableInstant4, readableDuration5);
        mutablePeriod6.setHours((int) (short) 100);
        boolean boolean9 = periodType3.equals((java.lang.Object) mutablePeriod6);
        org.joda.time.Duration duration10 = org.joda.time.Duration.ZERO;
        long long11 = duration10.getStandardDays();
        mutablePeriod6.add((org.joda.time.ReadableDuration) duration10);
        mutablePeriod6.clear();
        org.joda.time.Period period15 = org.joda.time.Period.hours(0);
        org.joda.time.DurationFieldType durationFieldType17 = period15.getFieldType((int) (short) 1);
        mutablePeriod6.set(durationFieldType17, (int) (short) -1);
        mutablePeriod6.setYears((int) '#');
        mutablePeriod6.setHours((-672));
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((long) (byte) 100);
        mutablePeriod6.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod25);
        mutablePeriod25.addMinutes(6);
        org.joda.time.DurationFieldType[] durationFieldTypeArray29 = mutablePeriod25.getFieldTypes();
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.forFields(durationFieldTypeArray29);
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(periodType30);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(durationFieldTypeArray29);
        org.junit.Assert.assertNotNull(periodType30);
    }

    @Test
    public void test16380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16380");
        org.joda.time.Period period1 = new org.joda.time.Period((long) '4');
        org.joda.time.Period period3 = period1.withHours(32);
        org.joda.time.Period period4 = period1.normalizedStandard();
        org.joda.time.Period period6 = period1.plusHours((int) (short) 1);
        org.joda.time.Period period8 = period1.withYears(52);
        org.joda.time.Period period10 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days11 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period10);
        org.joda.time.PeriodType periodType12 = days11.getPeriodType();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(readableInstant13, readableDuration14);
        mutablePeriod15.setHours((int) (short) 100);
        boolean boolean18 = periodType12.equals((java.lang.Object) mutablePeriod15);
        org.joda.time.Duration duration19 = org.joda.time.Duration.ZERO;
        long long20 = duration19.getStandardDays();
        mutablePeriod15.add((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Period period23 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days24 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period23);
        org.joda.time.PeriodType periodType25 = days24.getPeriodType();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant26, readableDuration27);
        mutablePeriod28.setHours((int) (short) 100);
        boolean boolean31 = periodType25.equals((java.lang.Object) mutablePeriod28);
        org.joda.time.Duration duration32 = org.joda.time.Duration.ZERO;
        long long33 = duration32.getStandardDays();
        mutablePeriod28.add((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((long) (byte) 10, (long) '#', periodType37);
        org.joda.time.DurationFieldType durationFieldType39 = org.joda.time.DurationFieldType.weekyears();
        int int40 = period38.get(durationFieldType39);
        int int41 = mutablePeriod28.get(durationFieldType39);
        int int42 = mutablePeriod15.get(durationFieldType39);
        mutablePeriod15.setSeconds(100);
        org.joda.time.PeriodType periodType45 = mutablePeriod15.getPeriodType();
        org.joda.time.Period period46 = period8.normalizedStandard(periodType45);
        org.joda.time.Period period48 = period46.plusMonths((-8));
        org.joda.time.Period period50 = period48.plusMinutes(160);
        org.joda.time.Period period52 = period48.plusSeconds((-2147483648));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period52);
    }

    @Test
    public void test16381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16381");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("P52Y160DT-1H35M32.003S");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test16382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16382");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((long) 0, (long) (byte) 10, periodType2, chronology3);
        org.joda.time.Duration duration5 = org.joda.time.Duration.ZERO;
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration5.toPeriod(chronology6);
        org.joda.time.Period period8 = period4.withFields((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Period period9 = period7.toPeriod();
        org.joda.time.Period period10 = period7.negated();
        org.joda.time.Period period11 = period7.normalizedStandard();
        java.lang.Class<?> wildcardClass12 = period7.getClass();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test16383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16383");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("P2400D");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'days'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test16384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16384");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) -1, (int) '#', (int) ' ', 100);
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.days();
        int int6 = mutablePeriod4.get(durationFieldType5);
        org.joda.time.Hours hours7 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) mutablePeriod4);
        org.joda.time.Hours hours9 = hours7.dividedBy((int) (short) -1);
        org.joda.time.Hours hours10 = org.joda.time.Hours.FOUR;
        org.joda.time.Hours hours12 = hours10.minus(0);
        org.joda.time.Hours hours13 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours15 = org.joda.time.Hours.hours((int) (byte) -1);
        boolean boolean16 = hours13.isGreaterThan(hours15);
        boolean boolean17 = hours12.isLessThan(hours15);
        java.lang.String str18 = hours12.toString();
        org.joda.time.Hours hours19 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours20 = hours12.plus(hours19);
        org.joda.time.Hours hours21 = hours7.minus(hours12);
        org.joda.time.Hours hours23 = hours12.dividedBy(1);
        org.joda.time.Hours hours25 = hours12.multipliedBy(160);
        org.joda.time.Duration duration26 = org.joda.time.Duration.ZERO;
        long long27 = duration26.getStandardDays();
        org.joda.time.Hours hours28 = duration26.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType29 = hours28.getFieldType();
        org.joda.time.Hours hours30 = null;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        org.joda.time.Hours hours32 = hours12.plus(hours30);
        org.joda.time.DurationFieldType durationFieldType33 = hours32.getFieldType();
        java.lang.String str34 = hours32.toString();
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT4H" + "'", str18, "PT4H");
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT4H" + "'", str34, "PT4H");
    }

    @Test
    public void test16385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16385");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.Period period4 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days5 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period4);
        org.joda.time.PeriodType periodType6 = days5.getPeriodType();
        boolean boolean7 = days2.isGreaterThan(days5);
        int int8 = days2.size();
        org.joda.time.Days days9 = days2.negated();
        org.joda.time.Days days11 = days9.minus(3);
        org.joda.time.Days days12 = org.joda.time.Days.ZERO;
        org.joda.time.Days days13 = org.joda.time.Days.ZERO;
        org.joda.time.Period period15 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days16 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period15);
        org.joda.time.Days days18 = days16.minus(10);
        boolean boolean19 = days13.isGreaterThan(days16);
        org.joda.time.Days days20 = days12.minus(days13);
        org.joda.time.Days days21 = org.joda.time.Days.ZERO;
        int int22 = days21.getDays();
        org.joda.time.Period period24 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days25 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period24);
        org.joda.time.Period period27 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days28 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period27);
        org.joda.time.PeriodType periodType29 = days28.getPeriodType();
        boolean boolean30 = days25.isGreaterThan(days28);
        org.joda.time.Period period32 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days33 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period32);
        org.joda.time.Days days34 = days28.minus(days33);
        org.joda.time.Days days35 = days21.minus(days28);
        org.joda.time.Period period37 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days38 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period37);
        org.joda.time.Period period40 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days41 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period40);
        org.joda.time.PeriodType periodType42 = days41.getPeriodType();
        boolean boolean43 = days38.isGreaterThan(days41);
        org.joda.time.Period period45 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days46 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period45);
        org.joda.time.Days days47 = days41.minus(days46);
        org.joda.time.Days days48 = days21.plus(days47);
        org.joda.time.Days days49 = days13.minus(days48);
        org.joda.time.Days days51 = days49.multipliedBy((-32));
        org.joda.time.Days days52 = days9.minus(days49);
        org.joda.time.Days days54 = days49.multipliedBy((int) (byte) -1);
        org.joda.time.Days days55 = org.joda.time.Days.ONE;
        boolean boolean56 = days49.isGreaterThan(days55);
        org.joda.time.Duration duration57 = days49.toStandardDuration();
        org.joda.time.Days days58 = days49.negated();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(days58);
    }

    @Test
    public void test16386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16386");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(1L);
        mutablePeriod1.setMillis((int) (byte) 10);
        org.joda.time.Duration duration5 = new org.joda.time.Duration((long) (-1));
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes(100L);
        org.joda.time.Period period9 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days10 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period9);
        org.joda.time.PeriodType periodType11 = days10.getPeriodType();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(readableInstant12, readableDuration13);
        mutablePeriod14.setHours((int) (short) 100);
        boolean boolean17 = periodType11.equals((java.lang.Object) mutablePeriod14);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((java.lang.Object) duration7, periodType11, chronology18);
        boolean boolean20 = duration5.isEqual((org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration7.toIntervalTo(readableInstant21);
        org.joda.time.Days days23 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval22);
        mutablePeriod1.setPeriod((org.joda.time.ReadableInterval) interval22);
        int int25 = mutablePeriod1.getMillis();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test16387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16387");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) -1, (int) '#', (int) ' ', 100);
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.days();
        int int6 = mutablePeriod4.get(durationFieldType5);
        org.joda.time.Hours hours7 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) mutablePeriod4);
        org.joda.time.Hours hours9 = hours7.dividedBy(3);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Duration duration11 = hours10.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType12 = hours10.getFieldType();
        org.joda.time.Hours hours13 = org.joda.time.Hours.SIX;
        boolean boolean14 = hours10.isLessThan(hours13);
        org.joda.time.Hours hours16 = org.joda.time.Hours.hours((int) (byte) 100);
        java.lang.String str17 = hours16.toString();
        org.joda.time.Duration duration18 = org.joda.time.Duration.ZERO;
        long long19 = duration18.getStandardDays();
        org.joda.time.Hours hours20 = duration18.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType21 = hours20.getFieldType();
        org.joda.time.Hours hours22 = null;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.Period period25 = new org.joda.time.Period((long) '4');
        org.joda.time.Period period27 = period25.withHours(32);
        org.joda.time.Hours hours28 = period25.toStandardHours();
        org.joda.time.Hours hours29 = hours28.negated();
        boolean boolean30 = hours23.isGreaterThan(hours28);
        org.joda.time.Hours hours31 = org.joda.time.Hours.FOUR;
        org.joda.time.Duration duration32 = hours31.toStandardDuration();
        org.joda.time.Hours hours34 = hours31.dividedBy((int) ' ');
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((int) (short) -1, (int) '#', (int) ' ', 100);
        org.joda.time.DurationFieldType durationFieldType40 = org.joda.time.DurationFieldType.days();
        int int41 = mutablePeriod39.get(durationFieldType40);
        org.joda.time.Hours hours42 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) mutablePeriod39);
        org.joda.time.Hours hours44 = hours42.dividedBy((int) (short) -1);
        org.joda.time.Hours hours46 = hours44.plus((int) (short) 10);
        boolean boolean47 = hours34.isGreaterThan(hours46);
        org.joda.time.Hours hours48 = hours23.plus(hours46);
        org.joda.time.Hours hours50 = hours23.minus(13);
        boolean boolean51 = hours16.isGreaterThan(hours50);
        org.joda.time.Hours hours52 = hours10.plus(hours16);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT100H" + "'", str17, "PT100H");
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(hours52);
    }

    @Test
    public void test16388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16388");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds2 = duration1.toStandardSeconds();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds5 = duration4.toStandardSeconds();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration1.toPeriod();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType18 = periodType17.withWeeksRemoved();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration16.toPeriod(periodType17, chronology19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType23 = periodType22.withMonthsRemoved();
        org.joda.time.Period period24 = duration16.toPeriodTo(readableInstant21, periodType23);
        org.joda.time.Period period25 = duration16.toPeriod();
        org.joda.time.Duration duration26 = duration12.plus((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration27 = duration12.toDuration();
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType29 = periodType28.withMonthsRemoved();
        org.joda.time.PeriodType periodType30 = periodType29.withMinutesRemoved();
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration12, periodType30);
        boolean boolean32 = duration1.isEqual((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Period period33 = new org.joda.time.Period((java.lang.Object) duration12);
        int int34 = period33.getDays();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds37 = duration36.toStandardSeconds();
        org.joda.time.Seconds seconds39 = seconds37.plus(100);
        org.joda.time.ReadablePeriod readablePeriod40 = null;
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.standardSecondsIn(readablePeriod40);
        org.joda.time.Seconds seconds42 = seconds37.minus(seconds41);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds45 = duration44.toStandardSeconds();
        java.lang.String str46 = seconds45.toString();
        org.joda.time.DurationFieldType durationFieldType47 = org.joda.time.DurationFieldType.days();
        boolean boolean48 = seconds45.isSupported(durationFieldType47);
        org.joda.time.Seconds seconds49 = null;
        org.joda.time.Seconds seconds50 = seconds45.minus(seconds49);
        boolean boolean51 = seconds41.equals((java.lang.Object) seconds49);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds54 = duration53.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType55 = seconds54.getFieldType();
        org.joda.time.Seconds seconds57 = seconds54.dividedBy(2);
        int int58 = seconds54.getSeconds();
        org.joda.time.Seconds seconds59 = seconds41.minus(seconds54);
        org.joda.time.Seconds seconds60 = seconds54.negated();
        org.joda.time.DurationFieldType durationFieldType61 = seconds54.getFieldType();
        org.joda.time.Period period63 = period33.withFieldAdded(durationFieldType61, 160);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT60S" + "'", str46, "PT60S");
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 60 + "'", int58 == 60);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertNotNull(period63);
    }

    @Test
    public void test16389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16389");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.PeriodType periodType4 = periodType3.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2, periodType3);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.Period period10 = org.joda.time.Period.hours(0);
        org.joda.time.DurationFieldType durationFieldType12 = period10.getFieldType((int) (short) 1);
        org.joda.time.Period period14 = period10.plusDays(10);
        boolean boolean15 = periodType8.equals((java.lang.Object) 10);
        org.joda.time.Period period16 = new org.joda.time.Period((long) ' ', periodType8);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((long) 32, periodType8, chronology17);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration1.toPeriod(periodType8, chronology19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period20);
        org.joda.time.Period period23 = period20.withYears(88500);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType25 = period20.getFieldType(51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(period23);
    }

    @Test
    public void test16390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16390");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes(240L);
        long long2 = duration1.getMillis();
        org.joda.time.Period period4 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days5 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period4);
        org.joda.time.Period period7 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days8 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Period period10 = period7.withSeconds((int) ' ');
        org.joda.time.Period period11 = period4.minus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Period period13 = period4.plusHours((-1));
        org.joda.time.Period period15 = period4.withDays((int) 'a');
        org.joda.time.Period period17 = period15.withSeconds(52);
        int int18 = period15.getMillis();
        int int19 = period15.getHours();
        org.joda.time.Period period21 = period15.minusYears(13);
        org.joda.time.Period period23 = period21.plusSeconds((-1));
        org.joda.time.Period period25 = period21.plusSeconds(32);
        boolean boolean26 = duration1.equals((java.lang.Object) 32);
        long long27 = duration1.getStandardSeconds();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 14400000L + "'", long2 == 14400000L);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 14400L + "'", long27 == 14400L);
    }

    @Test
    public void test16391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16391");
        org.joda.time.Period period4 = new org.joda.time.Period(2, 96, (int) (byte) 1, (-596526));
    }

    @Test
    public void test16392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16392");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.weeksIn(readableInterval1);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.weeksIn(readableInterval3);
        boolean boolean5 = weeks2.isLessThan(weeks4);
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeksIn(readableInterval7);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeksIn(readableInterval9);
        boolean boolean11 = weeks8.isLessThan(weeks10);
        org.joda.time.Weeks weeks12 = weeks8.negated();
        org.joda.time.Weeks weeks14 = weeks12.minus((int) (byte) 100);
        org.joda.time.Weeks weeks15 = weeks6.plus(weeks12);
        boolean boolean16 = weeks0.isLessThan(weeks12);
        org.joda.time.Weeks weeks18 = weeks0.multipliedBy((int) (short) 1);
        org.joda.time.ReadableInterval readableInterval19 = null;
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeksIn(readableInterval19);
        org.joda.time.Weeks weeks22 = weeks20.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks23 = weeks18.plus(weeks20);
        org.joda.time.Weeks weeks25 = weeks23.dividedBy(8);
        org.joda.time.Weeks weeks27 = weeks23.dividedBy(60);
        org.joda.time.Duration duration28 = weeks27.toStandardDuration();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Period period32 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Period period34 = period32.withMillis((int) (byte) -1);
        org.joda.time.Weeks weeks35 = period34.toStandardWeeks();
        org.joda.time.Weeks weeks36 = weeks30.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks30.plus((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval39 = null;
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.weeksIn(readableInterval39);
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.weeksIn(readableInterval41);
        boolean boolean43 = weeks40.isLessThan(weeks42);
        org.joda.time.Weeks weeks44 = weeks40.negated();
        org.joda.time.Weeks weeks46 = weeks44.minus((int) (byte) 100);
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.weeksIn(readableInterval47);
        org.joda.time.ReadableInterval readableInterval49 = null;
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.weeksIn(readableInterval49);
        boolean boolean51 = weeks48.isLessThan(weeks50);
        org.joda.time.Weeks weeks53 = weeks50.minus((int) (short) -1);
        org.joda.time.Weeks weeks55 = weeks53.multipliedBy(0);
        boolean boolean56 = weeks46.isGreaterThan(weeks55);
        org.joda.time.Period period61 = new org.joda.time.Period(0, (int) '4', (int) (short) 100, (int) (byte) -1);
        org.joda.time.Period period63 = period61.withDays((int) 'a');
        org.joda.time.Weeks weeks64 = period63.toStandardWeeks();
        int int65 = weeks64.getWeeks();
        org.joda.time.ReadableInterval readableInterval66 = null;
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.weeksIn(readableInterval66);
        org.joda.time.ReadableInterval readableInterval68 = null;
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.weeksIn(readableInterval68);
        boolean boolean70 = weeks67.isLessThan(weeks69);
        org.joda.time.Weeks weeks72 = weeks69.minus((int) (short) -1);
        org.joda.time.Weeks weeks73 = weeks72.negated();
        org.joda.time.Weeks weeks75 = weeks72.multipliedBy(0);
        boolean boolean76 = weeks64.isGreaterThan(weeks75);
        org.joda.time.Weeks weeks77 = weeks55.minus(weeks64);
        org.joda.time.Weeks weeks78 = weeks30.minus(weeks77);
        boolean boolean79 = weeks27.isLessThan(weeks30);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 13 + "'", int65 == 13);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test16393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16393");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((long) 7);
    }

    @Test
    public void test16394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16394");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodParser periodParser3 = periodFormatter2.getParser();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds6 = duration5.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        org.joda.time.Seconds seconds9 = seconds6.plus(25);
        org.joda.time.Seconds seconds10 = seconds6.negated();
        org.joda.time.PeriodType periodType11 = seconds10.getPeriodType();
        org.joda.time.format.PeriodFormatter periodFormatter12 = periodFormatter2.withParseType(periodType11);
        org.joda.time.format.PeriodPrinter periodPrinter13 = periodFormatter12.getPrinter();
        org.joda.time.format.PeriodParser periodParser14 = periodFormatter12.getParser();
        boolean boolean15 = periodFormatter12.isPrinter();
        org.joda.time.PeriodType periodType16 = periodFormatter12.getParseType();
        java.io.Writer writer17 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) (-1));
        org.joda.time.Duration duration22 = duration19.withDurationAdded((long) 3, (int) '#');
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.ZERO;
        org.joda.time.Duration duration24 = seconds23.toStandardDuration();
        boolean boolean25 = duration22.isEqual((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration27 = duration24.withMillis((long) 42);
        org.joda.time.Period period28 = duration27.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter12.printTo(writer17, (org.joda.time.ReadablePeriod) period28);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodParser3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodFormatter12);
        org.junit.Assert.assertNull(periodPrinter13);
        org.junit.Assert.assertNull(periodParser14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(period28);
    }

    @Test
    public void test16395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16395");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ZERO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        java.lang.String str2 = seconds0.toString();
        java.lang.String str3 = seconds0.toString();
        org.joda.time.Duration duration4 = seconds0.toStandardDuration();
        org.joda.time.Seconds seconds6 = seconds0.plus(0);
        org.joda.time.Seconds seconds8 = seconds6.plus((-15));
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT0S" + "'", str2, "PT0S");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT0S" + "'", str3, "PT0S");
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
    }

    @Test
    public void test16396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16396");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeksIn(readableInterval2);
        boolean boolean4 = weeks1.isLessThan(weeks3);
        org.joda.time.Weeks weeks5 = weeks1.negated();
        org.joda.time.Weeks weeks7 = weeks5.minus((int) (byte) 100);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.weeksIn(readableInterval8);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeksIn(readableInterval10);
        boolean boolean12 = weeks9.isLessThan(weeks11);
        org.joda.time.Weeks weeks14 = weeks11.minus((int) (short) -1);
        org.joda.time.Weeks weeks16 = weeks14.multipliedBy(0);
        boolean boolean17 = weeks7.isGreaterThan(weeks16);
        org.joda.time.Period period22 = new org.joda.time.Period(0, (int) '4', (int) (short) 100, (int) (byte) -1);
        org.joda.time.Period period24 = period22.withDays((int) 'a');
        org.joda.time.Weeks weeks25 = period24.toStandardWeeks();
        int int26 = weeks25.getWeeks();
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.weeksIn(readableInterval27);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.weeksIn(readableInterval29);
        boolean boolean31 = weeks28.isLessThan(weeks30);
        org.joda.time.Weeks weeks33 = weeks30.minus((int) (short) -1);
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks36 = weeks33.multipliedBy(0);
        boolean boolean37 = weeks25.isGreaterThan(weeks36);
        org.joda.time.Weeks weeks38 = weeks16.minus(weeks25);
        org.joda.time.Duration duration39 = weeks16.toStandardDuration();
        org.joda.time.Weeks weeks41 = weeks16.dividedBy((int) '#');
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks44 = weeks42.dividedBy(52);
        org.joda.time.DurationFieldType durationFieldType45 = org.joda.time.DurationFieldType.weeks();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.DurationField durationField47 = durationFieldType45.getField(chronology46);
        boolean boolean48 = weeks42.isSupported(durationFieldType45);
        org.joda.time.DurationFieldType durationFieldType49 = weeks42.getFieldType();
        org.joda.time.PeriodType periodType50 = weeks42.getPeriodType();
        org.joda.time.Weeks weeks51 = weeks16.plus(weeks42);
        org.joda.time.Weeks weeks53 = weeks51.minus((-672));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks55 = weeks51.minus(671);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483648 + -671");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 13 + "'", int26 == 13);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(durationField47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks53);
    }

    @Test
    public void test16397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16397");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration1 = org.joda.time.Duration.parse("PT-52M");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"PT-52M\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test16398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16398");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) (short) 0, 52, (int) (short) -1, 52, (-1), (int) ' ', (int) '4', 8);
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod8);
        java.lang.Object obj10 = mutablePeriod8.clone();
        int int11 = mutablePeriod8.getMinutes();
        org.joda.time.Days days12 = org.joda.time.Days.ZERO;
        int int13 = days12.getDays();
        org.joda.time.Period period15 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days16 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period15);
        org.joda.time.Period period18 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days19 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period18);
        org.joda.time.PeriodType periodType20 = days19.getPeriodType();
        boolean boolean21 = days16.isGreaterThan(days19);
        org.joda.time.Period period23 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days24 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period23);
        org.joda.time.Days days25 = days19.minus(days24);
        org.joda.time.Days days26 = days12.minus(days19);
        org.joda.time.Days days28 = days19.plus((int) (byte) 1);
        org.joda.time.DurationFieldType durationFieldType30 = days28.getFieldType((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.ZERO;
        org.joda.time.Period period33 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days34 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period33);
        org.joda.time.Days days36 = days34.minus(10);
        boolean boolean37 = days31.isGreaterThan(days34);
        org.joda.time.Days days38 = days28.plus(days31);
        org.joda.time.Duration duration39 = days38.toStandardDuration();
        org.joda.time.Days days41 = days38.dividedBy(10);
        org.joda.time.Days days43 = days38.plus(30);
        mutablePeriod8.add((org.joda.time.ReadablePeriod) days38);
        org.joda.time.Duration duration45 = days38.toStandardDuration();
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "P52M-1W53DT-1H32M52.008S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "P52M-1W53DT-1H32M52.008S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "P52M-1W53DT-1H32M52.008S");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(duration45);
    }

    @Test
    public void test16399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16399");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(10);
        org.joda.time.Weeks weeks3 = weeks1.plus(3);
        org.joda.time.Period period4 = weeks1.toPeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test16400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16400");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodParser periodParser3 = periodFormatter2.getParser();
        java.util.Locale locale4 = periodFormatter2.getLocale();
        org.joda.time.PeriodType periodType5 = periodFormatter2.getParseType();
        org.joda.time.Days days6 = org.joda.time.Days.ZERO;
        int int7 = days6.getDays();
        org.joda.time.Period period9 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days10 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Period period12 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days13 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period12);
        org.joda.time.PeriodType periodType14 = days13.getPeriodType();
        boolean boolean15 = days10.isGreaterThan(days13);
        org.joda.time.Period period17 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days18 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period17);
        org.joda.time.Days days19 = days13.minus(days18);
        org.joda.time.Days days20 = days6.minus(days13);
        org.joda.time.Days days22 = days13.plus((int) (byte) 1);
        org.joda.time.DurationFieldType durationFieldType24 = days22.getFieldType((int) (short) 0);
        org.joda.time.PeriodType periodType25 = days22.getPeriodType();
        org.joda.time.format.PeriodFormatter periodFormatter26 = periodFormatter2.withParseType(periodType25);
        boolean boolean27 = periodFormatter2.isParser();
        java.util.Locale locale28 = null;
        org.joda.time.format.PeriodFormatter periodFormatter29 = periodFormatter2.withLocale(locale28);
        org.joda.time.format.PeriodParser periodParser30 = periodFormatter29.getParser();
        org.junit.Assert.assertNull(periodParser3);
        org.junit.Assert.assertNull(locale4);
        org.junit.Assert.assertNull(periodType5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodFormatter26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(periodFormatter29);
        org.junit.Assert.assertNull(periodParser30);
    }

    @Test
    public void test16401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16401");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) -1, (int) '#', (int) ' ', 100);
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.days();
        int int6 = mutablePeriod4.get(durationFieldType5);
        org.joda.time.Hours hours7 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) mutablePeriod4);
        org.joda.time.Hours hours9 = hours7.dividedBy((int) (short) -1);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(readableInstant10, readableDuration11);
        org.joda.time.Period period13 = mutablePeriod12.toPeriod();
        org.joda.time.Period period15 = period13.withHours(0);
        org.joda.time.Hours hours16 = period15.toStandardHours();
        org.joda.time.Hours hours17 = hours9.minus(hours16);
        org.joda.time.Period period18 = hours16.toPeriod();
        org.joda.time.Duration duration19 = hours16.toStandardDuration();
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration19);
    }

    @Test
    public void test16402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16402");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.Period period7 = org.joda.time.Period.hours(0);
        org.joda.time.DurationFieldType durationFieldType9 = period7.getFieldType((int) (short) 1);
        org.joda.time.Period period11 = period7.plusDays(10);
        boolean boolean12 = periodType5.equals((java.lang.Object) 10);
        org.joda.time.Period period13 = new org.joda.time.Period((long) ' ', periodType5);
        org.joda.time.PeriodType periodType14 = periodType5.withDaysRemoved();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) 2, (long) 32, periodType14, chronology15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = periodType14.indexOf(durationFieldType17);
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType14);
        org.joda.time.PeriodType periodType20 = periodType14.withSecondsRemoved();
        org.joda.time.PeriodType periodType21 = periodType14.withHoursRemoved();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds24 = duration23.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType25 = seconds24.getFieldType();
        java.lang.String str26 = durationFieldType25.getName();
        org.joda.time.Chronology chronology27 = null;
        boolean boolean28 = durationFieldType25.isSupported(chronology27);
        boolean boolean29 = periodType14.isSupported(durationFieldType25);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "seconds" + "'", str26, "seconds");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test16403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16403");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType3 = periodType2.withWeeksRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.Period period5 = duration1.toPeriod(periodType2, chronology4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType8 = periodType7.withMonthsRemoved();
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant6, periodType8);
        org.joda.time.Duration duration10 = duration1.toDuration();
        org.joda.time.Duration duration12 = duration10.plus((long) (-1));
        org.joda.time.Duration duration14 = duration12.minus(1L);
        java.lang.String str15 = duration14.toString();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, readableInstant17, periodType18);
        org.joda.time.DurationFieldType durationFieldType20 = org.joda.time.DurationFieldType.eras();
        int int21 = period19.get(durationFieldType20);
        int int22 = period19.getYears();
        java.lang.String str23 = period19.toString();
        org.joda.time.Period period24 = period19.normalizedStandard();
        org.joda.time.Period period26 = period19.plusMinutes((int) (short) 1);
        org.joda.time.Days days27 = period19.toStandardDays();
        org.joda.time.Period period29 = period19.plusMillis(3);
        org.joda.time.Days days30 = period19.toStandardDays();
        int int31 = period19.getMillis();
        boolean boolean32 = duration14.equals((java.lang.Object) period19);
        org.joda.time.Period period33 = duration14.toPeriod();
        org.joda.time.Period period35 = period33.withMinutes(35);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT-60.002S" + "'", str15, "PT-60.002S");
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT0S" + "'", str23, "PT0S");
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
    }

    @Test
    public void test16404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16404");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.PeriodType periodType4 = periodType3.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2, periodType3);
        int int6 = mutablePeriod5.getWeeks();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((java.lang.Object) mutablePeriod5, chronology7);
        org.joda.time.Period period9 = period8.normalizedStandard();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Duration duration11 = period8.toDurationTo(readableInstant10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((long) 10);
        java.lang.String str14 = duration13.toString();
        org.joda.time.Duration duration16 = duration13.minus((long) (byte) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(readableInstant17, readableDuration18);
        mutablePeriod19.setHours((int) (short) 100);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology24 = null;
        mutablePeriod19.setPeriod((org.joda.time.ReadableDuration) duration23, chronology24);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds28 = duration27.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType29 = seconds28.getFieldType();
        mutablePeriod19.add(durationFieldType29, (int) (short) 0);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(readableInstant32, readableDuration33);
        mutablePeriod34.setHours((int) (short) 100);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology39 = null;
        mutablePeriod34.setPeriod((org.joda.time.ReadableDuration) duration38, chronology39);
        org.joda.time.Chronology chronology41 = null;
        mutablePeriod19.setPeriod((org.joda.time.ReadableDuration) duration38, chronology41);
        org.joda.time.ReadableDuration readableDuration43 = null;
        boolean boolean44 = duration38.isEqual(readableDuration43);
        org.joda.time.Duration duration45 = duration13.minus((org.joda.time.ReadableDuration) duration38);
        long long46 = duration13.getStandardSeconds();
        long long47 = duration13.getMillis();
        org.joda.time.Duration duration48 = duration11.minus((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardSeconds((long) (short) 100);
        org.joda.time.Duration duration52 = duration50.plus((long) (byte) 1);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableDuration readableDuration59 = null;
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod(readableInstant58, readableDuration59);
        mutablePeriod60.setPeriod((long) ' ', (long) 52);
        mutablePeriod60.addDays(100);
        org.joda.time.PeriodType periodType66 = mutablePeriod60.getPeriodType();
        org.joda.time.Period period67 = new org.joda.time.Period((long) (short) 0, periodType66);
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod(readableInstant55, readableInstant56, periodType66);
        org.joda.time.Period period69 = new org.joda.time.Period(readableInstant53, readableInstant54, periodType66);
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.Period period71 = duration52.toPeriod(periodType66, chronology70);
        int int72 = duration13.compareTo((org.joda.time.ReadableDuration) duration52);
        org.joda.time.Duration duration74 = duration52.minus(60L);
        org.joda.time.Duration duration76 = duration74.plus((long) 70);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT600S" + "'", str14, "PT600S");
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 600L + "'", long46 == 600L);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 600000L + "'", long47 == 600000L);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(duration76);
    }

    @Test
    public void test16405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16405");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((-1L));
        long long2 = duration1.getMillis();
        org.joda.time.Duration duration5 = new org.joda.time.Duration((long) 8, (long) 10);
        org.joda.time.Duration duration8 = duration5.withDurationAdded(540000L, (int) (byte) 10);
        org.joda.time.Period period9 = duration5.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Duration duration13 = new org.joda.time.Duration((long) (-1));
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period18 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days19 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Period period21 = period18.withSeconds((int) ' ');
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.millis();
        org.joda.time.Period period23 = period21.normalizedStandard(periodType22);
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(readableInstant15, readableInstant16, periodType22);
        org.joda.time.PeriodType periodType25 = periodType22.withYearsRemoved();
        org.joda.time.Period period26 = duration13.toPeriodTo(readableInstant14, periodType25);
        boolean boolean27 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration13);
        boolean boolean28 = duration5.isShorterThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(readableInstant34, readableDuration35);
        mutablePeriod36.setPeriod((long) ' ', (long) 52);
        mutablePeriod36.addDays(100);
        org.joda.time.PeriodType periodType42 = mutablePeriod36.getPeriodType();
        org.joda.time.Period period43 = new org.joda.time.Period((long) (short) 0, periodType42);
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(readableInstant31, readableInstant32, periodType42);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant29, readableInstant30, periodType42);
        org.joda.time.Period period47 = period45.plusMonths(13);
        org.joda.time.Duration duration48 = period45.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Interval interval50 = duration48.toIntervalFrom(readableInstant49);
        org.joda.time.Duration duration52 = duration11.withDurationAdded((org.joda.time.ReadableDuration) duration48, 4);
        org.joda.time.Duration duration54 = duration52.withMillis((long) 97);
        boolean boolean55 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableDuration readableDuration59 = null;
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod(readableInstant58, readableDuration59);
        mutablePeriod60.setHours((int) (short) 100);
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology65 = null;
        mutablePeriod60.setPeriod((org.joda.time.ReadableDuration) duration64, chronology65);
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType68 = periodType67.withWeeksRemoved();
        org.joda.time.PeriodType periodType69 = periodType68.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod(readableInstant57, (org.joda.time.ReadableDuration) duration64, periodType68);
        org.joda.time.Duration duration72 = duration64.withMillis((long) 10);
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod(readableInstant56, (org.joda.time.ReadableDuration) duration64);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod((long) (short) 1, periodType76, chronology77);
        org.joda.time.Period period79 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration64, readableInstant74, periodType76);
        boolean boolean80 = duration54.isLongerThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Duration duration82 = duration64.withMillis(599L);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-86400000L) + "'", long2 == (-86400000L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(duration82);
    }

    @Test
    public void test16406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16406");
        org.joda.time.Period period1 = org.joda.time.Period.millis(52);
        org.joda.time.Hours hours2 = period1.toStandardHours();
        org.joda.time.Period period4 = period1.plusDays((-29));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test16407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16407");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Period period3 = period2.toPeriod();
        org.joda.time.Minutes minutes4 = period3.toStandardMinutes();
        org.joda.time.Minutes minutes6 = minutes4.minus(51840000);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
    }

    @Test
    public void test16408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16408");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds2 = duration1.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType3 = seconds2.getFieldType();
        org.joda.time.Seconds seconds5 = seconds2.plus(25);
        org.joda.time.Seconds seconds6 = seconds2.negated();
        org.joda.time.Seconds seconds8 = seconds2.dividedBy(10);
        org.joda.time.DurationFieldType durationFieldType9 = seconds2.getFieldType();
        org.joda.time.PeriodType periodType10 = seconds2.getPeriodType();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.Period period13 = duration12.toPeriod();
        org.joda.time.Seconds seconds14 = duration12.toStandardSeconds();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds17 = duration16.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.plus(25);
        boolean boolean21 = seconds14.isLessThan(seconds20);
        org.joda.time.Seconds seconds22 = seconds20.negated();
        org.joda.time.Duration duration23 = seconds20.toStandardDuration();
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.PeriodType periodType25 = seconds24.getPeriodType();
        boolean boolean26 = seconds20.isLessThan(seconds24);
        org.joda.time.Seconds seconds28 = seconds20.dividedBy((int) (short) 10);
        org.joda.time.Seconds seconds30 = seconds28.multipliedBy((-1));
        org.joda.time.Seconds seconds32 = seconds28.multipliedBy((int) (short) 1);
        boolean boolean33 = seconds2.isGreaterThan(seconds28);
        org.joda.time.Seconds seconds35 = seconds2.minus((-3));
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.seconds((-8));
        java.lang.String str38 = seconds37.toString();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds41 = duration40.toStandardSeconds();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds44 = duration43.toStandardSeconds();
        boolean boolean45 = duration40.isLongerThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Period period46 = duration40.toPeriod();
        org.joda.time.Period period47 = period46.negated();
        org.joda.time.Seconds seconds48 = period47.toStandardSeconds();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds51 = duration50.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType52 = seconds51.getFieldType();
        org.joda.time.Seconds seconds54 = seconds51.plus(25);
        org.joda.time.Seconds seconds55 = seconds51.negated();
        org.joda.time.Seconds seconds56 = seconds48.minus(seconds51);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.seconds((int) 'a');
        org.joda.time.Seconds seconds59 = seconds51.plus(seconds58);
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.parseSeconds("PT-86400S");
        boolean boolean62 = seconds59.isGreaterThan(seconds61);
        org.joda.time.Seconds seconds63 = seconds37.plus(seconds59);
        boolean boolean64 = seconds35.isGreaterThan(seconds59);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "PT-8S" + "'", str38, "PT-8S");
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test16409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16409");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((-1L));
        mutablePeriod1.addSeconds(100);
        java.lang.Object obj4 = null;
        org.joda.time.Duration duration5 = new org.joda.time.Duration(obj4);
        org.joda.time.Duration duration6 = duration5.toDuration();
        mutablePeriod1.add((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period8 = duration6.toPeriod();
        org.joda.time.Period period10 = new org.joda.time.Period((-60001L));
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.weeks();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DurationField durationField13 = durationFieldType11.getField(chronology12);
        boolean boolean14 = period10.isSupported(durationFieldType11);
        int int15 = period8.indexOf(durationFieldType11);
        org.joda.time.MutablePeriod mutablePeriod17 = org.joda.time.MutablePeriod.parse("P-1DT35H1M");
        mutablePeriod17.addHours(21168000);
        org.joda.time.Period period20 = period8.withFields((org.joda.time.ReadablePeriod) mutablePeriod17);
        java.lang.String str21 = period20.toString();
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(durationField13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-1DT21168035H1M" + "'", str21, "P-1DT21168035H1M");
    }

    @Test
    public void test16410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16410");
        org.joda.time.Period period1 = org.joda.time.Period.hours(0);
        org.joda.time.DurationFieldType durationFieldType3 = period1.getFieldType((int) (short) 1);
        org.joda.time.Period period5 = period1.plusDays(10);
        org.joda.time.Seconds seconds6 = period1.toStandardSeconds();
        org.joda.time.Duration duration7 = seconds6.toStandardDuration();
        org.joda.time.Seconds seconds8 = seconds6.negated();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(seconds8);
    }

    @Test
    public void test16411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16411");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = minutes0.getFieldType();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.minutes(35);
        org.joda.time.Minutes minutes5 = minutes3.plus((-12));
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(readableInstant6, readableDuration7);
        org.joda.time.Period period9 = mutablePeriod8.toPeriod();
        int int10 = period9.size();
        org.joda.time.Period period12 = period9.plusDays(1);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.THREE;
        org.joda.time.Period period14 = period9.withFields((org.joda.time.ReadablePeriod) minutes13);
        java.lang.String str15 = minutes13.toString();
        int int16 = minutes13.getMinutes();
        org.joda.time.Minutes minutes18 = minutes13.multipliedBy(7);
        boolean boolean19 = minutes5.isGreaterThan(minutes13);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes20 = minutes0.minus(minutes13);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483648 + -3");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 8 + "'", int10 == 8);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT3M" + "'", str15, "PT3M");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test16412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16412");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds2 = duration1.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType3 = seconds2.getFieldType();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.parseSeconds("P0W");
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        int int7 = seconds6.getSeconds();
        org.joda.time.Seconds seconds9 = seconds6.multipliedBy((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType10 = seconds6.getFieldType();
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.seconds(100);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.TWO;
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds12.isGreaterThan(seconds13);
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((long) 'a', (long) 0);
        mutablePeriod18.addYears((int) '4');
        org.joda.time.Chronology chronology22 = null;
        mutablePeriod18.add((long) 100, chronology22);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds26 = duration25.toStandardSeconds();
        java.lang.String str27 = seconds26.toString();
        org.joda.time.DurationFieldType durationFieldType28 = org.joda.time.DurationFieldType.days();
        boolean boolean29 = seconds26.isSupported(durationFieldType28);
        int int30 = mutablePeriod18.get(durationFieldType28);
        boolean boolean31 = seconds13.isSupported(durationFieldType28);
        org.joda.time.Seconds seconds33 = seconds13.dividedBy((int) ' ');
        org.joda.time.DurationFieldType durationFieldType34 = seconds33.getFieldType();
        boolean boolean35 = seconds6.isLessThan(seconds33);
        // The following exception was thrown during execution in test generation
        try {
            int int37 = seconds6.getValue((-21167965));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -21167965");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 60 + "'", int7 == 60);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT60S" + "'", str27, "PT60S");
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test16413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16413");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (short) 0, 600, 0, 35);
        org.joda.time.Period period6 = period4.minusDays((-160));
        org.joda.time.format.PeriodPrinter periodPrinter7 = null;
        org.joda.time.format.PeriodParser periodParser8 = null;
        org.joda.time.format.PeriodFormatter periodFormatter9 = new org.joda.time.format.PeriodFormatter(periodPrinter7, periodParser8);
        org.joda.time.format.PeriodParser periodParser10 = periodFormatter9.getParser();
        org.joda.time.format.PeriodPrinter periodPrinter11 = periodFormatter9.getPrinter();
        java.util.Locale locale12 = null;
        org.joda.time.format.PeriodFormatter periodFormatter13 = periodFormatter9.withLocale(locale12);
        java.util.Locale locale14 = null;
        org.joda.time.format.PeriodFormatter periodFormatter15 = periodFormatter13.withLocale(locale14);
        java.util.Locale locale16 = null;
        org.joda.time.format.PeriodFormatter periodFormatter17 = periodFormatter15.withLocale(locale16);
        java.util.Locale locale18 = null;
        org.joda.time.format.PeriodFormatter periodFormatter19 = periodFormatter17.withLocale(locale18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType21 = minutes20.getPeriodType();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes23 = minutes20.plus(minutes22);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.ZERO;
        boolean boolean26 = minutes24.isLessThan(minutes25);
        boolean boolean27 = minutes20.isLessThan(minutes24);
        org.joda.time.Minutes minutes29 = minutes24.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = minutes30.getFieldType();
        org.joda.time.PeriodType periodType32 = minutes30.getPeriodType();
        org.joda.time.Minutes minutes33 = minutes29.plus(minutes30);
        org.joda.time.PeriodType periodType34 = minutes29.getPeriodType();
        org.joda.time.format.PeriodFormatter periodFormatter35 = periodFormatter17.withParseType(periodType34);
        java.util.Locale locale36 = null;
        org.joda.time.format.PeriodFormatter periodFormatter37 = periodFormatter17.withLocale(locale36);
        java.util.Locale locale38 = periodFormatter17.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = period4.toString(periodFormatter17);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNull(periodParser10);
        org.junit.Assert.assertNull(periodPrinter11);
        org.junit.Assert.assertNotNull(periodFormatter13);
        org.junit.Assert.assertNotNull(periodFormatter15);
        org.junit.Assert.assertNotNull(periodFormatter17);
        org.junit.Assert.assertNotNull(periodFormatter19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodFormatter35);
        org.junit.Assert.assertNotNull(periodFormatter37);
        org.junit.Assert.assertNull(locale38);
    }

    @Test
    public void test16414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16414");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((long) 2147482976, (-7L), periodType2, chronology3);
    }

    @Test
    public void test16415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16415");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 596);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Period period4 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days5 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period4);
        org.joda.time.PeriodType periodType6 = days5.getPeriodType();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(readableInstant7, readableDuration8);
        mutablePeriod9.setHours((int) (short) 100);
        boolean boolean12 = periodType6.equals((java.lang.Object) mutablePeriod9);
        org.joda.time.Duration duration13 = org.joda.time.Duration.ZERO;
        long long14 = duration13.getStandardDays();
        mutablePeriod9.add((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType18 = periodType17.withWeeksRemoved();
        org.joda.time.PeriodType periodType19 = periodType18.withDaysRemoved();
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant16, periodType18);
        java.lang.String str21 = periodType18.getName();
        org.joda.time.PeriodType periodType22 = periodType18.withMinutesRemoved();
        org.joda.time.PeriodType periodType23 = periodType22.withHoursRemoved();
        org.joda.time.PeriodType periodType24 = periodType22.withYearsRemoved();
        org.joda.time.PeriodType periodType25 = periodType22.withDaysRemoved();
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant2, periodType25);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Millis" + "'", str21, "Millis");
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType25);
    }

    @Test
    public void test16416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16416");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        mutablePeriod3.clear();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod3);
    }

    @Test
    public void test16417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16417");
        org.joda.time.Period period1 = org.joda.time.Period.days(1);
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.Period period4 = period2.minusWeeks((int) ' ');
        org.joda.time.Period period6 = period2.withMonths((-160));
        org.joda.time.Period period8 = period2.withHours((-2147483648));
        org.joda.time.Period period10 = org.joda.time.Period.minutes(0);
        org.joda.time.Period period12 = period10.minusWeeks(32);
        org.joda.time.Days days13 = org.joda.time.Days.FOUR;
        org.joda.time.DurationFieldType durationFieldType14 = days13.getFieldType();
        org.joda.time.Chronology chronology15 = null;
        boolean boolean16 = durationFieldType14.isSupported(chronology15);
        int int17 = period10.indexOf(durationFieldType14);
        org.joda.time.Period period19 = period8.withFieldAdded(durationFieldType14, 600);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.DurationField durationField21 = durationFieldType14.getField(chronology20);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(durationField21);
    }

    @Test
    public void test16418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16418");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableDuration1);
        mutablePeriod2.setSeconds(8);
        org.joda.time.MutablePeriod mutablePeriod5 = mutablePeriod2.toMutablePeriod();
        int int6 = mutablePeriod5.getDays();
        mutablePeriod5.addWeeks(40);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant9, readableInstant10);
        org.joda.time.Period period13 = period11.withHours((int) (byte) 100);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((long) 0, (long) (byte) 10, periodType16, chronology17);
        org.joda.time.Duration duration19 = org.joda.time.Duration.ZERO;
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration19.toPeriod(chronology20);
        org.joda.time.Period period22 = period18.withFields((org.joda.time.ReadablePeriod) period21);
        org.joda.time.Weeks weeks23 = period22.toStandardWeeks();
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = weeks23.isSupported(durationFieldType24);
        org.joda.time.Period period27 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Period period29 = period27.withMillis((int) (byte) -1);
        org.joda.time.Weeks weeks30 = period29.toStandardWeeks();
        org.joda.time.Duration duration31 = weeks30.toStandardDuration();
        org.joda.time.Weeks weeks32 = weeks23.plus(weeks30);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks35 = weeks33.dividedBy(52);
        org.joda.time.DurationFieldType durationFieldType36 = org.joda.time.DurationFieldType.weeks();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.DurationField durationField38 = durationFieldType36.getField(chronology37);
        boolean boolean39 = weeks33.isSupported(durationFieldType36);
        int int40 = weeks23.get(durationFieldType36);
        int int41 = period11.get(durationFieldType36);
        int int42 = mutablePeriod5.get(durationFieldType36);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod5.setValue(75, (-62));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 75");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(durationField38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 40 + "'", int42 == 40);
    }

    @Test
    public void test16419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16419");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((-1L));
        org.joda.time.Duration duration3 = duration1.withMillis(0L);
        org.joda.time.Period period5 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days6 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period5);
        org.joda.time.PeriodType periodType7 = days6.getPeriodType();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(readableInstant8, readableDuration9);
        mutablePeriod10.setHours((int) (short) 100);
        boolean boolean13 = periodType7.equals((java.lang.Object) mutablePeriod10);
        org.joda.time.Duration duration14 = org.joda.time.Duration.ZERO;
        long long15 = duration14.getStandardDays();
        mutablePeriod10.add((org.joda.time.ReadableDuration) duration14);
        long long17 = duration14.getStandardMinutes();
        org.joda.time.Duration duration19 = duration14.withMillis((long) 0);
        boolean boolean20 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration23 = duration3.withDurationAdded(0L, (-52));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration23);
    }

    @Test
    public void test16420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16420");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType4 = periodType3.withWeeksRemoved();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(periodType3, chronology5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType9 = periodType8.withMonthsRemoved();
        org.joda.time.Period period10 = duration2.toPeriodTo(readableInstant7, periodType9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration16);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.Duration duration20 = org.joda.time.Duration.ZERO;
        long long21 = duration20.getStandardDays();
        org.joda.time.Hours hours22 = duration20.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType23 = hours22.getFieldType();
        boolean boolean24 = periodType19.isSupported(durationFieldType23);
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(readableInstant12, (org.joda.time.ReadableDuration) duration16, periodType19);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant11, periodType19);
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(84326400L, periodType19);
        org.joda.time.DurationFieldType durationFieldType29 = mutablePeriod27.getFieldType(0);
        java.lang.String str30 = durationFieldType29.getName();
        org.joda.time.Chronology chronology31 = null;
        boolean boolean32 = durationFieldType29.isSupported(chronology31);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "years" + "'", str30, "years");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test16421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16421");
        org.joda.time.format.PeriodPrinter periodPrinter8 = null;
        org.joda.time.format.PeriodParser periodParser9 = null;
        org.joda.time.format.PeriodFormatter periodFormatter10 = new org.joda.time.format.PeriodFormatter(periodPrinter8, periodParser9);
        org.joda.time.format.PeriodParser periodParser11 = periodFormatter10.getParser();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds14 = duration13.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType15 = seconds14.getFieldType();
        org.joda.time.Seconds seconds17 = seconds14.plus(25);
        org.joda.time.Seconds seconds18 = seconds14.negated();
        org.joda.time.PeriodType periodType19 = seconds18.getPeriodType();
        org.joda.time.format.PeriodFormatter periodFormatter20 = periodFormatter10.withParseType(periodType19);
        org.joda.time.PeriodType periodType21 = periodType19.withYearsRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(900, (-2147483648), 21, (-13), 27, 107, (int) '#', (-12), periodType21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodParser11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodFormatter20);
        org.junit.Assert.assertNotNull(periodType21);
    }

    @Test
    public void test16422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16422");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Interval interval3 = duration1.toIntervalFrom(readableInstant2);
        long long4 = duration1.getStandardMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(interval3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
    }

    @Test
    public void test16423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16423");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 'a', (long) 0);
        mutablePeriod2.addYears((int) '4');
        int int5 = mutablePeriod2.getYears();
        org.joda.time.Chronology chronology7 = null;
        mutablePeriod2.add(1L, chronology7);
        mutablePeriod2.setDays((-2147483648));
        int int11 = mutablePeriod2.getSeconds();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType21 = periodType20.withWeeksRemoved();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration19.toPeriod(periodType20, chronology22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType26 = periodType25.withMonthsRemoved();
        org.joda.time.Period period27 = duration19.toPeriodTo(readableInstant24, periodType26);
        org.joda.time.Period period28 = duration19.toPeriod();
        org.joda.time.Duration duration29 = duration15.plus((org.joda.time.ReadableDuration) duration19);
        java.lang.String str30 = duration15.toString();
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Period period33 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days34 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period33);
        org.joda.time.Period period36 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days37 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period36);
        org.joda.time.PeriodType periodType38 = days37.getPeriodType();
        boolean boolean39 = days34.isGreaterThan(days37);
        int int40 = days34.size();
        org.joda.time.Days days41 = days34.negated();
        org.joda.time.Days days43 = days41.minus(3);
        org.joda.time.Days days44 = days43.negated();
        java.lang.String str45 = days44.toString();
        org.joda.time.Period period47 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days48 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period47);
        org.joda.time.Period period50 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days51 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period50);
        org.joda.time.PeriodType periodType52 = days51.getPeriodType();
        boolean boolean53 = days48.isGreaterThan(days51);
        org.joda.time.Days days55 = days48.minus(1);
        org.joda.time.Days days57 = days55.dividedBy(60);
        org.joda.time.Days days58 = days44.plus(days55);
        org.joda.time.Duration duration59 = days44.toStandardDuration();
        org.joda.time.Duration duration61 = duration59.withMillis((long) 25);
        org.joda.time.Period period63 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Period period65 = period63.minusWeeks(52);
        org.joda.time.Days days66 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period63);
        org.joda.time.Duration duration67 = days66.toStandardDuration();
        long long68 = duration67.getStandardHours();
        org.joda.time.Duration duration70 = duration59.withDurationAdded((org.joda.time.ReadableDuration) duration67, (int) (short) 1);
        java.lang.String str71 = duration70.toString();
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardHours(17340L);
        org.joda.time.Duration duration75 = duration73.withMillis((long) (-97));
        boolean boolean76 = duration70.isShorterThan((org.joda.time.ReadableDuration) duration75);
        org.joda.time.Duration duration77 = duration15.minus((org.joda.time.ReadableDuration) duration70);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT0S" + "'", str30, "PT0S");
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "P3D" + "'", str45, "P3D");
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "PT259200S" + "'", str71, "PT259200S");
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(duration77);
    }

    @Test
    public void test16424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16424");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(600000L);
        java.lang.String str2 = duration1.toString();
        org.joda.time.ReadableDuration readableDuration3 = null;
        boolean boolean4 = duration1.isShorterThan(readableDuration3);
        org.joda.time.Period period8 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days9 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period8);
        org.joda.time.Period period11 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days12 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period11);
        org.joda.time.Period period14 = period11.withSeconds((int) ' ');
        org.joda.time.Period period15 = period8.minus((org.joda.time.ReadablePeriod) period11);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType17 = periodType16.withMonthsRemoved();
        org.joda.time.Period period18 = period15.withPeriodType(periodType16);
        org.joda.time.Period period19 = new org.joda.time.Period((long) (short) 0, (-1L), periodType16);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((long) (short) 1, periodType21, chronology22);
        boolean boolean24 = periodType16.equals((java.lang.Object) chronology22);
        org.joda.time.PeriodType periodType25 = periodType16.withMillisRemoved();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration1.toPeriod(periodType25, chronology26);
        org.joda.time.Period period29 = new org.joda.time.Period((long) '4');
        org.joda.time.Period period31 = period29.withHours(32);
        org.joda.time.Period period32 = period29.normalizedStandard();
        org.joda.time.DurationFieldType durationFieldType33 = org.joda.time.DurationFieldType.weeks();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.DurationField durationField35 = durationFieldType33.getField(chronology34);
        org.joda.time.Period period37 = period29.withField(durationFieldType33, 10);
        int int38 = period29.getHours();
        org.joda.time.Period period40 = period29.withWeeks((int) (short) 0);
        org.joda.time.Period period43 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days44 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period43);
        org.joda.time.PeriodType periodType45 = days44.getPeriodType();
        org.joda.time.Period period47 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days48 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period47);
        org.joda.time.Period period50 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days51 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period50);
        org.joda.time.PeriodType periodType52 = days51.getPeriodType();
        boolean boolean53 = days48.isGreaterThan(days51);
        org.joda.time.Period period55 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days56 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period55);
        org.joda.time.Days days57 = days51.minus(days56);
        org.joda.time.Period period59 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days60 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period59);
        org.joda.time.Days days62 = days60.minus(10);
        org.joda.time.Days days63 = days51.plus(days60);
        org.joda.time.Days days65 = days63.dividedBy(100);
        org.joda.time.Days days66 = null;
        org.joda.time.Days days67 = days65.plus(days66);
        org.joda.time.Days days68 = days65.negated();
        boolean boolean69 = days44.isGreaterThan(days68);
        org.joda.time.DurationFieldType durationFieldType70 = days44.getFieldType();
        org.joda.time.PeriodType periodType71 = days44.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod((long) (-7), periodType71);
        org.joda.time.Period period73 = period29.normalizedStandard(periodType71);
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.Period period75 = duration1.toPeriod(periodType71, chronology74);
        org.joda.time.PeriodType periodType76 = periodType71.withMinutesRemoved();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT600S" + "'", str2, "PT600S");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(durationField35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(periodType76);
    }

    @Test
    public void test16425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16425");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        java.lang.Object obj2 = null;
        org.joda.time.Duration duration3 = new org.joda.time.Duration(obj2);
        org.joda.time.Period period4 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration3);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType9 = periodType8.withWeeksRemoved();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration7.toPeriod(periodType8, chronology10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType14 = periodType13.withMonthsRemoved();
        org.joda.time.Period period15 = duration7.toPeriodTo(readableInstant12, periodType14);
        org.joda.time.Period period16 = duration7.toPeriod();
        org.joda.time.Duration duration17 = duration3.plus((org.joda.time.ReadableDuration) duration7);
        java.lang.String str18 = duration3.toString();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant19);
        org.joda.time.Period period22 = period20.minusMillis(0);
        org.joda.time.Period period24 = period22.minusMonths(27);
        org.joda.time.Period period26 = period24.withSeconds((int) (byte) 10);
        int int27 = period24.getHours();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT0S" + "'", str18, "PT0S");
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test16426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16426");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType1 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.ZERO;
        boolean boolean6 = minutes4.isLessThan(minutes5);
        boolean boolean7 = minutes0.isLessThan(minutes4);
        int int8 = minutes0.getMinutes();
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((long) 25);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod10);
        int int12 = minutes11.getMinutes();
        boolean boolean13 = minutes0.isGreaterThan(minutes11);
        org.joda.time.Duration duration14 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType16 = minutes15.getPeriodType();
        int int17 = minutes15.getMinutes();
        java.lang.String str18 = minutes15.toString();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = minutes19.getFieldType();
        java.lang.String str21 = minutes19.toString();
        boolean boolean22 = minutes15.isLessThan(minutes19);
        org.joda.time.Minutes minutes23 = minutes15.negated();
        org.joda.time.Minutes minutes25 = minutes23.multipliedBy((-672));
        org.joda.time.Minutes minutes26 = minutes0.plus(minutes25);
        org.joda.time.Duration duration27 = minutes26.toStandardDuration();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration27.toPeriod(chronology28);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT0M" + "'", str18, "PT0M");
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT-2147483648M" + "'", str21, "PT-2147483648M");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(period29);
    }

    @Test
    public void test16427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16427");
        org.joda.time.Period period1 = org.joda.time.Period.hours((-160));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test16428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16428");
        org.joda.time.Period period2 = org.joda.time.Period.months(25);
        org.joda.time.PeriodType periodType3 = period2.getPeriodType();
        org.joda.time.PeriodType periodType4 = periodType3.withHoursRemoved();
        org.joda.time.PeriodType periodType5 = periodType3.withYearsRemoved();
        org.joda.time.PeriodType periodType6 = periodType5.withWeeksRemoved();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(3600060000L, periodType5, chronology7);
        mutablePeriod8.addWeeks(0);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
    }

    @Test
    public void test16429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16429");
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType6 = periodType5.withWeeksRemoved();
        org.joda.time.PeriodType periodType7 = periodType6.withDaysRemoved();
        org.joda.time.Period period8 = new org.joda.time.Period((long) 'a', (long) (short) 0, periodType7);
        org.joda.time.Period period9 = new org.joda.time.Period((long) ' ', (long) '#', periodType7);
        org.joda.time.PeriodType periodType10 = periodType7.withSecondsRemoved();
        org.joda.time.Period period11 = new org.joda.time.Period((long) 8, periodType7);
        org.joda.time.MutablePeriod mutablePeriod12 = period11.toMutablePeriod();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardSeconds((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.PeriodType periodType17 = periodType16.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration14, readableInstant15, periodType16);
        org.joda.time.MutablePeriod mutablePeriod19 = mutablePeriod18.copy();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds22 = duration21.toStandardSeconds();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds25 = duration24.toStandardSeconds();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType29 = periodType28.withMinutesRemoved();
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant27, periodType28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration24.toIntervalFrom(readableInstant31);
        mutablePeriod19.add((org.joda.time.ReadableInterval) interval32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval32);
        int int35 = seconds34.getSeconds();
        org.joda.time.DurationFieldType durationFieldType36 = seconds34.getFieldType();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.DurationField durationField38 = durationFieldType36.getField(chronology37);
        int int39 = mutablePeriod12.get(durationFieldType36);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 60 + "'", int35 == 60);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(durationField38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test16430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16430");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 600);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Interval interval3 = duration1.toIntervalFrom(readableInstant2);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval3);
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.PeriodType periodType6 = weeks4.getPeriodType();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(interval3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(periodType6);
    }

    @Test
    public void test16431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16431");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks3 = weeks1.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks3.minus((int) (short) -1);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
    }

    @Test
    public void test16432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16432");
        org.joda.time.Period period1 = org.joda.time.Period.days((int) (byte) -1);
        org.joda.time.Period period2 = period1.normalizedStandard();
        org.joda.time.Period period4 = period2.withHours(658);
        org.joda.time.Period period6 = period4.plusMonths(416);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test16433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16433");
        org.joda.time.ReadablePartial readablePartial0 = null;
        org.joda.time.ReadablePartial readablePartial1 = null;
        org.joda.time.Period period4 = org.joda.time.Period.parse("PT2S");
        org.joda.time.Weeks weeks5 = period4.toStandardWeeks();
        org.joda.time.PeriodType periodType6 = weeks5.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) (short) 0, periodType6);
        int int8 = periodType6.size();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period9 = new org.joda.time.Period(readablePartial0, readablePartial1, periodType6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadablePartial objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test16434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16434");
        org.joda.time.Period period4 = new org.joda.time.Period((-12), (-3603160), (int) '4', 18);
    }

    @Test
    public void test16435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16435");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodParser periodParser3 = periodFormatter2.getParser();
        java.util.Locale locale4 = null;
        org.joda.time.format.PeriodFormatter periodFormatter5 = periodFormatter2.withLocale(locale4);
        java.util.Locale locale6 = periodFormatter2.getLocale();
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        org.joda.time.format.PeriodPrinter periodPrinter9 = periodFormatter8.getPrinter();
        java.util.Locale locale10 = null;
        org.joda.time.format.PeriodFormatter periodFormatter11 = periodFormatter8.withLocale(locale10);
        org.junit.Assert.assertNull(periodParser3);
        org.junit.Assert.assertNotNull(periodFormatter5);
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNull(periodPrinter9);
        org.junit.Assert.assertNotNull(periodFormatter11);
    }

    @Test
    public void test16436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16436");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds2 = duration1.toStandardSeconds();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds5 = duration4.toStandardSeconds();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration1.toPeriod();
        org.joda.time.Period period8 = period7.negated();
        org.joda.time.Seconds seconds9 = period8.toStandardSeconds();
        org.joda.time.Period period10 = period8.negated();
        int int11 = period10.getHours();
        org.joda.time.Period period13 = period10.minusWeeks(0);
        org.joda.time.DurationFieldType durationFieldType14 = org.joda.time.DurationFieldType.millis();
        org.joda.time.Period period16 = period13.withFieldAdded(durationFieldType14, (-2147483638));
        org.joda.time.Period period17 = period16.negated();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period17);
    }

    @Test
    public void test16437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16437");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) 71);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        java.lang.Object obj4 = null;
        org.joda.time.Duration duration5 = new org.joda.time.Duration(obj4);
        org.joda.time.Period period6 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType11 = periodType10.withWeeksRemoved();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration9.toPeriod(periodType10, chronology12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType16 = periodType15.withMonthsRemoved();
        org.joda.time.Period period17 = duration9.toPeriodTo(readableInstant14, periodType16);
        org.joda.time.Period period18 = duration9.toPeriod();
        org.joda.time.Duration duration19 = duration5.plus((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration20 = duration5.toDuration();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((java.lang.Object) duration5, chronology21);
        org.joda.time.Period period24 = period22.plusWeeks((int) '4');
        org.joda.time.PeriodType periodType25 = period24.getPeriodType();
        boolean boolean26 = duration1.equals((java.lang.Object) periodType25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = duration1.toPeriodFrom(readableInstant27);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(period28);
    }

    @Test
    public void test16438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16438");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("P0D");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType3 = minutes2.getPeriodType();
        int int4 = minutes2.getMinutes();
        java.lang.String str5 = minutes2.toString();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = minutes6.getFieldType();
        java.lang.String str8 = minutes6.toString();
        boolean boolean9 = minutes2.isLessThan(minutes6);
        org.joda.time.Minutes minutes10 = minutes2.negated();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.parseMinutes("P0D");
        org.joda.time.Minutes minutes14 = minutes12.dividedBy((int) '#');
        org.joda.time.Minutes minutes15 = minutes2.minus(minutes12);
        boolean boolean16 = minutes1.isGreaterThan(minutes12);
        org.joda.time.Minutes minutes18 = minutes12.plus((-2));
        org.joda.time.Duration duration19 = minutes12.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT0M" + "'", str5, "PT0M");
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT-2147483648M" + "'", str8, "PT-2147483648M");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(duration19);
    }

    @Test
    public void test16439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16439");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(2147483647L);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test16440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16440");
        org.joda.time.Period period1 = org.joda.time.Period.months((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod2 = period1.toMutablePeriod();
        org.joda.time.Period period4 = period1.withDays((int) (short) 1);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((long) 1, (-2419200000L), chronology7);
        java.lang.String str9 = period8.toString();
        org.joda.time.Period period10 = period1.withFields((org.joda.time.ReadablePeriod) period8);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-4WT0.001S" + "'", str9, "P-4WT0.001S");
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test16441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16441");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.THREE;
        org.joda.time.DurationFieldType durationFieldType2 = minutes1.getFieldType();
        org.joda.time.Minutes minutes4 = minutes1.plus(54);
        org.joda.time.Minutes minutes6 = minutes1.multipliedBy(60);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.minutes((-1));
        int int9 = minutes8.getMinutes();
        org.joda.time.DurationFieldType durationFieldType10 = org.joda.time.DurationFieldType.weekyears();
        java.lang.String str11 = durationFieldType10.getName();
        java.lang.String str12 = durationFieldType10.getName();
        java.lang.String str13 = durationFieldType10.toString();
        boolean boolean14 = minutes8.isSupported(durationFieldType10);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType16 = minutes15.getPeriodType();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy((int) ' ');
        org.joda.time.Minutes minutes20 = minutes15.minus(minutes17);
        org.joda.time.Minutes minutes22 = minutes15.multipliedBy(0);
        org.joda.time.Minutes minutes23 = minutes8.minus(minutes22);
        org.joda.time.Minutes minutes24 = minutes6.minus(minutes8);
        org.joda.time.PeriodType periodType25 = minutes24.getPeriodType();
        org.joda.time.PeriodType periodType26 = periodType25.withMillisRemoved();
        org.joda.time.PeriodType periodType27 = periodType26.withHoursRemoved();
        org.joda.time.Period period28 = new org.joda.time.Period(0L, periodType27);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "weekyears" + "'", str11, "weekyears");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "weekyears" + "'", str12, "weekyears");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "weekyears" + "'", str13, "weekyears");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType27);
    }

    @Test
    public void test16442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16442");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(60L, 16830730L, chronology2);
        mutablePeriod3.addMillis((int) (short) 0);
        int int6 = mutablePeriod3.getMonths();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test16443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16443");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) '4', chronology1);
        org.joda.time.Duration duration3 = org.joda.time.Duration.ZERO;
        long long4 = duration3.getStandardDays();
        org.joda.time.Hours hours5 = duration3.toStandardHours();
        long long6 = duration3.getStandardMinutes();
        long long7 = duration3.getStandardDays();
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration3);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration3.toIntervalFrom(readableInstant9);
        org.joda.time.Hours hours11 = duration3.toStandardHours();
        org.joda.time.Duration duration12 = org.joda.time.Duration.ZERO;
        long long13 = duration12.getStandardDays();
        org.joda.time.Hours hours14 = duration12.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType15 = hours14.getFieldType();
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours18 = hours16.multipliedBy((int) (byte) 0);
        org.joda.time.Duration duration19 = hours16.toStandardDuration();
        org.joda.time.Hours hours21 = org.joda.time.Hours.hours(8);
        boolean boolean22 = hours16.isGreaterThan(hours21);
        org.joda.time.Duration duration23 = hours21.toStandardDuration();
        org.joda.time.Hours hours24 = hours14.minus(hours21);
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((int) (short) -1, (int) '#', (int) ' ', 100);
        org.joda.time.DurationFieldType durationFieldType30 = org.joda.time.DurationFieldType.days();
        int int31 = mutablePeriod29.get(durationFieldType30);
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) mutablePeriod29);
        org.joda.time.Hours hours34 = hours32.dividedBy((int) (short) -1);
        org.joda.time.Hours hours35 = org.joda.time.Hours.FOUR;
        org.joda.time.Hours hours37 = hours35.minus(0);
        org.joda.time.Hours hours38 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours40 = org.joda.time.Hours.hours((int) (byte) -1);
        boolean boolean41 = hours38.isGreaterThan(hours40);
        boolean boolean42 = hours37.isLessThan(hours40);
        java.lang.String str43 = hours37.toString();
        org.joda.time.Hours hours44 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours45 = hours37.plus(hours44);
        org.joda.time.Hours hours46 = hours32.minus(hours37);
        org.joda.time.Duration duration47 = org.joda.time.Duration.ZERO;
        long long48 = duration47.getStandardDays();
        org.joda.time.Hours hours49 = duration47.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType50 = hours49.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod51 = hours49.toMutablePeriod();
        org.joda.time.Hours hours52 = org.joda.time.Hours.THREE;
        org.joda.time.DurationFieldType durationFieldType53 = hours52.getFieldType();
        org.joda.time.Hours hours54 = hours49.plus(hours52);
        org.joda.time.Hours hours55 = hours37.plus(hours54);
        org.joda.time.PeriodType periodType56 = hours54.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType57 = hours54.getFieldType();
        org.joda.time.Hours hours58 = hours14.plus(hours54);
        org.joda.time.Hours hours59 = hours11.plus(hours54);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "PT4H" + "'", str43, "PT4H");
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
    }

    @Test
    public void test16444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16444");
        org.joda.time.Period period1 = new org.joda.time.Period((long) '4');
        org.joda.time.Period period3 = period1.withHours(32);
        org.joda.time.Period period4 = period1.normalizedStandard();
        java.lang.String str5 = period4.toString();
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Chronology chronology7 = null;
        boolean boolean8 = durationFieldType6.isSupported(chronology7);
        org.joda.time.Period period10 = period4.withFieldAdded(durationFieldType6, 13);
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.Period period12 = period4.withPeriodType(periodType11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType16 = periodType15.withWeeksRemoved();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration14.toPeriod(periodType15, chronology17);
        org.joda.time.Days days19 = org.joda.time.Days.ZERO;
        int int20 = days19.getDays();
        org.joda.time.Period period22 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days23 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period22);
        org.joda.time.Period period25 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days26 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period25);
        org.joda.time.PeriodType periodType27 = days26.getPeriodType();
        boolean boolean28 = days23.isGreaterThan(days26);
        org.joda.time.Period period30 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days31 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period30);
        org.joda.time.Days days32 = days26.minus(days31);
        org.joda.time.Days days33 = days19.minus(days26);
        boolean boolean34 = duration14.equals((java.lang.Object) days26);
        org.joda.time.Period period36 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days37 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period36);
        org.joda.time.Days days39 = days37.minus(10);
        org.joda.time.Days days41 = days39.plus((int) (short) -1);
        org.joda.time.Days days42 = days26.plus(days39);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod(readableInstant46, readableDuration47);
        mutablePeriod48.setPeriod((long) ' ', (long) 52);
        mutablePeriod48.addDays(100);
        org.joda.time.PeriodType periodType54 = mutablePeriod48.getPeriodType();
        org.joda.time.Period period55 = new org.joda.time.Period((long) (short) 0, periodType54);
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod(readableInstant43, readableInstant44, periodType54);
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((java.lang.Object) days26, periodType54);
        java.lang.String str58 = mutablePeriod57.toString();
        org.joda.time.Period period59 = period12.minus((org.joda.time.ReadablePeriod) mutablePeriod57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableInstant readableInstant61 = null;
        mutablePeriod57.setPeriod(readableInstant60, readableInstant61);
        int int63 = mutablePeriod57.getSeconds();
        org.joda.time.Period period65 = org.joda.time.Period.millis(60);
        int int66 = period65.getSeconds();
        mutablePeriod57.mergePeriod((org.joda.time.ReadablePeriod) period65);
        mutablePeriod57.setPeriod((long) (short) 100, (-539L));
        mutablePeriod57.setMinutes(3);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT0.052S" + "'", str5, "PT0.052S");
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "PT0S" + "'", str58, "PT0S");
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
    }

    @Test
    public void test16445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16445");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds2 = duration1.toStandardSeconds();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds5 = duration4.toStandardSeconds();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration1.toPeriod();
        org.joda.time.Period period8 = period7.negated();
        org.joda.time.Seconds seconds9 = period8.toStandardSeconds();
        org.joda.time.Period period10 = period8.negated();
        org.joda.time.Period period12 = period8.plusMonths((-2));
        org.joda.time.Period period14 = period12.minusDays(60);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((java.lang.Object) period14, chronology15);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
    }

    @Test
    public void test16446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16446");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((long) 25);
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(3);
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy(4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.minutesIn(readableInterval7);
        java.lang.String str9 = minutes8.toString();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType11 = minutes10.getPeriodType();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) ' ');
        org.joda.time.Minutes minutes15 = minutes10.minus(minutes12);
        boolean boolean16 = minutes8.isLessThan(minutes10);
        org.joda.time.Minutes minutes17 = minutes6.plus(minutes10);
        int int18 = minutes6.getMinutes();
        int int19 = minutes6.getMinutes();
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT0M" + "'", str9, "PT0M");
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test16447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16447");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours2 = hours0.minus(10);
        org.joda.time.Hours hours3 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours5 = org.joda.time.Hours.hours((int) (byte) -1);
        boolean boolean6 = hours3.isGreaterThan(hours5);
        org.joda.time.Hours hours8 = hours3.minus((int) (byte) 0);
        org.joda.time.Hours hours10 = hours8.minus((int) '#');
        org.joda.time.Duration duration11 = hours10.toStandardDuration();
        org.joda.time.Hours hours12 = hours2.minus(hours10);
        org.joda.time.Hours hours14 = hours2.dividedBy((int) (byte) 1);
        org.joda.time.Hours hours16 = hours2.dividedBy(8);
        org.joda.time.Duration duration17 = org.joda.time.Duration.ZERO;
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration17.toPeriod(chronology18);
        org.joda.time.Hours hours20 = duration17.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType21 = hours20.getFieldType();
        java.lang.String str22 = hours20.toString();
        org.joda.time.Period period23 = hours20.toPeriod();
        org.joda.time.Hours hours24 = hours2.minus(hours20);
        org.joda.time.Hours hours26 = hours24.minus(2147483622);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT0H" + "'", str22, "PT0H");
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours26);
    }

    @Test
    public void test16448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16448");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes(2147483622);
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test16449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16449");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes2 = minutes0.plus((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.ZERO;
        boolean boolean5 = minutes3.isLessThan(minutes4);
        org.joda.time.Minutes minutes7 = minutes4.plus((int) (byte) 0);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType9 = minutes8.getPeriodType();
        org.joda.time.Minutes minutes10 = minutes7.plus(minutes8);
        org.joda.time.Minutes minutes11 = minutes0.plus(minutes7);
        org.joda.time.DurationFieldType durationFieldType12 = minutes0.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(durationFieldType12);
    }

    @Test
    public void test16450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16450");
        org.joda.time.Days days0 = org.joda.time.Days.ZERO;
        org.joda.time.Days days1 = org.joda.time.Days.ZERO;
        org.joda.time.Period period3 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days4 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period3);
        org.joda.time.Days days6 = days4.minus(10);
        boolean boolean7 = days1.isGreaterThan(days4);
        org.joda.time.Days days8 = days0.minus(days1);
        org.joda.time.Days days9 = org.joda.time.Days.THREE;
        org.joda.time.Days days11 = days9.minus((-32));
        boolean boolean12 = days0.isLessThan(days11);
        org.joda.time.DurationFieldType durationFieldType13 = days0.getFieldType();
        org.joda.time.Period period15 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days16 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period15);
        org.joda.time.Period period18 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days19 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period18);
        org.joda.time.PeriodType periodType20 = days19.getPeriodType();
        boolean boolean21 = days16.isGreaterThan(days19);
        org.joda.time.Period period23 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days24 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period23);
        org.joda.time.Days days25 = days19.minus(days24);
        org.joda.time.Period period27 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days28 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period27);
        org.joda.time.Days days30 = days28.minus(10);
        org.joda.time.Days days31 = days19.plus(days28);
        org.joda.time.Days days32 = days28.negated();
        org.joda.time.Days days34 = days32.multipliedBy(40);
        org.joda.time.Days days35 = days32.negated();
        org.joda.time.Days days36 = days0.plus(days32);
        org.joda.time.PeriodType periodType37 = days0.getPeriodType();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(periodType37);
    }

    @Test
    public void test16451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16451");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType3 = periodType2.withWeeksRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.Period period5 = duration1.toPeriod(periodType2, chronology4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType8 = periodType7.withMonthsRemoved();
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant6, periodType8);
        org.joda.time.Minutes minutes10 = duration1.toStandardMinutes();
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        java.lang.String str13 = minutes12.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT1M" + "'", str13, "PT1M");
    }

    @Test
    public void test16452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16452");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType4 = periodType3.withMonthsRemoved();
        org.joda.time.PeriodType periodType5 = periodType4.withMinutesRemoved();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) (short) 0, periodType4, chronology6);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds10 = duration9.toStandardSeconds();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds13 = duration12.toStandardSeconds();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType17 = periodType16.withMinutesRemoved();
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant15, periodType16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(readableInstant19, readableDuration20);
        mutablePeriod21.setHours((int) (short) 100);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology26 = null;
        mutablePeriod21.setPeriod((org.joda.time.ReadableDuration) duration25, chronology26);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds30 = duration29.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        mutablePeriod21.add(durationFieldType31, (int) (short) 0);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(readableInstant34, readableDuration35);
        mutablePeriod36.setHours((int) (short) 100);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology41 = null;
        mutablePeriod36.setPeriod((org.joda.time.ReadableDuration) duration40, chronology41);
        org.joda.time.Chronology chronology43 = null;
        mutablePeriod21.setPeriod((org.joda.time.ReadableDuration) duration40, chronology43);
        int int45 = duration12.compareTo((org.joda.time.ReadableDuration) duration40);
        java.lang.Object obj46 = null;
        boolean boolean47 = duration12.equals(obj46);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.seconds(2);
        org.joda.time.Duration duration50 = seconds49.toStandardDuration();
        boolean boolean51 = duration12.equals((java.lang.Object) seconds49);
        int int52 = seconds49.getSeconds();
        org.joda.time.DurationFieldType durationFieldType53 = seconds49.getFieldType();
        boolean boolean54 = periodType4.isSupported(durationFieldType53);
        org.joda.time.PeriodType periodType55 = periodType4.withDaysRemoved();
        org.joda.time.PeriodType periodType56 = periodType55.withMillisRemoved();
        org.joda.time.PeriodType periodType57 = periodType56.withMinutesRemoved();
        org.joda.time.Period period58 = new org.joda.time.Period(62424000000L, (long) (-596526), periodType56);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period60 = period58.plusHours(13);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(periodType57);
    }

    @Test
    public void test16453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16453");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        mutablePeriod2.setPeriod(1L, (long) (byte) 100);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.ZERO;
        org.joda.time.PeriodType periodType7 = seconds6.getPeriodType();
        java.lang.String str8 = seconds6.toString();
        org.joda.time.Seconds seconds10 = seconds6.plus((int) (short) 1);
        int int11 = seconds10.getSeconds();
        mutablePeriod2.add((org.joda.time.ReadablePeriod) seconds10);
        mutablePeriod2.addWeeks(8);
        mutablePeriod2.clear();
        mutablePeriod2.setSeconds((-2));
        mutablePeriod2.setPeriod((long) (short) 10);
        int int20 = mutablePeriod2.getHours();
        mutablePeriod2.setValue(4, (-1));
        int int24 = mutablePeriod2.getYears();
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT0S" + "'", str8, "PT0S");
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test16454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16454");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 8, chronology1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.TWO;
        org.joda.time.DurationFieldType durationFieldType4 = seconds3.getFieldType();
        mutablePeriod2.add((org.joda.time.ReadablePeriod) seconds3);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(readableInstant6, readableDuration7);
        mutablePeriod8.setHours((int) (short) 100);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology13 = null;
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration12, chronology13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds17 = duration16.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        mutablePeriod8.add(durationFieldType18, (int) (short) 0);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod8);
        java.lang.Object obj22 = mutablePeriod8.clone();
        mutablePeriod8.setYears(88500);
        int int25 = mutablePeriod8.getSeconds();
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "P88500YT1M");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "P88500YT1M");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "P88500YT1M");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test16455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16455");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType3 = periodType2.withWeeksRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.Period period5 = duration1.toPeriod(periodType2, chronology4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType8 = periodType7.withMonthsRemoved();
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant6, periodType8);
        org.joda.time.Duration duration10 = duration1.toDuration();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration10, readableInstant11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration19 = duration16.toDuration();
        int int20 = duration10.compareTo((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration19.toIntervalTo(readableInstant21);
        org.joda.time.Hours hours23 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval22);
        org.joda.time.Hours hours24 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval22);
        org.joda.time.Hours hours25 = org.joda.time.Hours.FIVE;
        org.joda.time.Hours hours27 = hours25.minus((int) (byte) 10);
        org.joda.time.PeriodType periodType28 = hours25.getPeriodType();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours29.negated();
        java.lang.String str31 = hours30.toString();
        java.lang.String str32 = hours30.toString();
        org.joda.time.Hours hours33 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours35 = hours33.minus(10);
        org.joda.time.Hours hours36 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours38 = org.joda.time.Hours.hours((int) (byte) -1);
        boolean boolean39 = hours36.isGreaterThan(hours38);
        org.joda.time.Hours hours41 = hours36.minus((int) (byte) 0);
        org.joda.time.Hours hours43 = hours41.minus((int) '#');
        org.joda.time.Duration duration44 = hours43.toStandardDuration();
        org.joda.time.Hours hours45 = hours35.minus(hours43);
        org.joda.time.Hours hours46 = hours30.minus(hours35);
        org.joda.time.Hours hours47 = hours25.minus(hours35);
        org.joda.time.Hours hours48 = hours24.plus(hours25);
        org.joda.time.Hours hours49 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.PeriodType periodType50 = hours49.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType51 = hours49.getFieldType();
        boolean boolean52 = hours24.isLessThan(hours49);
        org.joda.time.Hours hours53 = hours24.negated();
        org.joda.time.DurationFieldType durationFieldType54 = hours24.getFieldType();
        org.joda.time.Period period55 = hours24.toPeriod();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT-8H" + "'", str31, "PT-8H");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PT-8H" + "'", str32, "PT-8H");
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(period55);
    }

    @Test
    public void test16456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16456");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableDuration1);
        mutablePeriod2.setPeriod((long) ' ', (long) 52);
        mutablePeriod2.addDays(100);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((java.lang.Object) mutablePeriod2, chronology8);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardSeconds((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.PeriodType periodType14 = periodType13.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration11, readableInstant12, periodType13);
        org.joda.time.MutablePeriod mutablePeriod16 = mutablePeriod15.copy();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds19 = duration18.toStandardSeconds();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds22 = duration21.toStandardSeconds();
        boolean boolean23 = duration18.isLongerThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType26 = periodType25.withMinutesRemoved();
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant24, periodType25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration21.toIntervalFrom(readableInstant28);
        mutablePeriod16.add((org.joda.time.ReadableInterval) interval29);
        mutablePeriod2.add((org.joda.time.ReadableInterval) interval29);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(readableInstant32, readableDuration33);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds37 = duration36.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType38 = seconds37.getFieldType();
        mutablePeriod34.add(durationFieldType38, 52);
        mutablePeriod34.add((long) (short) 1);
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod34);
        org.joda.time.Period period45 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Period period47 = period45.plusYears((int) ' ');
        org.joda.time.Period period49 = period45.plusDays((int) (byte) -1);
        java.lang.String str50 = period49.toString();
        org.joda.time.Period period52 = period49.minusWeeks((-1));
        org.joda.time.Period period54 = period49.plusMillis(27);
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period54);
        org.joda.time.Period period57 = period54.plusMonths(74);
        org.joda.time.format.PeriodPrinter periodPrinter58 = null;
        org.joda.time.format.PeriodParser periodParser59 = null;
        org.joda.time.format.PeriodFormatter periodFormatter60 = new org.joda.time.format.PeriodFormatter(periodPrinter58, periodParser59);
        org.joda.time.format.PeriodParser periodParser61 = periodFormatter60.getParser();
        java.util.Locale locale62 = null;
        org.joda.time.format.PeriodFormatter periodFormatter63 = periodFormatter60.withLocale(locale62);
        org.joda.time.format.PeriodPrinter periodPrinter64 = periodFormatter63.getPrinter();
        org.joda.time.PeriodType periodType65 = periodFormatter63.getParseType();
        org.joda.time.format.PeriodPrinter periodPrinter66 = periodFormatter63.getPrinter();
        java.util.Locale locale67 = periodFormatter63.getLocale();
        org.joda.time.PeriodType periodType68 = periodFormatter63.getParseType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str69 = period54.toString(periodFormatter63);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P-1DT1M" + "'", str50, "P-1DT1M");
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNull(periodParser61);
        org.junit.Assert.assertNotNull(periodFormatter63);
        org.junit.Assert.assertNull(periodPrinter64);
        org.junit.Assert.assertNull(periodType65);
        org.junit.Assert.assertNull(periodPrinter66);
        org.junit.Assert.assertNull(locale67);
        org.junit.Assert.assertNull(periodType68);
    }

    @Test
    public void test16457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16457");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((java.lang.Object) period1);
        org.joda.time.Period period4 = period1.minusMonths(27);
        int int5 = period4.getMonths();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds10 = duration9.toStandardSeconds();
        java.lang.String str11 = seconds10.toString();
        org.joda.time.PeriodType periodType12 = seconds10.getPeriodType();
        org.joda.time.PeriodType periodType13 = periodType12.withSecondsRemoved();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) (-1), (long) 100, periodType13, chronology14);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(periodType13);
        org.joda.time.Chronology chronology18 = null;
        mutablePeriod16.add((long) (short) 1, chronology18);
        boolean boolean20 = period4.equals((java.lang.Object) chronology18);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-27) + "'", int5 == (-27));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT60S" + "'", str11, "PT60S");
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test16458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16458");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (byte) -1);
        org.joda.time.Hours hours3 = hours1.multipliedBy((-1));
        org.joda.time.Hours hours5 = hours3.minus((int) (byte) 1);
        org.joda.time.DurationFieldType durationFieldType6 = hours5.getFieldType();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(readableInstant7, readableDuration8);
        mutablePeriod9.setSeconds(8);
        mutablePeriod9.setValue(1, 2);
        org.joda.time.Duration duration17 = new org.joda.time.Duration((-1L), (long) ' ');
        mutablePeriod9.add((org.joda.time.ReadableDuration) duration17);
        mutablePeriod9.clear();
        boolean boolean20 = hours5.equals((java.lang.Object) mutablePeriod9);
        mutablePeriod9.addMinutes(52);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Duration duration24 = mutablePeriod9.toDurationFrom(readableInstant23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = duration24.toPeriodTo(readableInstant25);
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.Period period28 = duration24.toPeriod(periodType27);
        int int29 = period28.getSeconds();
        int int30 = period28.getMillis();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test16459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16459");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeksIn(readableInterval2);
        boolean boolean4 = weeks1.isLessThan(weeks3);
        org.joda.time.Weeks weeks5 = weeks1.negated();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((java.lang.Object) weeks1, chronology6);
        org.joda.time.Weeks weeks9 = weeks1.multipliedBy((int) (byte) 1);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeksIn(readableInterval10);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeksIn(readableInterval12);
        boolean boolean14 = weeks11.isLessThan(weeks13);
        org.joda.time.Weeks weeks15 = weeks11.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks17 = weeks1.minus(weeks15);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.weeksIn(readableInterval18);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeksIn(readableInterval20);
        boolean boolean22 = weeks19.isLessThan(weeks21);
        org.joda.time.Weeks weeks24 = weeks21.minus((int) (short) -1);
        org.joda.time.Weeks weeks26 = weeks24.multipliedBy(0);
        org.joda.time.Weeks weeks27 = null;
        boolean boolean28 = weeks24.isLessThan(weeks27);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.weeksIn(readableInterval29);
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.weeksIn(readableInterval31);
        boolean boolean33 = weeks30.isLessThan(weeks32);
        org.joda.time.Weeks weeks34 = weeks30.negated();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((java.lang.Object) weeks30, chronology35);
        int[] intArray37 = period36.getValues();
        org.joda.time.DurationFieldType[] durationFieldTypeArray38 = period36.getFieldTypes();
        boolean boolean39 = weeks24.equals((java.lang.Object) durationFieldTypeArray38);
        org.joda.time.Weeks weeks40 = weeks17.minus(weeks24);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.TWO;
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.weeksIn(readableInterval42);
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.weeksIn(readableInterval44);
        boolean boolean46 = weeks43.isLessThan(weeks45);
        org.joda.time.Weeks weeks47 = weeks43.negated();
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.weeksIn(readableInterval48);
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.weeksIn(readableInterval50);
        boolean boolean52 = weeks49.isLessThan(weeks51);
        org.joda.time.Weeks weeks53 = weeks49.negated();
        org.joda.time.Weeks weeks55 = weeks53.minus((int) (byte) 100);
        org.joda.time.Weeks weeks56 = weeks47.plus(weeks53);
        boolean boolean57 = weeks41.isLessThan(weeks53);
        org.joda.time.Weeks weeks59 = weeks41.multipliedBy((int) (short) 1);
        org.joda.time.ReadableInterval readableInterval60 = null;
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.weeksIn(readableInterval60);
        org.joda.time.Weeks weeks63 = weeks61.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks64 = weeks59.plus(weeks61);
        org.joda.time.Weeks weeks65 = weeks40.plus(weeks64);
        org.joda.time.Weeks weeks67 = weeks64.multipliedBy((int) (byte) -1);
        java.lang.String str68 = weeks64.toString();
        org.joda.time.Weeks weeks70 = weeks64.plus(0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0]");
        org.junit.Assert.assertNotNull(durationFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "P2W" + "'", str68, "P2W");
        org.junit.Assert.assertNotNull(weeks70);
    }

    @Test
    public void test16460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16460");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) 10);
        java.lang.String str2 = duration1.toString();
        boolean boolean4 = duration1.equals((java.lang.Object) 100.0d);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds7 = duration6.toStandardSeconds();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds10 = duration9.toStandardSeconds();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Interval interval13 = duration9.toIntervalTo(readableInstant12);
        org.joda.time.Seconds seconds14 = duration9.toStandardSeconds();
        boolean boolean15 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant16);
        org.joda.time.ReadablePeriod readablePeriod18 = null;
        org.joda.time.Period period19 = period17.plus(readablePeriod18);
        org.joda.time.Period period20 = period19.normalizedStandard();
        org.joda.time.Duration duration21 = period19.toStandardDuration();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT600S" + "'", str2, "PT600S");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(interval13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration21);
    }

    @Test
    public void test16461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16461");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds((long) (short) 100);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.Period period5 = duration3.toPeriod(chronology4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((long) 10);
        java.lang.String str8 = duration7.toString();
        org.joda.time.Duration duration10 = duration7.minus((long) (byte) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(readableInstant11, readableDuration12);
        mutablePeriod13.setHours((int) (short) 100);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology18 = null;
        mutablePeriod13.setPeriod((org.joda.time.ReadableDuration) duration17, chronology18);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds22 = duration21.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType23 = seconds22.getFieldType();
        mutablePeriod13.add(durationFieldType23, (int) (short) 0);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant26, readableDuration27);
        mutablePeriod28.setHours((int) (short) 100);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology33 = null;
        mutablePeriod28.setPeriod((org.joda.time.ReadableDuration) duration32, chronology33);
        org.joda.time.Chronology chronology35 = null;
        mutablePeriod13.setPeriod((org.joda.time.ReadableDuration) duration32, chronology35);
        org.joda.time.ReadableDuration readableDuration37 = null;
        boolean boolean38 = duration32.isEqual(readableDuration37);
        org.joda.time.Duration duration39 = duration7.minus((org.joda.time.ReadableDuration) duration32);
        long long40 = duration32.getMillis();
        org.joda.time.Period period41 = duration32.toPeriod();
        boolean boolean42 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration32);
        java.lang.String str43 = duration32.toString();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(readableInstant44, readableDuration45);
        org.joda.time.Period period47 = mutablePeriod46.toPeriod();
        org.joda.time.Period period49 = period47.withHours(0);
        int int50 = period47.getWeeks();
        org.joda.time.Period period52 = period47.plusSeconds((int) (byte) 100);
        org.joda.time.Period period54 = period47.withWeeks((int) '#');
        org.joda.time.PeriodType periodType55 = period47.getPeriodType();
        int int56 = periodType55.size();
        org.joda.time.Period period57 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration32, periodType55);
        org.joda.time.MutablePeriod mutablePeriod58 = new org.joda.time.MutablePeriod((-86400L), periodType55);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT600S" + "'", str8, "PT600S");
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 60000L + "'", long40 == 60000L);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "PT60S" + "'", str43, "PT60S");
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 8 + "'", int56 == 8);
    }

    @Test
    public void test16462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16462");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes4 = minutes1.plus(minutes3);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.ZERO;
        boolean boolean7 = minutes5.isLessThan(minutes6);
        boolean boolean8 = minutes1.isLessThan(minutes5);
        org.joda.time.PeriodType periodType9 = minutes1.getPeriodType();
        org.joda.time.PeriodType periodType10 = periodType9.withSecondsRemoved();
        org.joda.time.PeriodType periodType11 = periodType10.withMinutesRemoved();
        org.joda.time.PeriodType periodType12 = periodType11.withHoursRemoved();
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((long) 0, (long) (byte) 10, periodType15, chronology16);
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((int) (short) -1, (int) '#', (int) ' ', 100);
        org.joda.time.DurationFieldType durationFieldType23 = org.joda.time.DurationFieldType.days();
        int int24 = mutablePeriod22.get(durationFieldType23);
        boolean boolean25 = periodType15.isSupported(durationFieldType23);
        boolean boolean26 = periodType11.isSupported(durationFieldType23);
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(periodType11);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(86400L, periodType11);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test16463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16463");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("PT-100M-35.100S");
        org.junit.Assert.assertNotNull(mutablePeriod1);
    }

    @Test
    public void test16464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16464");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) (byte) 100, (int) 'a', (int) (byte) -1, (int) (byte) 0, 0, (int) (byte) 0, (int) '4', (int) (short) 10);
        int int9 = mutablePeriod8.getWeeks();
        java.lang.Object obj10 = mutablePeriod8.clone();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "P100Y97M-1WT52.010S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "P100Y97M-1WT52.010S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "P100Y97M-1WT52.010S");
    }

    @Test
    public void test16465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16465");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration3 = new org.joda.time.Duration((long) 25, 194400L);
        org.joda.time.Period period4 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration3);
    }

    @Test
    public void test16466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16466");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableDuration1);
        org.joda.time.Period period3 = mutablePeriod2.toPeriod();
        int int4 = period3.size();
        org.joda.time.Period period5 = period3.toPeriod();
        int int6 = period5.getYears();
        org.joda.time.Period period8 = period5.plusWeeks((int) (byte) 100);
        org.joda.time.Period period10 = period8.withDays(100);
        org.joda.time.Period period12 = period10.minusHours((-637));
        org.joda.time.Period period13 = period10.toPeriod();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test16467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16467");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) 10);
        java.lang.String str2 = duration1.toString();
        org.joda.time.Duration duration4 = duration1.minus((long) (byte) 10);
        org.joda.time.Duration duration6 = duration1.withMillis((long) (short) -1);
        long long7 = duration1.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (byte) 1);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period14 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days15 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period14);
        org.joda.time.PeriodType periodType16 = days15.getPeriodType();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(readableInstant17, readableDuration18);
        mutablePeriod19.setHours((int) (short) 100);
        boolean boolean22 = periodType16.equals((java.lang.Object) mutablePeriod19);
        org.joda.time.Period period23 = new org.joda.time.Period((long) 0, 0L, periodType16);
        org.joda.time.Period period24 = duration9.toPeriodTo(readableInstant10, periodType16);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration1.toPeriod(periodType16, chronology25);
        org.joda.time.Duration duration28 = org.joda.time.Duration.millis((long) 194);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableInstant readableInstant30 = null;
        java.lang.Object obj31 = null;
        org.joda.time.Duration duration32 = new org.joda.time.Duration(obj31);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration32);
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration35 = duration32.toDuration();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration39);
        int int42 = duration32.compareTo((org.joda.time.ReadableDuration) duration39);
        long long43 = duration32.getStandardSeconds();
        long long44 = duration32.getMillis();
        org.joda.time.Duration duration46 = org.joda.time.Duration.millis((long) 25);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Interval interval48 = duration46.toIntervalTo(readableInstant47);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.PeriodType periodType50 = null;
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration46, readableInstant49, periodType50);
        long long52 = duration46.getStandardMinutes();
        boolean boolean53 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((java.lang.Object) duration32, chronology54);
        org.joda.time.Duration duration57 = duration28.withDurationAdded((org.joda.time.ReadableDuration) duration32, (int) (byte) 1);
        org.joda.time.Duration duration59 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration28, 40);
        org.joda.time.Duration duration60 = duration59.toDuration();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardHours((long) 671);
        org.joda.time.Duration duration64 = duration62.minus(480000L);
        boolean boolean65 = duration59.isLongerThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardMinutes((long) 10);
        org.joda.time.Period period72 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days73 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period72);
        org.joda.time.PeriodType periodType74 = days73.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType75 = null;
        int int76 = periodType74.indexOf(durationFieldType75);
        org.joda.time.PeriodType periodType77 = periodType74.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod((long) '4', (long) 'a', periodType77);
        java.lang.String str79 = periodType77.getName();
        org.joda.time.PeriodType periodType80 = periodType77.withDaysRemoved();
        org.joda.time.PeriodType periodType81 = periodType80.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod(readableInstant66, (org.joda.time.ReadableDuration) duration68, periodType81);
        org.joda.time.Period period83 = duration68.toPeriod();
        org.joda.time.Duration duration84 = duration68.toDuration();
        boolean boolean85 = duration59.isEqual((org.joda.time.ReadableDuration) duration68);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT600S" + "'", str2, "PT600S");
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(days73);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Days" + "'", str79, "Days");
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test16468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16468");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 1, (long) (byte) 100);
        mutablePeriod2.addMinutes(10);
        java.lang.Object obj5 = mutablePeriod2.clone();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration7 = mutablePeriod2.toDurationFrom(readableInstant6);
        org.joda.time.Period period9 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Period period11 = period9.plusYears((int) ' ');
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeksIn(readableInterval12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeksIn(readableInterval14);
        boolean boolean16 = weeks13.isLessThan(weeks15);
        org.joda.time.Weeks weeks17 = weeks13.negated();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((java.lang.Object) weeks13, chronology18);
        boolean boolean20 = period11.equals((java.lang.Object) period19);
        org.joda.time.Period period22 = period11.plusYears(10);
        org.joda.time.Period period24 = period11.plusMonths((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType25 = org.joda.time.DurationFieldType.weeks();
        int int26 = period11.get(durationFieldType25);
        mutablePeriod2.add(durationFieldType25, 2147483647);
        mutablePeriod2.setHours((-12));
        mutablePeriod2.addHours(8744033);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "P2147483647WT8744021H10M0.099S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "P2147483647WT8744021H10M0.099S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "P2147483647WT8744021H10M0.099S");
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test16469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16469");
        org.joda.time.Period period1 = org.joda.time.Period.hours(0);
        org.joda.time.DurationFieldType durationFieldType3 = period1.getFieldType((int) (short) 1);
        org.joda.time.Period period5 = period1.plusDays(10);
        org.joda.time.Period period7 = period5.minusDays((int) (short) 10);
        org.joda.time.Seconds seconds8 = period5.toStandardSeconds();
        org.joda.time.Seconds seconds10 = seconds8.multipliedBy(3);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds12 = seconds8.minus((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Integer.MIN_VALUE cannot be negated");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
    }

    @Test
    public void test16470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16470");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        java.util.Locale locale3 = periodFormatter2.getLocale();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds7 = duration6.toStandardSeconds();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds10 = duration9.toStandardSeconds();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType14 = periodType13.withMinutesRemoved();
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant12, periodType13);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration9);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period18 = duration9.toPeriod(periodType17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(readableInstant20, readableDuration21);
        mutablePeriod22.setHours((int) (short) 100);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology27 = null;
        mutablePeriod22.setPeriod((org.joda.time.ReadableDuration) duration26, chronology27);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType30 = periodType29.withWeeksRemoved();
        org.joda.time.PeriodType periodType31 = periodType30.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(readableInstant19, (org.joda.time.ReadableDuration) duration26, periodType30);
        org.joda.time.Period period33 = duration9.toPeriod(periodType30);
        org.joda.time.format.PeriodFormatter periodFormatter34 = periodFormatter2.withParseType(periodType30);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType37 = periodType36.withMonthsRemoved();
        org.joda.time.PeriodType periodType38 = periodType37.withMinutesRemoved();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((long) (short) 0, periodType37, chronology39);
        org.joda.time.PeriodType periodType41 = periodType37.withMinutesRemoved();
        org.joda.time.PeriodType periodType42 = periodType41.withMinutesRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter43 = periodFormatter2.withParseType(periodType42);
        org.joda.time.format.PeriodPrinter periodPrinter44 = periodFormatter2.getPrinter();
        boolean boolean45 = periodFormatter2.isParser();
        org.junit.Assert.assertNull(locale3);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(periodFormatter34);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodFormatter43);
        org.junit.Assert.assertNull(periodPrinter44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test16471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16471");
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardDays(0L);
        long long6 = duration5.getStandardHours();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant8, readableInstant9, periodType10);
        org.joda.time.PeriodType periodType12 = periodType10.withWeeksRemoved();
        org.joda.time.Period period13 = duration5.toPeriodFrom(readableInstant7, periodType10);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(0L, (long) 52, periodType10, chronology14);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((long) 40, (long) (-2147483648), periodType10, chronology16);
        int int18 = mutablePeriod17.getHours();
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test16472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16472");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.PeriodType periodType4 = periodFormatter3.getParseType();
        org.joda.time.PeriodType periodType5 = periodFormatter3.getParseType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod6 = org.joda.time.MutablePeriod.parse("P97DT1M52S", periodFormatter3);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodType4);
        org.junit.Assert.assertNull(periodType5);
    }

    @Test
    public void test16473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16473");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds2 = duration1.toStandardSeconds();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds5 = duration4.toStandardSeconds();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration1.toPeriod();
        org.joda.time.Period period8 = period7.negated();
        org.joda.time.Seconds seconds9 = period8.toStandardSeconds();
        org.joda.time.Period period10 = period8.negated();
        int int11 = period10.getHours();
        org.joda.time.Period period13 = period10.minusDays(0);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds17 = duration16.toStandardSeconds();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds20 = duration19.toStandardSeconds();
        boolean boolean21 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType24 = periodType23.withMinutesRemoved();
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant22, periodType23);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration19);
        org.joda.time.Period period28 = period26.withYears(10);
        org.joda.time.Period period30 = period26.plusMillis(100);
        org.joda.time.Period period31 = period10.minus((org.joda.time.ReadablePeriod) period26);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Duration duration33 = org.joda.time.Duration.ZERO;
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration33.toPeriod(chronology34);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds38 = duration37.toStandardSeconds();
        java.lang.String str39 = seconds38.toString();
        org.joda.time.PeriodType periodType40 = seconds38.getPeriodType();
        org.joda.time.PeriodType periodType41 = seconds38.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(readableInstant32, (org.joda.time.ReadableDuration) duration33, periodType41);
        org.joda.time.MutablePeriod mutablePeriod43 = mutablePeriod42.toMutablePeriod();
        org.joda.time.Period period44 = period26.plus((org.joda.time.ReadablePeriod) mutablePeriod43);
        org.joda.time.Seconds seconds45 = period26.toStandardSeconds();
        org.joda.time.Period period47 = period26.minusMillis(59);
        org.joda.time.Period period49 = period26.minusSeconds(596);
        org.joda.time.Period period51 = period49.plusHours((-15));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT60S" + "'", str39, "PT60S");
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period51);
    }

    @Test
    public void test16474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16474");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("PT-13S");
        org.junit.Assert.assertNotNull(mutablePeriod1);
    }

    @Test
    public void test16475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16475");
        org.joda.time.Period period3 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days4 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period3);
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = periodType5.indexOf(durationFieldType6);
        org.joda.time.PeriodType periodType8 = periodType5.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((long) '4', (long) 'a', periodType8);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes(100L);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Interval interval13 = duration11.toIntervalFrom(readableInstant12);
        mutablePeriod9.add((org.joda.time.ReadableInterval) interval13);
        mutablePeriod9.clear();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(interval13);
    }

    @Test
    public void test16476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16476");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType3 = periodType2.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(obj1, periodType2);
        mutablePeriod4.add((-84326300L));
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.Period period10 = duration9.toPeriod();
        long long11 = duration9.getStandardSeconds();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds14 = duration13.toStandardSeconds();
        java.lang.String str15 = seconds14.toString();
        org.joda.time.PeriodType periodType16 = seconds14.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(readableInstant7, (org.joda.time.ReadableDuration) duration9, periodType16);
        org.joda.time.Period period18 = duration9.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds21 = duration20.toStandardSeconds();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds24 = duration23.toStandardSeconds();
        boolean boolean25 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType28 = periodType27.withMinutesRemoved();
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant26, periodType27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(readableInstant30, readableDuration31);
        mutablePeriod32.setHours((int) (short) 100);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology37 = null;
        mutablePeriod32.setPeriod((org.joda.time.ReadableDuration) duration36, chronology37);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds41 = duration40.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType42 = seconds41.getFieldType();
        mutablePeriod32.add(durationFieldType42, (int) (short) 0);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(readableInstant45, readableDuration46);
        mutablePeriod47.setHours((int) (short) 100);
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology52 = null;
        mutablePeriod47.setPeriod((org.joda.time.ReadableDuration) duration51, chronology52);
        org.joda.time.Chronology chronology54 = null;
        mutablePeriod32.setPeriod((org.joda.time.ReadableDuration) duration51, chronology54);
        int int56 = duration23.compareTo((org.joda.time.ReadableDuration) duration51);
        org.joda.time.Duration duration58 = duration51.minus(1L);
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((long) 10);
        java.lang.String str61 = duration60.toString();
        org.joda.time.Duration duration63 = duration60.minus((long) (byte) 10);
        org.joda.time.Duration duration65 = duration60.withMillis((long) (short) -1);
        org.joda.time.Period period66 = duration60.toPeriod();
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds69 = duration68.toStandardSeconds();
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds72 = duration71.toStandardSeconds();
        boolean boolean73 = duration68.isLongerThan((org.joda.time.ReadableDuration) duration71);
        org.joda.time.Duration duration75 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds76 = duration75.toStandardSeconds();
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds79 = duration78.toStandardSeconds();
        boolean boolean80 = duration75.isLongerThan((org.joda.time.ReadableDuration) duration78);
        org.joda.time.Period period81 = duration75.toPeriod();
        boolean boolean82 = duration71.isLongerThan((org.joda.time.ReadableDuration) duration75);
        org.joda.time.Duration duration83 = duration75.toDuration();
        org.joda.time.Period period84 = duration83.toPeriod();
        boolean boolean85 = duration60.isLongerThan((org.joda.time.ReadableDuration) duration83);
        org.joda.time.Duration duration87 = duration58.withDurationAdded((org.joda.time.ReadableDuration) duration60, (int) '#');
        long long88 = duration60.getStandardDays();
        org.joda.time.Duration duration89 = duration9.minus((org.joda.time.ReadableDuration) duration60);
        mutablePeriod4.add((org.joda.time.ReadableDuration) duration89);
        org.joda.time.Period period91 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration89);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-60L) + "'", long11 == (-60L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT60S" + "'", str15, "PT60S");
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "PT600S" + "'", str61, "PT600S");
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(duration87);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 0L + "'", long88 == 0L);
        org.junit.Assert.assertNotNull(duration89);
    }

    @Test
    public void test16477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16477");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.PeriodType periodType4 = periodType3.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2, periodType3);
        int int6 = mutablePeriod5.getWeeks();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((java.lang.Object) mutablePeriod5, chronology7);
        org.joda.time.Days days9 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period8);
        org.joda.time.Days days11 = days9.plus((int) (short) 0);
        org.joda.time.Days days13 = days9.dividedBy(6);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardSeconds((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.PeriodType periodType18 = periodType17.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration15, readableInstant16, periodType17);
        int int20 = mutablePeriod19.getWeeks();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((java.lang.Object) mutablePeriod19, chronology21);
        org.joda.time.Days days23 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period22);
        org.joda.time.Days days25 = days23.plus((int) (short) 0);
        org.joda.time.Days days27 = days23.dividedBy(6);
        org.joda.time.Days days28 = days13.plus(days23);
        int int29 = days28.getDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test16478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16478");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration5 = new org.joda.time.Duration(240L);
        java.lang.String str6 = duration5.toString();
        org.joda.time.Duration duration8 = duration5.plus(540000L);
        org.joda.time.Days days9 = duration5.toStandardDays();
        org.joda.time.PeriodType periodType10 = days9.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(periodType10);
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((-86400L), (long) 18, periodType10);
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType10);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0.240S" + "'", str6, "PT0.240S");
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(periodType10);
    }

    @Test
    public void test16479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16479");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableDuration1);
        mutablePeriod2.setHours((int) (short) 100);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology7 = null;
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration6, chronology7);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds11 = duration10.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType12 = seconds11.getFieldType();
        mutablePeriod2.add(durationFieldType12, (int) (short) 0);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(readableInstant15, readableDuration16);
        mutablePeriod17.setHours((int) (short) 100);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology22 = null;
        mutablePeriod17.setPeriod((org.joda.time.ReadableDuration) duration21, chronology22);
        org.joda.time.Chronology chronology24 = null;
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration21, chronology24);
        org.joda.time.ReadableDuration readableDuration26 = null;
        boolean boolean27 = duration21.isEqual(readableDuration26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration21, readableInstant28);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds32 = duration31.toStandardSeconds();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds35 = duration34.toStandardSeconds();
        boolean boolean36 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType39 = periodType38.withMinutesRemoved();
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant37, periodType38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration34.toIntervalFrom(readableInstant41);
        org.joda.time.Duration duration43 = duration21.plus((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Period period44 = duration21.toPeriod();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((long) 10);
        java.lang.String str47 = duration46.toString();
        org.joda.time.Duration duration49 = duration46.minus((long) (byte) 10);
        org.joda.time.Duration duration51 = duration46.withMillis((long) (short) -1);
        org.joda.time.Period period52 = duration46.toPeriod();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds55 = duration54.toStandardSeconds();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds58 = duration57.toStandardSeconds();
        boolean boolean59 = duration54.isLongerThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds62 = duration61.toStandardSeconds();
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds65 = duration64.toStandardSeconds();
        boolean boolean66 = duration61.isLongerThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Period period67 = duration61.toPeriod();
        boolean boolean68 = duration57.isLongerThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.Duration duration69 = duration61.toDuration();
        org.joda.time.Period period70 = duration69.toPeriod();
        boolean boolean71 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration69);
        org.joda.time.Duration duration72 = duration21.plus((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration74 = duration21.plus((long) 2);
        org.joda.time.Seconds seconds75 = duration21.toStandardSeconds();
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT600S" + "'", str47, "PT600S");
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(seconds75);
    }

    @Test
    public void test16480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16480");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("P-1DT35H1M");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'days'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test16481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16481");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((-1L));
        org.joda.time.Days days2 = duration1.toStandardDays();
        org.joda.time.Days days4 = days2.minus(7);
        org.joda.time.Days days6 = days4.multipliedBy((-62));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days6);
    }

    @Test
    public void test16482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16482");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType3 = periodType2.withWeeksRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.Period period5 = duration1.toPeriod(periodType2, chronology4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType8 = periodType7.withMonthsRemoved();
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant6, periodType8);
        org.joda.time.Minutes minutes10 = duration1.toStandardMinutes();
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes14 = minutes10.minus((int) (short) 0);
        org.joda.time.Minutes minutes15 = minutes14.negated();
        org.joda.time.Minutes minutes16 = minutes15.negated();
        int int17 = minutes16.size();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test16483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16483");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) (short) 100);
        org.joda.time.Duration duration3 = duration1.plus((long) (byte) 1);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = duration3.toPeriodTo(readableInstant4);
        org.joda.time.Minutes minutes6 = period5.toStandardMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(minutes6);
    }

    @Test
    public void test16484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16484");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((-3));
        java.lang.String str2 = seconds1.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT-3S" + "'", str2, "PT-3S");
    }

    @Test
    public void test16485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16485");
        org.joda.time.Duration duration0 = org.joda.time.Duration.ZERO;
        long long1 = duration0.getStandardDays();
        org.joda.time.Hours hours2 = duration0.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType3 = hours2.getFieldType();
        org.joda.time.Hours hours4 = null;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.Period period7 = new org.joda.time.Period((long) '4');
        org.joda.time.Period period9 = period7.withHours(32);
        org.joda.time.Hours hours10 = period7.toStandardHours();
        org.joda.time.Hours hours11 = hours10.negated();
        boolean boolean12 = hours5.isGreaterThan(hours10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours13.negated();
        org.joda.time.Duration duration15 = hours14.toStandardDuration();
        org.joda.time.Hours hours16 = duration15.toStandardHours();
        boolean boolean17 = hours5.isGreaterThan(hours16);
        org.joda.time.Hours hours18 = hours16.negated();
        int int19 = hours18.getHours();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType23 = periodType22.withWeeksRemoved();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration21.toPeriod(periodType22, chronology24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType28 = periodType27.withMonthsRemoved();
        org.joda.time.Period period29 = duration21.toPeriodTo(readableInstant26, periodType28);
        org.joda.time.Duration duration30 = duration21.toDuration();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration30, readableInstant31);
        mutablePeriod32.addMillis(600);
        int int35 = mutablePeriod32.size();
        boolean boolean36 = hours18.equals((java.lang.Object) int35);
        org.junit.Assert.assertNotNull(duration0);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 8 + "'", int35 == 8);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test16486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16486");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds2 = duration1.toStandardSeconds();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Seconds seconds5 = duration4.toStandardSeconds();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration1.toPeriod();
        org.joda.time.Period period9 = period7.plusWeeks((int) (byte) 0);
        org.joda.time.Period period11 = period9.plusYears((int) (byte) 1);
        org.joda.time.Period period13 = period9.withYears((int) (short) -1);
        org.joda.time.Period period15 = period13.plusWeeks((-32));
        org.joda.time.Period period17 = period13.withHours((-100));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
    }

    @Test
    public void test16487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16487");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.yearWeekDayTime();
        org.joda.time.PeriodType periodType3 = periodType2.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType2);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
    }

    @Test
    public void test16488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16488");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = hours0.multipliedBy((int) (byte) 0);
        org.joda.time.Hours hours4 = hours2.dividedBy((-2147483648));
        org.joda.time.Hours hours5 = org.joda.time.Hours.FIVE;
        org.joda.time.Hours hours7 = hours5.minus((int) (byte) 10);
        org.joda.time.PeriodType periodType8 = hours5.getPeriodType();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours9.negated();
        java.lang.String str11 = hours10.toString();
        java.lang.String str12 = hours10.toString();
        org.joda.time.Hours hours13 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours15 = hours13.minus(10);
        org.joda.time.Hours hours16 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours18 = org.joda.time.Hours.hours((int) (byte) -1);
        boolean boolean19 = hours16.isGreaterThan(hours18);
        org.joda.time.Hours hours21 = hours16.minus((int) (byte) 0);
        org.joda.time.Hours hours23 = hours21.minus((int) '#');
        org.joda.time.Duration duration24 = hours23.toStandardDuration();
        org.joda.time.Hours hours25 = hours15.minus(hours23);
        org.joda.time.Hours hours26 = hours10.minus(hours15);
        org.joda.time.Hours hours27 = hours5.minus(hours15);
        org.joda.time.Hours hours29 = hours5.plus((int) (short) 1);
        org.joda.time.Hours hours31 = hours29.multipliedBy(1);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(readableInstant32, readableDuration33);
        org.joda.time.Period period35 = mutablePeriod34.toPeriod();
        org.joda.time.Period period37 = period35.withHours(0);
        org.joda.time.Hours hours38 = period37.toStandardHours();
        org.joda.time.Hours hours39 = hours29.minus(hours38);
        org.joda.time.Hours hours40 = hours2.minus(hours39);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT-8H" + "'", str11, "PT-8H");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT-8H" + "'", str12, "PT-8H");
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
    }

    @Test
    public void test16489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16489");
        org.joda.time.Duration duration0 = org.joda.time.Duration.ZERO;
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = duration0.toPeriod(chronology1);
        int int3 = period2.size();
        org.joda.time.Period period5 = period2.plusHours((int) (short) 1);
        org.joda.time.Period period6 = period2.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.ZERO;
        long long8 = duration7.getStandardDays();
        org.joda.time.Hours hours9 = duration7.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType10 = hours9.getFieldType();
        org.joda.time.Hours hours11 = null;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        org.joda.time.Period period13 = period6.plus((org.joda.time.ReadablePeriod) hours12);
        org.joda.time.PeriodType periodType14 = period13.getPeriodType();
        org.joda.time.Hours hours16 = org.joda.time.Hours.hours(25);
        org.joda.time.DurationFieldType durationFieldType17 = hours16.getFieldType();
        boolean boolean18 = periodType14.isSupported(durationFieldType17);
        org.junit.Assert.assertNotNull(duration0);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test16490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16490");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((-600000L), chronology1);
    }

    @Test
    public void test16491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16491");
        org.joda.time.Days days1 = org.joda.time.Days.days(32);
        org.joda.time.Days days2 = org.joda.time.Days.ZERO;
        int int3 = days2.getDays();
        org.joda.time.Period period5 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days6 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period5);
        org.joda.time.Period period8 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days9 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period8);
        org.joda.time.PeriodType periodType10 = days9.getPeriodType();
        boolean boolean11 = days6.isGreaterThan(days9);
        org.joda.time.Period period13 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days14 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period13);
        org.joda.time.Days days15 = days9.minus(days14);
        org.joda.time.Days days16 = days2.minus(days9);
        java.lang.String str17 = days16.toString();
        org.joda.time.Days days18 = days1.minus(days16);
        org.joda.time.Days days20 = days18.dividedBy(60);
        org.joda.time.Days days22 = days18.minus(8);
        org.joda.time.Days days24 = days22.dividedBy((-87));
        org.joda.time.Period period28 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days29 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period28);
        org.joda.time.PeriodType periodType30 = days29.getPeriodType();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(readableInstant31, readableDuration32);
        mutablePeriod33.setHours((int) (short) 100);
        boolean boolean36 = periodType30.equals((java.lang.Object) mutablePeriod33);
        org.joda.time.Period period37 = new org.joda.time.Period((long) 0, 0L, periodType30);
        int int38 = period37.getMillis();
        org.joda.time.Days days39 = period37.toStandardDays();
        org.joda.time.Days days40 = days24.minus(days39);
        org.joda.time.Period period42 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days43 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period42);
        org.joda.time.Period period45 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days46 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period45);
        org.joda.time.PeriodType periodType47 = days46.getPeriodType();
        boolean boolean48 = days43.isGreaterThan(days46);
        int int49 = days43.size();
        org.joda.time.Days days50 = days43.negated();
        org.joda.time.Days days52 = days50.minus(3);
        org.joda.time.Duration duration53 = days50.toStandardDuration();
        int int54 = days50.size();
        org.joda.time.Days days55 = days39.minus(days50);
        org.joda.time.Duration duration56 = days55.toStandardDuration();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "P0D" + "'", str17, "P0D");
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(duration56);
    }

    @Test
    public void test16492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16492");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period4 = new org.joda.time.Period(readableInstant1, readableInstant2, periodType3);
        java.lang.String str5 = periodType3.toString();
        int int6 = periodType3.size();
        org.joda.time.Period period7 = new org.joda.time.Period(599990L, periodType3);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period9 = period7.plusMinutes(32000);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PeriodType[YearWeekDay]" + "'", str5, "PeriodType[YearWeekDay]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 3 + "'", int6 == 3);
    }

    @Test
    public void test16493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16493");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeksIn(readableInterval2);
        boolean boolean4 = weeks1.isLessThan(weeks3);
        org.joda.time.Weeks weeks5 = weeks1.negated();
        org.joda.time.Weeks weeks7 = weeks5.minus((int) (byte) 100);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.weeksIn(readableInterval8);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeksIn(readableInterval10);
        boolean boolean12 = weeks9.isLessThan(weeks11);
        org.joda.time.Weeks weeks14 = weeks11.minus((int) (short) -1);
        org.joda.time.Weeks weeks16 = weeks14.multipliedBy(0);
        boolean boolean17 = weeks7.isGreaterThan(weeks16);
        org.joda.time.Period period22 = new org.joda.time.Period(0, (int) '4', (int) (short) 100, (int) (byte) -1);
        org.joda.time.Period period24 = period22.withDays((int) 'a');
        org.joda.time.Weeks weeks25 = period24.toStandardWeeks();
        int int26 = weeks25.getWeeks();
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.weeksIn(readableInterval27);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.weeksIn(readableInterval29);
        boolean boolean31 = weeks28.isLessThan(weeks30);
        org.joda.time.Weeks weeks33 = weeks30.minus((int) (short) -1);
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks36 = weeks33.multipliedBy(0);
        boolean boolean37 = weeks25.isGreaterThan(weeks36);
        org.joda.time.Weeks weeks38 = weeks16.minus(weeks25);
        org.joda.time.ReadableInterval readableInterval39 = null;
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.weeksIn(readableInterval39);
        org.joda.time.Weeks weeks42 = weeks40.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks43 = weeks25.plus(weeks42);
        org.joda.time.Weeks weeks45 = weeks43.multipliedBy(54);
        org.joda.time.Weeks weeks46 = weeks45.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks48 = weeks46.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 13 + "'", int26 == 13);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
    }

    @Test
    public void test16494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16494");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((long) 25);
        int int2 = mutablePeriod1.getMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.millis((long) 8);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration4.toPeriod(chronology5);
        mutablePeriod1.add((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) '4');
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(readableInstant10, readableDuration11);
        mutablePeriod12.setHours((int) (short) 100);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((long) (byte) 1);
        org.joda.time.Chronology chronology17 = null;
        mutablePeriod12.setPeriod((org.joda.time.ReadableDuration) duration16, chronology17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant19, periodType20);
        java.lang.String str22 = duration16.toString();
        boolean boolean23 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration16.toIntervalTo(readableInstant24);
        boolean boolean26 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration16);
        long long27 = duration4.getStandardHours();
        org.joda.time.Duration duration29 = new org.joda.time.Duration((long) (-672));
        org.joda.time.Duration duration30 = duration4.minus((org.joda.time.ReadableDuration) duration29);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT60S" + "'", str22, "PT60S");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(duration30);
    }

    @Test
    public void test16495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16495");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((-1L));
        org.joda.time.Duration duration4 = duration2.withMillis(0L);
        org.joda.time.Period period6 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days7 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period6);
        org.joda.time.PeriodType periodType8 = days7.getPeriodType();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(readableInstant9, readableDuration10);
        mutablePeriod11.setHours((int) (short) 100);
        boolean boolean14 = periodType8.equals((java.lang.Object) mutablePeriod11);
        org.joda.time.Duration duration15 = org.joda.time.Duration.ZERO;
        long long16 = duration15.getStandardDays();
        mutablePeriod11.add((org.joda.time.ReadableDuration) duration15);
        long long18 = duration15.getStandardMinutes();
        org.joda.time.Duration duration20 = duration15.withMillis((long) 0);
        boolean boolean21 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType23 = period22.getPeriodType();
        org.joda.time.Period period25 = period22.minusDays(671);
        org.joda.time.Duration duration26 = period25.toStandardDuration();
        org.joda.time.Days days27 = duration26.toStandardDays();
        org.joda.time.Days days28 = days27.negated();
        org.joda.time.Days days29 = days27.negated();
        org.joda.time.Days days31 = days27.minus(160);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
    }

    @Test
    public void test16496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16496");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Period period3 = period1.plusYears((int) ' ');
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeksIn(readableInterval4);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeksIn(readableInterval6);
        boolean boolean8 = weeks5.isLessThan(weeks7);
        org.joda.time.Weeks weeks9 = weeks5.negated();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((java.lang.Object) weeks5, chronology10);
        boolean boolean12 = period3.equals((java.lang.Object) period11);
        org.joda.time.Period period14 = period3.plusYears(10);
        org.joda.time.Period period16 = period3.plusMonths((int) (byte) 100);
        org.joda.time.Period period18 = period16.withHours((int) (short) 0);
        org.joda.time.Period period20 = period16.withSeconds(3);
        int int21 = period20.getMillis();
        org.joda.time.Period period23 = period20.multipliedBy((-15));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(period23);
    }

    @Test
    public void test16497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16497");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT0H");
        org.joda.time.Days days2 = minutes1.toStandardDays();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(days2);
    }

    @Test
    public void test16498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16498");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.MutablePeriod mutablePeriod1 = weeks0.toMutablePeriod();
        mutablePeriod1.addYears((-32));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
    }

    @Test
    public void test16499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16499");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) '4', chronology1);
        mutablePeriod2.setHours((int) (byte) 1);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType8 = periodType7.withWeeksRemoved();
        org.joda.time.PeriodType periodType9 = periodType8.withDaysRemoved();
        org.joda.time.Period period10 = new org.joda.time.Period((long) 'a', (long) (short) 0, periodType9);
        org.joda.time.Hours hours11 = period10.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType12 = hours11.getFieldType();
        mutablePeriod2.add(durationFieldType12, (int) (short) -1);
        mutablePeriod2.setPeriod((-672), 7, (-2147483648), (int) (byte) 0, 13, 4, (int) (short) 10, 8);
        org.joda.time.Hours hours24 = org.joda.time.Hours.FOUR;
        org.joda.time.Hours hours26 = hours24.minus(0);
        org.joda.time.Hours hours28 = hours26.multipliedBy((int) (byte) 10);
        org.joda.time.Duration duration29 = hours26.toStandardDuration();
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Chronology chronology31 = null;
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration29, chronology31);
        org.joda.time.Duration duration33 = new org.joda.time.Duration((java.lang.Object) duration29);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 240L + "'", long30 == 240L);
    }

    @Test
    public void test16500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16500");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (byte) 1);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.PeriodType periodType3 = days2.getPeriodType();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(readableInstant4, readableDuration5);
        mutablePeriod6.setHours((int) (short) 100);
        boolean boolean9 = periodType3.equals((java.lang.Object) mutablePeriod6);
        org.joda.time.Duration duration10 = org.joda.time.Duration.ZERO;
        long long11 = duration10.getStandardDays();
        mutablePeriod6.add((org.joda.time.ReadableDuration) duration10);
        long long13 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = duration10.toPeriodFrom(readableInstant14);
        org.joda.time.Duration duration18 = new org.joda.time.Duration((long) 8, (long) 10);
        org.joda.time.Duration duration21 = duration18.withDurationAdded(540000L, (int) (byte) 10);
        org.joda.time.Period period22 = duration18.toPeriod();
        org.joda.time.Duration duration23 = duration10.minus((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardSeconds(41L);
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = duration25.toPeriod(periodType26);
        org.joda.time.Duration duration28 = duration23.plus((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration30 = duration23.plus(126000000L);
        org.joda.time.ReadableDuration readableDuration31 = null;
        boolean boolean32 = duration30.isLongerThan(readableDuration31);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }
}

