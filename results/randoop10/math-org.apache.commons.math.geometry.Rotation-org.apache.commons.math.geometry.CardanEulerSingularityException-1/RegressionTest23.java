import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest23 {

    public static boolean debug = false;

    @Test
    public void test11501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11501");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double1 = vector3D0.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.add(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D5.add(vector3D6);
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.add((double) (short) 1, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D12.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA3();
        java.lang.String str16 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder14.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D(1.5707963267948966d, (-2.356194490192345d));
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract((double) ' ', vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D12.subtract(vector3D22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D31.add(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation30.applyInverseTo(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D36.orthogonal();
        double double38 = vector3D37.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D35.subtract(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double43 = vector3D42.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double46 = vector3D45.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.add(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double51 = vector3D50.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D50);
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder58.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D57.add(vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D45, (double) 100, vector3D50, (double) 1.0f, vector3D55, (double) 10L, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D50.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D39.add((double) ' ', vector3D63);
        double double65 = vector3D39.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D22.add(0.8414709848078965d, vector3D39);
        double double67 = vector3D39.getX();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(vector3D39, (-0.05012358797963627d));
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ZXY" + "'", str16, "ZXY");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.7950731247900203d + "'", double65 == 0.7950731247900203d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.06295712545445845d + "'", double67 == 0.06295712545445845d);
    }

    @Test
    public void test11502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11502");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyTo(rotation39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        double[] doubleArray42 = rotation39.getAngles(rotationOrder41);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder43.getA2();
        double[] doubleArray46 = rotation39.getAngles(rotationOrder43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder43.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder43.getA2();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[2.034443935795702, -0.7297276562269669, 2.034443935795702]");
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.7853981633974483, 1.9106332362490182, 2.356194490192345]");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
    }

    @Test
    public void test11503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11503");
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", throwable9);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("YXZ", (java.lang.Throwable) mathException12);
        java.lang.Throwable throwable15 = null;
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", throwable15);
        java.lang.Object[] objArray17 = mathException16.getArguments();
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException16);
        mathException12.addSuppressed((java.lang.Throwable) mathException18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("Cardan angles singularity", (java.lang.Throwable) mathException18);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity", (java.lang.Throwable) mathException18);
        java.lang.String str22 = mathException21.getPattern();
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException21);
        java.lang.Throwable[] throwableArray24 = mathException21.getSuppressed();
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("Cardan angles singularity", (java.lang.Object[]) throwableArray24);
        java.lang.Throwable throwable29 = null;
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", throwable29);
        java.lang.Object[] objArray31 = mathException30.getArguments();
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray31);
        java.lang.Object[] objArray33 = mathException32.getArguments();
        java.lang.Throwable throwable35 = null;
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("hi!", throwable35);
        java.lang.Object[] objArray37 = mathException36.getArguments();
        mathException32.addSuppressed((java.lang.Throwable) mathException36);
        java.lang.String str39 = mathException36.getPattern();
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException36);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Object[]) throwableArray24, (java.lang.Throwable) mathException36);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray24);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException42);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity" + "'", str22, "org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
    }

    @Test
    public void test11504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11504");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double9 = vector3D8.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.add(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double17 = vector3D16.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D16);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D23.add(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D11, (double) 100, vector3D16, (double) 1.0f, vector3D21, (double) 10L, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double31 = vector3D30.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double34 = vector3D33.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.add(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double39 = vector3D38.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D45.add(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D33, (double) 100, vector3D38, (double) 1.0f, vector3D43, (double) 10L, vector3D48);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D49, (double) 1.0f);
        double double52 = vector3D49.getY();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D11.subtract(0.577350269189626d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D(99.0d, vector3D4, (double) 1.0f, vector3D11);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D55, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D55.scalarMultiply(99.00000000000017d);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D59.scalarMultiply((-0.004748774471446504d));
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (-0.32355350711941916d));
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D66.scalarMultiply((-0.6916803607181152d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder69.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder69.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder69.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D66.subtract(vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D59.add(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((-0.9253293489463692d), (-0.42073549240394825d), (double) (short) 10);
        double double80 = vector3D79.getZ();
        double double81 = vector3D79.getZ();
        double double82 = vector3D79.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D79.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D79.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D75.add(vector3D79);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-99.0d) + "'", double52 == (-99.0d));
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 10.0d + "'", double80 == 10.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 10.0d + "'", double81 == 10.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-2.7148476196383466d) + "'", double82 == (-2.7148476196383466d));
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
    }

    @Test
    public void test11505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11505");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.0d, 9.799851417283954E-4d, (double) (short) 100, (-0.25159761627788696d), true);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D7.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(vector3D7, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D17.add(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation16.applyInverseTo(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double23 = vector3D22.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double26 = vector3D25.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.add(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.add(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double32 = vector3D31.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double35 = vector3D34.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.add(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double40 = vector3D39.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D46.add(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D34, (double) 100, vector3D39, (double) 1.0f, vector3D44, (double) 10L, vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D28, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation16.applyTo(vector3D28);
        double double53 = rotation16.getAngle();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation59.applyTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation79 = rotation72.applyTo(rotation78);
        org.apache.commons.math.geometry.Rotation rotation80 = rotation66.applyInverseTo(rotation72);
        double double81 = rotation66.getQ0();
        org.apache.commons.math.geometry.Rotation rotation82 = rotation16.applyInverseTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation83 = rotation10.applyInverseTo(rotation82);
        org.apache.commons.math.geometry.Rotation rotation84 = rotation82.revert();
        org.apache.commons.math.geometry.Rotation rotation85 = rotation5.applyInverseTo(rotation82);
        org.apache.commons.math.geometry.RotationOrder rotationOrder86 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder86.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder86.getA3();
        java.lang.String str89 = rotationOrder86.toString();
        double[] doubleArray90 = rotation85.getAngles(rotationOrder86);
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotationOrder86.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotationOrder86.getA2();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 3.1216041798823833d + "'", double53 == 3.1216041798823833d);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-1.0000000000000002d) + "'", double81 == (-1.0000000000000002d));
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(rotationOrder86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "XZX" + "'", str89, "XZX");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[0.29490126130416844, 0.06540194448235949, -0.3211835381422669]");
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
    }

    @Test
    public void test11506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11506");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.10321339875310463d, 0.681370409658559d, 0.7701511529340701d);
    }

    @Test
    public void test11507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11507");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.8948663405333898d), 140.36381300036012d, (-0.47942553860420295d));
    }

    @Test
    public void test11508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11508");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation18);
        double double27 = rotation26.getQ2();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        double double34 = rotation33.getQ1();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation26.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA2();
        double[] doubleArray38 = rotation33.getAngles(rotationOrder36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder36.getA1();
        java.lang.String str40 = rotationOrder36.toString();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, 99.0d, (double) (short) 1, 3.9999999999999982d);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder36.getA2();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, 100.00499987500626d, 1.5309649148733837d, 0.005773438543149319d);
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder36.getA2();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, 0.9724711741591723d, 100.49963690658076d, 0.8507875925362643d);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation54.revert();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.577350269189626d + "'", double27 == 0.577350269189626d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.031397298386422245d + "'", double34 == 0.031397298386422245d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[3.078582052843988, 0.019349922785144295, 3.120983474296034]");
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ZYX" + "'", str40, "ZYX");
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation55);
    }

    @Test
    public void test11509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11509");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.2919265817264289d, 990.0d, (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.negate();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double8 = vector3D7.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double11 = vector3D10.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.add(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double16 = vector3D15.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D22.add(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D10, (double) 100, vector3D15, (double) 1.0f, vector3D20, (double) 10L, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, vector3D28);
        double double30 = vector3D28.getX();
        double double31 = vector3D28.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D(100.0d, (double) (byte) 0, (-0.2862647032613221d));
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D28.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double40 = vector3D39.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double43 = vector3D42.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.add(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double48 = vector3D47.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D47);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D54.add(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D42, (double) 100, vector3D47, (double) 1.0f, vector3D52, (double) 10L, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double62 = vector3D61.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double65 = vector3D64.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.add(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double70 = vector3D69.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D69);
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder73.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder77.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D76.add(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D64, (double) 100, vector3D69, (double) 1.0f, vector3D74, (double) 10L, vector3D79);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D80, (double) 1.0f);
        double double83 = vector3D80.getY();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D42.subtract(0.577350269189626d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D36.add((-0.6154797086703874d), vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D89 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, 1.5480028924187785d, 99.0d);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D89.scalarMultiply(0.37109123341226674d);
        org.apache.commons.math.geometry.Vector3D vector3D92 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D36, vector3D89);
        double double93 = vector3D36.getAlpha();
        double double94 = org.apache.commons.math.geometry.Vector3D.angle(vector3D3, vector3D36);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-99.0d) + "'", double83 == (-99.0d));
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-2.356194490192345d) + "'", double93 == (-2.356194490192345d));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2.3558727035423734d + "'", double94 == 2.3558727035423734d);
    }

    @Test
    public void test11510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11510");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation18);
        double double27 = rotation18.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double29 = vector3D28.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double32 = vector3D31.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.add(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.add(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double38 = vector3D37.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double41 = vector3D40.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.add(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double46 = vector3D45.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D45);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D52.add(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D40, (double) 100, vector3D45, (double) 1.0f, vector3D50, (double) 10L, vector3D55);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D34, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D59.add(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D34.add((double) (byte) 0, vector3D62);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder64.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D34.add(vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D34.scalarMultiply((double) 1L);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double73 = vector3D72.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double76 = vector3D75.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.add(0.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D77.add(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double82 = vector3D81.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double85 = vector3D84.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D81.add(0.0d, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D86.add(vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D90 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D70, (double) (short) 0, vector3D79, (-1.0d), vector3D86, (double) (-1.0f), vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D86.negate();
        org.apache.commons.math.geometry.Vector3D vector3D93 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D68, vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation18.applyTo(vector3D93);
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D93.negate();
        double double96 = vector3D93.getY();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D93.orthogonal();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null norm");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.5773502691896258d + "'", double27 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
    }

    @Test
    public void test11511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11511");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D2);
        double double4 = vector3D3.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder5.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D3, vector3D7);
        double double9 = vector3D7.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D7.scalarMultiply(0.7080734182735712d);
        double double12 = vector3D7.getY();
        double double13 = vector3D7.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.5707963267948966d + "'", double4 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test11512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11512");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D0.add(vector3D2);
        double double4 = vector3D2.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D2.negate();
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D((-0.42073549240394825d), (-1.5707963267948966d), (-0.577350269189626d));
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D9.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D11.add(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double17 = vector3D16.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double21 = vector3D20.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double24 = vector3D23.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.add(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double29 = vector3D28.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D35.add(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D23, (double) 100, vector3D28, (double) 1.0f, vector3D33, (double) 10L, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double44 = vector3D43.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double47 = vector3D46.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.add(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.add(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double53 = vector3D52.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double56 = vector3D55.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.add(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D57.add(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D41, (double) (short) 0, vector3D50, (-1.0d), vector3D57, (double) (-1.0f), vector3D61);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D16, vector3D28, vector3D62);
        double double64 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D9, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D2.add(vector3D28);
        double double66 = vector3D2.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D2.normalize();
        double double68 = vector3D2.getZ();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.5707963267948966d + "'", double64 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.5707963267948966d + "'", double66 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
    }

    @Test
    public void test11513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11513");
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D12.add(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation11.applyInverseTo(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D17.orthogonal();
        double double19 = vector3D18.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D16.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D16.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D5, vector3D16);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation30.applyTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation36.revert();
        double double39 = rotation38.getAngle();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation45.applyTo(rotation51);
        double double53 = rotation51.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation38.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1), 0.5773502691896258d, 3.141592653589793d, true);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double62 = vector3D61.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double65 = vector3D64.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.add(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation60.applyInverseTo(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation51.applyInverseTo(vector3D66);
        double double69 = vector3D68.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D68.negate();
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, vector3D16, 1.3061290504076808d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D(0.25159761627788696d, vector3D71, (double) (-1L), vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D(1.0000000000000004d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D(1.5707963267948966d, (-2.356194490192345d));
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D((-0.6916803607181152d), vector3D80);
        double double82 = vector3D80.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D74.add(2.580675236596418d, vector3D80);
        double double84 = vector3D74.getNorm();
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 3.141592653589793d + "'", double39 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.5773502691896258d + "'", double53 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.7297276562269664d) + "'", double69 == (-0.7297276562269664d));
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.7071067811865476d) + "'", double82 == (-0.7071067811865476d));
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.2403222239983733d + "'", double84 == 1.2403222239983733d);
    }

    @Test
    public void test11514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11514");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1), 0.5773502691896258d, 3.141592653589793d, true);
        double double7 = rotation6.getQ1();
        double double8 = rotation6.getAngle();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        double[] doubleArray12 = rotation6.getAngles(rotationOrder10);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, 0.6245426019590317d, (-0.002862639213094621d), 0.027770636593421036d);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder10.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D(0.4546487134128409d, vector3D18);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-0.2862647032613221d) + "'", double7 == (-0.2862647032613221d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 2.56094043263594d + "'", double8 == 2.56094043263594d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2.56094043263594d + "'", double9 == 2.56094043263594d);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[2.3098248068755094, 2.467820091963933, 2.9261629491074794]");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
    }

    @Test
    public void test11515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11515");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double double6 = rotation5.getQ0();
        double double7 = rotation5.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation25.applyInverseTo(rotation31);
        double double40 = rotation31.getQ1();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyTo(rotation31);
        double double42 = rotation41.getQ3();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation5.applyInverseTo(rotation41);
        double double44 = rotation41.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (-1.0d), (double) '4', (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, 3.9999999999999982d, (-1.5707963267948966d), 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder45.getA2();
        double[] doubleArray59 = rotation41.getAngles(rotationOrder45);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder45.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder45.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder45.getA1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5773502691896258d + "'", double7 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.5773502691896258d + "'", double40 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.4231361643575562d) + "'", double42 == (-0.4231361643575562d));
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.32355350711941916d) + "'", double44 == (-0.32355350711941916d));
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.1219587296945104, -0.07979586378305215, 1.178733300026532]");
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
    }

    @Test
    public void test11516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11516");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.018132074235429944d, (double) (byte) 0, (-0.1850642232353207d), (-0.9386072654111782d), false);
        double double6 = rotation5.getAngle();
        double double7 = rotation5.getQ2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 3.1053265177180833d + "'", double6 == 3.1053265177180833d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-0.1850642232353207d) + "'", double7 == (-0.1850642232353207d));
    }

    @Test
    public void test11517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11517");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyTo(rotation12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (byte) -1, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyTo(rotation18);
        double double20 = rotation18.getAngle();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation39.applyTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation33.applyInverseTo(rotation39);
        double double48 = rotation39.getQ1();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation18.applyInverseTo(rotation39);
        double double50 = rotation18.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation18.applyInverseTo(rotation55);
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder57.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder57.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder57.getA2();
        double double61 = vector3D60.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation18.applyInverseTo(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, 3.1216041798823833d, 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D(2.9566862711546698d, vector3D62, (-3.0000000000000018d), vector3D67);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(vector3D67, (-0.010203373384751278d));
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.3834364814420919d + "'", double20 == 1.3834364814420919d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.5773502691896258d + "'", double48 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.42073549240394825d) + "'", double50 == (-0.42073549240394825d));
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
    }

    @Test
    public void test11518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11518");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyTo(rotation39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        double[] doubleArray42 = rotation39.getAngles(rotationOrder41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder41.getA1();
        java.lang.String str44 = rotationOrder41.toString();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder41.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder41.getA3();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, 0.7071067811865476d, 0.05012358797963627d, 0.3168077174997882d);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder41.getA2();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[2.034443935795702, -0.7297276562269669, 2.034443935795702]");
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "YXZ" + "'", str44, "YXZ");
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D51);
    }

    @Test
    public void test11519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11519");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.8944271909999159d), (-0.25159761627788696d), (-0.9589242746631385d));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation9.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation15.revert();
        double double18 = rotation17.getAngle();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation24.applyTo(rotation30);
        double double32 = rotation30.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation17.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D((double) '#', (double) 1.0f, 0.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder38.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder38.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder38.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D37.add(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation33.applyInverseTo(vector3D37);
        double double46 = vector3D45.getY();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D45.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D45.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D45);
        double double51 = vector3D3.getX();
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.141592653589793d + "'", double18 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5773502691896258d + "'", double32 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0000000000000009d + "'", double46 == 1.0000000000000009d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.8944271909999159d) + "'", double51 == (-0.8944271909999159d));
    }

    @Test
    public void test11520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11520");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyTo(rotation39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        double[] doubleArray42 = rotation39.getAngles(rotationOrder41);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder43.getA2();
        double[] doubleArray46 = rotation39.getAngles(rotationOrder43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder43.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder43.getA1();
        java.lang.String str49 = rotationOrder43.toString();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder43.getA3();
        double double51 = vector3D50.getZ();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[2.034443935795702, -0.7297276562269669, 2.034443935795702]");
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.7853981633974483, 1.9106332362490182, 2.356194490192345]");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "XZX" + "'", str49, "XZX");
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
    }

    @Test
    public void test11521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11521");
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation24.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation18.applyInverseTo(rotation24);
        double[][] doubleArray33 = rotation18.getMatrix();
        java.lang.Throwable throwable35 = null;
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("hi!", throwable35);
        java.lang.Object[] objArray37 = mathException36.getArguments();
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException36);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) doubleArray33, (java.lang.Throwable) mathException38);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Throwable) mathException38);
        java.lang.Object[] objArray41 = mathException38.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException42 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: YXZ", objArray41);
        java.lang.String str43 = notARotationMatrixException42.getPattern();
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Throwable) notARotationMatrixException42);
        java.lang.Object[] objArray45 = mathException44.getArguments();
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", objArray45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: org.apache.commons.math.MathException", (java.lang.Throwable) mathException46);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.apache.commons.math.MathException: YXZ" + "'", str43, "org.apache.commons.math.MathException: YXZ");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
    }

    @Test
    public void test11522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11522");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.7853981633974482d, 0.5403023058681398d, (double) 10.0f, 0.47037064010186347d, true);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation14.applyTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation27.applyTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation21.applyInverseTo(rotation27);
        double double36 = rotation35.getQ2();
        double[][] doubleArray37 = rotation35.getMatrix();
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray37);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException39 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray37);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException40 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", (java.lang.Object[]) doubleArray37);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(doubleArray37, (double) 0L);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation5.applyTo(rotation43);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.577350269189626d + "'", double36 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
    }

    @Test
    public void test11523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11523");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D0.add(vector3D2);
        double double4 = vector3D2.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D2.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, 1.3834364814420919d, (-0.32355350711941916d), 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.scalarMultiply((double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D5, vector3D14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.orthogonal();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null norm");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
    }

    @Test
    public void test11524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11524");
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!");
        java.lang.String str2 = mathException1.getPattern();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!" + "'", str2, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!");
    }

    @Test
    public void test11525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11525");
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double6 = vector3D5.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double9 = vector3D8.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.add(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D10.add(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double15 = vector3D14.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double18 = vector3D17.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.add(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.add(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D3, (double) (short) 0, vector3D12, (-1.0d), vector3D19, (double) (-1.0f), vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double28 = vector3D27.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double31 = vector3D30.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.add(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double36 = vector3D35.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D35);
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder39.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D42.add(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D30, (double) 100, vector3D35, (double) 1.0f, vector3D40, (double) 10L, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double50 = vector3D49.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, vector3D19, (double) 10, vector3D30, 1.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D19.scalarMultiply((double) 1L);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D54.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D(0.05912668433660327d, vector3D54);
        double double57 = vector3D54.getNorm();
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
    }

    @Test
    public void test11526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11526");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 1L, (-1.0000000000000004d), (double) ' ', true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder6.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder6.getA2();
        double[] doubleArray11 = rotation5.getAngles(rotationOrder6);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D12, 42.08543151357638d);
        double double15 = rotation14.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0882830317724195, 0.08431492297770622, 2.6590793585673165]");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.0d) + "'", double15 == (-0.0d));
    }

    @Test
    public void test11527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11527");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        double double3 = vector3D2.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D2.negate();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D5.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D5, 0.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str10 = rotationOrder9.toString();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) 100.0f, 10.0d, (-0.0d));
        org.apache.commons.math.geometry.Rotation rotation15 = rotation8.applyInverseTo(rotation14);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation14.getAxis();
        double double17 = org.apache.commons.math.geometry.Vector3D.angle(vector3D4, vector3D16);
        double double18 = vector3D4.getNorm();
        double double19 = vector3D4.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "YXZ" + "'", str10, "YXZ");
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.3061290504076808d + "'", double17 == 1.3061290504076808d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-3.141592653589793d) + "'", double19 == (-3.141592653589793d));
    }

    @Test
    public void test11528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11528");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation19.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyTo(rotation19);
        double double35 = rotation34.getQ1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation41.applyTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation54.applyTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation48.applyInverseTo(rotation54);
        double double63 = rotation62.getQ2();
        double[][] doubleArray64 = rotation62.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(doubleArray64, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation67 = rotation34.applyInverseTo(rotation66);
        double[][] doubleArray68 = rotation67.getMatrix();
        double double69 = rotation67.getQ1();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation67.revert();
        double double71 = rotation67.getQ1();
        double double72 = rotation67.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.577350269189626d) + "'", double35 == (-0.577350269189626d));
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.577350269189626d + "'", double63 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2.77555756156289E-17d + "'", double69 == 2.77555756156289E-17d);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2.77555756156289E-17d + "'", double71 == 2.77555756156289E-17d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-2.7755575615628926E-17d) + "'", double72 == (-2.7755575615628926E-17d));
    }

    @Test
    public void test11529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11529");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation10.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation23.applyTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation17.applyInverseTo(rotation23);
        double double32 = rotation23.getQ1();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation4.applyTo(rotation23);
        double double34 = rotation4.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5773502691896258d + "'", double32 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.0927489957179025d) + "'", double34 == (-0.0927489957179025d));
    }

    @Test
    public void test11530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11530");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation10.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation23.applyTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation17.applyInverseTo(rotation23);
        double double32 = rotation23.getQ1();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation4.applyTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation33.revert();
        double double35 = rotation34.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D36.add(vector3D38);
        double double40 = vector3D38.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation34.applyTo(vector3D38);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation47.applyTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation53.revert();
        double double56 = rotation55.getAngle();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation62.applyTo(rotation68);
        double double70 = rotation68.getQ3();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation55.applyInverseTo(rotation68);
        double[][] doubleArray72 = rotation55.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation55.revert();
        org.apache.commons.math.geometry.Rotation rotation74 = rotation34.applyTo(rotation73);
        double double75 = rotation34.getAngle();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation((double) '#', 99.96860270161358d, (double) 1L, (-0.5773502691896261d), true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder82 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder82.getA2();
        java.lang.String str84 = rotationOrder82.toString();
        double[] doubleArray85 = rotation81.getAngles(rotationOrder82);
        double double86 = rotation81.getAngle();
        org.apache.commons.math.geometry.Rotation rotation87 = rotation34.applyInverseTo(rotation81);
        java.lang.Class<?> wildcardClass88 = rotation34.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5773502691896258d + "'", double32 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.5480028924187776d + "'", double35 == 1.5480028924187776d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 3.141592653589793d + "'", double56 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.5773502691896258d + "'", double70 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.5480028924187776d + "'", double75 == 1.5480028924187776d);
        org.junit.Assert.assertNotNull(rotationOrder82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "ZXY" + "'", str84, "ZXY");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-3.1234010373738292, -0.6735823234338172, 3.1364117456572616]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2.468088770304362d + "'", double86 == 2.468088770304362d);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test11531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11531");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation5 = rotation4.revert();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation4.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotation5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
    }

    @Test
    public void test11532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11532");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double1 = vector3D0.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.add(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D5.add(vector3D6);
        double double8 = vector3D7.getDelta();
        double double9 = vector3D7.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation29.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation42.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation36.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation22.applyTo(rotation50);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        double[] doubleArray53 = rotation50.getAngles(rotationOrder52);
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder54.getA2();
        double[] doubleArray57 = rotation50.getAngles(rotationOrder54);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder54.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D58.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D(1.4278296224057285d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D7.subtract(vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D63 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D61.subtract(0.006182565282665363d, vector3D63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.5707963267948966d) + "'", double9 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[2.034443935795702, -0.7297276562269669, 2.034443935795702]");
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.7853981633974483, 1.9106332362490182, 2.356194490192345]");
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
    }

    @Test
    public void test11533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11533");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation11.revert();
        double double14 = rotation13.getAngle();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation20.applyTo(rotation26);
        double double28 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation13.applyInverseTo(rotation26);
        double[][] doubleArray30 = rotation26.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(doubleArray30, 63.96011516099306d);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(doubleArray30, 0.02980099775410749d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 3.141592653589793d + "'", double14 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.5773502691896258d + "'", double28 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(doubleArray30);
    }

    @Test
    public void test11534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11534");
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException("");
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException1);
        java.lang.String str3 = mathException1.getPattern();
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException1);
        java.lang.Throwable throwable6 = null;
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("hi!", throwable6);
        java.lang.String str8 = mathException7.getPattern();
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException7);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException9);
        mathException1.addSuppressed((java.lang.Throwable) mathException9);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test11535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11535");
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation8.applyTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation15.applyInverseTo(rotation21);
        double[][] doubleArray30 = rotation15.getMatrix();
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: Euler angles singularity", (java.lang.Object[]) doubleArray30);
        java.lang.Throwable[] throwableArray32 = mathException31.getSuppressed();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation41.applyTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation54.applyTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation48.applyInverseTo(rotation54);
        double double63 = rotation62.getQ2();
        double[][] doubleArray64 = rotation62.getMatrix();
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", (java.lang.Object[]) doubleArray64);
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("Euler angles singularity", (java.lang.Object[]) doubleArray64);
        java.lang.String str67 = mathException66.getPattern();
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException66);
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: XZX", (java.lang.Object[]) throwableArray32, (java.lang.Throwable) mathException66);
        java.lang.Throwable throwable74 = null;
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("hi!", throwable74);
        java.lang.Object[] objArray76 = mathException75.getArguments();
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray76);
        java.lang.Object[] objArray78 = mathException77.getArguments();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity", objArray78);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("YZX", objArray78);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: XYZ", (java.lang.Object[]) throwableArray32, (java.lang.Throwable) mathException80);
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.577350269189626d + "'", double63 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Euler angles singularity" + "'", str67, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertNotNull(throwableArray82);
    }

    @Test
    public void test11536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11536");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        double double6 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation13.applyTo(rotation19);
        double[][] doubleArray21 = rotation19.getMatrix();
        double[][] doubleArray22 = rotation19.getMatrix();
        double double23 = rotation19.getQ3();
        double double24 = rotation19.getQ2();
        double double25 = rotation19.getQ1();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation7.applyInverseTo(rotation19);
        double[][] doubleArray27 = rotation26.getMatrix();
        double[][] doubleArray28 = rotation26.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(doubleArray28, 8.550422243849528d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(doubleArray28, (-0.4231361643575562d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.031397298386422245d + "'", double6 == 0.031397298386422245d);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.5773502691896258d + "'", double23 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.5773502691896258d + "'", double24 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.5773502691896258d + "'", double25 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(doubleArray28);
    }

    @Test
    public void test11537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11537");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.39100351202166916d), (-9.48072637811565E-6d), (-0.10170265737575321d));
    }

    @Test
    public void test11538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11538");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyTo(rotation39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        double[] doubleArray42 = rotation39.getAngles(rotationOrder41);
        java.lang.String str43 = rotationOrder41.toString();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder41.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder41.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder41.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder41.getA2();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[2.034443935795702, -0.7297276562269669, 2.034443935795702]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "YXZ" + "'", str43, "YXZ");
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
    }

    @Test
    public void test11539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11539");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("hi!", throwable5);
        java.lang.Object[] objArray7 = mathException6.getArguments();
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException8);
        java.lang.Throwable throwable12 = null;
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", throwable12);
        java.lang.Object[] objArray14 = mathException13.getArguments();
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException15);
        mathException9.addSuppressed((java.lang.Throwable) mathException16);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) mathException9);
        java.lang.Throwable throwable20 = null;
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", throwable20);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) mathException21);
        java.lang.String str23 = mathException21.getPattern();
        java.lang.Throwable throwable26 = null;
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", throwable26);
        java.lang.Object[] objArray28 = mathException27.getArguments();
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray28);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException29);
        java.lang.Throwable throwable33 = null;
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", throwable33);
        java.lang.Object[] objArray35 = mathException34.getArguments();
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException36);
        mathException30.addSuppressed((java.lang.Throwable) mathException37);
        java.lang.Throwable throwable43 = null;
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("hi!", throwable43);
        java.lang.Object[] objArray45 = mathException44.getArguments();
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("YXZ", (java.lang.Throwable) mathException46);
        java.lang.String str48 = mathException47.getPattern();
        java.lang.Throwable[] throwableArray49 = mathException47.getSuppressed();
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", (java.lang.Object[]) throwableArray49);
        mathException30.addSuppressed((java.lang.Throwable) mathException50);
        mathException21.addSuppressed((java.lang.Throwable) mathException30);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException30);
        java.lang.Class<?> wildcardClass54 = mathException53.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Cardan angles singularity" + "'", str2, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "YXZ" + "'", str48, "YXZ");
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test11540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11540");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation18);
        double double27 = rotation26.getQ2();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        double double34 = rotation33.getQ1();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation26.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA2();
        double[] doubleArray38 = rotation33.getAngles(rotationOrder36);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) (byte) 100, (-2.356194490192345d), 0.8775825618903732d);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder36.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder36.getA2();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.577350269189626d + "'", double27 == 0.577350269189626d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.031397298386422245d + "'", double34 == 0.031397298386422245d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[3.078582052843988, 0.019349922785144295, 3.120983474296034]");
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
    }

    @Test
    public void test11541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11541");
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double7 = vector3D6.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.add(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D18.add(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D6, (double) 100, vector3D11, (double) 1.0f, vector3D16, (double) 10L, vector3D21);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D22, (double) 1.0f);
        double double25 = rotation24.getQ1();
        double[][] doubleArray26 = rotation24.getMatrix();
        java.lang.Throwable throwable28 = null;
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("hi!", throwable28);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray26, (java.lang.Throwable) mathException29);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(doubleArray26, (double) 0);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException33 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: ZXZ", (java.lang.Object[]) doubleArray26);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(doubleArray26, 0.46591287509064955d);
        double[][] doubleArray36 = rotation35.getMatrix();
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-0.0d) + "'", double25 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray36);
    }

    @Test
    public void test11542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11542");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.01934871530964258d, 0.9705461557891167d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D((-0.9253293489463692d), (-0.42073549240394825d), (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D6.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D2.add(vector3D6);
        java.lang.Class<?> wildcardClass9 = vector3D6.getClass();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test11543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11543");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.9253293489463692d), (-0.16192227763965086d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, 3.9999999999999982d, (-2.356194490192345d), (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, 100.49963690658076d, (-0.5773502691896258d), Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, 7.691013319148993E-4d, 0.0d, 0.7061049841015816d);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D2.add((-0.3906334463134419d), vector3D19);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
    }

    @Test
    public void test11544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11544");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'a', (double) (short) -1, (double) (short) 0);
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation18.revert();
        double double21 = rotation20.getAngle();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation27.applyTo(rotation33);
        double double35 = rotation33.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation20.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder37.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double46 = vector3D45.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double49 = vector3D48.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.add(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.add(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double55 = vector3D54.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double58 = vector3D57.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.add(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D59.add(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D43, (double) (short) 0, vector3D52, (-1.0d), vector3D59, (double) (-1.0f), vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double68 = vector3D67.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double71 = vector3D70.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.add(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double76 = vector3D75.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D75);
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder79.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder83 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder83.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D82.add(vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D70, (double) 100, vector3D75, (double) 1.0f, vector3D80, (double) 10L, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D89 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double90 = vector3D89.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, vector3D59, (double) 10, vector3D70, 1.0d, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D39.subtract((double) (byte) -1, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation33.applyInverseTo(vector3D93);
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D94.negate();
        org.apache.commons.math.geometry.Vector3D vector3D96 = rotation4.applyTo(vector3D94);
        double double97 = vector3D94.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D98 = vector3D94.negate();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.8610036570415694d + "'", double5 == 0.8610036570415694d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.0927489957179025d) + "'", double6 == (-0.0927489957179025d));
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 3.141592653589793d + "'", double21 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.5773502691896258d + "'", double35 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotationOrder83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + (-0.7853981633974482d) + "'", double97 == (-0.7853981633974482d));
        org.junit.Assert.assertNotNull(vector3D98);
    }

    @Test
    public void test11545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11545");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation19.applyInverseTo(rotation25);
        double double34 = rotation25.getQ1();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation6.applyTo(rotation25);
        double[][] doubleArray36 = rotation25.getMatrix();
        java.lang.Throwable throwable39 = null;
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("hi!", throwable39);
        java.lang.Object[] objArray41 = mathException40.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException42 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", objArray41);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("Cardan angles singularity", (java.lang.Object[]) doubleArray36, (java.lang.Throwable) notARotationMatrixException42);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(doubleArray36, (double) (byte) 10);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("YXY", (java.lang.Object[]) doubleArray36);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(doubleArray36, 0.9553166181245092d);
        java.lang.Class<?> wildcardClass49 = rotation48.getClass();
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.5773502691896258d + "'", double34 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test11546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11546");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((-0.6486695111439882d), 0.8993270887478315d, (-0.4082482904638631d));
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation10.applyTo(rotation16);
        double[][] doubleArray18 = rotation16.getMatrix();
        double[][] doubleArray19 = rotation16.getMatrix();
        double double20 = rotation16.getQ3();
        double double21 = rotation16.getAngle();
        double double22 = rotation16.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double24 = vector3D23.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double27 = vector3D26.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.add(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.add(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double33 = vector3D32.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double36 = vector3D35.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.add(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double41 = vector3D40.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D47.add(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D35, (double) 100, vector3D40, (double) 1.0f, vector3D45, (double) 10L, vector3D50);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D29, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D54.add(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D29.add((double) (byte) 0, vector3D57);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D29.add(vector3D60);
        double double62 = vector3D29.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D29.negate();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D29.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation16.applyTo(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D4, vector3D65);
        double double67 = vector3D4.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder69.getA3();
        double double72 = vector3D71.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D(0.7139148112028642d, (-0.0054505695096481715d), 0.8610036570415693d);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D71.subtract((-0.2281629336117817d), vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D(0.7088611841255448d, vector3D77, 0.647536017209422d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (-0.32355350711941916d));
        org.apache.commons.math.geometry.Vector3D vector3D86 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, vector3D85);
        double double87 = vector3D85.getY();
        double double88 = org.apache.commons.math.geometry.Vector3D.angle(vector3D81, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D4.subtract(vector3D85);
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D89, 0.7061049841015816d);
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D(7.070501591499383E-17d, vector3D89);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.5773502691896258d + "'", double20 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 3.141592653589793d + "'", double21 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.5773502691896258d + "'", double22 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2.1956639589853544d + "'", double67 == 2.1956639589853544d);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.797808412475777d + "'", double87 == 0.797808412475777d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2.0296578174976942d + "'", double88 == 2.0296578174976942d);
        org.junit.Assert.assertNotNull(vector3D89);
    }

    @Test
    public void test11547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11547");
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D12.add(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation11.applyInverseTo(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D17.orthogonal();
        double double19 = vector3D18.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D16.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D16.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D5, vector3D16);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation30.applyTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation36.revert();
        double double39 = rotation38.getAngle();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation45.applyTo(rotation51);
        double double53 = rotation51.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation38.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1), 0.5773502691896258d, 3.141592653589793d, true);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double62 = vector3D61.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double65 = vector3D64.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.add(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation60.applyInverseTo(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation51.applyInverseTo(vector3D66);
        double double69 = vector3D68.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D68.negate();
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, vector3D16, 1.3061290504076808d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D(0.25159761627788696d, vector3D71, (double) (-1L), vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D(1.0000000000000004d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D(1.5707963267948966d, (-2.356194490192345d));
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D((-0.6916803607181152d), vector3D80);
        double double82 = vector3D80.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D74.add(2.580675236596418d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D83.negate();
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 3.141592653589793d + "'", double39 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.5773502691896258d + "'", double53 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.7297276562269664d) + "'", double69 == (-0.7297276562269664d));
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.7071067811865476d) + "'", double82 == (-0.7071067811865476d));
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
    }

    @Test
    public void test11548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11548");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D0.add(vector3D2);
        double double4 = vector3D2.getZ();
        double double5 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D2.negate();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D6, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D6.scalarMultiply(0.16977589786278138d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.negate();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D6.scalarMultiply((-0.2374236185411505d));
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
    }

    @Test
    public void test11549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11549");
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("hi!", throwable5);
        java.lang.Object[] objArray7 = mathException6.getArguments();
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException8);
        java.lang.Throwable throwable12 = null;
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", throwable12);
        java.lang.Object[] objArray14 = mathException13.getArguments();
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray14);
        java.lang.Object[] objArray16 = mathException15.getArguments();
        java.lang.String str17 = mathException15.getPattern();
        mathException8.addSuppressed((java.lang.Throwable) mathException15);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException8);
        java.lang.Throwable[] throwableArray20 = mathException8.getSuppressed();
        java.lang.Throwable throwable22 = null;
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", throwable22);
        java.lang.Object[] objArray24 = mathException23.getArguments();
        java.lang.Object[] objArray25 = mathException23.getArguments();
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("YXY", (java.lang.Object[]) throwableArray20, (java.lang.Throwable) mathException23);
        java.lang.Throwable throwable30 = null;
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("hi!", throwable30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException(throwable30);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("ZXY", (java.lang.Throwable) mathException33);
        java.lang.Throwable throwable38 = null;
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("hi!", throwable38);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException(throwable38);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException40);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException42);
        mathException33.addSuppressed((java.lang.Throwable) mathException43);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: XZX", (java.lang.Object[]) throwableArray20, (java.lang.Throwable) mathException33);
        java.lang.String str46 = mathException45.getPattern();
        java.lang.Object[] objArray47 = mathException45.getArguments();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str17, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: XZX" + "'", str46, "org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: XZX");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!]");
    }

    @Test
    public void test11550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11550");
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", throwable9);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("", objArray11);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException14 = new org.apache.commons.math.geometry.NotARotationMatrixException("", objArray11);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException15 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: hi!", objArray11);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str19 = cardanEulerSingularityException18.getPattern();
        java.lang.Throwable throwable22 = null;
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", throwable22);
        java.lang.Object[] objArray24 = mathException23.getArguments();
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException25);
        java.lang.Throwable throwable29 = null;
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", throwable29);
        java.lang.Object[] objArray31 = mathException30.getArguments();
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException32);
        mathException26.addSuppressed((java.lang.Throwable) mathException33);
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) mathException26);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("hi!", throwable37);
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) mathException38);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("ZXY", (java.lang.Throwable) mathException38);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("Euler angles singularity", objArray11, (java.lang.Throwable) mathException38);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: XZX", objArray11);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", objArray11);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray11);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Cardan angles singularity" + "'", str19, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
    }

    @Test
    public void test11551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11551");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, (-2.356194490192345d), (double) '#', (double) 10L, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyTo(rotation18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) (byte) -1, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyTo(rotation24);
        double double26 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double32 = vector3D31.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double35 = vector3D34.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.add(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D36.add(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double41 = vector3D40.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double44 = vector3D43.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.add(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.add(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D29, (double) (short) 0, vector3D38, (-1.0d), vector3D45, (double) (-1.0f), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double54 = vector3D53.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double57 = vector3D56.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.add(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double62 = vector3D61.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D61);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D68.add(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D56, (double) 100, vector3D61, (double) 1.0f, vector3D66, (double) 10L, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double76 = vector3D75.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, vector3D45, (double) 10, vector3D56, 1.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation24.applyInverseTo(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double81 = vector3D80.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double84 = vector3D83.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D80.add(0.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D85.add(vector3D86);
        double double88 = vector3D87.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation24.applyInverseTo(vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation5.applyInverseTo(vector3D87);
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D87, 0.9724711741591723d);
        org.apache.commons.math.geometry.Rotation rotation93 = rotation92.revert();
        double[][] doubleArray94 = rotation92.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation96 = new org.apache.commons.math.geometry.Rotation(doubleArray94, 0.07596341966891214d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1.0d) + "'", double6 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.3834364814420919d + "'", double26 == 1.3834364814420919d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2.0d + "'", double88 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(rotation93);
        org.junit.Assert.assertNotNull(doubleArray94);
    }

    @Test
    public void test11552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11552");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation10.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation23.applyTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation17.applyInverseTo(rotation23);
        double double32 = rotation23.getQ1();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation4.applyTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getAngle();
        double double43 = rotation40.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation33.applyTo(rotation40);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation44.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.scalarMultiply(0.9623520198670681d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5773502691896258d + "'", double32 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.5773502691896258d + "'", double41 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 3.141592653589793d + "'", double42 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.5773502691896258d + "'", double43 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
    }

    @Test
    public void test11553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11553");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyTo(rotation39);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation40.applyTo(vector3D41);
        double double43 = vector3D41.getNorm();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
    }

    @Test
    public void test11554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11554");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
    }

    @Test
    public void test11555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11555");
        java.lang.Object[] objArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException2 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: ZYZ", objArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11556");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '#', 99.96860270161358d, (double) 1L, (-0.5773502691896261d), true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((-1.5707963267948966d), (double) 0L, 0.031397298386422245d, (double) ' ', true);
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double16 = vector3D15.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double19 = vector3D18.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.add(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double24 = vector3D23.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D30.add(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D18, (double) 100, vector3D23, (double) 1.0f, vector3D28, (double) 10L, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D23.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation11.applyInverseTo(vector3D37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) 100L, (double) 0.0f, (double) (short) 10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, 1.3834364814420919d, (-0.32355350711941916d), 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder47.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D46.add(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D42.subtract(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D(0.0d, 0.2737243725398427d, 0.7950731247900203d);
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D(0.22709584369158178d, (-0.7297276562269664d));
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double67 = vector3D66.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double69 = vector3D68.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double72 = vector3D71.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D68.add(0.0d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D73.add(vector3D74);
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder77.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder77.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D75.add((double) (short) 1, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D66.subtract(vector3D80);
        double double82 = vector3D80.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, vector3D60, (-0.6154797086703874d), vector3D64, (-0.0927489957179025d), vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D42.subtract(0.8610036570415693d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation39.applyInverseTo(vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D85.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D87 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D85.subtract(vector3D87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.9987969075985873d + "'", double12 == 0.9987969075985873d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
    }

    @Test
    public void test11557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11557");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double3 = vector3D2.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double6 = vector3D5.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.add(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double11 = vector3D10.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D17.add(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D5, (double) 100, vector3D10, (double) 1.0f, vector3D15, (double) 10L, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D10.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, vector3D23);
        double double25 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double28 = vector3D27.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double31 = vector3D30.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.add(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D32.add(vector3D33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.add((double) (short) 1, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusK;
        double double41 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D38, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D23.subtract(0.5773502691896258d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D43.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double47 = vector3D46.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D46.normalize();
        double double50 = org.apache.commons.math.geometry.Vector3D.angle(vector3D43, vector3D46);
        double double51 = vector3D46.getNorm();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D46, 0.9987969075985873d);
        double double54 = org.apache.commons.math.geometry.Vector3D.angle(vector3D42, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D42.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D55, 0.0d);
        double double58 = rotation57.getQ1();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.5707963267948966d + "'", double50 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.005773438543149319d + "'", double54 == 0.005773438543149319d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.0d) + "'", double58 == (-0.0d));
    }

    @Test
    public void test11558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11558");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation11.revert();
        double double14 = rotation13.getAngle();
        double double15 = rotation13.getAngle();
        double[][] doubleArray16 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(doubleArray16, 0.005352030736132928d);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation18.getAxis();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 3.141592653589793d + "'", double14 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 3.141592653589793d + "'", double15 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
    }

    @Test
    public void test11559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11559");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.2737243725398427d, (double) (-1.0f), (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D5.scalarMultiply(3.9999999999999982d);
        double double8 = vector3D7.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D3, vector3D7);
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D9.negate();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.normalize();
        double double13 = vector3D12.getY();
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 3.9999999999999982d + "'", double8 == 3.9999999999999982d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.2640124337729337d + "'", double13 == 0.2640124337729337d);
    }

    @Test
    public void test11560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11560");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        java.lang.String str4 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.1697758978627814d, (-0.046357877526357234d), (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.875400851998216d, 3.0317837108771113d, 3.110864528230277d);
        java.lang.String str14 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YZY" + "'", str2, "YZY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "YZY" + "'", str4, "YZY");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "YZY" + "'", str14, "YZY");
    }

    @Test
    public void test11561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11561");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D2 = vector3D1.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation8.applyTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation14.revert();
        double double17 = rotation16.getAngle();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation23.applyTo(rotation29);
        double double31 = rotation29.getQ3();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation16.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1), 0.5773502691896258d, 3.141592653589793d, true);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double40 = vector3D39.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double43 = vector3D42.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.add(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation38.applyInverseTo(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation29.applyInverseTo(vector3D44);
        double double47 = vector3D46.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D46.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder50.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double54 = vector3D53.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double57 = vector3D56.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.add(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D58.add(vector3D59);
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder62.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.add((double) (short) 1, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.minusK;
        double double67 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D64, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D51.subtract(0.2737243725398427d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D46.subtract((-0.6916803607181152d), vector3D68);
        double double70 = org.apache.commons.math.geometry.Vector3D.angle(vector3D2, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((-0.8948663405333898d), vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D(1.4250833450973304d, (double) ' ');
        double double75 = org.apache.commons.math.geometry.Vector3D.angle(vector3D46, vector3D74);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 3.141592653589793d + "'", double17 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.5773502691896258d + "'", double31 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.7297276562269664d) + "'", double47 == (-0.7297276562269664d));
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.8410686705679301d + "'", double70 == 0.8410686705679301d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.7449166609115538d + "'", double75 == 1.7449166609115538d);
    }

    @Test
    public void test11562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11562");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation24.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyTo(rotation33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray36 = rotation34.getAngles(rotationOrder35);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (-1.0d), (double) '4', (double) 'a');
        double[] doubleArray46 = rotation34.getAngles(rotationOrder37);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder37.getA1();
        java.lang.String str48 = rotationOrder37.toString();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, 0.2919265817264289d, (-0.9386072654111782d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder37.getA2();
        java.lang.String str54 = rotationOrder37.toString();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder37.getA3();
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.7853981633974483, 1.9106332362490182, 2.356194490192345]");
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[2.034443935795702, -0.7297276562269669, 2.034443935795702]");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ZYX" + "'", str48, "ZYX");
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ZYX" + "'", str54, "ZYX");
        org.junit.Assert.assertNotNull(vector3D55);
    }

    @Test
    public void test11563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11563");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.058664100374676044d), 0.5458056146732426d, 0.7493631786275798d);
    }

    @Test
    public void test11564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11564");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D0.add(vector3D2);
        double double4 = vector3D2.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double7 = vector3D6.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D6.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double19 = vector3D18.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double22 = vector3D21.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.add(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.add(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double28 = vector3D27.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double31 = vector3D30.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.add(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D32.add(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D16, (double) (short) 0, vector3D25, (-1.0d), vector3D32, (double) (-1.0f), vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D32.negate();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D13.add((double) (byte) 1, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D6.add((double) 1, vector3D13);
        double double41 = org.apache.commons.math.geometry.Vector3D.angle(vector3D2, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D2.normalize();
        double double43 = vector3D42.getZ();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D42, (-0.7151193819011747d));
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.5707963267948966d + "'", double41 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
    }

    @Test
    public void test11565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11565");
        java.lang.Object[] objArray1 = null;
        java.lang.Throwable throwable4 = null;
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("hi!", throwable4);
        java.lang.Object[] objArray6 = mathException5.getArguments();
        java.lang.Object[] objArray7 = mathException5.getArguments();
        java.lang.Throwable throwable8 = null;
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("", objArray7, throwable8);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", objArray1, throwable8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
    }

    @Test
    public void test11566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11566");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(101.0d, 0.7950731247900203d, 0.9854438721028962d, 0.42418336957171715d, true);
    }

    @Test
    public void test11567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11567");
        java.lang.Throwable throwable4 = null;
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("hi!", throwable4);
        java.lang.Object[] objArray6 = mathException5.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException7 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", objArray6);
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", throwable9);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        java.lang.Object[] objArray12 = mathException10.getArguments();
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray6, (java.lang.Throwable) mathException10);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation34.applyTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation28.applyInverseTo(rotation34);
        double double43 = rotation42.getQ2();
        double[][] doubleArray44 = rotation42.getMatrix();
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray44);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException46 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray44);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("", objArray6, (java.lang.Throwable) notARotationMatrixException46);
        java.lang.Object[] objArray48 = mathException47.getArguments();
        java.lang.Throwable[] throwableArray49 = mathException47.getSuppressed();
        java.lang.String str50 = mathException47.getPattern();
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.577350269189626d + "'", double43 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
    }

    @Test
    public void test11568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11568");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyTo(rotation39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        double[] doubleArray42 = rotation39.getAngles(rotationOrder41);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder43.getA2();
        double[] doubleArray46 = rotation39.getAngles(rotationOrder43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder43.getA3();
        java.lang.String str51 = rotationOrder43.toString();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder43.getA1();
        double double54 = vector3D53.getY();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[2.034443935795702, -0.7297276562269669, 2.034443935795702]");
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.7853981633974483, 1.9106332362490182, 2.356194490192345]");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "XZX" + "'", str51, "XZX");
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
    }

    @Test
    public void test11569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11569");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str4 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable throwable7 = null;
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("hi!", throwable7);
        java.lang.Object[] objArray9 = mathException8.getArguments();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException10);
        java.lang.Throwable throwable14 = null;
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", throwable14);
        java.lang.Object[] objArray16 = mathException15.getArguments();
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException17);
        mathException11.addSuppressed((java.lang.Throwable) mathException18);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) mathException11);
        java.lang.Throwable throwable22 = null;
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", throwable22);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) mathException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation38.applyTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation45.applyInverseTo(rotation51);
        double double60 = rotation51.getQ1();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation32.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation61.revert();
        double[][] doubleArray63 = rotation62.getMatrix();
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) doubleArray63);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) doubleArray63);
        mathException23.addSuppressed((java.lang.Throwable) mathException65);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException65);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException65);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Cardan angles singularity" + "'", str4, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.5773502691896258d + "'", double60 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(doubleArray63);
    }

    @Test
    public void test11570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11570");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-13.286270865963271d), 0.09274899571790257d, 1.0000000000000009d);
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation9.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation22.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation16.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation16.revert();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation16.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D();
        double double34 = vector3D33.getAlpha();
        double double35 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D32, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D3.add(vector3D32);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D36, (double) (short) 0);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D36.orthogonal();
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D39);
    }

    @Test
    public void test11571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11571");
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation10.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation23.applyTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation17.applyInverseTo(rotation23);
        double double32 = rotation31.getQ2();
        double[][] doubleArray33 = rotation31.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException34 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray33);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException35 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", (java.lang.Object[]) doubleArray33);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("ZYX", (java.lang.Object[]) doubleArray33);
        java.lang.Object[] objArray37 = mathException36.getArguments();
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", objArray37);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException39 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", objArray37);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.577350269189626d + "'", double32 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[[-0.3333333333333329, 0.6666666666666671, 0.6666666666666671], [0.6666666666666671, -0.3333333333333329, 0.6666666666666671], [0.6666666666666671, 0.6666666666666671, -0.3333333333333329]]");
    }

    @Test
    public void test11572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11572");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.6486695111439882d), 0.7853981633974482d);
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.negate();
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D(1.1368611863028215d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double8 = vector3D7.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double11 = vector3D10.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.add(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double16 = vector3D15.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D22.add(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D10, (double) 100, vector3D15, (double) 1.0f, vector3D20, (double) 10L, vector3D25);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(vector3D26, (double) 1.0f);
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation28.revert();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D33.negate();
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D(1.4278296224057285d, 3.9999999999999982d, (double) ' ');
        double double39 = org.apache.commons.math.geometry.Vector3D.angle(vector3D34, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation31.applyTo(vector3D38);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation41.getAxis();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.479425538604203d + "'", double29 == 0.479425538604203d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.8775825618903728d + "'", double30 == 0.8775825618903728d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-0.0d) + "'", double32 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.6950289842361217d + "'", double39 == 1.6950289842361217d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
    }

    @Test
    public void test11573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11573");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-1.0d), (double) '4', (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 3.9999999999999982d, (-1.5707963267948966d), 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, (double) (-1L), 0.005773438543149319d);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.252106191262661d, 0.47544836207632507d, 0.8414709848078965d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D13);
    }

    @Test
    public void test11574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11574");
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("hi!", throwable5);
        java.lang.Object[] objArray7 = mathException6.getArguments();
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray7);
        java.lang.Object[] objArray9 = mathException8.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: hi!", objArray9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("", objArray9);
        java.lang.Object[] objArray12 = mathException11.getArguments();
        java.lang.Throwable throwable17 = null;
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("hi!", throwable17);
        java.lang.Object[] objArray19 = mathException18.getArguments();
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("YXZ", (java.lang.Throwable) mathException20);
        java.lang.String str22 = mathException21.getPattern();
        java.lang.Throwable[] throwableArray23 = mathException21.getSuppressed();
        java.lang.Throwable throwable27 = null;
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", throwable27);
        java.lang.Object[] objArray29 = mathException28.getArguments();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException30);
        java.lang.Throwable throwable34 = null;
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("hi!", throwable34);
        java.lang.Object[] objArray36 = mathException35.getArguments();
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray36);
        java.lang.Object[] objArray38 = mathException37.getArguments();
        java.lang.String str39 = mathException37.getPattern();
        mathException30.addSuppressed((java.lang.Throwable) mathException37);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException30);
        java.lang.Object[] objArray42 = mathException41.getArguments();
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("Cardan angles singularity", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) mathException41);
        java.lang.String str44 = mathException43.getPattern();
        java.lang.String str45 = mathException43.getPattern();
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: YXZ", objArray12, (java.lang.Throwable) mathException43);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: YXZ");
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException49);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity", (java.lang.Throwable) mathException49);
        mathException46.addSuppressed((java.lang.Throwable) mathException49);
        java.lang.String str53 = mathException49.getPattern();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "YXZ" + "'", str22, "YXZ");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str39, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Cardan angles singularity" + "'", str44, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Cardan angles singularity" + "'", str45, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: YXZ" + "'", str53, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: YXZ");
    }

    @Test
    public void test11575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11575");
        double[][] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(doubleArray0, (-0.0193499227851443d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11576");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'a', (double) (short) -1, (double) (short) 0);
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.8610036570415694d + "'", double5 == 0.8610036570415694d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.0927489957179025d) + "'", double6 == (-0.0927489957179025d));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.8610036570415694d + "'", double7 == 0.8610036570415694d);
    }

    @Test
    public void test11577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11577");
        java.lang.Throwable throwable2 = null;
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException("hi!", throwable2);
        java.lang.Object[] objArray4 = mathException3.getArguments();
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray4);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException5);
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", throwable9);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray11);
        java.lang.Object[] objArray13 = mathException12.getArguments();
        java.lang.String str14 = mathException12.getPattern();
        mathException5.addSuppressed((java.lang.Throwable) mathException12);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException12);
        java.lang.Object[] objArray17 = mathException16.getArguments();
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str14, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
    }

    @Test
    public void test11578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11578");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-2.9356347564056654E-17d), vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
    }

    @Test
    public void test11579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11579");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation19.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation40.applyTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyInverseTo(rotation53);
        double double62 = rotation61.getAngle();
        double[][] doubleArray63 = rotation61.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation19.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double66 = vector3D65.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double69 = vector3D68.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.add(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D70.add(vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation19.applyInverseTo(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double75 = vector3D74.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double78 = vector3D77.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D74.add(0.0d, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D79.add(vector3D80);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D70, vector3D81);
        double double83 = rotation82.getQ2();
        double double84 = rotation82.getQ0();
        double double85 = rotation82.getQ2();
        double double86 = rotation82.getQ2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5773502691896258d + "'", double6 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 3.141592653589793d + "'", double62 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
    }

    @Test
    public void test11580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11580");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(10.0d, 1.0d, (double) 0.0f);
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation9.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation22.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation35.applyTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation48.applyTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation42.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation28.applyTo(rotation56);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation15.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation57.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder60.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation57.applyTo(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D63.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D3, vector3D64);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation78 = rotation71.applyTo(rotation77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double80 = vector3D79.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double83 = vector3D82.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D79.add(0.0d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation78.applyTo(vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D64.add(vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D84.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D87.negate();
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
    }

    @Test
    public void test11581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11581");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-1.5707963267948966d), (-0.18551215211325933d), (-6.801804092628016d));
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA2();
        java.lang.String str9 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "YZY" + "'", str9, "YZY");
    }

    @Test
    public void test11582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11582");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.45262919047801364d, (-0.42313616435755635d), (-1.4168873294310442d));
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D(0.0d, 0.0d, 0.0927489957179025d);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double16 = vector3D15.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double19 = vector3D18.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.add(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.add(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double25 = vector3D24.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double28 = vector3D27.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.add(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double33 = vector3D32.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D39.add(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D27, (double) 100, vector3D32, (double) 1.0f, vector3D37, (double) 10L, vector3D42);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D21, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D46.add(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D21.add((double) (byte) 0, vector3D49);
        double double51 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D14, vector3D21);
        double double53 = org.apache.commons.math.geometry.Vector3D.angle(vector3D10, vector3D14);
        double double54 = vector3D10.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXY" + "'", str3, "ZXY");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.5707963267948966d + "'", double53 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
    }

    @Test
    public void test11583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11583");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double1 = vector3D0.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.add(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D5.add(vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.add(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double18 = vector3D17.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D24.add(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D12, (double) 100, vector3D17, (double) 1.0f, vector3D22, (double) 10L, vector3D27);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D6, vector3D28);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D36.add(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation35.applyInverseTo(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D41.orthogonal();
        double double43 = vector3D42.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D40.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double48 = vector3D47.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double51 = vector3D50.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.add(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double56 = vector3D55.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D55);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder63.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D62.add(vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D50, (double) 100, vector3D55, (double) 1.0f, vector3D60, (double) 10L, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D55.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D44.add((double) ' ', vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D6.add(vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D72.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double76 = vector3D75.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D75.normalize();
        double double79 = org.apache.commons.math.geometry.Vector3D.angle(vector3D72, vector3D75);
        double double80 = vector3D75.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D6.add((-1.0000000000000004d), vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D75.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D75.negate();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.5707963267948966d + "'", double79 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
    }

    @Test
    public void test11584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11584");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(0.2862647032613221d, 0.0d, (-0.3744172556977022d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, 3.9999999999999982d, (-2.356194490192345d), (double) (short) 100);
        java.lang.String str11 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder6.getA2();
        double double13 = vector3D12.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D((-9.48072637811565E-6d), vector3D4, 0.030891686080436975d, vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "YXY" + "'", str11, "YXY");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test11585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11585");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        java.lang.String str6 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZYX" + "'", str6, "ZYX");
    }

    @Test
    public void test11586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11586");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D0.add(vector3D2);
        double double4 = vector3D2.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D2.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, 1.3834364814420919d, (-0.32355350711941916d), 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.scalarMultiply((double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D5, vector3D14);
        double double16 = vector3D5.getY();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D5.normalize();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1.0d) + "'", double16 == (-1.0d));
        org.junit.Assert.assertNotNull(vector3D17);
    }

    @Test
    public void test11587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11587");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation18.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray29 = rotation18.getAngles(rotationOrder28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (-0.7297276562269664d), (-0.5773502691896258d), (double) (short) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (-1.0d), (double) '4', (double) 'a');
        java.lang.String str44 = rotationOrder35.toString();
        double[] doubleArray45 = rotation34.getAngles(rotationOrder35);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, 3.9999999999999982d, 0.012096560836528858d, (-0.14055002628904184d));
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder35.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder35.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D55);
        double double57 = vector3D56.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder58.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder58.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D56, vector3D60);
        double double62 = vector3D60.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.minusI;
        double double65 = vector3D64.getY();
        double double66 = vector3D64.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D64.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D60.add(2.042774094458282d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D(0.577350269189626d, (-98.13936627634533d), 0.36923013130206433d);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D73.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(0.0d, 0.8775825618903732d, 1.5480028924187776d, 99.96860270161358d, false);
        double[][] doubleArray82 = rotation81.getMatrix();
        double double83 = rotation81.getAngle();
        double[][] doubleArray84 = rotation81.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation81.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D86 = new org.apache.commons.math.geometry.Vector3D((-0.7003708052551078d), vector3D64, 0.46787411090325975d, vector3D74, 0.0d, vector3D85);
        double double87 = vector3D85.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D51.subtract(vector3D85);
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D85, (-0.7151193819011744d));
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ZYX" + "'", str44, "ZYX");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-0.45199330443110336, -0.37241979250068413, 0.3568502654612301]");
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.5707963267948966d + "'", double57 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 3.141592653589793d + "'", double83 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1.0d + "'", double87 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D88);
    }

    @Test
    public void test11588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11588");
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation14.applyTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation27.applyTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation21.applyInverseTo(rotation27);
        double double36 = rotation27.getQ1();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation8.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation37.revert();
        double[][] doubleArray39 = rotation38.getMatrix();
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) doubleArray39);
        java.lang.Throwable throwable45 = null;
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("hi!", throwable45);
        java.lang.Object[] objArray47 = mathException46.getArguments();
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray47);
        java.lang.Object[] objArray49 = mathException48.getArguments();
        java.lang.Throwable throwable51 = null;
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("hi!", throwable51);
        java.lang.Object[] objArray53 = mathException52.getArguments();
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException52);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("hi!", objArray49, (java.lang.Throwable) mathException54);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation62.applyTo(rotation68);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation82 = rotation75.applyTo(rotation81);
        org.apache.commons.math.geometry.Rotation rotation83 = rotation69.applyInverseTo(rotation75);
        double[][] doubleArray84 = rotation69.getMatrix();
        java.lang.Throwable throwable86 = null;
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("hi!", throwable86);
        java.lang.Object[] objArray88 = mathException87.getArguments();
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException87);
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) doubleArray84, (java.lang.Throwable) mathException89);
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray49, (java.lang.Throwable) mathException90);
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException("ZYX", (java.lang.Object[]) doubleArray39, (java.lang.Throwable) mathException91);
        java.lang.String str93 = mathException91.getPattern();
        java.lang.Object[] objArray94 = mathException91.getArguments();
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ZYX", (java.lang.Throwable) mathException91);
        org.apache.commons.math.MathException mathException96 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: XZX", (java.lang.Throwable) mathException91);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.5773502691896258d + "'", double36 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str93, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[]");
    }

    @Test
    public void test11589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11589");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation39.applyTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation33.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation20.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation12.applyTo(rotation49);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.YZX;
        double[] doubleArray52 = rotation49.getAngles(rotationOrder51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder51.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double59 = vector3D58.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double62 = vector3D61.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.add(0.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double67 = vector3D66.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D66);
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder70.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder74.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D73.add(vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D61, (double) 100, vector3D66, (double) 1.0f, vector3D71, (double) 10L, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D71.negate();
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D(0.07130383924600521d, vector3D55, 0.0d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D79.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) (byte) 100);
        double double84 = vector3D83.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder86 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder86.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D85.add(vector3D87);
        double double89 = vector3D87.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D83.add(vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D80.add(vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D80.negate();
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-2.034443935795702, 0.7297276562269669, -2.034443935795702]");
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(rotationOrder86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
    }

    @Test
    public void test11590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11590");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-1.5707963267948966d), (-0.18551215211325933d), (-6.801804092628016d));
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.26237485370392877d, (-0.3442790965330113d), (-0.7853981633974482d));
        java.lang.String str11 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "YZY" + "'", str11, "YZY");
    }

    @Test
    public void test11591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11591");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double3 = vector3D2.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double6 = vector3D5.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.add(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double11 = vector3D10.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D17.add(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D5, (double) 100, vector3D10, (double) 1.0f, vector3D15, (double) 10L, vector3D20);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D21, (double) 1.0f);
        double double24 = rotation23.getQ1();
        double[][] doubleArray25 = rotation23.getMatrix();
        java.lang.Throwable throwable27 = null;
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", throwable27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray25, (java.lang.Throwable) mathException28);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(doubleArray25, (double) 0);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getAngle();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation45.applyTo(rotation51);
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder53, (double) (byte) -1, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation52.applyTo(rotation57);
        double double59 = rotation57.getAngle();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation65.applyTo(rotation71);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation78.applyTo(rotation84);
        org.apache.commons.math.geometry.Rotation rotation86 = rotation72.applyInverseTo(rotation78);
        double double87 = rotation78.getQ1();
        org.apache.commons.math.geometry.Rotation rotation88 = rotation57.applyInverseTo(rotation78);
        org.apache.commons.math.geometry.Rotation rotation89 = rotation37.applyInverseTo(rotation88);
        org.apache.commons.math.geometry.Rotation rotation90 = rotation31.applyInverseTo(rotation89);
        double double91 = rotation90.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder92 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotationOrder92.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotationOrder92.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotationOrder92.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D96 = rotationOrder92.getA3();
        double[] doubleArray97 = rotation90.getAngles(rotationOrder92);
        org.apache.commons.math.geometry.Vector3D vector3D98 = rotationOrder92.getA2();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-0.0d) + "'", double24 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.5773502691896258d + "'", double38 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 3.141592653589793d + "'", double39 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.3834364814420919d + "'", double59 == 1.3834364814420919d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.5773502691896258d + "'", double87 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.9825499883321898d + "'", double91 == 1.9825499883321898d);
        org.junit.Assert.assertNotNull(rotationOrder92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[-2.6636144920198483, 1.8899264777028324, 1.9378282385818968]");
        org.junit.Assert.assertNotNull(vector3D98);
    }

    @Test
    public void test11592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11592");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(1.4278296224057285d, 3.9999999999999982d, (double) ' ');
        double double4 = vector3D3.getAlpha();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.2279368688947319d + "'", double4 == 1.2279368688947319d);
    }

    @Test
    public void test11593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11593");
        java.lang.Throwable throwable3 = null;
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("hi!", throwable3);
        java.lang.String str5 = mathException4.getPattern();
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException4);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException6);
        java.lang.Throwable[] throwableArray8 = mathException7.getSuppressed();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation15.applyTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation28.applyTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation22.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.revert();
        double[][] doubleArray38 = rotation37.getMatrix();
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: YXZ", (java.lang.Object[]) doubleArray38);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) mathException39);
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", throwable49);
        java.lang.Object[] objArray51 = mathException50.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException52 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", objArray51);
        java.lang.Throwable throwable54 = null;
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("hi!", throwable54);
        java.lang.Object[] objArray56 = mathException55.getArguments();
        java.lang.Object[] objArray57 = mathException55.getArguments();
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray51, (java.lang.Throwable) mathException55);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation66.applyTo(rotation72);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation86 = rotation79.applyTo(rotation85);
        org.apache.commons.math.geometry.Rotation rotation87 = rotation73.applyInverseTo(rotation79);
        double double88 = rotation87.getQ2();
        double[][] doubleArray89 = rotation87.getMatrix();
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray89);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException91 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray89);
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException("", objArray51, (java.lang.Throwable) notARotationMatrixException91);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException93 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: XZX", objArray51);
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException("YZY", (java.lang.Throwable) notARotationMatrixException93);
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException("XYX", (java.lang.Throwable) mathException94);
        java.lang.Object[] objArray96 = mathException94.getArguments();
        org.apache.commons.math.MathException mathException97 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: YZX", (java.lang.Throwable) mathException94);
        org.apache.commons.math.MathException mathException98 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: YXZ", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) mathException94);
        java.lang.Object[] objArray99 = mathException98.getArguments();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.577350269189626d + "'", double88 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(objArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray96), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray96), "[]");
        org.junit.Assert.assertNotNull(objArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray99), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray99), "[]");
    }

    @Test
    public void test11594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11594");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D2);
        double double4 = vector3D3.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D8);
        double double10 = vector3D9.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D9, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D3.subtract((double) 'a', vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double18 = vector3D17.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double21 = vector3D20.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.add(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D22.add(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D13.subtract(2.5870663114445818d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D22.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D26.negate();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.5707963267948966d + "'", double4 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.5707963267948966d + "'", double10 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
    }

    @Test
    public void test11595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11595");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        double double6 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation13.applyTo(rotation19);
        double[][] doubleArray21 = rotation19.getMatrix();
        double[][] doubleArray22 = rotation19.getMatrix();
        double double23 = rotation19.getQ3();
        double double24 = rotation19.getQ2();
        double double25 = rotation19.getQ1();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation7.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation7.getAxis();
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D((double) 100L, (double) 0.0f, (double) (short) 10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, 1.3834364814420919d, (-0.32355350711941916d), 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder38.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D37.add(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D33.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D(2.210321771421862d, 0.6990056207078691d);
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D(99.57734949512052d, vector3D45, 0.47942553860420295d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D27.subtract((-0.7151193819011747d), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D49.normalize();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.031397298386422245d + "'", double6 == 0.031397298386422245d);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.5773502691896258d + "'", double23 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.5773502691896258d + "'", double24 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.5773502691896258d + "'", double25 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-0.03139886650765378d) + "'", double28 == (-0.03139886650765378d));
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
    }

    @Test
    public void test11596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11596");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 0.0d, (double) 1L, 3.141592653589793d);
        double[][] doubleArray11 = rotation10.getMatrix();
        double[][] doubleArray12 = rotation10.getMatrix();
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: XYX", (java.lang.Object[]) doubleArray12);
        java.lang.String str14 = mathException13.toString();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.MathException: XYX" + "'", str14, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: XYX");
    }

    @Test
    public void test11597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11597");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(2.344388233780138d, 0.012096560836528858d);
        double double3 = vector3D2.getZ();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.012096265830212975d + "'", double3 == 0.012096265830212975d);
    }

    @Test
    public void test11598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11598");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation19.applyTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation13.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double30 = vector3D29.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double33 = vector3D32.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.add(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D34.add(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double39 = vector3D38.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double42 = vector3D41.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.add(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double47 = vector3D46.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D46);
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder50.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D53.add(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D41, (double) 100, vector3D46, (double) 1.0f, vector3D51, (double) 10L, vector3D56);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D35, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D60.add(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D35.add((double) (byte) 0, vector3D63);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D35.add(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D35.scalarMultiply((double) 1L);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D28.add(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation13.applyTo(vector3D70);
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D71.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((-0.475113181854622d), 0.905265843320419d, (-0.43163097649205645d));
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D(2.77555756156289E-17d, 0.9994070475860579d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder83 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder83.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder83.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder83.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder83.getA3();
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D82, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = new org.apache.commons.math.geometry.Vector3D((-0.479425538604203d), vector3D73, 3.1027608203094017d, vector3D78, 0.9989248956709664d, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D90 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double91 = vector3D90.getX();
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D90.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D78.add(vector3D90);
        double double94 = vector3D78.getY();
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotationOrder83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.905265843320419d + "'", double94 == 0.905265843320419d);
    }

    @Test
    public void test11599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11599");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D0.add(vector3D2);
        double double4 = vector3D2.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D2.negate();
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D((-0.42073549240394825d), (-1.5707963267948966d), (-0.577350269189626d));
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D9.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D11.add(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double17 = vector3D16.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double21 = vector3D20.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double24 = vector3D23.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.add(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double29 = vector3D28.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D35.add(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D23, (double) 100, vector3D28, (double) 1.0f, vector3D33, (double) 10L, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double44 = vector3D43.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double47 = vector3D46.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.add(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.add(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double53 = vector3D52.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double56 = vector3D55.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.add(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D57.add(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D41, (double) (short) 0, vector3D50, (-1.0d), vector3D57, (double) (-1.0f), vector3D61);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D16, vector3D28, vector3D62);
        double double64 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D9, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D2.add(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D(0.23216520467998758d, (-0.04305703405861339d));
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(1.612391742716152E-4d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D65.scalarMultiply(0.8817726984514196d);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.5707963267948966d + "'", double64 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
    }

    @Test
    public void test11600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11600");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.7297276562269664d), 99.99999999999999d, 1.2589624995906188d);
    }

    @Test
    public void test11601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11601");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation18);
        double double27 = rotation26.getQ2();
        double[][] doubleArray28 = rotation26.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(doubleArray28, (double) '#');
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (-1.0d), (double) '4', (double) 'a');
        java.lang.String str40 = rotationOrder31.toString();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder31.getA3();
        double[] doubleArray42 = rotation30.getAngles(rotationOrder31);
        double double43 = rotation30.getQ1();
        double double44 = rotation30.getQ0();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation30.revert();
        double double46 = rotation30.getQ0();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.577350269189626d + "'", double27 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ZYX" + "'", str40, "ZYX");
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[2.0344439357957027, -0.7297276562269664, 2.0344439357957027]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.5773502691896257d + "'", double43 == 0.5773502691896257d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4.80740671595891E-17d + "'", double44 == 4.80740671595891E-17d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 4.80740671595891E-17d + "'", double46 == 4.80740671595891E-17d);
    }

    @Test
    public void test11602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11602");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double7 = vector3D6.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.add(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D11.add(vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double16 = vector3D15.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double19 = vector3D18.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.add(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.add(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D4, (double) (short) 0, vector3D13, (-1.0d), vector3D20, (double) (-1.0f), vector3D24);
        double double26 = vector3D4.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D4.scalarMultiply((double) (short) 10);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation34.applyTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation47.applyTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation67 = rotation60.applyTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation80 = rotation73.applyTo(rotation79);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation67.applyInverseTo(rotation73);
        org.apache.commons.math.geometry.Rotation rotation82 = rotation53.applyTo(rotation81);
        org.apache.commons.math.geometry.Rotation rotation83 = rotation40.applyInverseTo(rotation82);
        org.apache.commons.math.geometry.Rotation rotation84 = rotation82.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder85 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder85.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder85.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation82.applyTo(vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D28.add(vector3D87);
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D2, vector3D87);
        double double91 = vector3D2.getY();
        org.apache.commons.math.geometry.Vector3D vector3D94 = new org.apache.commons.math.geometry.Vector3D(2.356192441513731d, (-1000.0d));
        double double95 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D2, vector3D94);
        org.apache.commons.math.geometry.Vector3D vector3D96 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D2.add(vector3D96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.5707963267948966d) + "'", double26 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(rotationOrder85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-0.3976612437599936d) + "'", double95 == (-0.3976612437599936d));
    }

    @Test
    public void test11603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11603");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D(0.0927489957179025d, 99.00000000000017d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double16 = vector3D15.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.add(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double21 = vector3D20.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D27.add(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D15, (double) 100, vector3D20, (double) 1.0f, vector3D25, (double) 10L, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double37 = vector3D36.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double40 = vector3D39.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.add(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D41.add(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double46 = vector3D45.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double49 = vector3D48.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.add(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.add(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D34, (double) (short) 0, vector3D43, (-1.0d), vector3D50, (double) (-1.0f), vector3D54);
        double double56 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double60 = vector3D59.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double63 = vector3D62.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.add(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double68 = vector3D67.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D67);
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder75.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D74.add(vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D62, (double) 100, vector3D67, (double) 1.0f, vector3D72, (double) 10L, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D34.add((double) (short) -1, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D();
        double double82 = vector3D81.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, vector3D25, 10.0d, vector3D79, (double) 'a', vector3D81);
        double double84 = vector3D79.getAlpha();
        double double85 = vector3D79.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder86 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder86.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D88 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D79, vector3D87);
        double double89 = vector3D87.getNorm();
        double double90 = vector3D87.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D((-0.8662263958472479d), vector3D2, 1.1694228266894307d, vector3D8, 0.9994070475860579d, vector3D87);
        double double92 = vector3D8.getZ();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertNotNull(rotationOrder86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.0d + "'", double89 == 1.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.5707963267948966d + "'", double90 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
    }

    @Test
    public void test11604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11604");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D6.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "XZX" + "'", str3, "XZX");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
    }

    @Test
    public void test11605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11605");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyTo(rotation39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        double[] doubleArray42 = rotation39.getAngles(rotationOrder41);
        java.lang.String str43 = rotationOrder41.toString();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder41.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder41.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder41.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder41.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, 0.8775825618903728d, (-2.0000000000000018d));
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(vector3D51);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[2.034443935795702, -0.7297276562269669, 2.034443935795702]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "YXZ" + "'", str43, "YXZ");
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D52);
    }

    @Test
    public void test11606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11606");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        double double13 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((-1.5707963267948966d), (double) 0L, 0.031397298386422245d, (double) ' ', true);
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation5.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation28.applyTo(rotation34);
        double[][] doubleArray36 = rotation34.getMatrix();
        double[][] doubleArray37 = rotation34.getMatrix();
        double double38 = rotation34.getAngle();
        double double39 = rotation34.getQ3();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double double46 = rotation45.getQ0();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation45.revert();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation34.applyInverseTo(rotation47);
        double double49 = rotation34.getQ2();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation5.applyTo(rotation34);
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D(0.577350269189626d, (-98.13936627634533d), 0.36923013130206433d);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D54.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation50.applyTo(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D56.normalize();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 3.141592653589793d + "'", double13 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.9987969075985873d + "'", double20 == 0.9987969075985873d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 9.799851417283954E-4d + "'", double21 == 9.799851417283954E-4d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.141592653589793d + "'", double38 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.5773502691896258d + "'", double39 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.5773502691896258d + "'", double49 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
    }

    @Test
    public void test11607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11607");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double1 = vector3D0.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double3 = vector3D2.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double6 = vector3D5.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.add(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D7.add(vector3D8);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.add((double) (short) 1, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D0.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D15.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder17.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D16.negate();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
    }

    @Test
    public void test11608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11608");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double29 = vector3D28.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double32 = vector3D31.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.add(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.add(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double38 = vector3D37.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double41 = vector3D40.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.add(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double46 = vector3D45.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D45);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D52.add(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D40, (double) 100, vector3D45, (double) 1.0f, vector3D50, (double) 10L, vector3D55);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D34, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D59.add(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D34.add((double) (byte) 0, vector3D62);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder64.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D34.add(vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D34.scalarMultiply((double) 1L);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D27.add(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation12.applyTo(vector3D69);
        double double71 = rotation12.getQ2();
        double double72 = rotation12.getQ3();
        double[][] doubleArray73 = rotation12.getMatrix();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test11609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11609");
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("hi!", throwable5);
        java.lang.Object[] objArray7 = mathException6.getArguments();
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException8);
        java.lang.Throwable throwable12 = null;
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", throwable12);
        java.lang.Object[] objArray14 = mathException13.getArguments();
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray14);
        java.lang.Object[] objArray16 = mathException15.getArguments();
        java.lang.String str17 = mathException15.getPattern();
        mathException8.addSuppressed((java.lang.Throwable) mathException15);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException8);
        java.lang.String str20 = mathException8.getPattern();
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Throwable) mathException8);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException21);
        java.lang.Object[] objArray23 = mathException22.getArguments();
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("YZX", objArray23);
        java.lang.Throwable[] throwableArray25 = mathException24.getSuppressed();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str17, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str20, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(throwableArray25);
    }

    @Test
    public void test11610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11610");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyTo(rotation12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (byte) -1, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyTo(rotation18);
        double double20 = rotation18.getAngle();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyTo(rotation32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) (byte) -1, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation33.applyTo(rotation38);
        double double40 = rotation38.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double46 = vector3D45.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double49 = vector3D48.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.add(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.add(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double55 = vector3D54.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double58 = vector3D57.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.add(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D59.add(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D43, (double) (short) 0, vector3D52, (-1.0d), vector3D59, (double) (-1.0f), vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double68 = vector3D67.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double71 = vector3D70.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.add(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double76 = vector3D75.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D75);
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder79.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder83 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder83.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D82.add(vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D70, (double) 100, vector3D75, (double) 1.0f, vector3D80, (double) 10L, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D89 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double90 = vector3D89.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, vector3D59, (double) 10, vector3D70, 1.0d, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation38.applyInverseTo(vector3D59);
        double double94 = vector3D93.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation18.applyInverseTo(vector3D93);
        double double96 = rotation18.getQ0();
        double[][] doubleArray97 = rotation18.getMatrix();
        org.apache.commons.math.MathException mathException98 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity", (java.lang.Object[]) doubleArray97);
        java.lang.Throwable[] throwableArray99 = mathException98.getSuppressed();
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.3834364814420919d + "'", double20 == 1.3834364814420919d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.3834364814420919d + "'", double40 == 1.3834364814420919d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotationOrder83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.7080734182735712d + "'", double94 == 0.7080734182735712d);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.7701511529340699d + "'", double96 == 0.7701511529340699d);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(throwableArray99);
    }

    @Test
    public void test11611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11611");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D0.add(vector3D2);
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double6 = vector3D5.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D7 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.add(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double18 = vector3D17.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D24.add(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D12, (double) 100, vector3D17, (double) 1.0f, vector3D22, (double) 10L, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double33 = vector3D32.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double36 = vector3D35.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.add(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D37.add(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double42 = vector3D41.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double45 = vector3D44.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.add(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D46.add(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D30, (double) (short) 0, vector3D39, (-1.0d), vector3D46, (double) (-1.0f), vector3D50);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D0, vector3D5, vector3D17, vector3D51);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D5, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, 1.8523263596154362d);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D5, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusK;
        double double61 = vector3D60.getY();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.519053207231768d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D57.scalarMultiply(0.5406374650606973d);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
    }

    @Test
    public void test11612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11612");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.3834364814420919d, (-0.32355350711941916d), 1.5707963267948966d);
        java.lang.String str5 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        java.lang.String str7 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "YZY" + "'", str5, "YZY");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "YZY" + "'", str7, "YZY");
    }

    @Test
    public void test11613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11613");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.42073549240394825d), (-1.5707963267948966d), (-0.577350269189626d));
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.normalize();
        double double5 = vector3D4.getNorm();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
    }

    @Test
    public void test11614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11614");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        double double6 = rotation5.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D7.add(vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        double double12 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) (-1), (double) (short) 0, (double) 0.0f, 3.141592653589793d, false);
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D(10.0d, 1.0d, (double) 0.0f);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation28.applyTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation41.applyTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation54.applyTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation67.applyTo(rotation73);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation61.applyInverseTo(rotation67);
        org.apache.commons.math.geometry.Rotation rotation76 = rotation47.applyTo(rotation75);
        org.apache.commons.math.geometry.Rotation rotation77 = rotation34.applyInverseTo(rotation76);
        org.apache.commons.math.geometry.Rotation rotation78 = rotation76.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder79.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder79.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation76.applyTo(vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D82.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D22, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D83.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation18.applyTo(vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D89 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double90 = vector3D89.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D89.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D93 = new org.apache.commons.math.geometry.Vector3D(0.019348715309642568d, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D86.add(vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation5.applyTo(vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D96 = vector3D95.normalize();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.031397298386422245d + "'", double6 == 0.031397298386422245d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.031397298386422245d + "'", double12 == 0.031397298386422245d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
    }

    @Test
    public void test11615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11615");
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!");
        java.lang.Object[] objArray3 = mathException2.getArguments();
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: Euler angles singularity", objArray3);
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException4);
        java.lang.Throwable[] throwableArray6 = mathException5.getSuppressed();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray6);
    }

    @Test
    public void test11616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11616");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        java.lang.String str4 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        java.lang.String str6 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "YXY" + "'", str4, "YXY");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "YXY" + "'", str6, "YXY");
    }

    @Test
    public void test11617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11617");
        java.lang.Throwable throwable6 = null;
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("hi!", throwable6);
        java.lang.Object[] objArray8 = mathException7.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", objArray8);
        java.lang.Throwable throwable11 = null;
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", throwable11);
        java.lang.Object[] objArray13 = mathException12.getArguments();
        java.lang.Object[] objArray14 = mathException12.getArguments();
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray8, (java.lang.Throwable) mathException12);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation23.applyTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation36.applyTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation30.applyInverseTo(rotation36);
        double double45 = rotation44.getQ2();
        double[][] doubleArray46 = rotation44.getMatrix();
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray46);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray46);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("", objArray8, (java.lang.Throwable) notARotationMatrixException48);
        java.lang.Object[] objArray50 = mathException49.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException51 = new org.apache.commons.math.geometry.NotARotationMatrixException("", objArray50);
        java.lang.Throwable throwable54 = null;
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("hi!", throwable54);
        java.lang.Object[] objArray56 = mathException55.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException57 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", objArray56);
        java.lang.String str58 = notARotationMatrixException57.getPattern();
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException((java.lang.Throwable) notARotationMatrixException57);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray50, (java.lang.Throwable) notARotationMatrixException57);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) notARotationMatrixException57);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.577350269189626d + "'", double45 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
    }

    @Test
    public void test11618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11618");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.5403023058681398d, 1.3061290504076808d, 3.141592653589793d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, 0.9197526302254424d, (-0.00999407047586058d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D9);
    }

    @Test
    public void test11619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11619");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(99.0d, 0.0d, (-0.5773502691896261d), 0.6990056207078691d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.add(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double18 = vector3D17.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D24.add(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D12, (double) 100, vector3D17, (double) 1.0f, vector3D22, (double) 10L, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double32 = vector3D31.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double35 = vector3D34.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.add(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double40 = vector3D39.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D46.add(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D34, (double) 100, vector3D39, (double) 1.0f, vector3D44, (double) 10L, vector3D49);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D50, (double) 1.0f);
        double double53 = vector3D50.getY();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D12.subtract(0.577350269189626d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation5.applyInverseTo(vector3D55);
        double double57 = vector3D55.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D55.scalarMultiply(64.00000000000006d);
        double double60 = vector3D59.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder61.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder61.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder61.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder61.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D66.scalarMultiply(0.5403023058681398d);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(vector3D59, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D(0.5458056146732426d, (double) 100.0f, 3.6348058759900104d);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation69.applyInverseTo(vector3D73);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-99.0d) + "'", double53 == (-99.0d));
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.5707963267948966d + "'", double57 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.0d) + "'", double60 == (-0.0d));
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D74);
    }

    @Test
    public void test11620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11620");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double1 = vector3D0.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.add(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D5.add(vector3D6);
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.add((double) (short) 1, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D12.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D13.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D13.scalarMultiply(0.7814733857778859d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) (short) 1, (double) 0.0f, 3.9999999999999982d);
        java.lang.String str23 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder18.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder18.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder18.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D13.subtract((-1000.0d), vector3D26);
        double double28 = vector3D27.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double35 = vector3D34.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double38 = vector3D37.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.add(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D39.add(vector3D40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.add((double) (short) 1, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusK;
        double double48 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D45, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D32.subtract(0.2737243725398427d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((-0.42073549240394825d), vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D51.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D27.subtract(0.7946443805597431d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double59 = vector3D58.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double62 = vector3D61.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.add(0.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D63.add(vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double68 = vector3D67.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double71 = vector3D70.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.add(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D72.add(vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D56, (double) (short) 0, vector3D65, (-1.0d), vector3D72, (double) (-1.0f), vector3D76);
        double double78 = vector3D56.getAlpha();
        double double79 = vector3D56.getDelta();
        double double80 = vector3D56.getX();
        double double81 = vector3D56.getY();
        double double82 = vector3D56.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D53.add(1.0092523816517394d, vector3D56);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ZYX" + "'", str23, "ZYX");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 999.1056728985179d + "'", double28 == 999.1056728985179d);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-1.5707963267948966d) + "'", double78 == (-1.5707963267948966d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-1.0d) + "'", double81 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D83);
    }

    @Test
    public void test11621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11621");
        java.lang.Throwable throwable7 = null;
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("hi!", throwable7);
        java.lang.Object[] objArray9 = mathException8.getArguments();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("YXZ", (java.lang.Throwable) mathException10);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", throwable13);
        java.lang.Object[] objArray15 = mathException14.getArguments();
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException14);
        mathException10.addSuppressed((java.lang.Throwable) mathException16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("Cardan angles singularity", (java.lang.Throwable) mathException16);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity", (java.lang.Throwable) mathException16);
        java.lang.Throwable throwable22 = null;
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", throwable22);
        java.lang.Object[] objArray24 = mathException23.getArguments();
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException25);
        java.lang.Throwable throwable29 = null;
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", throwable29);
        java.lang.Object[] objArray31 = mathException30.getArguments();
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException32);
        mathException26.addSuppressed((java.lang.Throwable) mathException33);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation42.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation55.applyTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation49.applyInverseTo(rotation55);
        double double64 = rotation63.getQ2();
        double[][] doubleArray65 = rotation63.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException66 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray65);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException67 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Object[]) doubleArray65);
        mathException26.addSuppressed((java.lang.Throwable) notARotationMatrixException67);
        mathException19.addSuppressed((java.lang.Throwable) mathException26);
        java.lang.Object[] objArray70 = mathException19.getArguments();
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("YXZ", objArray70);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException72 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: YXZ", objArray70);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.577350269189626d + "'", double64 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
    }

    @Test
    public void test11622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11622");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D3.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D1.subtract(vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double11 = vector3D10.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double14 = vector3D13.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.add(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double19 = vector3D18.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D25.add(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D13, (double) 100, vector3D18, (double) 1.0f, vector3D23, (double) 10L, vector3D28);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D29, (double) 1.0f);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D3.add((double) 100L, vector3D29);
        double double33 = vector3D29.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D29);
        double double35 = vector3D34.getY();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.0d) + "'", double35 == (-0.0d));
    }

    @Test
    public void test11623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11623");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.408248290463863d, (-63.89080755982608d), 1.54252788555682d);
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation9.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation22.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation16.applyInverseTo(rotation22);
        double double31 = rotation22.getQ1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation37.applyTo(rotation43);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation50.applyTo(rotation56);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation70 = rotation63.applyTo(rotation69);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation83 = rotation76.applyTo(rotation82);
        org.apache.commons.math.geometry.Rotation rotation84 = rotation70.applyInverseTo(rotation76);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation56.applyTo(rotation84);
        org.apache.commons.math.geometry.Rotation rotation86 = rotation43.applyInverseTo(rotation85);
        org.apache.commons.math.geometry.Rotation rotation87 = rotation22.applyTo(rotation43);
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation43.getAxis();
        double double89 = vector3D88.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D88.negate();
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D90);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.5773502691896258d + "'", double31 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.0d + "'", double89 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D90);
    }

    @Test
    public void test11624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11624");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation24.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyTo(rotation33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray36 = rotation34.getAngles(rotationOrder35);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (-1.0d), (double) '4', (double) 'a');
        double[] doubleArray46 = rotation34.getAngles(rotationOrder37);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder37.getA1();
        java.lang.String str48 = rotationOrder37.toString();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder37.getA2();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, 0.0d, (-0.479425538604203d), 0.024200751848868333d);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder37.getA1();
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.7853981633974483, 1.9106332362490182, 2.356194490192345]");
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[2.034443935795702, -0.7297276562269669, 2.034443935795702]");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ZYX" + "'", str48, "ZYX");
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
    }

    @Test
    public void test11625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11625");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D3.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D5.add(vector3D6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXY" + "'", str2, "ZXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
    }

    @Test
    public void test11626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11626");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1), 0.5773502691896258d, 3.141592653589793d, true);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.add(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation8.applyInverseTo(vector3D14);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        double double18 = vector3D17.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation8.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation39.applyTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation33.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double50 = vector3D49.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double53 = vector3D52.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.add(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.add(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double59 = vector3D58.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double62 = vector3D61.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.add(0.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double67 = vector3D66.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D66);
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder70.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder74.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D73.add(vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D61, (double) 100, vector3D66, (double) 1.0f, vector3D71, (double) 10L, vector3D76);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D55, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D80.add(vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D55.add((double) (byte) 0, vector3D83);
        org.apache.commons.math.geometry.RotationOrder rotationOrder85 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder85.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D55.add(vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D55.scalarMultiply((double) 1L);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D48.add(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation33.applyTo(vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D(1.5707963267948966d, vector3D90);
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(vector3D19, vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D1.subtract((double) (-1), vector3D19);
        double double95 = vector3D19.getY();
        org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D19.scalarMultiply(1.383436481442091d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(rotationOrder85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.46116753612483063d + "'", double95 == 0.46116753612483063d);
        org.junit.Assert.assertNotNull(vector3D97);
    }

    @Test
    public void test11627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11627");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.5773502691896257d, 0.5034691428069196d, (-0.10170265737575321d));
        java.lang.String str7 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-1.0000000000000009d), (-0.04720325046530137d), 1.9184977310046263d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "YZY" + "'", str7, "YZY");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
    }

    @Test
    public void test11628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11628");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(7.774799409995024d, 1.8720168050051436d, (-0.3570629469016354d));
    }

    @Test
    public void test11629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11629");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str8 = cardanEulerSingularityException7.getPattern();
        java.lang.Object[] objArray9 = cardanEulerSingularityException7.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", objArray9);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZX", objArray9);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str15 = cardanEulerSingularityException14.getPattern();
        java.lang.Throwable throwable18 = null;
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", throwable18);
        java.lang.Object[] objArray20 = mathException19.getArguments();
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException21);
        java.lang.Throwable throwable25 = null;
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", throwable25);
        java.lang.Object[] objArray27 = mathException26.getArguments();
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException28);
        mathException22.addSuppressed((java.lang.Throwable) mathException29);
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) mathException22);
        java.lang.Throwable throwable33 = null;
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", throwable33);
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) mathException34);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("ZXY", (java.lang.Throwable) mathException34);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation46.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation59.applyTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation67 = rotation53.applyInverseTo(rotation59);
        double double68 = rotation67.getQ2();
        double[][] doubleArray69 = rotation67.getMatrix();
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray69);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException71 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray69);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray69);
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) doubleArray69);
        mathException34.addSuppressed((java.lang.Throwable) mathException73);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", objArray9, (java.lang.Throwable) mathException73);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: XYZ", objArray9);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException", objArray9);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", objArray9);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Cardan angles singularity" + "'", str8, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Cardan angles singularity" + "'", str15, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.577350269189626d + "'", double68 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray69);
    }

    @Test
    public void test11630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11630");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyTo(rotation39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        double[] doubleArray42 = rotation39.getAngles(rotationOrder41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation39.getAxis();
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((-0.4231361643575562d), 99.00505037623081d);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(vector3D48, 0.8818536098126042d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA2();
        java.lang.String str54 = rotationOrder52.toString();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder52.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D48, Double.NaN, vector3D55);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D43, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation57.getAxis();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[2.034443935795702, -0.7297276562269669, 2.034443935795702]");
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.5773502691896258d) + "'", double44 == (-0.5773502691896258d));
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "YZY" + "'", str54, "YZY");
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D58);
    }

    @Test
    public void test11631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11631");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (double) 0.0f, 3.9999999999999982d);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation10.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation16.revert();
        double double19 = rotation18.getAngle();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyTo(rotation31);
        double double33 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation18.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D37);
        double double39 = vector3D38.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder40.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D38, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation34.applyInverseTo(vector3D43);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation4.applyInverseTo(rotation34);
        double double47 = rotation34.getQ1();
        double[][] doubleArray48 = rotation34.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation34.revert();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double52 = vector3D51.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double55 = vector3D54.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.add(0.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double60 = vector3D59.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D59);
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder63.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder67.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D66.add(vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D54, (double) 100, vector3D59, (double) 1.0f, vector3D64, (double) 10L, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D54.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D54.negate();
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) ' ', 0.5773502691896258d);
        double double76 = org.apache.commons.math.geometry.Vector3D.angle(vector3D54, vector3D75);
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder77.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D78.orthogonal();
        double double80 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D75, vector3D79);
        double double81 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation49.applyInverseTo(vector3D75);
        double double83 = rotation49.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 3.141592653589793d + "'", double19 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5773502691896258d + "'", double33 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.5707963267948966d + "'", double39 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2.05109822686088d + "'", double76 == 2.05109822686088d);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.5458056146732426d + "'", double80 == 0.5458056146732426d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.6990056207078691d + "'", double81 == 0.6990056207078691d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
    }

    @Test
    public void test11632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11632");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double7 = vector3D6.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.add(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D11.add(vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double16 = vector3D15.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double19 = vector3D18.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.add(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.add(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D4, (double) (short) 0, vector3D13, (-1.0d), vector3D20, (double) (-1.0f), vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D(10.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D0.add(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double29 = vector3D28.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double32 = vector3D31.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.add(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.add(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double38 = vector3D37.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double41 = vector3D40.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.add(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double46 = vector3D45.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D45);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D52.add(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D40, (double) 100, vector3D45, (double) 1.0f, vector3D50, (double) 10L, vector3D55);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D34, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D59.add(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D34.add((double) (byte) 0, vector3D62);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder64.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D34.add(vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D34.scalarMultiply((double) 1L);
        double double69 = vector3D68.getAlpha();
        double double70 = vector3D68.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D68.scalarMultiply(1.5480028924187785d);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D27.add(vector3D68);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(vector3D68, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D68.negate();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-1.5707963267948966d) + "'", double69 == (-1.5707963267948966d));
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D76);
    }

    @Test
    public void test11633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11633");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        java.lang.String str3 = rotationOrder0.toString();
        java.lang.String str4 = rotationOrder0.toString();
        java.lang.String str5 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.013965485026519d, (-0.7151193819011747d), (-0.2298488470659301d));
        java.lang.Class<?> wildcardClass10 = rotation9.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXY" + "'", str3, "ZXY");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXY" + "'", str4, "ZXY");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ZXY" + "'", str5, "ZXY");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test11634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11634");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.0d), (double) 10.0f, 0.9994070475860579d);
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((-1.5707963267948966d), 0.6358754505939606d, 0.4546487134128409d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D3.subtract(2.77555756156289E-17d, vector3D8);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation29.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation42.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation36.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation22.applyTo(rotation50);
        double double52 = rotation51.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D53.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation51.applyTo(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D3.add((-402.00000000000034d), vector3D55);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
    }

    @Test
    public void test11635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11635");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D3, (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double11 = vector3D10.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double14 = vector3D13.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.add(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D15.add(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double20 = vector3D19.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double23 = vector3D22.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.add(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D24.add(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D8, (double) (short) 0, vector3D17, (-1.0d), vector3D24, (double) (-1.0f), vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double33 = vector3D32.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double36 = vector3D35.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.add(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double41 = vector3D40.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D47.add(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D35, (double) 100, vector3D40, (double) 1.0f, vector3D45, (double) 10L, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double55 = vector3D54.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, vector3D24, (double) 10, vector3D35, 1.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double61 = vector3D60.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double64 = vector3D63.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.add(0.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double69 = vector3D68.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D68);
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder72.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder76.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D75.add(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D63, (double) 100, vector3D68, (double) 1.0f, vector3D73, (double) 10L, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D24.add(0.0d, vector3D79);
        double double81 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D3, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D80.scalarMultiply((double) (-1L));
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D83.negate();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D83.scalarMultiply(0.48347865074173757d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-1.0d) + "'", double81 == (-1.0d));
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D86);
    }

    @Test
    public void test11636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11636");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D2);
        double double4 = vector3D2.getY();
        double double5 = vector3D2.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) (byte) 0);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, (-0.0927489957179025d));
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D2.add((-0.577221458153189d), vector3D9);
        double double13 = vector3D12.getDelta();
        double double14 = vector3D12.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0472941648624272d + "'", double13 == 1.0472941648624272d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-2.141592653589793d) + "'", double14 == (-2.141592653589793d));
    }

    @Test
    public void test11637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11637");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation18.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray29 = rotation18.getAngles(rotationOrder28);
        java.lang.String str30 = rotationOrder28.toString();
        java.lang.String str31 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, 0.0d, 0.6245426019590317d, (double) (byte) 1);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double42 = vector3D41.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double45 = vector3D44.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.add(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D46.add(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double51 = vector3D50.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double54 = vector3D53.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.add(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.add(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D39, (double) (short) 0, vector3D48, (-1.0d), vector3D55, (double) (-1.0f), vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double64 = vector3D63.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double67 = vector3D66.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.add(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double72 = vector3D71.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D71);
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder75.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder79.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D78.add(vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D66, (double) 100, vector3D71, (double) 1.0f, vector3D76, (double) 10L, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double86 = vector3D85.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D88 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, vector3D55, (double) 10, vector3D66, 1.0d, vector3D85);
        double double89 = vector3D55.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder90 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotationOrder90.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotationOrder90.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D93 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D55, vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation36.applyInverseTo(vector3D55);
        double double95 = rotation36.getQ1();
        double double96 = rotation36.getAngle();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "XZX" + "'", str30, "XZX");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "XZX" + "'", str31, "XZX");
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.0d + "'", double89 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-0.45623967291561024d) + "'", double95 == (-0.45623967291561024d));
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 1.1648140547549846d + "'", double96 == 1.1648140547549846d);
    }

    @Test
    public void test11638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11638");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        double[][] doubleArray13 = rotation11.getMatrix();
        double[][] doubleArray14 = rotation11.getMatrix();
        double double15 = rotation11.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double17 = vector3D16.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double20 = vector3D19.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.add(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D21.add(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double26 = vector3D25.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double29 = vector3D28.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.add(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double34 = vector3D33.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D40.add(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D28, (double) 100, vector3D33, (double) 1.0f, vector3D38, (double) 10L, vector3D43);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D22, vector3D44);
        double double46 = rotation45.getQ1();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation11.applyTo(rotation45);
        double double48 = rotation47.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation47.getAxis();
        java.lang.Class<?> wildcardClass50 = vector3D49.getClass();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.5773502691896258d + "'", double15 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test11639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11639");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) (byte) -1, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation12.applyTo(rotation17);
        double double19 = rotation17.getAngle();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation38.applyTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation32.applyInverseTo(rotation38);
        double double47 = rotation38.getQ1();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation17.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double51 = vector3D50.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double54 = vector3D53.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.add(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double59 = vector3D58.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D58);
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder66.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D65.add(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D53, (double) 100, vector3D58, (double) 1.0f, vector3D63, (double) 10L, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D58.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D71.negate();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D71.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation38.applyInverseTo(vector3D73);
        double double75 = vector3D74.getX();
        double double76 = vector3D74.getZ();
        double double77 = vector3D74.getAlpha();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.3834364814420919d + "'", double19 == 1.3834364814420919d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.5773502691896258d + "'", double47 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.6666666666666669d) + "'", double75 == (-0.6666666666666669d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.6666666666666669d) + "'", double76 == (-0.6666666666666669d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2.6779450445889874d + "'", double77 == 2.6779450445889874d);
    }

    @Test
    public void test11640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11640");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.9589242746631385d), 1.8659899592204094d, 99.57734949512052d, 1.4321255282704144d, false);
    }

    @Test
    public void test11641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11641");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double3 = vector3D2.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D2);
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D2.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D0.subtract(vector3D2);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D0, 0.47037064010186347d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double15 = vector3D14.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.add(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double20 = vector3D19.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D26.add(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D14, (double) 100, vector3D19, (double) 1.0f, vector3D24, (double) 10L, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double36 = vector3D35.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double39 = vector3D38.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.add(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D40.add(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double45 = vector3D44.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double48 = vector3D47.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.add(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D49.add(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D33, (double) (short) 0, vector3D42, (-1.0d), vector3D49, (double) (-1.0f), vector3D53);
        double double55 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double59 = vector3D58.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double62 = vector3D61.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.add(0.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double67 = vector3D66.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D66);
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder70.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder74.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D73.add(vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D61, (double) 100, vector3D66, (double) 1.0f, vector3D71, (double) 10L, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D33.add((double) (short) -1, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D();
        double double81 = vector3D80.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, vector3D24, 10.0d, vector3D78, (double) 'a', vector3D80);
        double double83 = vector3D78.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation8.applyInverseTo(vector3D78);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation8.revert();
        double double86 = rotation8.getAngle();
        double double87 = rotation8.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation8.getAxis();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.47037064010186347d + "'", double86 == 0.47037064010186347d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.0d) + "'", double87 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D88);
    }

    @Test
    public void test11642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11642");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation19.applyTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation13.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation19.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray30 = rotation19.getAngles(rotationOrder29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder29.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double34 = vector3D33.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double37 = vector3D36.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.add(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.add(vector3D39);
        double double41 = vector3D40.getDelta();
        double double42 = vector3D40.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((-0.8662263958472479d), vector3D31, (-0.023823288661546024d), vector3D40);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D31, 99.00000000000017d);
        java.lang.Class<?> wildcardClass46 = rotation45.getClass();
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-1.5707963267948966d) + "'", double42 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test11643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11643");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        double double2 = vector3D1.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D1.negate();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D3, (-135257.02641416987d));
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double8 = vector3D7.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.add(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.add(vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder18.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.add((double) (short) 1, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D7.subtract(vector3D21);
        double double23 = vector3D7.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D(0.9724711741591723d, vector3D7);
        double double25 = vector3D24.getZ();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(vector3D24, (-2.0d));
        org.apache.commons.math.geometry.Rotation rotation28 = rotation5.applyTo(rotation27);
        double double29 = rotation27.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation27.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-0.8414709848078965d) + "'", double29 == (-0.8414709848078965d));
        org.junit.Assert.assertNotNull(vector3D30);
    }

    @Test
    public void test11644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11644");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double1 = vector3D0.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.add(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D5.add(vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.add(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double18 = vector3D17.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D24.add(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D12, (double) 100, vector3D17, (double) 1.0f, vector3D22, (double) 10L, vector3D27);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D6, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D31.add(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D6.add((double) (byte) 0, vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D35, (-0.0d));
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D35.normalize();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D38);
    }

    @Test
    public void test11645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11645");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'a', (double) (short) -1, (double) (short) 0);
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        double double12 = rotation11.getQ1();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation4.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation19.applyTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation26.applyInverseTo(rotation32);
        double double41 = rotation40.getQ2();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        double double48 = rotation47.getQ1();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation40.applyInverseTo(rotation47);
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder50.getA2();
        double[] doubleArray52 = rotation47.getAngles(rotationOrder50);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, (double) (byte) 100, (-2.356194490192345d), 0.8775825618903732d);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, 1.5480028924187779d, (-1.5707963267948966d), (double) (byte) 100);
        double[] doubleArray61 = rotation13.getAngles(rotationOrder50);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder50.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder64.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder64.getA3();
        double double67 = vector3D66.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D66.negate();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D62.add(0.0d, vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.8610036570415694d + "'", double5 == 0.8610036570415694d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.031397298386422245d + "'", double12 == 0.031397298386422245d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.577350269189626d + "'", double41 == 0.577350269189626d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.031397298386422245d + "'", double48 == 0.031397298386422245d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[3.078582052843988, 0.019349922785144295, 3.120983474296034]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-0.5092072872650552, 1.0161713902925664, 3.020197573158012]");
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
    }

    @Test
    public void test11646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11646");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation10.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation23.applyTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation17.applyInverseTo(rotation23);
        double double32 = rotation23.getQ1();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation4.applyTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getAngle();
        double double43 = rotation40.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation33.applyTo(rotation40);
        double double45 = rotation40.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation40.getAxis();
        double double47 = vector3D46.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5773502691896258d + "'", double32 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.5773502691896258d + "'", double41 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 3.141592653589793d + "'", double42 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.5773502691896258d + "'", double43 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.5773502691896258d + "'", double45 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
    }

    @Test
    public void test11647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11647");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation18.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray29 = rotation18.getAngles(rotationOrder28);
        java.lang.String str30 = rotationOrder28.toString();
        java.lang.String str31 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (-0.009994070475860579d), (-0.2862647032613221d), (double) (-1));
        org.apache.commons.math.geometry.Rotation rotation36 = rotation35.revert();
        double double37 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation36.getAxis();
        double double39 = rotation36.getQ0();
        double double40 = rotation36.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation36.getAxis();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "XZX" + "'", str30, "XZX");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "XZX" + "'", str31, "XZX");
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0463933028444008d + "'", double37 == 1.0463933028444008d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-0.8662263958472479d) + "'", double39 == (-0.8662263958472479d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.47885747712893456d + "'", double40 == 0.47885747712893456d);
        org.junit.Assert.assertNotNull(vector3D41);
    }

    @Test
    public void test11648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11648");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D1 = vector3D0.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation3 = new org.apache.commons.math.geometry.Rotation(vector3D0, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D10.add(vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation9.applyInverseTo(vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double16 = vector3D15.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double19 = vector3D18.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.add(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.add(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double25 = vector3D24.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double28 = vector3D27.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.add(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double33 = vector3D32.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D39.add(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D27, (double) 100, vector3D32, (double) 1.0f, vector3D37, (double) 10L, vector3D42);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D21, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation9.applyTo(vector3D21);
        double double46 = rotation9.getAngle();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation52.applyTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation65.applyTo(rotation71);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation59.applyInverseTo(rotation65);
        double double74 = rotation59.getQ0();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation9.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation76 = rotation3.applyInverseTo(rotation75);
        org.apache.commons.math.geometry.Rotation rotation77 = rotation76.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(rotationOrder78, (double) 'a', (double) (short) -1, (double) (short) 0);
        double double83 = rotation82.getQ3();
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        double double90 = rotation89.getQ1();
        org.apache.commons.math.geometry.Rotation rotation91 = rotation82.applyTo(rotation89);
        double double92 = rotation82.getQ2();
        org.apache.commons.math.geometry.Rotation rotation93 = rotation82.revert();
        org.apache.commons.math.geometry.Rotation rotation94 = rotation76.applyTo(rotation82);
        double double95 = rotation94.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D96 = rotation94.getAxis();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 3.1216041798823833d + "'", double46 == 3.1216041798823833d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-1.0000000000000002d) + "'", double74 == (-1.0000000000000002d));
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.8610036570415694d + "'", double83 == 0.8610036570415694d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.031397298386422245d + "'", double90 == 0.031397298386422245d);
        org.junit.Assert.assertNotNull(rotation91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-0.0927489957179025d) + "'", double92 == (-0.0927489957179025d));
        org.junit.Assert.assertNotNull(rotation93);
        org.junit.Assert.assertNotNull(rotation94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-0.8620496720134692d) + "'", double95 == (-0.8620496720134692d));
        org.junit.Assert.assertNotNull(vector3D96);
    }

    @Test
    public void test11649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11649");
        java.lang.Object[] objArray1 = null;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation10.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation23.applyTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation36.applyTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation49.applyTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation43.applyInverseTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation29.applyTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation16.applyInverseTo(rotation58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double62 = vector3D61.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double65 = vector3D64.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.add(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double70 = vector3D69.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D69);
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder73.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder77.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D76.add(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D64, (double) 100, vector3D69, (double) 1.0f, vector3D74, (double) 10L, vector3D79);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D80, (double) 1.0f);
        double double83 = rotation82.getQ1();
        double[][] doubleArray84 = rotation82.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation85 = rotation16.applyInverseTo(rotation82);
        double[][] doubleArray86 = rotation85.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(doubleArray86, 3.141592653589793d);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException", (java.lang.Object[]) doubleArray86);
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", (java.lang.Throwable) mathException89);
        java.lang.Throwable[] throwableArray91 = mathException89.getSuppressed();
        java.lang.Throwable[] throwableArray92 = mathException89.getSuppressed();
        org.apache.commons.math.MathException mathException93 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Object[]) throwableArray92);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", objArray1, (java.lang.Throwable) mathException93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.0d) + "'", double83 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(throwableArray91);
        org.junit.Assert.assertNotNull(throwableArray92);
    }

    @Test
    public void test11650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11650");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) (byte) -1, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation12.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder19.getA2();
        double[] doubleArray22 = rotation17.getAngles(rotationOrder19);
        java.lang.String str23 = rotationOrder19.toString();
        java.lang.String str24 = rotationOrder19.toString();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder19.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder19.getA3();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 1.0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ZXY" + "'", str23, "ZXY");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ZXY" + "'", str24, "ZXY");
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
    }

    @Test
    public void test11651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11651");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D9.add(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation8.applyInverseTo(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D14.orthogonal();
        double double16 = vector3D15.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D13.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D13.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D13);
        double double21 = vector3D13.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((-0.18551215211325933d), 1.841096603147574E-16d);
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D(1.4278296224057285d, 3.9999999999999982d, (double) ' ');
        double double29 = vector3D28.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, 3.1216041798823833d, 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D28.subtract(0.7853981633974482d, vector3D34);
        double double36 = org.apache.commons.math.geometry.Vector3D.angle(vector3D24, vector3D34);
        double double37 = vector3D34.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D34.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D13, vector3D38);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0193499227851443d + "'", double21 == 0.0193499227851443d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.4388425871203865d + "'", double29 == 1.4388425871203865d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2.013965485026519d + "'", double36 == 2.013965485026519d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.8808150143294955d + "'", double37 == 1.8808150143294955d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
    }

    @Test
    public void test11652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11652");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(99.57734949512052d, (-0.22984884706593015d), (-0.8610036570415699d), (-0.7853981633974482d), true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double11 = vector3D10.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double14 = vector3D13.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.add(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D15.add(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double20 = vector3D19.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double23 = vector3D22.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.add(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D24.add(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D8, (double) (short) 0, vector3D17, (-1.0d), vector3D24, (double) (-1.0f), vector3D28);
        double double30 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double34 = vector3D33.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double37 = vector3D36.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.add(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double42 = vector3D41.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D41);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D48.add(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D36, (double) 100, vector3D41, (double) 1.0f, vector3D46, (double) 10L, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D8.add((double) (short) -1, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D41.normalize();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D54, (double) 1);
        double double57 = rotation56.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, 3.9999999999999982d, (-2.356194490192345d), (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder58.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder58.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder58.getA2();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, (-0.06295712545445845d), 1.3834364814420919d, 1.5077857260490912d);
        java.lang.String str70 = rotationOrder58.toString();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder58.getA3();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(vector3D71, 1.0d);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation56.applyTo(vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D74.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation6.applyInverseTo(vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D76, vector3D77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.0d) + "'", double57 == (-0.0d));
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "YXY" + "'", str70, "YXY");
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
    }

    @Test
    public void test11653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11653");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double15 = vector3D14.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.add(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D16.add(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double21 = vector3D20.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double24 = vector3D23.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.add(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D25.add(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D9, (double) (short) 0, vector3D18, (-1.0d), vector3D25, (double) (-1.0f), vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double34 = vector3D33.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double37 = vector3D36.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.add(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double42 = vector3D41.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D41);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D48.add(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D36, (double) 100, vector3D41, (double) 1.0f, vector3D46, (double) 10L, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double56 = vector3D55.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, vector3D25, (double) 10, vector3D36, 1.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double62 = vector3D61.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double65 = vector3D64.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.add(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double70 = vector3D69.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D69);
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder73.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder77.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D76.add(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D64, (double) 100, vector3D69, (double) 1.0f, vector3D74, (double) 10L, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D25.add(0.0d, vector3D80);
        double double82 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D4, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D81.scalarMultiply((double) (-1L));
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D84.scalarMultiply(0.14188991228633444d);
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D(2.9566862711546698d, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D(0.9529576786363508d, (-0.7701511529340699d), (-1000.0d));
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D86, vector3D91);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-1.0d) + "'", double82 == (-1.0d));
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D86);
    }

    @Test
    public void test11654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11654");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation18.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray29 = rotation18.getAngles(rotationOrder28);
        java.lang.String str30 = rotationOrder28.toString();
        java.lang.String str31 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) (short) 0, 2.042774094458282d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D37.orthogonal();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "XZX" + "'", str30, "XZX");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "XZX" + "'", str31, "XZX");
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
    }

    @Test
    public void test11655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11655");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D1.add(vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double7 = vector3D6.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double11 = vector3D10.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double14 = vector3D13.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.add(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double19 = vector3D18.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D25.add(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D13, (double) 100, vector3D18, (double) 1.0f, vector3D23, (double) 10L, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double34 = vector3D33.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double37 = vector3D36.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.add(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.add(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double43 = vector3D42.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double46 = vector3D45.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.add(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D47.add(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D31, (double) (short) 0, vector3D40, (-1.0d), vector3D47, (double) (-1.0f), vector3D51);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D1, vector3D6, vector3D18, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D18.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D18.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D18);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, (-2.356194490192345d), (double) '#', (double) 10L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, (-1.0d), (double) '4', (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder64.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder64.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation63.applyTo(vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D18.subtract(vector3D75);
        double double77 = vector3D18.getX();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
    }

    @Test
    public void test11656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11656");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (double) 0.0f, 3.9999999999999982d);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation10.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation16.revert();
        double double19 = rotation18.getAngle();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyTo(rotation31);
        double double33 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation18.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D37);
        double double39 = vector3D38.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder40.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D38, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation34.applyInverseTo(vector3D43);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation4.applyInverseTo(rotation34);
        double double47 = rotation34.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) (short) 1);
        double double51 = vector3D50.getX();
        double double52 = vector3D50.getZ();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D50, 3.1053265177180833d);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation34.applyTo(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 3.141592653589793d + "'", double19 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5773502691896258d + "'", double33 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.5707963267948966d + "'", double39 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-1.0000000000000002d) + "'", double47 == (-1.0000000000000002d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.2919265817264289d + "'", double51 == 0.2919265817264289d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.8414709848078965d + "'", double52 == 0.8414709848078965d);
        org.junit.Assert.assertNotNull(vector3D55);
    }

    @Test
    public void test11657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11657");
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: YXZ");
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", (java.lang.Throwable) mathException4);
        java.lang.String str6 = mathException4.getPattern();
        java.lang.Throwable[] throwableArray7 = mathException4.getSuppressed();
        java.lang.Throwable[] throwableArray8 = mathException4.getSuppressed();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double double16 = rotation15.getQ0();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation22.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation35.applyTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation29.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation15.applyTo(rotation29);
        double double45 = rotation44.getQ1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation71 = rotation64.applyTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation58.applyInverseTo(rotation64);
        double double73 = rotation72.getQ2();
        double[][] doubleArray74 = rotation72.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(doubleArray74, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation77 = rotation44.applyInverseTo(rotation76);
        double[][] doubleArray78 = rotation76.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(doubleArray78, 0.2987679718243112d);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) doubleArray78);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: XZY", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) mathException81);
        java.lang.Throwable throwable83 = null;
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: XZX", (java.lang.Object[]) throwableArray8, throwable83);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: YXZ" + "'", str6, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: YXZ");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.577350269189626d) + "'", double45 == (-0.577350269189626d));
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.577350269189626d + "'", double73 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(doubleArray78);
    }

    @Test
    public void test11658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11658");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation19.applyTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation12.revert();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation42.getAxis();
        double double44 = rotation42.getQ2();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        double double51 = rotation50.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D52.add(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation50.applyTo(vector3D55);
        double double57 = rotation50.getQ1();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation50.revert();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation58.getAxis();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation58.revert();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation42.applyTo(rotation58);
        double[][] doubleArray62 = rotation42.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException63 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: XZX", (java.lang.Object[]) doubleArray62);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.5773502691896258d + "'", double44 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.031397298386422245d + "'", double51 == 0.031397298386422245d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.031397298386422245d + "'", double57 == 0.031397298386422245d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(doubleArray62);
    }

    @Test
    public void test11659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11659");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double2 = vector3D1.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D1);
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D1.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double14 = vector3D13.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double17 = vector3D16.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.add(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.add(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double23 = vector3D22.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double26 = vector3D25.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.add(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.add(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D11, (double) (short) 0, vector3D20, (-1.0d), vector3D27, (double) (-1.0f), vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D27.negate();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D8.add((double) (byte) 1, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D1.add((double) 1, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (-0.32355350711941916d));
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double42 = vector3D41.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double45 = vector3D44.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.add(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double50 = vector3D49.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D49);
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder57.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D56.add(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D44, (double) 100, vector3D49, (double) 1.0f, vector3D54, (double) 10L, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D49.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D62.scalarMultiply((double) 1.0f);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double71 = vector3D70.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double74 = vector3D73.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D70.add(0.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D75.add(vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double80 = vector3D79.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double83 = vector3D82.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D79.add(0.0d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D84.add(vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D88 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D89 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D68, (double) (short) 0, vector3D77, (-1.0d), vector3D84, (double) (-1.0f), vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D90 = new org.apache.commons.math.geometry.Vector3D(10.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D62.subtract(0.031397298386422245d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D38.add((-2.2835928143980874E-4d), vector3D68);
        double double93 = vector3D68.getZ();
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D8, vector3D68);
        double double95 = rotation94.getQ3();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.7071067811865475d + "'", double95 == 0.7071067811865475d);
    }

    @Test
    public void test11660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11660");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double1 = vector3D0.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.add(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D5.add(vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.add(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double18 = vector3D17.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D24.add(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D12, (double) 100, vector3D17, (double) 1.0f, vector3D22, (double) 10L, vector3D27);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D6, vector3D28);
        double double30 = rotation29.getQ1();
        double double31 = rotation29.getQ3();
        double[][] doubleArray32 = rotation29.getMatrix();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
    }

    @Test
    public void test11661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11661");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.6057150149016723d, 2.77555756156289E-17d, 0.0d);
        double double4 = vector3D3.getY();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D3, (-33.86639631360678d));
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D16.add(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation15.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D21.orthogonal();
        double double23 = vector3D22.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D20.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D20.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D9, vector3D20);
        double double28 = vector3D27.getNorm();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D35.add(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation34.applyInverseTo(vector3D37);
        double double40 = vector3D37.getY();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D27.subtract(vector3D37);
        double double42 = vector3D41.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation6.applyInverseTo(vector3D41);
        double double44 = rotation6.getQ3();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 2.77555756156289E-17d + "'", double4 == 2.77555756156289E-17d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.9980162325105295d + "'", double28 == 0.9980162325105295d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-1.5707963267948966d) + "'", double42 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.0d) + "'", double44 == (-0.0d));
    }

    @Test
    public void test11662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11662");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, (double) (byte) 100, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double8 = vector3D7.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double11 = vector3D10.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.add(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.add(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double17 = vector3D16.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double20 = vector3D19.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.add(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D21.add(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D5, (double) (short) 0, vector3D14, (-1.0d), vector3D21, (double) (-1.0f), vector3D25);
        double double27 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double31 = vector3D30.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double34 = vector3D33.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.add(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double39 = vector3D38.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D45.add(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D33, (double) 100, vector3D38, (double) 1.0f, vector3D43, (double) 10L, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D5.add((double) (short) -1, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double54 = vector3D53.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double57 = vector3D56.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.add(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double62 = vector3D61.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D61);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D68.add(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D56, (double) 100, vector3D61, (double) 1.0f, vector3D66, (double) 10L, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D61.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D38.subtract(vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D74.normalize();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D74, (-0.049028328552186334d));
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D74.scalarMultiply(2.162171184425803d);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D((double) 1L, (double) (short) -1, (double) (-1L));
        org.apache.commons.math.geometry.Vector3D vector3D89 = new org.apache.commons.math.geometry.Vector3D(100.0d, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D85.add(0.37109123341226674d, vector3D89);
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D85, 0.0d);
        double double93 = org.apache.commons.math.geometry.Vector3D.angle(vector3D3, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D97 = new org.apache.commons.math.geometry.Vector3D(0.647536017209422d, 0.42487699275774343d, 1.3957812166567987d);
        org.apache.commons.math.geometry.Vector3D vector3D98 = vector3D85.subtract(vector3D97);
        double double99 = vector3D85.getX();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2.114181450870767d + "'", double93 == 2.114181450870767d);
        org.junit.Assert.assertNotNull(vector3D98);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 1.0d + "'", double99 == 1.0d);
    }

    @Test
    public void test11663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11663");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D2);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double7 = vector3D6.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.add(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double15 = vector3D14.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D14);
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D21.add(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D9, (double) 100, vector3D14, (double) 1.0f, vector3D19, (double) 10L, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double28 = vector3D27.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double31 = vector3D30.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.add(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double36 = vector3D35.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D35);
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder39.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D42.add(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D30, (double) 100, vector3D35, (double) 1.0f, vector3D40, (double) 10L, vector3D45);
        double double47 = org.apache.commons.math.geometry.Vector3D.angle(vector3D9, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D2.subtract((double) (byte) 0, vector3D9);
        double double49 = vector3D2.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D2.normalize();
        double double51 = vector3D50.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.5707963267948966d + "'", double49 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.5707963267948966d + "'", double51 == 1.5707963267948966d);
    }

    @Test
    public void test11664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11664");
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation8.applyTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation15.applyInverseTo(rotation21);
        double[][] doubleArray30 = rotation15.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(doubleArray30, (-0.0d));
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation40.applyTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyInverseTo(rotation53);
        double double62 = rotation61.getQ2();
        double[][] doubleArray63 = rotation61.getMatrix();
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray63);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("YXZ", (java.lang.Throwable) mathException64);
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("Cardan angles singularity", (java.lang.Object[]) doubleArray30, (java.lang.Throwable) mathException64);
        java.lang.Object[] objArray67 = mathException66.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException68 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: ", objArray67);
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) notARotationMatrixException68);
        java.lang.String str70 = notARotationMatrixException68.getPattern();
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException((java.lang.Throwable) notARotationMatrixException68);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.577350269189626d + "'", double62 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[[1.0000000000000009, 0.0, 0.0], [0.0, 1.0000000000000009, 0.0], [0.0, 0.0, 1.0000000000000009]]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "org.apache.commons.math.MathException: " + "'", str70, "org.apache.commons.math.MathException: ");
    }

    @Test
    public void test11665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11665");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) (byte) 100);
        double double3 = vector3D2.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D4.add(vector3D6);
        double double8 = vector3D6.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D2.add(vector3D6);
        double double10 = vector3D6.getY();
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D((double) '4', (-0.42073549240394825d));
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D14.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D6.add(0.8610036570415694d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D(0.644673805255843d, (-0.42313616435755635d), (-0.4139099466688411d));
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.orthogonal();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D22);
    }

    @Test
    public void test11666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11666");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D0.add(vector3D2);
        double double4 = vector3D2.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D2.normalize();
        double double6 = vector3D5.getDelta();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyTo(rotation18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) (byte) -1, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyTo(rotation24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder26.getA2();
        double[] doubleArray29 = rotation24.getAngles(rotationOrder26);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder26.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder26.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder26.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D5.subtract(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D(0.577350269189626d, (-2.2835928143980874E-4d), (-0.2465752951392704d));
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D5, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((-100.0d), 0.8402958201312601d, 0.45970084338098294d);
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, 2.162171184425803d, 99.00505037623081d);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) ' ', 0.5773502691896258d);
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((-0.19151376815678886d), vector3D48, 0.0d, vector3D52);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D53, 0.5773502691896257d);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D43, vector3D53);
        double double57 = vector3D43.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D5.subtract((-11.705488932258108d), vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D5.scalarMultiply(1.6086184849831688d);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 100.00458700445063d + "'", double57 == 100.00458700445063d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
    }

    @Test
    public void test11667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11667");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation18.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray29 = rotation18.getAngles(rotationOrder28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (-2.356194490192345d), (double) '#', (-0.7297276562269664d));
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) '#', 0.0d, 0.0193499227851443d);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (-0.9129452507276277d), 0.6858794813176782d, (-0.9981745107766811d));
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
    }

    @Test
    public void test11668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11668");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.740148823367872d), 1.0000000000000007d, 0.010037733508633104d);
    }

    @Test
    public void test11669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11669");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getAngle();
        double double9 = rotation6.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA2();
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation6.applyInverseTo(vector3D12);
        double double15 = rotation6.getQ3();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation34.applyTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation28.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation34.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray45 = rotation34.getAngles(rotationOrder44);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder44.getA2();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder44, (-2.356194490192345d), (double) '#', (-0.7297276562269664d));
        double[] doubleArray51 = rotation6.getAngles(rotationOrder44);
        java.lang.String str52 = rotationOrder44.toString();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder44.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double58 = vector3D57.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double61 = vector3D60.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.add(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double66 = vector3D65.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D65);
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder73.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D72.add(vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D60, (double) 100, vector3D65, (double) 1.0f, vector3D70, (double) 10L, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D65.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D78.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder80.getA2();
        java.lang.String str82 = rotationOrder80.toString();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder80.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D78.subtract(vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D(0.6450179230959232d, vector3D54, 2.8292366954514296d, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D54.normalize();
        double double87 = vector3D54.getZ();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5773502691896258d + "'", double7 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 3.141592653589793d + "'", double8 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.5773502691896258d + "'", double9 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.5773502691896258d + "'", double15 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "XZX" + "'", str52, "XZX");
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "ZYX" + "'", str82, "ZYX");
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
    }

    @Test
    public void test11670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11670");
        java.lang.Object[] objArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ZXY", objArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11671");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.1850642232353207d), 0.02212368408061431d, 0.0037084753921347384d);
        double double13 = rotation12.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation12.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXY" + "'", str3, "ZXY");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.011185596659088061d) + "'", double13 == (-0.011185596659088061d));
        org.junit.Assert.assertNotNull(vector3D14);
    }

    @Test
    public void test11672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11672");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation10.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation23.applyTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation17.applyInverseTo(rotation23);
        double double32 = rotation23.getQ1();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation4.applyTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getAngle();
        double double43 = rotation40.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation33.applyTo(rotation40);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation40.getAxis();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation40.applyTo(vector3D47);
        double double49 = rotation40.getQ3();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation40.revert();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation40.getAxis();
        double double52 = rotation40.getAngle();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double58 = vector3D57.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double61 = vector3D60.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.add(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double66 = vector3D65.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D65);
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder73.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D72.add(vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D60, (double) 100, vector3D65, (double) 1.0f, vector3D70, (double) 10L, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 10, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((-0.5773502691896261d), vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation53.applyTo(vector3D78);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(vector3D78, 1.0013936335873947d);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation40.applyTo(vector3D78);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5773502691896258d + "'", double32 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.5773502691896258d + "'", double41 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 3.141592653589793d + "'", double42 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.5773502691896258d + "'", double43 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.5773502691896258d + "'", double49 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 3.141592653589793d + "'", double52 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D82);
    }

    @Test
    public void test11673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11673");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyTo(rotation12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (byte) -1, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyTo(rotation18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder20.getA2();
        double[] doubleArray23 = rotation18.getAngles(rotationOrder20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double28 = vector3D27.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D27.normalize();
        double double31 = org.apache.commons.math.geometry.Vector3D.angle(vector3D24, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation18.applyInverseTo(vector3D27);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation18.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation33.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder38.getA2();
        java.lang.String str41 = rotationOrder38.toString();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (-0.0927489957179025d), (-1.0000000000000002d), (double) 100);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder38.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((-0.3553802936803052d), vector3D36, 1.5077857260490912d, vector3D46);
        double double48 = vector3D47.getDelta();
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.5707963267948966d + "'", double31 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ZXY" + "'", str41, "ZXY");
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test11674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11674");
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D9.add(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation8.applyInverseTo(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D(100.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double17 = vector3D16.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double20 = vector3D19.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.add(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D21.add(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double26 = vector3D25.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double29 = vector3D28.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.add(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double34 = vector3D33.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D40.add(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D28, (double) 100, vector3D33, (double) 1.0f, vector3D38, (double) 10L, vector3D43);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D22, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D47.add(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D22.add((double) (byte) 0, vector3D50);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D22.add(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D22.scalarMultiply((double) 1L);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D22.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, vector3D13, (double) 0, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) (byte) 0);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(vector3D63, (-0.0927489957179025d));
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation65.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder68.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder68.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder68.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder68.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder68.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder68.getA3();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, 0.7625584504796028d, (-0.004748774471446504d), 0.01934871530964257d);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder68.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder68.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D(3.0798592086881706E-4d, vector3D66, (-0.5773502691896266d), vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D((-0.18551215211325933d), vector3D57, 0.3360660458711548d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D80.scalarMultiply(0.19980388020554118d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D84);
    }

    @Test
    public void test11675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11675");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder1.getA2();
        double double9 = vector3D8.getNorm();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation29.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation42.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation36.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation22.applyTo(rotation50);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        double[] doubleArray53 = rotation50.getAngles(rotationOrder52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder52.getA1();
        java.lang.String str55 = rotationOrder52.toString();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder52.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder52.getA3();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, 0.42073549240394825d, (-1.5707963267948966d), (-0.16977589786278133d));
        java.lang.String str62 = rotationOrder52.toString();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder52.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D63.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA3();
        java.lang.String str67 = rotationOrder65.toString();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder65.getA2();
        double double69 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D64, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D(99.80702147605295d, vector3D8, 1.579973449593424d, vector3D64);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[2.034443935795702, -0.7297276562269669, 2.034443935795702]");
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "YXZ" + "'", str55, "YXZ");
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "YXZ" + "'", str62, "YXZ");
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ZXY" + "'", str67, "ZXY");
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
    }

    @Test
    public void test11676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11676");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) '4', (-0.42073549240394825d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D(2.2032759208349604d, 0.0d, 0.29605345686120393d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(vector3D2, vector3D6);
    }

    @Test
    public void test11677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11677");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D1.add(vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.add(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.add(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double19 = vector3D18.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double22 = vector3D21.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.add(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.add(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D7, (double) (short) 0, vector3D16, (-1.0d), vector3D23, (double) (-1.0f), vector3D27);
        double double29 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double33 = vector3D32.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double36 = vector3D35.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.add(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double41 = vector3D40.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D47.add(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D35, (double) 100, vector3D40, (double) 1.0f, vector3D45, (double) 10L, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D7.add((double) (short) -1, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D40.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double56 = vector3D55.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double59 = vector3D58.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.add(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double64 = vector3D63.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D63);
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder67.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D70.add(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D58, (double) 100, vector3D63, (double) 1.0f, vector3D68, (double) 10L, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D63.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D40.subtract(vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D77.scalarMultiply((-0.0d));
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((-0.42073549240394825d), vector3D1, 0.25159761627788696d, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D(10.0d, 1.0d, (double) 0.0f);
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D1, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D84.scalarMultiply(1.4238376266436015d);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D87);
    }

    @Test
    public void test11678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11678");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.5707963267948966d), (double) 0L, 0.031397298386422245d, (double) ' ', true);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation29.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation23.applyInverseTo(rotation29);
        double double38 = rotation37.getQ2();
        double[][] doubleArray39 = rotation37.getMatrix();
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException41 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException42 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(doubleArray39, (double) 10);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation5.applyTo(rotation45);
        double[][] doubleArray47 = rotation45.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation45.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, 1.3834364814420919d, (-0.32355350711941916d), 1.5707963267948966d);
        java.lang.String str54 = rotationOrder49.toString();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, 0.03996449200510904d, (-2.7148476196383466d), 0.6990056207078691d);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation71 = rotation64.applyTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation84 = rotation77.applyTo(rotation83);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation71.applyInverseTo(rotation77);
        org.apache.commons.math.geometry.Rotation rotation86 = rotation77.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder87 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray88 = rotation77.getAngles(rotationOrder87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotationOrder87.getA2();
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(rotationOrder87, (-2.356194490192345d), (double) '#', (-0.7297276562269664d));
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotationOrder87.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotationOrder87.getA1();
        double[] doubleArray96 = rotation58.getAngles(rotationOrder87);
        org.apache.commons.math.geometry.Rotation rotation97 = rotation45.applyTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation98 = rotation58.revert();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9987969075985873d + "'", double6 == 0.9987969075985873d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.577350269189626d + "'", double38 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "YZY" + "'", str54, "YZY");
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertNotNull(rotationOrder87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[-2.0464531332337454, 2.3774624668593995, -2.2114710988666926]");
        org.junit.Assert.assertNotNull(rotation97);
        org.junit.Assert.assertNotNull(rotation98);
    }

    @Test
    public void test11679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11679");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double3 = vector3D2.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double6 = vector3D5.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.add(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double11 = vector3D10.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D17.add(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D5, (double) 100, vector3D10, (double) 1.0f, vector3D15, (double) 10L, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D10.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, vector3D23);
        double double25 = vector3D23.getX();
        double double26 = vector3D23.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D(100.0d, (double) (byte) 0, (-0.2862647032613221d));
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.subtract(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double35 = vector3D34.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double38 = vector3D37.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.add(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double43 = vector3D42.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D42);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder50.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D49.add(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D37, (double) 100, vector3D42, (double) 1.0f, vector3D47, (double) 10L, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double57 = vector3D56.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double60 = vector3D59.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.add(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double65 = vector3D64.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D64);
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder68.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder72.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D71.add(vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D59, (double) 100, vector3D64, (double) 1.0f, vector3D69, (double) 10L, vector3D74);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D75, (double) 1.0f);
        double double78 = vector3D75.getY();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D37.subtract(0.577350269189626d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D31.add((-0.6154797086703874d), vector3D79);
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D82.negate();
        double double84 = vector3D82.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D79.subtract(vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D79.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D86.negate();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-99.0d) + "'", double78 == (-99.0d));
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.5707963267948966d + "'", double84 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
    }

    @Test
    public void test11680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11680");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        java.lang.String str4 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D6.add(vector3D8);
        double double10 = vector3D8.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D12.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder17.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double25 = vector3D24.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double28 = vector3D27.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.add(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D29.add(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double34 = vector3D33.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double37 = vector3D36.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.add(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.add(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D22, (double) (short) 0, vector3D31, (-1.0d), vector3D38, (double) (-1.0f), vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D38.negate();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D19.add((double) (byte) 1, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D12.add((double) 1, vector3D19);
        double double47 = org.apache.commons.math.geometry.Vector3D.angle(vector3D8, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D8.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D8.negate();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D5.add(vector3D49);
        double double51 = vector3D49.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "YXY" + "'", str4, "YXY");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.5707963267948966d + "'", double47 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-1.5707963267948966d) + "'", double51 == (-1.5707963267948966d));
    }

    @Test
    public void test11681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11681");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.26632827407174636d), 0.22313242151855506d, 0.07457697061274195d, 0.6704042489610341d, true);
    }

    @Test
    public void test11682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11682");
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: YXZ");
        java.lang.Object[] objArray4 = mathException3.getArguments();
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: XZX", (java.lang.Throwable) mathException3);
        java.lang.String str6 = mathException3.getPattern();
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("YZX", (java.lang.Throwable) mathException3);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException7);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: YXZ" + "'", str6, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: YXZ");
    }

    @Test
    public void test11683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11683");
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!");
        java.lang.Throwable throwable8 = null;
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("hi!", throwable8);
        java.lang.Object[] objArray10 = mathException9.getArguments();
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("YXZ", (java.lang.Throwable) mathException11);
        java.lang.Throwable throwable14 = null;
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", throwable14);
        java.lang.Object[] objArray16 = mathException15.getArguments();
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException15);
        mathException11.addSuppressed((java.lang.Throwable) mathException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("Cardan angles singularity", (java.lang.Throwable) mathException17);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity", (java.lang.Throwable) mathException17);
        java.lang.Throwable[] throwableArray21 = mathException20.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException22 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: YXZ", (java.lang.Object[]) throwableArray21);
        mathException1.addSuppressed((java.lang.Throwable) notARotationMatrixException22);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
    }

    @Test
    public void test11684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11684");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D2.add(vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D4.negate();
        double double7 = vector3D4.getX();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D1, vector3D4);
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, 1.3834364814420919d, (-0.32355350711941916d), 1.5707963267948966d);
        double[] doubleArray14 = rotation8.getAngles(rotationOrder9);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation8.getAxis();
        double double16 = rotation8.getQ3();
        double[][] doubleArray17 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation8.revert();
        double double19 = rotation18.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 1.5707963267948963, 0.0]");
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.7071067811865475d) + "'", double16 == (-0.7071067811865475d));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.7071067811865476d) + "'", double19 == (-0.7071067811865476d));
    }

    @Test
    public void test11685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11685");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double14 = vector3D13.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double17 = vector3D16.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.add(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation12.applyTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyTo(rotation31);
        double double33 = rotation31.getQ3();
        double double34 = rotation31.getAngle();
        double double35 = rotation31.getQ0();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation12.applyInverseTo(rotation31);
        double double37 = rotation31.getQ0();
        double[][] doubleArray38 = rotation31.getMatrix();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5773502691896258d + "'", double33 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 3.141592653589793d + "'", double34 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
    }

    @Test
    public void test11686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11686");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.0d), 0.0d, 1.841096603147574E-16d);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1), 0.5773502691896258d, 3.141592653589793d, true);
        double double17 = rotation16.getQ1();
        double double18 = rotation16.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation16.revert();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation10.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation10.getAxis();
        double double22 = rotation10.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXY" + "'", str3, "ZXY");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.2862647032613221d) + "'", double17 == (-0.2862647032613221d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.8993270887478315d + "'", double18 == 0.8993270887478315d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
    }

    @Test
    public void test11687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11687");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double7 = vector3D6.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.add(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D8.add(vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double16 = vector3D15.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.add(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.add(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D1, (double) (short) 0, vector3D10, (-1.0d), vector3D17, (double) (-1.0f), vector3D21);
        double double23 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double27 = vector3D26.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double30 = vector3D29.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.add(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double35 = vector3D34.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D41.add(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D29, (double) 100, vector3D34, (double) 1.0f, vector3D39, (double) 10L, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D1.add((double) (short) -1, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D34.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D34.normalize();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
    }

    @Test
    public void test11688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11688");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.9987969075985873d, 0.0d, 0.0d);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(doubleArray7, 0.6814998162530085d);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(doubleArray7, 0.4620469383190093d);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray7, 0.9999999999999998d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA2();
        java.lang.String str16 = rotationOrder14.toString();
        java.lang.String str17 = rotationOrder14.toString();
        java.lang.String str18 = rotationOrder14.toString();
        double[] doubleArray19 = rotation13.getAngles(rotationOrder14);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "YZY" + "'", str16, "YZY");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "YZY" + "'", str17, "YZY");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "YZY" + "'", str18, "YZY");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.9987969075985874, 0.0]");
    }

    @Test
    public void test11689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11689");
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation10.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation23.applyTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation17.applyInverseTo(rotation23);
        double double32 = rotation31.getQ2();
        double[][] doubleArray33 = rotation31.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException34 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray33);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException35 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", (java.lang.Object[]) doubleArray33);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("ZYX", (java.lang.Object[]) doubleArray33);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("Euler angles singularity", (java.lang.Throwable) mathException36);
        java.lang.Object[] objArray38 = mathException37.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException39 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", objArray38);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.577350269189626d + "'", double32 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
    }

    @Test
    public void test11690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11690");
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException("ZYX");
        java.lang.Object[] objArray2 = mathException1.getArguments();
        java.lang.Throwable[] throwableArray3 = mathException1.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
    }

    @Test
    public void test11691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11691");
        java.lang.Object[] objArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException2 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: ZXZ", objArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11692");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        double double6 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation13.applyTo(rotation19);
        double[][] doubleArray21 = rotation19.getMatrix();
        double[][] doubleArray22 = rotation19.getMatrix();
        double double23 = rotation19.getQ3();
        double double24 = rotation19.getQ2();
        double double25 = rotation19.getQ1();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation7.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation7.getAxis();
        double[][] doubleArray28 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((-0.7853981633974482d), 0.0d, (-0.6916803607181152d), (double) 0L, false);
        double double35 = rotation34.getQ1();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation7.applyTo(rotation34);
        double double37 = rotation34.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.031397298386422245d + "'", double6 == 0.031397298386422245d);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.5773502691896258d + "'", double23 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.5773502691896258d + "'", double24 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.5773502691896258d + "'", double25 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
    }

    @Test
    public void test11693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11693");
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation10.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation23.applyTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation17.applyInverseTo(rotation23);
        double[][] doubleArray32 = rotation17.getMatrix();
        java.lang.Throwable throwable34 = null;
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("hi!", throwable34);
        java.lang.Object[] objArray36 = mathException35.getArguments();
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException35);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) doubleArray32, (java.lang.Throwable) mathException37);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Throwable) mathException37);
        java.lang.Object[] objArray40 = mathException37.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException41 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: YXZ", objArray40);
        java.lang.String str42 = notARotationMatrixException41.getPattern();
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Throwable) notARotationMatrixException41);
        java.lang.Object[] objArray44 = mathException43.getArguments();
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", objArray44);
        java.lang.Object[] objArray46 = mathException45.getArguments();
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org.apache.commons.math.MathException: YXZ" + "'", str42, "org.apache.commons.math.MathException: YXZ");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
    }

    @Test
    public void test11694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11694");
        java.lang.Throwable throwable4 = null;
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("hi!", throwable4);
        java.lang.Object[] objArray6 = mathException5.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException7 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", objArray6);
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", throwable9);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        java.lang.Object[] objArray12 = mathException10.getArguments();
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray6, (java.lang.Throwable) mathException10);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation34.applyTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation28.applyInverseTo(rotation34);
        double double43 = rotation42.getQ2();
        double[][] doubleArray44 = rotation42.getMatrix();
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray44);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException46 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray44);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("", objArray6, (java.lang.Throwable) notARotationMatrixException46);
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", throwable49);
        java.lang.String str51 = mathException50.getPattern();
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException50);
        notARotationMatrixException46.addSuppressed((java.lang.Throwable) mathException52);
        java.lang.Object[] objArray54 = mathException52.getArguments();
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException52);
        java.lang.Throwable throwable63 = null;
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("hi!", throwable63);
        java.lang.Object[] objArray65 = mathException64.getArguments();
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray65);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException66);
        java.lang.Throwable throwable70 = null;
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("hi!", throwable70);
        java.lang.Object[] objArray72 = mathException71.getArguments();
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray72);
        java.lang.Object[] objArray74 = mathException73.getArguments();
        java.lang.String str75 = mathException73.getPattern();
        mathException66.addSuppressed((java.lang.Throwable) mathException73);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException66);
        java.lang.Object[] objArray78 = mathException77.getArguments();
        java.lang.Throwable throwable81 = null;
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("hi!", throwable81);
        java.lang.Object[] objArray83 = mathException82.getArguments();
        java.lang.Object[] objArray84 = mathException82.getArguments();
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException82);
        java.lang.Object[] objArray86 = mathException85.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException87 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", objArray86);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("ZXZ", objArray78, (java.lang.Throwable) notARotationMatrixException87);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("", objArray78);
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", objArray78);
        java.lang.Throwable[] throwableArray91 = mathException90.getSuppressed();
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray91);
        mathException52.addSuppressed((java.lang.Throwable) mathException92);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.577350269189626d + "'", double43 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str75, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
        org.junit.Assert.assertNotNull(throwableArray91);
    }

    @Test
    public void test11695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11695");
        java.lang.Object[] objArray1 = null;
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double7 = vector3D6.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.add(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double15 = vector3D14.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D14);
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D21.add(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D9, (double) 100, vector3D14, (double) 1.0f, vector3D19, (double) 10L, vector3D24);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(vector3D25, (double) 1.0f);
        double double28 = rotation27.getQ1();
        double[][] doubleArray29 = rotation27.getMatrix();
        java.lang.Throwable throwable31 = null;
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!", throwable31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray29, (java.lang.Throwable) mathException32);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(doubleArray29, (double) 0);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException36 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) doubleArray29);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation44.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation57.applyTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation51.applyInverseTo(rotation57);
        double[][] doubleArray66 = rotation51.getMatrix();
        java.lang.Throwable throwable68 = null;
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("hi!", throwable68);
        java.lang.Object[] objArray70 = mathException69.getArguments();
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException69);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) doubleArray66, (java.lang.Throwable) mathException71);
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Throwable) mathException71);
        java.lang.Throwable throwable76 = null;
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("hi!", throwable76);
        java.lang.Object[] objArray78 = mathException77.getArguments();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray78);
        mathException73.addSuppressed((java.lang.Throwable) mathException79);
        java.lang.Object[] objArray81 = mathException79.getArguments();
        java.lang.Object[] objArray82 = mathException79.getArguments();
        java.lang.Object[] objArray83 = mathException79.getArguments();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) doubleArray29, (java.lang.Throwable) mathException79);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: YXZ", objArray1, (java.lang.Throwable) mathException84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-0.0d) + "'", double28 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
    }

    @Test
    public void test11696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11696");
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation19.applyTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation47.applyTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation67 = rotation60.applyTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation54.applyInverseTo(rotation60);
        double double69 = rotation68.getAngle();
        double[][] doubleArray70 = rotation68.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation26.applyInverseTo(rotation68);
        double double72 = rotation71.getQ0();
        double[][] doubleArray73 = rotation71.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException74 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXZ", (java.lang.Object[]) doubleArray73);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException75 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: ZXY", (java.lang.Object[]) doubleArray73);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) doubleArray73);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException77 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) doubleArray73);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException78 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) doubleArray73);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException79 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: YXZ", (java.lang.Object[]) doubleArray73);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: hi!", (java.lang.Throwable) notARotationMatrixException79);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5773502691896258d + "'", double13 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 3.141592653589793d + "'", double69 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test11697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11697");
        java.lang.Throwable throwable6 = null;
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("hi!", throwable6);
        java.lang.Object[] objArray8 = mathException7.getArguments();
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray8);
        java.lang.Object[] objArray10 = mathException9.getArguments();
        java.lang.Throwable throwable12 = null;
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", throwable12);
        java.lang.Object[] objArray14 = mathException13.getArguments();
        mathException9.addSuppressed((java.lang.Throwable) mathException13);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: YXZ", (java.lang.Throwable) mathException13);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException16);
        java.lang.Throwable[] throwableArray18 = mathException17.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException19 = new org.apache.commons.math.geometry.NotARotationMatrixException("YZX", (java.lang.Object[]) throwableArray18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException((java.lang.Throwable) notARotationMatrixException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("YXZ", (java.lang.Throwable) mathException20);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test11698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11698");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation19.applyInverseTo(rotation25);
        double double34 = rotation25.getQ1();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation6.applyTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation35.revert();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getAngle();
        double double45 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation35.applyTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation46.revert();
        double[][] doubleArray48 = rotation46.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(doubleArray48, (double) 10.0f);
        java.lang.Throwable throwable56 = null;
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("hi!", throwable56);
        java.lang.Object[] objArray58 = mathException57.getArguments();
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("YXZ", (java.lang.Throwable) mathException59);
        java.lang.Throwable throwable62 = null;
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("hi!", throwable62);
        java.lang.Object[] objArray64 = mathException63.getArguments();
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException63);
        mathException59.addSuppressed((java.lang.Throwable) mathException65);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("");
        mathException59.addSuppressed((java.lang.Throwable) mathException68);
        java.lang.Throwable throwable72 = null;
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("hi!", throwable72);
        java.lang.Object[] objArray74 = mathException73.getArguments();
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray74);
        java.lang.Object[] objArray76 = mathException75.getArguments();
        java.lang.Throwable throwable78 = null;
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("hi!", throwable78);
        java.lang.Object[] objArray80 = mathException79.getArguments();
        mathException75.addSuppressed((java.lang.Throwable) mathException79);
        mathException68.addSuppressed((java.lang.Throwable) mathException75);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException75);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException83);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("YXZ", (java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: YZX", (java.lang.Object[]) doubleArray48, (java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: Cardan angles singularity");
        java.lang.String str90 = mathException89.getPattern();
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException89);
        java.lang.Object[] objArray92 = mathException91.getArguments();
        org.apache.commons.math.MathException mathException93 = new org.apache.commons.math.MathException("ZXY", (java.lang.Object[]) doubleArray48, (java.lang.Throwable) mathException91);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.5773502691896258d + "'", double34 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.5773502691896258d + "'", double43 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 3.141592653589793d + "'", double44 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.5773502691896258d + "'", double45 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "org.apache.commons.math.MathException: Cardan angles singularity" + "'", str90, "org.apache.commons.math.MathException: Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[]");
    }

    @Test
    public void test11699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11699");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation11.revert();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation38.applyTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation32.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation19.applyTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation11.applyTo(rotation48);
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.YZX;
        double[] doubleArray51 = rotation48.getAngles(rotationOrder50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder50.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, 1.4142135623730951d, (-0.7701511529340699d), (-0.7425659244110598d));
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder50.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, 0.08768191567246301d, 2.9566862711546698d, (-0.16977589786278144d));
        org.apache.commons.math.geometry.Rotation rotation65 = rotation64.revert();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-2.034443935795702, 0.7297276562269669, -2.034443935795702]");
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotation65);
    }

    @Test
    public void test11700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11700");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        double double2 = vector3D1.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D1.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder4.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation13.applyTo(rotation19);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double22 = vector3D21.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double25 = vector3D24.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.add(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation20.applyTo(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double30 = vector3D29.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double33 = vector3D32.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.add(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double38 = vector3D37.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D37);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D44.add(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D32, (double) 100, vector3D37, (double) 1.0f, vector3D42, (double) 10L, vector3D47);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(vector3D48, (double) 1.0f);
        double double51 = vector3D48.getY();
        double double52 = org.apache.commons.math.geometry.Vector3D.angle(vector3D26, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D7.subtract(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, (-2.356194490192345d), (double) '#', (double) 10L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, (-1.0d), (double) '4', (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder60.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation59.applyTo(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double73 = vector3D72.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double76 = vector3D75.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.add(0.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D77.add(vector3D78);
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder81.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D79.add((double) (short) 1, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.minusK;
        double double86 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D83, vector3D85);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D7, vector3D71, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D85.negate();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-99.0d) + "'", double51 == (-99.0d));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
    }

    @Test
    public void test11701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11701");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) (-1), (double) (byte) 1, (double) (short) 1, false);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder13.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (-0.5773502691896261d), 10.262275260334876d, (-0.32355350711941916d));
        org.apache.commons.math.geometry.Rotation rotation21 = rotation11.applyTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double double28 = rotation27.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation34.applyTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation47.applyTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation41.applyInverseTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation27.applyInverseTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation62.applyTo(rotation68);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation82 = rotation75.applyTo(rotation81);
        org.apache.commons.math.geometry.Rotation rotation83 = rotation69.applyInverseTo(rotation75);
        double double84 = rotation83.getAngle();
        double[][] doubleArray85 = rotation83.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation86 = rotation41.applyInverseTo(rotation83);
        double double87 = rotation86.getQ0();
        double[][] doubleArray88 = rotation86.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(doubleArray88, 3.9999999999999982d);
        double double91 = rotation90.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation90.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation11.applyInverseTo(vector3D92);
        double double94 = rotation11.getQ1();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.5773502691896258d + "'", double28 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 3.141592653589793d + "'", double84 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.5773502691896258d + "'", double91 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-1.0d) + "'", double94 == (-1.0d));
    }

    @Test
    public void test11702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11702");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.9505060646395312d, 0.037782486563900576d, 0.19780644403546827d, (-0.09600903137570604d), false);
    }

    @Test
    public void test11703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11703");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 3.9999999999999982d, (-2.356194490192345d), (double) (short) 100);
        java.lang.String str5 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.47037064010186347d), (-1.1071487177940904d), 0.479425538604203d);
        double double11 = rotation10.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, 1.3834364814420919d, (-0.32355350711941916d), 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder12.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder12.getA2();
        double[] doubleArray19 = rotation10.getAngles(rotationOrder12);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder12.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder21.getA3();
        java.lang.String str24 = rotationOrder21.toString();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D25.negate();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D20.add(vector3D25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, 1.243111841594481d, 0.0d, (-64.00000000000006d));
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D(99.0d, (-99.0d), (double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.add(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D40.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D20, vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "YXY" + "'", str5, "YXY");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-0.003851265208173721d) + "'", double11 == (-0.003851265208173721d));
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-2.0411669668967605, 1.1071487177940904, 2.0502218653990996]");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ZXZ" + "'", str24, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
    }

    @Test
    public void test11704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11704");
        java.lang.Throwable throwable1 = null;
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException("hi!", throwable1);
        java.lang.Object[] objArray3 = mathException2.getArguments();
        java.lang.Object[] objArray4 = mathException2.getArguments();
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException2);
        java.lang.String str6 = mathException5.getPattern();
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException5);
        java.lang.String str8 = mathException7.getPattern();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test11705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11705");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation44.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation38.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation24.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation11.applyInverseTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation53.revert();
        double[][] doubleArray56 = rotation53.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation62.applyTo(rotation68);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation82 = rotation75.applyTo(rotation81);
        org.apache.commons.math.geometry.Rotation rotation83 = rotation69.applyInverseTo(rotation75);
        org.apache.commons.math.geometry.Rotation rotation84 = rotation69.revert();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation69.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation53.applyInverseTo(vector3D85);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D86, 0.7701511529340701d);
        double[][] doubleArray89 = rotation88.getMatrix();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(doubleArray89);
    }

    @Test
    public void test11706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11706");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.11183094261346158d, 1.5703487128712d);
    }

    @Test
    public void test11707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11707");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-2.0d), (-0.3235535071194193d));
    }

    @Test
    public void test11708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11708");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation19.applyTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation13.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation19.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray30 = rotation19.getAngles(rotationOrder29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder29.getA2();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder29, (-0.7297276562269664d), (-0.5773502691896258d), (double) (short) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (-1.0d), (double) '4', (double) 'a');
        java.lang.String str45 = rotationOrder36.toString();
        double[] doubleArray46 = rotation35.getAngles(rotationOrder36);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, 0.16977589786278138d, 0.5403023058681398d, 1.0000000000000002d);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder36.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder36.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((-0.8563484058715812d), vector3D54);
        double double56 = vector3D55.getX();
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ZYX" + "'", str45, "ZYX");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-0.45199330443110336, -0.37241979250068413, 0.3568502654612301]");
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.0d) + "'", double56 == (-0.0d));
    }

    @Test
    public void test11709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11709");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        double double13 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(vector3D14, 0.8775825618903732d);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation38.applyTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation32.applyInverseTo(rotation38);
        double double47 = rotation46.getQ2();
        double[][] doubleArray48 = rotation46.getMatrix();
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray48);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException50 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray48);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException51 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", (java.lang.Object[]) doubleArray48);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(doubleArray48, (double) 0L);
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (-1.0d), (double) '4', (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder54.getA2();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (-0.577221458153189d), 0.1275131864534447d, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, 0.6382446262307292d, 2.0597657905208595d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, 0.0d, (-0.871274682446377d), (-0.6627221316864118d));
        double[] doubleArray77 = rotation53.getAngles(rotationOrder54);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder54.getA1();
        double[] doubleArray79 = rotation16.getAngles(rotationOrder54);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder54.getA2();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (-2.4051549007682744E-4d), 0.5458056146732428d, (-0.9349767357295372d));
        java.lang.String str85 = rotationOrder54.toString();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder54.getA3();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 3.141592653589793d + "'", double13 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.577350269189626d + "'", double47 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[2.0344439357957027, -0.7297276562269664, 2.0344439357957027]");
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-0.4030372181193837, -0.5997363949439758, -0.4030372181193837]");
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "ZYX" + "'", str85, "ZYX");
        org.junit.Assert.assertNotNull(vector3D86);
    }

    @Test
    public void test11710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11710");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        double double13 = rotation11.getQ3();
        double double14 = rotation11.getAngle();
        double double15 = rotation11.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = null;
        double[] doubleArray17 = rotation11.getAngles(rotationOrder16);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.revert();
        double[][] doubleArray19 = rotation11.getMatrix();
        double double20 = rotation11.getAngle();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5773502691896258d + "'", double13 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 3.141592653589793d + "'", double14 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.5773502691896258d + "'", double15 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 3.141592653589793d + "'", double20 == 3.141592653589793d);
    }

    @Test
    public void test11711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11711");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, (double) 1L, 3.141592653589793d);
        double[][] doubleArray10 = rotation9.getMatrix();
        double[][] doubleArray11 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        double double13 = rotation12.getQ1();
        double double14 = rotation12.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.8775825618903728d) + "'", double13 == (-0.8775825618903728d));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-5.373643377032895E-17d) + "'", double14 == (-5.373643377032895E-17d));
    }

    @Test
    public void test11712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11712");
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double5 = vector3D4.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double8 = vector3D7.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.add(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.add(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D7, (double) 100, vector3D12, (double) 1.0f, vector3D17, (double) 10L, vector3D22);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D23, (double) 1.0f);
        double double26 = rotation25.getQ1();
        double[][] doubleArray27 = rotation25.getMatrix();
        java.lang.Throwable throwable29 = null;
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", throwable29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray27, (java.lang.Throwable) mathException30);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(doubleArray27, (double) 0);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException34 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) doubleArray27);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation42.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation55.applyTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation49.applyInverseTo(rotation55);
        double[][] doubleArray64 = rotation49.getMatrix();
        java.lang.Throwable throwable66 = null;
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("hi!", throwable66);
        java.lang.Object[] objArray68 = mathException67.getArguments();
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException67);
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) doubleArray64, (java.lang.Throwable) mathException69);
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Throwable) mathException69);
        java.lang.Throwable throwable74 = null;
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("hi!", throwable74);
        java.lang.Object[] objArray76 = mathException75.getArguments();
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray76);
        mathException71.addSuppressed((java.lang.Throwable) mathException77);
        java.lang.Object[] objArray79 = mathException77.getArguments();
        java.lang.Object[] objArray80 = mathException77.getArguments();
        java.lang.Object[] objArray81 = mathException77.getArguments();
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) doubleArray27, (java.lang.Throwable) mathException77);
        java.lang.Throwable[] throwableArray83 = mathException77.getSuppressed();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-0.0d) + "'", double26 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertNotNull(throwableArray83);
    }

    @Test
    public void test11713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11713");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.33219609031094127d), (-402.00000000000034d), 0.5501903722870181d);
    }

    @Test
    public void test11714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11714");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation10.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation23.applyTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation17.applyInverseTo(rotation23);
        double double32 = rotation23.getQ1();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation4.applyTo(rotation23);
        double[][] doubleArray34 = rotation4.getMatrix();
        double double35 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation41.applyTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation54.applyTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation48.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation54.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray65 = rotation54.getAngles(rotationOrder64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder64.getA2();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, (-0.7297276562269664d), (-0.5773502691896258d), (double) (short) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, (-1.0d), (double) '4', (double) 'a');
        java.lang.String str80 = rotationOrder71.toString();
        double[] doubleArray81 = rotation70.getAngles(rotationOrder71);
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, 0.16977589786278138d, 0.5403023058681398d, 1.0000000000000002d);
        double[] doubleArray86 = rotation4.getAngles(rotationOrder71);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder71.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder71.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5773502691896258d + "'", double32 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.0927489957179025d) + "'", double35 == (-0.0927489957179025d));
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "ZYX" + "'", str80, "ZYX");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-0.45199330443110336, -0.37241979250068413, 0.3568502654612301]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[2.752220392306203, -1.0000000000000004, 0.0]");
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
    }

    @Test
    public void test11715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11715");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double9 = vector3D8.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.add(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.add(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double18 = vector3D17.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double21 = vector3D20.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.add(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D22.add(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D6, (double) (short) 0, vector3D15, (-1.0d), vector3D22, (double) (-1.0f), vector3D26);
        double double28 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double32 = vector3D31.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double35 = vector3D34.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.add(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double40 = vector3D39.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D46.add(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D34, (double) 100, vector3D39, (double) 1.0f, vector3D44, (double) 10L, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D6.add((double) (short) -1, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D39.normalize();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D52, (double) 1);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation54.revert();
        double double56 = rotation55.getQ3();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation4.applyTo(rotation55);
        double[][] doubleArray58 = rotation55.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation55.revert();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation59.revert();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.0d) + "'", double56 == (-0.0d));
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
    }

    @Test
    public void test11716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11716");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation19.applyTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation13.applyInverseTo(rotation19);
        double[][] doubleArray28 = rotation13.getMatrix();
        java.lang.Throwable throwable33 = null;
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", throwable33);
        java.lang.Object[] objArray35 = mathException34.getArguments();
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException36);
        java.lang.Throwable throwable40 = null;
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", throwable40);
        java.lang.Object[] objArray42 = mathException41.getArguments();
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray42);
        java.lang.Object[] objArray44 = mathException43.getArguments();
        java.lang.String str45 = mathException43.getPattern();
        mathException36.addSuppressed((java.lang.Throwable) mathException43);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException36);
        java.lang.Object[] objArray48 = mathException47.getArguments();
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity", objArray48);
        java.lang.Object[] objArray50 = mathException49.getArguments();
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("ZXY", (java.lang.Object[]) doubleArray28, (java.lang.Throwable) mathException49);
        java.lang.Object[] objArray52 = mathException51.getArguments();
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException51);
        java.lang.String str54 = mathException51.toString();
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str45, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[[1.0000000000000009, 0.0, 0.0], [0.0, 1.0000000000000009, 0.0], [0.0, 0.0, 1.0000000000000009]]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org.apache.commons.math.MathException: ZXY" + "'", str54, "org.apache.commons.math.MathException: ZXY");
    }

    @Test
    public void test11717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11717");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.3834364814420919d, (-0.32355350711941916d), 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-2.7148476196383466d), 2.7522203923062034d, 100.60318086422517d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) (short) 1, (double) 0.0f, 3.9999999999999982d);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation22.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation28.revert();
        double double31 = rotation30.getAngle();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation37.applyTo(rotation43);
        double double45 = rotation43.getQ3();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation30.applyInverseTo(rotation43);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D49);
        double double51 = vector3D50.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder52.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D50, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation46.applyInverseTo(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation46.revert();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation16.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation11.applyTo(rotation46);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation46.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 3.141592653589793d + "'", double31 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.5773502691896258d + "'", double45 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.5707963267948966d + "'", double51 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(vector3D60);
    }

    @Test
    public void test11718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11718");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(1.420480783936926d, 0.8610036570415694d, 0.408248290463863d, 1.0463933028444008d, true);
    }

    @Test
    public void test11719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11719");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        double double5 = vector3D4.getY();
        double double6 = vector3D4.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.add(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double18 = vector3D17.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D24.add(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D12, (double) 100, vector3D17, (double) 1.0f, vector3D22, (double) 10L, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D22.negate();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation36.applyTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation42.revert();
        double double45 = rotation44.getAngle();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyTo(rotation57);
        double double59 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation44.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1), 0.5773502691896258d, 3.141592653589793d, true);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double68 = vector3D67.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double71 = vector3D70.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.add(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation66.applyInverseTo(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation57.applyInverseTo(vector3D72);
        double double75 = vector3D74.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D74.negate();
        double double77 = vector3D76.getNorm();
        double double78 = vector3D76.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D(0.5505824959080342d, vector3D29, (-0.9589242746631385d), vector3D76);
        double double80 = vector3D76.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "XZX" + "'", str3, "XZX");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 3.141592653589793d + "'", double45 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.5773502691896258d + "'", double59 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.7297276562269664d) + "'", double75 == (-0.7297276562269664d));
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0000000000000002d + "'", double77 == 1.0000000000000002d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.6666666666666669d + "'", double78 == 0.6666666666666669d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-0.4636476090008058d) + "'", double80 == (-0.4636476090008058d));
    }

    @Test
    public void test11720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11720");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double double6 = rotation5.getQ0();
        double double7 = rotation5.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation25.applyInverseTo(rotation31);
        double double40 = rotation31.getQ1();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyTo(rotation31);
        double double42 = rotation41.getQ3();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation5.applyInverseTo(rotation41);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation41.applyInverseTo(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation41.getAxis();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5773502691896258d + "'", double7 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.5773502691896258d + "'", double40 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.4231361643575562d) + "'", double42 == (-0.4231361643575562d));
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
    }

    @Test
    public void test11721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11721");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) (byte) -1, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation12.applyTo(rotation17);
        double double19 = rotation17.getAngle();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation38.applyTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation32.applyInverseTo(rotation38);
        double double47 = rotation38.getQ1();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation17.applyInverseTo(rotation38);
        double double49 = rotation17.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation17.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation((-0.009994070475860579d), (-0.009994070475860579d), 0.02276230893365508d, (double) '4', true);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation17.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D63.negate();
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D(1.4278296224057285d, 3.9999999999999982d, (double) ' ');
        double double69 = org.apache.commons.math.geometry.Vector3D.angle(vector3D64, vector3D68);
        double double70 = vector3D68.getY();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation61.applyTo(vector3D68);
        double[][] doubleArray72 = rotation61.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(doubleArray72, (-0.1105456192825307d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.3834364814420919d + "'", double19 == 1.3834364814420919d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.5773502691896258d + "'", double47 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.42073549240394825d) + "'", double49 == (-0.42073549240394825d));
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.6950289842361217d + "'", double69 == 1.6950289842361217d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 3.9999999999999982d + "'", double70 == 3.9999999999999982d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(doubleArray72);
    }

    @Test
    public void test11722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11722");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(1.4388425871203865d, 0.8517582414953592d);
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation9.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation22.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation35.applyTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation29.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation15.applyTo(rotation43);
        double double45 = rotation44.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D46.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation44.applyTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D(99.0d, (-99.0d), (double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation44.applyTo(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D52.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D(0.0d, (-100.0d));
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D52.add(vector3D57);
        double double59 = vector3D57.getZ();
        double double60 = vector3D57.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D2.subtract(0.15879770162582832d, vector3D57);
        double double62 = vector3D57.getX();
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.5063656411097588d + "'", double59 == 0.5063656411097588d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.5063656411097588d + "'", double60 == 0.5063656411097588d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.8623188722876839d + "'", double62 == 0.8623188722876839d);
    }

    @Test
    public void test11723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11723");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation18.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray29 = rotation18.getAngles(rotationOrder28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, 1.4278296224057285d, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation42.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation55.applyTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation49.applyInverseTo(rotation55);
        double double64 = rotation63.getQ2();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        double double71 = rotation70.getQ1();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation63.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder73.getA2();
        double[] doubleArray75 = rotation70.getAngles(rotationOrder73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder73.getA1();
        java.lang.String str77 = rotationOrder73.toString();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(rotationOrder73, 99.0d, (double) (short) 1, 3.9999999999999982d);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder73.getA2();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(rotationOrder73, 100.00499987500626d, 1.5309649148733837d, 0.005773438543149319d);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder73.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D35.subtract((double) (byte) 10, vector3D87);
        double double89 = vector3D35.getDelta();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.577350269189626d + "'", double64 == 0.577350269189626d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.031397298386422245d + "'", double71 == 0.031397298386422245d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[3.078582052843988, 0.019349922785144295, 3.120983474296034]");
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "ZYX" + "'", str77, "ZYX");
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
    }

    @Test
    public void test11724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11724");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation18);
        double double27 = rotation26.getQ2();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        double double34 = rotation33.getQ1();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation26.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA2();
        double[] doubleArray38 = rotation33.getAngles(rotationOrder36);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) (byte) 100, (-2.356194490192345d), 0.8775825618903732d);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation71 = rotation64.applyTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation58.applyInverseTo(rotation64);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation64.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray75 = rotation64.getAngles(rotationOrder74);
        java.lang.String str76 = rotationOrder74.toString();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder74.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder74.getA1();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(vector3D78, 0.8610036570415694d);
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D43.subtract((-13.286270865963271d), vector3D81);
        double double83 = vector3D43.getX();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.577350269189626d + "'", double27 == 0.577350269189626d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.031397298386422245d + "'", double34 == 0.031397298386422245d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[3.078582052843988, 0.019349922785144295, 3.120983474296034]");
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "XZX" + "'", str76, "XZX");
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
    }

    @Test
    public void test11725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11725");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyTo(rotation39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        double[] doubleArray42 = rotation39.getAngles(rotationOrder41);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder43.getA2();
        double[] doubleArray46 = rotation39.getAngles(rotationOrder43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder43.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D49.scalarMultiply(0.09966865249116202d);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D51.normalize();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[2.034443935795702, -0.7297276562269669, 2.034443935795702]");
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.7853981633974483, 1.9106332362490182, 2.356194490192345]");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
    }

    @Test
    public void test11726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11726");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.6154797086703874d), (-0.0d), 0.16977589786278138d, (-2.2835928143980874E-4d), true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str7 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 100.0f, 10.0d, (-0.0d));
        double double12 = rotation11.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double14 = vector3D13.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double16 = vector3D15.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double19 = vector3D18.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.add(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.add(vector3D21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder24.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.add((double) (short) 1, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D13.subtract(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double31 = vector3D30.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double34 = vector3D33.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.add(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D35.add(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D13.add((double) ' ', vector3D37);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double46 = vector3D45.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double49 = vector3D48.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.add(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double54 = vector3D53.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D53);
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder57.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D60.add(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D48, (double) 100, vector3D53, (double) 1.0f, vector3D58, (double) 10L, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double67 = vector3D66.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double70 = vector3D69.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.add(0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double75 = vector3D74.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D74);
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder78.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder82 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder82.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D81.add(vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D69, (double) 100, vector3D74, (double) 1.0f, vector3D79, (double) 10L, vector3D84);
        double double86 = org.apache.commons.math.geometry.Vector3D.angle(vector3D48, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D41.subtract((double) (byte) 0, vector3D48);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D37, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation11.applyInverseTo(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation5.applyTo(vector3D89);
        double double91 = rotation5.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "YXZ" + "'", str7, "YXZ");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2.5870663114445818d + "'", double12 == 2.5870663114445818d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(rotationOrder82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + (-0.0d) + "'", double91 == (-0.0d));
    }

    @Test
    public void test11727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11727");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D2.add(vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D4.negate();
        double double7 = vector3D4.getX();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D1, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D9.add(vector3D11);
        double double13 = vector3D11.getZ();
        double double14 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D11.negate();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(vector3D15, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D15.scalarMultiply(0.16977589786278138d);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D19.negate();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D4.subtract(vector3D19);
        double double22 = vector3D19.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, 2.162171184425803d, 99.00505037623081d);
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) ' ', 0.5773502691896258d);
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D((-0.19151376815678886d), vector3D27, 0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D19.add(vector3D31);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D41.add(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation40.applyInverseTo(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D46.orthogonal();
        double double48 = vector3D47.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D45.subtract(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D49.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D50.orthogonal();
        double double52 = vector3D51.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((-0.1850642232353207d), vector3D51);
        double double54 = vector3D51.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D19.add(vector3D51);
        double double56 = vector3D55.getZ();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.16977589786278138d + "'", double22 == 0.16977589786278138d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.5707963267948966d + "'", double52 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.6995232749458042d) + "'", double56 == (-0.6995232749458042d));
    }

    @Test
    public void test11728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11728");
        org.apache.commons.math.geometry.Vector3D vector3D1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.9920977594902798d, vector3D1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11729");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 3.9999999999999982d, (-2.356194490192345d), (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.47942553860420295d), 2.013965485026519d, 2.013965485026519d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
    }

    @Test
    public void test11730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11730");
        java.lang.Throwable throwable3 = null;
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("hi!", throwable3);
        java.lang.Object[] objArray5 = mathException4.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException6 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", objArray5);
        java.lang.String str7 = notARotationMatrixException6.getPattern();
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("hi!", throwable10);
        java.lang.Object[] objArray12 = mathException11.getArguments();
        java.lang.Object[] objArray13 = mathException11.getArguments();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException11);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) mathException11);
        notARotationMatrixException6.addSuppressed((java.lang.Throwable) mathException15);
        java.lang.Throwable[] throwableArray17 = notARotationMatrixException6.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException18 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Object[]) throwableArray17);
        java.lang.Throwable throwable21 = null;
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", throwable21);
        java.lang.String str23 = mathException22.getPattern();
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException22);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException24);
        java.lang.String str26 = mathException24.getPattern();
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException", (java.lang.Throwable) mathException24);
        java.lang.Object[] objArray28 = mathException27.getArguments();
        notARotationMatrixException18.addSuppressed((java.lang.Throwable) mathException27);
        java.lang.Object[] objArray30 = mathException27.getArguments();
        java.lang.String str31 = mathException27.getPattern();
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.apache.commons.math.MathException" + "'", str31, "org.apache.commons.math.MathException");
    }

    @Test
    public void test11731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11731");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(57.73502691896258d, 0.9999999999999999d, 2.494447742380407d, (double) 1L, true);
        double double7 = rotation6.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder8.getA3();
        double[] doubleArray11 = rotation6.getAngles(rotationOrder8);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) (byte) -1, 1.4388425871203874d, 0.647536017209422d);
        java.lang.String str17 = rotationOrder12.toString();
        double[] doubleArray18 = rotation6.getAngles(rotationOrder12);
        java.lang.String str19 = rotationOrder12.toString();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D(1.9106332362490184d, vector3D21);
        java.lang.Class<?> wildcardClass23 = vector3D22.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.01729918543181449d + "'", double7 == 0.01729918543181449d);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[2.3130162412357143, 0.048934367535309616, -2.3993727391489754]");
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "YZY" + "'", str17, "YZY");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-2.399372739148976, 0.048934367535309616, 2.3130162412357143]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "YZY" + "'", str19, "YZY");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test11732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11732");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(1.6093339001265161d, (-0.6627221316864118d), 64709.200596826406d, 0.46788534931107656d, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation24.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation37.applyTo(rotation43);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation31.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation17.applyTo(rotation45);
        double double47 = rotation46.getAngle();
        double double48 = rotation46.getQ2();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation5.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder50.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder50.getA3();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, (-1.4617775530898647d), 0.2795981450903065d, 0.6471449112093864d);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray59 = rotation46.getAngles(rotationOrder50);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
    }

    @Test
    public void test11733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11733");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.011185596659088061d), 0.8414709848078965d);
    }

    @Test
    public void test11734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11734");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = vector3D0.negate();
        org.apache.commons.math.geometry.Vector3D vector3D2 = vector3D0.orthogonal();
        double double3 = vector3D0.getNorm();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(3.9999999999999982d, (-0.7071067811865475d), 1.4388425871203865d, (-0.7071067811865475d), true);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation9.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation9.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation22.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation35.applyTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation29.applyInverseTo(rotation35);
        double double44 = rotation35.getQ1();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation16.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation45.revert();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double double53 = rotation52.getQ3();
        double double54 = rotation52.getAngle();
        double double55 = rotation52.getQ3();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation45.applyTo(rotation52);
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) '#', (double) 0, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation56.applyInverseTo(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation9.applyInverseTo(vector3D60);
        double double63 = org.apache.commons.math.geometry.Vector3D.angle(vector3D0, vector3D60);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.5773502691896258d + "'", double44 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.5773502691896258d + "'", double53 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 3.141592653589793d + "'", double54 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.5773502691896258d + "'", double55 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.5707963267948966d + "'", double63 == 1.5707963267948966d);
    }

    @Test
    public void test11735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11735");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyTo(rotation12);
        double double14 = rotation12.getQ3();
        double double15 = rotation12.getAngle();
        double double16 = rotation12.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = null;
        double[] doubleArray18 = rotation12.getAngles(rotationOrder17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.revert();
        double[][] doubleArray20 = rotation12.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder21.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double29 = vector3D28.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double32 = vector3D31.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.add(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.add(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double38 = vector3D37.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double41 = vector3D40.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.add(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D42.add(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D26, (double) (short) 0, vector3D35, (-1.0d), vector3D42, (double) (-1.0f), vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D42.negate();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D23.add((double) (byte) 1, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D49.negate();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D49.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation12.applyInverseTo(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D((-0.7151193819011744d), (-2.0000000000000018d));
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D(0.005352030736132928d, vector3D57);
        double double59 = vector3D58.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D(2.0944038714689683d, vector3D52, 0.0d, vector3D58);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.5773502691896258d + "'", double14 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 3.141592653589793d + "'", double15 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.5773502691896258d + "'", double16 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.005352030736132928d + "'", double59 == 0.005352030736132928d);
    }

    @Test
    public void test11736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11736");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D12.add(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation11.applyInverseTo(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D17.orthogonal();
        double double19 = vector3D18.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D16.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double24 = vector3D23.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double27 = vector3D26.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.add(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double32 = vector3D31.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder39.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D38.add(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D26, (double) 100, vector3D31, (double) 1.0f, vector3D36, (double) 10L, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D31.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D20.add((double) ' ', vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double49 = vector3D48.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D44.subtract((double) (short) 0, vector3D50);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D44, (double) (byte) -1);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation5.applyTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation54.revert();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation54.revert();
        double double57 = rotation56.getQ2();
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.8818536098126042d + "'", double57 == 0.8818536098126042d);
    }

    @Test
    public void test11737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11737");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.0927489957179025d), (-1.0000000000000002d), (double) 100);
        double double8 = rotation7.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation20.applyTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation33.applyTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation27.applyInverseTo(rotation33);
        double double42 = rotation33.getQ1();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation14.applyTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation43.revert();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double double51 = rotation50.getQ3();
        double double52 = rotation50.getAngle();
        double double53 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation43.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation54.revert();
        double[][] doubleArray56 = rotation54.getMatrix();
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("XZX", (java.lang.Object[]) doubleArray56);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(doubleArray56, 0.9184977310046263d);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation59.revert();
        double double61 = rotation59.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, 0.9987969075985873d, 0.2980099775410749d, 0.9724711741591723d);
        double[] doubleArray72 = rotation59.getAngles(rotationOrder62);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation7.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation59.revert();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation((-0.5773502691896261d), 2.875400851998216d, (-0.479425538604203d), Double.NaN, false);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation59.applyTo(rotation80);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXY" + "'", str3, "ZXY");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.8517582414953592d + "'", double8 == 0.8517582414953592d);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.5773502691896258d + "'", double42 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.5773502691896258d + "'", double51 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 3.141592653589793d + "'", double52 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.5773502691896258d + "'", double53 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.8610036570415693d + "'", double61 == 0.8610036570415693d);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[2.7522203923062025, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(rotation81);
    }

    @Test
    public void test11738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11738");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.7136492029946184d), 0.9999999999999998d, 99.96860270161358d);
    }

    @Test
    public void test11739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11739");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D2);
        double double4 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation24.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation37.applyTo(rotation43);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation31.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation17.applyTo(rotation45);
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D(0.577350269189626d, (-2.2835928143980874E-4d), (-0.2465752951392704d));
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation17.applyTo(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D3.subtract(0.9980162325105295d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D52.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D53.scalarMultiply(0.2987679718243112d);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D53.scalarMultiply(1.2589624995906188d);
        double double58 = vector3D53.getY();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.5707963267948966d + "'", double4 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.9999999997526188d + "'", double58 == 0.9999999997526188d);
    }

    @Test
    public void test11740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11740");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation24.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation18.applyInverseTo(rotation24);
        double double33 = rotation24.getQ1();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getAngle();
        double double44 = rotation41.getQ3();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation34.applyTo(rotation41);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation41.getAxis();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation47.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation41.applyTo(vector3D48);
        double double50 = rotation41.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation41.revert();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation51.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5773502691896258d + "'", double33 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.5773502691896258d + "'", double42 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 3.141592653589793d + "'", double43 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.5773502691896258d + "'", double44 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.5773502691896258d + "'", double50 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(vector3D52);
    }

    @Test
    public void test11741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11741");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 100.0f, 10.0d, (-0.0d));
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation13.applyTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation20.revert();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation20.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D36.normalize();
        double double38 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D7, vector3D36);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder41.getA3();
        java.lang.String str44 = rotationOrder41.toString();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder41.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA2();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(vector3D45, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D47);
        double double50 = vector3D49.getY();
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D36, 0.42053433528396517d, vector3D49);
        double double52 = vector3D49.getX();
        double double53 = vector3D49.getDelta();
        double double54 = vector3D49.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YXZ" + "'", str2, "YXZ");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "XZX" + "'", str44, "XZX");
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.5707963267948966d + "'", double53 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
    }

    @Test
    public void test11742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11742");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(1.0642188235215668d, (-0.9589242746631385d), 0.3324645204569882d, (-0.023823288661546024d), true);
    }

    @Test
    public void test11743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11743");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusI;
        double double1 = vector3D0.getY();
        double double2 = vector3D0.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D0.normalize();
        double double4 = vector3D3.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D3.negate();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
    }

    @Test
    public void test11744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11744");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation18);
        double double27 = rotation18.getQ1();
        double double28 = rotation18.getQ3();
        double double29 = rotation18.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (byte) 1, (double) (-1L), Double.NaN);
        double[] doubleArray35 = rotation18.getAngles(rotationOrder30);
        java.lang.String str36 = rotationOrder30.toString();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1), 0.5773502691896258d, 3.141592653589793d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, 1.3834364814420919d, (-0.32355350711941916d), 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder45.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder45.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder45.getA3();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, 1.5077857260490912d, 0.16527500348741267d, Double.NaN);
        java.lang.String str57 = rotationOrder45.toString();
        double[] doubleArray58 = rotation44.getAngles(rotationOrder45);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder45.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder62.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder62.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder62.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder62.getA3();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, 0.7625584504796028d, (-0.004748774471446504d), 0.01934871530964257d);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder62.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D(1.0000000000000002d, (double) (short) 1, (-1.1071487177940904d));
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D73.add(1.2831853071795876d, vector3D78);
        double double80 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D60.subtract((double) 10, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D38.add(vector3D60);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.5773502691896258d + "'", double27 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.5773502691896258d + "'", double28 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5773502691896258d + "'", double29 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[2.356194490192345, 1.9106332362490184, 0.7853981633974483]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "YZY" + "'", str36, "YZY");
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "YZY" + "'", str57, "YZY");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[2.3098248068755094, 2.467820091963933, 2.9261629491074794]");
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0000000000000002d + "'", double80 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
    }

    @Test
    public void test11745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11745");
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation24.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation18.applyInverseTo(rotation24);
        double double33 = rotation32.getQ2();
        double[][] doubleArray34 = rotation32.getMatrix();
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray34);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException36 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray34);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray34);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException", (java.lang.Object[]) doubleArray34);
        java.lang.Throwable throwable44 = null;
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("hi!", throwable44);
        java.lang.Object[] objArray46 = mathException45.getArguments();
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("YXZ", (java.lang.Throwable) mathException47);
        java.lang.Throwable throwable50 = null;
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("hi!", throwable50);
        java.lang.Object[] objArray52 = mathException51.getArguments();
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException51);
        mathException47.addSuppressed((java.lang.Throwable) mathException53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("Cardan angles singularity", (java.lang.Throwable) mathException53);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity", (java.lang.Throwable) mathException53);
        java.lang.String str57 = mathException56.getPattern();
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("ZYX", (java.lang.Object[]) doubleArray34, (java.lang.Throwable) mathException56);
        java.lang.Throwable throwable62 = null;
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("hi!", throwable62);
        java.lang.Object[] objArray64 = mathException63.getArguments();
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray64);
        java.lang.Object[] objArray66 = mathException65.getArguments();
        java.lang.Throwable throwable68 = null;
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("hi!", throwable68);
        java.lang.Object[] objArray70 = mathException69.getArguments();
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException69);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("hi!", objArray66, (java.lang.Throwable) mathException71);
        mathException56.addSuppressed((java.lang.Throwable) mathException71);
        java.lang.Object[] objArray74 = mathException71.getArguments();
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", objArray74);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: YXZ");
        java.lang.Object[] objArray79 = mathException78.getArguments();
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: XZX", (java.lang.Throwable) mathException78);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException80);
        mathException75.addSuppressed((java.lang.Throwable) mathException81);
        java.lang.String str83 = mathException81.getPattern();
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.577350269189626d + "'", double33 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity" + "'", str57, "org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "org.apache.commons.math.MathException: XZX" + "'", str83, "org.apache.commons.math.MathException: XZX");
    }

    @Test
    public void test11746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11746");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, (-2.356194490192345d), (double) '#', (double) 10L, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyTo(rotation18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) (byte) -1, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyTo(rotation24);
        double double26 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double32 = vector3D31.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double35 = vector3D34.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.add(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D36.add(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double41 = vector3D40.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double44 = vector3D43.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.add(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.add(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D29, (double) (short) 0, vector3D38, (-1.0d), vector3D45, (double) (-1.0f), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double54 = vector3D53.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double57 = vector3D56.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.add(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double62 = vector3D61.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D61);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D68.add(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D56, (double) 100, vector3D61, (double) 1.0f, vector3D66, (double) 10L, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double76 = vector3D75.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, vector3D45, (double) 10, vector3D56, 1.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation24.applyInverseTo(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double81 = vector3D80.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double84 = vector3D83.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D80.add(0.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D85.add(vector3D86);
        double double88 = vector3D87.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation24.applyInverseTo(vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation5.applyInverseTo(vector3D87);
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D87, 0.9724711741591723d);
        org.apache.commons.math.geometry.Rotation rotation93 = rotation92.revert();
        double double94 = rotation93.getQ0();
        double[][] doubleArray95 = rotation93.getMatrix();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1.0d) + "'", double6 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.3834364814420919d + "'", double26 == 1.3834364814420919d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2.0d + "'", double88 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(rotation93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-0.884098232924101d) + "'", double94 == (-0.884098232924101d));
        org.junit.Assert.assertNotNull(doubleArray95);
    }

    @Test
    public void test11747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11747");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double2 = vector3D1.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double5 = vector3D4.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.add(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D9);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D16.add(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D4, (double) 100, vector3D9, (double) 1.0f, vector3D14, (double) 10L, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(vector3D20, (double) 1.0f);
        double double23 = rotation22.getQ1();
        double[][] doubleArray24 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(doubleArray24, 0.21664530235664914d);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation26.getAxis();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation34.applyTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation47.applyTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation41.applyInverseTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation41.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str58 = rotationOrder57.toString();
        double[] doubleArray59 = rotation41.getAngles(rotationOrder57);
        java.lang.String str60 = rotationOrder57.toString();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder57.getA2();
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D27.subtract((-0.8735320845762674d), vector3D61);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-0.0d) + "'", double23 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "YXZ" + "'", str58, "YXZ");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, -0.0, 0.0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "YXZ" + "'", str60, "YXZ");
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
    }

    @Test
    public void test11748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11748");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double1 = vector3D0.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.add(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D5.add(vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.add(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double18 = vector3D17.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D24.add(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D12, (double) 100, vector3D17, (double) 1.0f, vector3D22, (double) 10L, vector3D27);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D6, vector3D28);
        double double30 = vector3D6.getX();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
    }

    @Test
    public void test11749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11749");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1), 0.5773502691896258d, 3.141592653589793d, true);
        double double6 = rotation5.getQ1();
        double double7 = rotation5.getAngle();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA1();
        double[] doubleArray11 = rotation5.getAngles(rotationOrder9);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, 2.77555756156289E-17d, 1.5480028924187779d, 9.799851417283954E-4d);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, 1.0d, 1.5707963267948966d, 0.6438988987070706d);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, 0.0d, 0.46116753612483063d, (-0.7853981633974482d));
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation29.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation42.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation55.applyTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation68.applyTo(rotation74);
        org.apache.commons.math.geometry.Rotation rotation76 = rotation62.applyInverseTo(rotation68);
        org.apache.commons.math.geometry.Rotation rotation77 = rotation48.applyTo(rotation76);
        org.apache.commons.math.geometry.Rotation rotation78 = rotation35.applyInverseTo(rotation77);
        double double79 = rotation78.getQ2();
        double double80 = rotation78.getQ2();
        org.apache.commons.math.geometry.Rotation rotation81 = rotation23.applyInverseTo(rotation78);
        double double82 = rotation23.getQ1();
        org.apache.commons.math.geometry.Rotation rotation83 = rotation23.revert();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.2862647032613221d) + "'", double6 == (-0.2862647032613221d));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 2.56094043263594d + "'", double7 == 2.56094043263594d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 2.56094043263594d + "'", double8 == 2.56094043263594d);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[2.3098248068755094, 2.467820091963933, 2.9261629491074794]");
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.5773502691896261d) + "'", double79 == (-0.5773502691896261d));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-0.5773502691896261d) + "'", double80 == (-0.5773502691896261d));
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.08746072181209585d) + "'", double82 == (-0.08746072181209585d));
        org.junit.Assert.assertNotNull(rotation83);
    }

    @Test
    public void test11750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11750");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double7 = vector3D6.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.add(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D8.add(vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double16 = vector3D15.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.add(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.add(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D1, (double) (short) 0, vector3D10, (-1.0d), vector3D17, (double) (-1.0f), vector3D21);
        double double23 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double27 = vector3D26.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double30 = vector3D29.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.add(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double35 = vector3D34.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D41.add(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D29, (double) 100, vector3D34, (double) 1.0f, vector3D39, (double) 10L, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D1.add((double) (short) -1, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D34.normalize();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) 1);
        double double50 = rotation49.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation49.revert();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D52.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder54.getA3();
        double double57 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D53, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation49.applyInverseTo(vector3D56);
        double double59 = rotation49.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA2();
        java.lang.String str62 = rotationOrder60.toString();
        java.lang.String str63 = rotationOrder60.toString();
        double[] doubleArray64 = rotation49.getAngles(rotationOrder60);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, (-0.9950371902099893d), 99.00000000000017d, 0.1004936261643999d);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, 0.16527500348741267d, 31990.023343686935d, (-0.3234924215202219d));
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.0d) + "'", double50 == (-0.0d));
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.0d) + "'", double57 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.0d) + "'", double59 == (-0.0d));
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "XYZ" + "'", str62, "XYZ");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "XYZ" + "'", str63, "XYZ");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-0.0, -1.0, -0.0]");
        org.junit.Assert.assertNotNull(vector3D69);
    }

    @Test
    public void test11751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11751");
        java.lang.Throwable throwable8 = null;
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("hi!", throwable8);
        java.lang.Object[] objArray10 = mathException9.getArguments();
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("YXZ", (java.lang.Throwable) mathException11);
        java.lang.Throwable throwable14 = null;
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", throwable14);
        java.lang.Object[] objArray16 = mathException15.getArguments();
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException15);
        mathException11.addSuppressed((java.lang.Throwable) mathException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("Cardan angles singularity", (java.lang.Throwable) mathException17);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity", (java.lang.Throwable) mathException17);
        java.lang.Throwable throwable23 = null;
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", throwable23);
        java.lang.Object[] objArray25 = mathException24.getArguments();
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException26);
        java.lang.Throwable throwable30 = null;
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("hi!", throwable30);
        java.lang.Object[] objArray32 = mathException31.getArguments();
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException33);
        mathException27.addSuppressed((java.lang.Throwable) mathException34);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation43.applyTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation56.applyTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation50.applyInverseTo(rotation56);
        double double65 = rotation64.getQ2();
        double[][] doubleArray66 = rotation64.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException67 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray66);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException68 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Object[]) doubleArray66);
        mathException27.addSuppressed((java.lang.Throwable) notARotationMatrixException68);
        mathException20.addSuppressed((java.lang.Throwable) mathException27);
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Throwable) mathException20);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Throwable) mathException20);
        java.lang.Throwable[] throwableArray73 = mathException20.getSuppressed();
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException20);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.577350269189626d + "'", double65 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(throwableArray73);
    }

    @Test
    public void test11752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11752");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) (byte) -1, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation12.applyTo(rotation17);
        double double19 = rotation17.getAngle();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation38.applyTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation32.applyInverseTo(rotation38);
        double double47 = rotation38.getQ1();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation17.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D(0.5458056146732426d, (double) (short) -1, (-0.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, 3.9999999999999982d, (-2.356194490192345d), (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D52.subtract(0.14188991228633444d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D61.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double66 = vector3D65.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double69 = vector3D68.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.add(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double74 = vector3D73.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D73);
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder77.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D80.add(vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D68, (double) 100, vector3D73, (double) 1.0f, vector3D78, (double) 10L, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D73.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D86.negate();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D86.normalize();
        double double89 = vector3D86.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D86.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D62.add((-0.2795944881623749d), vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation38.applyTo(vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D90.normalize();
        double double94 = vector3D93.getZ();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.3834364814420919d + "'", double19 == 1.3834364814420919d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.5773502691896258d + "'", double47 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
    }

    @Test
    public void test11753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11753");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.41939638214411645d), 0.9999875148453954d);
    }

    @Test
    public void test11754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11754");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation19.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation19);
        double[][] doubleArray35 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation19.getAxis();
        double double37 = rotation19.getQ3();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) 100, (-0.2529399038098691d), (-0.16977589786278144d), (-0.16192227763965086d), true);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation19.applyTo(rotation43);
        double double45 = rotation44.getQ2();
        double double46 = rotation44.getQ2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5773502691896258d + "'", double6 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0016977488752461382d + "'", double45 == 0.0016977488752461382d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0016977488752461382d + "'", double46 == 0.0016977488752461382d);
    }

    @Test
    public void test11755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11755");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double9 = vector3D8.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.add(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double17 = vector3D16.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D16);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D23.add(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D11, (double) 100, vector3D16, (double) 1.0f, vector3D21, (double) 10L, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double31 = vector3D30.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double34 = vector3D33.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.add(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double39 = vector3D38.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D45.add(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D33, (double) 100, vector3D38, (double) 1.0f, vector3D43, (double) 10L, vector3D48);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D49, (double) 1.0f);
        double double52 = vector3D49.getY();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D11.subtract(0.577350269189626d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D(99.0d, vector3D4, (double) 1.0f, vector3D11);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D55, Double.NaN);
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder58.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder58.getA1();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, 0.9987969075985873d, 0.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, 0.7080734182735712d, 1.3061290504076808d, 0.577350269189626d);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder58.getA3();
        double[] doubleArray70 = rotation57.getAngles(rotationOrder58);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder58.getA2();
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-99.0d) + "'", double52 == (-99.0d));
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(vector3D71);
    }

    @Test
    public void test11756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11756");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyTo(rotation39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        double[] doubleArray42 = rotation39.getAngles(rotationOrder41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder41.getA3();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, 0.8818536098126042d, 2.895401343163759d, 0.797808412475777d);
        double double48 = rotation47.getQ1();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[2.034443935795702, -0.7297276562269669, 2.034443935795702]");
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-0.8474005469305241d) + "'", double48 == (-0.8474005469305241d));
    }

    @Test
    public void test11757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11757");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.00553221370179018d, (-0.06469933406322026d), 100.49963690658076d, 1.5480028924187785d, false);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1), 0.5773502691896258d, 3.141592653589793d, true);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double16 = vector3D15.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.add(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation11.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        double double21 = vector3D20.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation11.applyInverseTo(vector3D20);
        double[][] doubleArray23 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation11.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D26.add(vector3D28);
        double double30 = vector3D28.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double33 = vector3D32.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D32.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder37.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double45 = vector3D44.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double48 = vector3D47.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.add(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D49.add(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double54 = vector3D53.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double57 = vector3D56.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.add(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D58.add(vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D42, (double) (short) 0, vector3D51, (-1.0d), vector3D58, (double) (-1.0f), vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D58.negate();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D39.add((double) (byte) 1, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D32.add((double) 1, vector3D39);
        double double67 = org.apache.commons.math.geometry.Vector3D.angle(vector3D28, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D28.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D24.add((-1.0000000000000004d), vector3D28);
        double double70 = vector3D24.getZ();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D24, (-0.1850642232353207d));
        org.apache.commons.math.geometry.Rotation rotation73 = rotation5.applyTo(rotation72);
        double double74 = rotation72.getQ0();
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.5707963267948966d + "'", double67 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.9386072654111782d) + "'", double70 == (-0.9386072654111782d));
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.9957219579183763d + "'", double74 == 0.9957219579183763d);
    }

    @Test
    public void test11758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11758");
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation24.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation18.applyInverseTo(rotation24);
        double double33 = rotation32.getQ2();
        double[][] doubleArray34 = rotation32.getMatrix();
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray34);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException36 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray34);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException37 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", (java.lang.Object[]) doubleArray34);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException38 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXZ", (java.lang.Object[]) doubleArray34);
        java.lang.Throwable throwable43 = null;
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("hi!", throwable43);
        java.lang.Object[] objArray45 = mathException44.getArguments();
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray45);
        java.lang.Object[] objArray47 = mathException46.getArguments();
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", throwable49);
        java.lang.Object[] objArray51 = mathException50.getArguments();
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("hi!", objArray47, (java.lang.Throwable) mathException52);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation67 = rotation60.applyTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation80 = rotation73.applyTo(rotation79);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation67.applyInverseTo(rotation73);
        double[][] doubleArray82 = rotation67.getMatrix();
        java.lang.Throwable throwable84 = null;
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("hi!", throwable84);
        java.lang.Object[] objArray86 = mathException85.getArguments();
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException85);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) doubleArray82, (java.lang.Throwable) mathException87);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray47, (java.lang.Throwable) mathException88);
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray34, (java.lang.Throwable) mathException88);
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException90);
        java.lang.String str92 = mathException90.getPattern();
        org.apache.commons.math.MathException mathException93 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException90);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.577350269189626d + "'", double33 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
    }

    @Test
    public void test11759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11759");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.9228432483227894d, 0.0d, 0.577350269189626d);
    }

    @Test
    public void test11760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11760");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (double) 0.0f, 3.9999999999999982d);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation10.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation16.revert();
        double double19 = rotation18.getAngle();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyTo(rotation31);
        double double33 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation18.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D37);
        double double39 = vector3D38.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder40.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D38, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation34.applyInverseTo(vector3D43);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation4.applyInverseTo(rotation34);
        double double47 = rotation34.getAngle();
        double[][] doubleArray48 = rotation34.getMatrix();
        double double49 = rotation34.getQ0();
        double double50 = rotation34.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 3.141592653589793d + "'", double19 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5773502691896258d + "'", double33 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.5707963267948966d + "'", double39 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1.0000000000000002d) + "'", double49 == (-1.0000000000000002d));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-1.0000000000000002d) + "'", double50 == (-1.0000000000000002d));
    }

    @Test
    public void test11761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11761");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation8.applyTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation34.applyTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation28.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation14.applyTo(rotation42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation43.applyTo(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double51 = vector3D50.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double54 = vector3D53.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.add(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.add(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double60 = vector3D59.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double63 = vector3D62.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.add(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D64.add(vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D48, (double) (short) 0, vector3D57, (-1.0d), vector3D64, (double) (-1.0f), vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D64.negate();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D44.subtract((double) 1.0f, vector3D64);
        double double72 = org.apache.commons.math.geometry.Vector3D.angle(vector3D2, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D2.scalarMultiply(0.02276230893365508d);
        double double75 = vector3D2.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.5707963267948966d + "'", double72 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
    }

    @Test
    public void test11762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11762");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.8818536098126042d, (-0.5773502691896258d));
        org.apache.commons.math.geometry.Vector3D vector3D7 = new org.apache.commons.math.geometry.Vector3D(0.0d, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(vector3D7, 0.7853981633974482d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D3, (-0.3744172556977022d), vector3D7);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(vector3D10, 52.0d);
        double double13 = rotation12.getQ1();
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.6361440731417316d + "'", double13 == 0.6361440731417316d);
    }

    @Test
    public void test11763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11763");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(990.0d, 0.0d, (double) (-1L), 99.96860270161358d, false);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation24.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation24.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray35 = rotation24.getAngles(rotationOrder34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder34.getA2();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, 1.4278296224057285d, 1.0d, 0.0d);
        java.lang.String str41 = rotationOrder34.toString();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, 0.9999875148453954d, 0.6438988987070706d, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray46 = rotation5.getAngles(rotationOrder34);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "XZX" + "'", str41, "XZX");
    }

    @Test
    public void test11764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11764");
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation10.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation23.applyTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation17.applyInverseTo(rotation23);
        double[][] doubleArray32 = rotation17.getMatrix();
        java.lang.Throwable throwable34 = null;
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("hi!", throwable34);
        java.lang.Object[] objArray36 = mathException35.getArguments();
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException35);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) doubleArray32, (java.lang.Throwable) mathException37);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("XZX", (java.lang.Object[]) doubleArray32);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException", (java.lang.Object[]) doubleArray32);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(doubleArray32, 0.5063656411097588d);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) doubleArray32);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException44 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) doubleArray32);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
    }

    @Test
    public void test11765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11765");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double2 = vector3D1.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double5 = vector3D4.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.add(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D6.add(vector3D7);
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.add((double) (short) 1, vector3D12);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation19.applyTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation45.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation58.applyTo(rotation64);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation52.applyInverseTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation67 = rotation38.applyTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation25.applyInverseTo(rotation67);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation67.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder70.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder70.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D72);
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D8.subtract(vector3D73);
        double double76 = vector3D8.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D8, 99.00505037623081d);
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D(2.8003881310882495d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D8.normalize();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-1.5707963267948966d) + "'", double76 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(vector3D80);
    }

    @Test
    public void test11766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11766");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double3 = vector3D2.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double6 = vector3D5.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.add(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double11 = vector3D10.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D17.add(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D5, (double) 100, vector3D10, (double) 1.0f, vector3D15, (double) 10L, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double25 = vector3D24.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double28 = vector3D27.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.add(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double33 = vector3D32.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D39.add(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D27, (double) 100, vector3D32, (double) 1.0f, vector3D37, (double) 10L, vector3D42);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D43, (double) 1.0f);
        double double46 = vector3D43.getY();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D5.subtract(0.577350269189626d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D5.negate();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D49.negate();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-99.0d) + "'", double46 == (-99.0d));
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
    }

    @Test
    public void test11767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11767");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.775557561562892E-17d, (-0.8716325380625687d), 0.9446247184833486d, 0.0d, false);
    }

    @Test
    public void test11768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11768");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(129.9856441884358d, 0.08598029251132339d);
    }

    @Test
    public void test11769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11769");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyTo(rotation39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        double[] doubleArray42 = rotation39.getAngles(rotationOrder41);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder43.getA2();
        double[] doubleArray46 = rotation39.getAngles(rotationOrder43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, 0.2980099775410749d, 3.141592653589793d, (double) 1);
        java.lang.String str55 = rotationOrder43.toString();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[2.034443935795702, -0.7297276562269669, 2.034443935795702]");
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.7853981633974483, 1.9106332362490182, 2.356194490192345]");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "XZX" + "'", str55, "XZX");
    }

    @Test
    public void test11770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11770");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-2.9356347564056654E-17d), 2.1862760354652844d, 0.5406374650606973d);
    }

    @Test
    public void test11771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11771");
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("hi!", throwable5);
        java.lang.Object[] objArray7 = mathException6.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException8 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", objArray7);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("hi!", throwable10);
        java.lang.Object[] objArray12 = mathException11.getArguments();
        java.lang.Object[] objArray13 = mathException11.getArguments();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray7, (java.lang.Throwable) mathException11);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation22.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation35.applyTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation29.applyInverseTo(rotation35);
        double double44 = rotation43.getQ2();
        double[][] doubleArray45 = rotation43.getMatrix();
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException47 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("", objArray7, (java.lang.Throwable) notARotationMatrixException47);
        java.lang.Object[] objArray49 = mathException48.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException50 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: Cardan angles singularity", objArray49);
        java.lang.Object[] objArray51 = notARotationMatrixException50.getArguments();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.577350269189626d + "'", double44 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
    }

    @Test
    public void test11772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11772");
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation8.applyTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation15.applyInverseTo(rotation21);
        double double30 = rotation29.getQ2();
        double[][] doubleArray31 = rotation29.getMatrix();
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray31);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException33 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray31);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("YXZ", (java.lang.Object[]) doubleArray31);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(doubleArray31, 0.5773502691896261d);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation36.revert();
        double double38 = rotation36.getQ2();
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.577350269189626d + "'", double30 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.5773502691896257d + "'", double38 == 0.5773502691896257d);
    }

    @Test
    public void test11773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11773");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1), 0.5773502691896258d, 3.141592653589793d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, 1.3834364814420919d, (-0.32355350711941916d), 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, 1.5077857260490912d, 0.16527500348741267d, Double.NaN);
        java.lang.String str18 = rotationOrder6.toString();
        double[] doubleArray19 = rotation5.getAngles(rotationOrder6);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder23.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder23.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder23.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder23.getA3();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, 0.7625584504796028d, (-0.004748774471446504d), 0.01934871530964257d);
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder23.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D(1.0000000000000002d, (double) (short) 1, (-1.1071487177940904d));
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D34.add(1.2831853071795876d, vector3D39);
        double double41 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D21.subtract((double) 10, vector3D39);
        double double43 = vector3D39.getY();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "YZY" + "'", str18, "YZY");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[2.3098248068755094, 2.467820091963933, 2.9261629491074794]");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0000000000000002d + "'", double41 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
    }

    @Test
    public void test11774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11774");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(99.57734949512052d, (-0.22984884706593015d), (-0.8610036570415699d), (-0.7853981633974482d), true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        double double7 = rotation6.getQ3();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-0.00788675629364101d) + "'", double7 == (-0.00788675629364101d));
    }

    @Test
    public void test11775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11775");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(1.8875769577836479d, (-0.01000247348769544d));
    }

    @Test
    public void test11776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11776");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.5565514292469029d), 0.6469193223286404d, 0.9247400258915713d, (-1.5966024872990625d), false);
        double double6 = rotation5.getAngle();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test11777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11777");
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("hi!", throwable5);
        java.lang.Object[] objArray7 = mathException6.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException8 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", objArray7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", objArray7);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation25.applyInverseTo(rotation31);
        double[][] doubleArray40 = rotation25.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(doubleArray40, (-0.0d));
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation50.applyTo(rotation56);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation70 = rotation63.applyTo(rotation69);
        org.apache.commons.math.geometry.Rotation rotation71 = rotation57.applyInverseTo(rotation63);
        double double72 = rotation71.getQ2();
        double[][] doubleArray73 = rotation71.getMatrix();
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray73);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("YXZ", (java.lang.Throwable) mathException74);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("Cardan angles singularity", (java.lang.Object[]) doubleArray40, (java.lang.Throwable) mathException74);
        java.lang.Object[] objArray77 = mathException76.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException78 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: ", objArray77);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException79 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", objArray77);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException((java.lang.Throwable) notARotationMatrixException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", objArray7, (java.lang.Throwable) mathException80);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) mathException81);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.577350269189626d + "'", double72 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[[1.0000000000000009, 0.0, 0.0], [0.0, 1.0000000000000009, 0.0], [0.0, 0.0, 1.0000000000000009]]");
    }

    @Test
    public void test11778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11778");
        java.lang.Throwable throwable2 = null;
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException("hi!", throwable2);
        java.lang.Object[] objArray4 = mathException3.getArguments();
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray4);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException5);
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", throwable9);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray11);
        java.lang.Object[] objArray13 = mathException12.getArguments();
        java.lang.String str14 = mathException12.getPattern();
        mathException5.addSuppressed((java.lang.Throwable) mathException12);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException12);
        java.lang.Throwable throwable20 = null;
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", throwable20);
        java.lang.Object[] objArray22 = mathException21.getArguments();
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException23);
        java.lang.Throwable throwable27 = null;
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", throwable27);
        java.lang.Object[] objArray29 = mathException28.getArguments();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray29);
        java.lang.Object[] objArray31 = mathException30.getArguments();
        java.lang.String str32 = mathException30.getPattern();
        mathException23.addSuppressed((java.lang.Throwable) mathException30);
        java.lang.String str34 = mathException30.getPattern();
        java.lang.String str35 = mathException30.getPattern();
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException30);
        mathException16.addSuppressed((java.lang.Throwable) mathException30);
        java.lang.Throwable[] throwableArray38 = mathException16.getSuppressed();
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str14, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str32, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str34, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str35, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(throwableArray38);
    }

    @Test
    public void test11779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11779");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation18.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray29 = rotation18.getAngles(rotationOrder28);
        java.lang.String str30 = rotationOrder28.toString();
        java.lang.String str31 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) (short) 0, 2.042774094458282d, 0.0d);
        double double36 = rotation35.getQ0();
        double double37 = rotation35.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double42 = vector3D41.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double45 = vector3D44.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.add(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D46.add(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double51 = vector3D50.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double54 = vector3D53.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.add(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.add(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D39, (double) (short) 0, vector3D48, (-1.0d), vector3D55, (double) (-1.0f), vector3D59);
        double double61 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double65 = vector3D64.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double68 = vector3D67.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.add(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double73 = vector3D72.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D72);
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder76.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder80.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D79.add(vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D67, (double) 100, vector3D72, (double) 1.0f, vector3D77, (double) 10L, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D39.add((double) (short) -1, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D72.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D88 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) (byte) 100);
        double double89 = vector3D88.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D90 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D72, vector3D88);
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D72, 0.30290544652768625d);
        org.apache.commons.math.geometry.Rotation rotation93 = rotation35.applyTo(rotation92);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "XZX" + "'", str30, "XZX");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "XZX" + "'", str31, "XZX");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.5221835341080563d + "'", double36 == 0.5221835341080563d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.5221835341080563d + "'", double37 == 0.5221835341080563d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.0d + "'", double89 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(rotation93);
    }

    @Test
    public void test11780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11780");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.35308830224237003d), 0.45262919047801364d, (-0.2652596881284668d), (-0.6725995937048762d), false);
        double double6 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA2();
        java.lang.String str10 = rotationOrder8.toString();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, 0.42053433528396517d, (-0.6571971191567034d), 0.42053433528396517d);
        double[] doubleArray15 = rotation7.getAngles(rotationOrder8);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, 1.032846587087449d, (-0.22615284229255458d), 3.0317837108771113d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 2.043451775084935d + "'", double6 == 2.043451775084935d);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "YZY" + "'", str10, "YZY");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.05196106409720879, 2.226770975924381, 1.2366478012672943]");
    }

    @Test
    public void test11781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11781");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'a', (double) (short) -1, (double) (short) 0);
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double9 = vector3D8.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D8.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D6.subtract(vector3D8);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D6, 0.47037064010186347d);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((-1.5707963267948966d), (double) 0L, 0.031397298386422245d, (double) ' ', true);
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation14.applyTo(rotation20);
        double double23 = rotation22.getQ1();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation4.applyInverseTo(rotation22);
        double double25 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation4.getAxis();
        double double27 = rotation4.getQ2();
        double double28 = rotation4.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.8610036570415694d + "'", double5 == 0.8610036570415694d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.9987969075985873d + "'", double21 == 0.9987969075985873d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-2.2835928143980874E-4d) + "'", double23 == (-2.2835928143980874E-4d));
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2.8003881310882495d + "'", double25 == 2.8003881310882495d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.0927489957179025d) + "'", double27 == (-0.0927489957179025d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-0.16977589786278133d) + "'", double28 == (-0.16977589786278133d));
    }

    @Test
    public void test11782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11782");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D13.add(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation12.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D18.orthogonal();
        double double20 = vector3D19.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D17.subtract(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double25 = vector3D24.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double28 = vector3D27.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.add(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double33 = vector3D32.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D39.add(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D27, (double) 100, vector3D32, (double) 1.0f, vector3D37, (double) 10L, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D32.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D21.add((double) ' ', vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double50 = vector3D49.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D45.subtract((double) (short) 0, vector3D51);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D45, (double) (byte) -1);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation6.applyTo(rotation54);
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, (-99.0d), (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation6.applyInverseTo(vector3D59);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation66.applyTo(rotation72);
        double double74 = rotation72.getQ3();
        double double75 = rotation72.getAngle();
        double double76 = rotation72.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = null;
        double[] doubleArray78 = rotation72.getAngles(rotationOrder77);
        org.apache.commons.math.geometry.Rotation rotation79 = rotation72.revert();
        org.apache.commons.math.geometry.Rotation rotation80 = rotation6.applyTo(rotation72);
        double[][] doubleArray81 = rotation72.getMatrix();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException85 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str86 = cardanEulerSingularityException85.getPattern();
        java.lang.Object[] objArray87 = cardanEulerSingularityException85.getArguments();
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException((java.lang.Throwable) cardanEulerSingularityException85);
        java.lang.Object[] objArray89 = cardanEulerSingularityException85.getArguments();
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", objArray89);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException91 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: hi!", objArray89);
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray81, (java.lang.Throwable) notARotationMatrixException91);
        java.lang.String str93 = notARotationMatrixException91.toString();
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.5773502691896258d + "'", double74 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 3.141592653589793d + "'", double75 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.5773502691896258d + "'", double76 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Cardan angles singularity" + "'", str86, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: hi!" + "'", str93, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: hi!");
    }

    @Test
    public void test11783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11783");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str4 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable throwable7 = null;
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("hi!", throwable7);
        java.lang.Object[] objArray9 = mathException8.getArguments();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException10);
        java.lang.Throwable throwable14 = null;
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", throwable14);
        java.lang.Object[] objArray16 = mathException15.getArguments();
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException17);
        mathException11.addSuppressed((java.lang.Throwable) mathException18);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) mathException11);
        java.lang.Throwable throwable22 = null;
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", throwable22);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) mathException23);
        java.lang.Object[] objArray25 = cardanEulerSingularityException3.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException26 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: hi!", objArray25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException((java.lang.Throwable) notARotationMatrixException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException27);
        java.lang.Throwable[] throwableArray29 = mathException28.getSuppressed();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Cardan angles singularity" + "'", str4, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(throwableArray29);
    }

    @Test
    public void test11784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11784");
        java.lang.Throwable throwable7 = null;
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("hi!", throwable7);
        java.lang.Object[] objArray9 = mathException8.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", objArray9);
        java.lang.Throwable throwable12 = null;
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", throwable12);
        java.lang.Object[] objArray14 = mathException13.getArguments();
        java.lang.Object[] objArray15 = mathException13.getArguments();
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray9, (java.lang.Throwable) mathException13);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation24.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation37.applyTo(rotation43);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation31.applyInverseTo(rotation37);
        double double46 = rotation45.getQ2();
        double[][] doubleArray47 = rotation45.getMatrix();
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray47);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException49 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray47);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("", objArray9, (java.lang.Throwable) notARotationMatrixException49);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException51 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: XZX", objArray9);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("YZY", (java.lang.Throwable) notARotationMatrixException51);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ZXY");
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("Cardan angles singularity", (java.lang.Throwable) mathException55);
        notARotationMatrixException51.addSuppressed((java.lang.Throwable) mathException56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: YZX", (java.lang.Throwable) notARotationMatrixException51);
        java.lang.Object[] objArray59 = notARotationMatrixException51.getArguments();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.577350269189626d + "'", double46 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
    }

    @Test
    public void test11785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11785");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.7398414052444958d, (-0.2111488607737022d), 0.0d, (-1.4168873294310442d), false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double7 = vector3D6.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.add(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D11.add(vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double16 = vector3D15.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double19 = vector3D18.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.add(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double24 = vector3D23.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D30.add(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D18, (double) 100, vector3D23, (double) 1.0f, vector3D28, (double) 10L, vector3D33);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(vector3D12, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D37.add(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D12.add((double) (byte) 0, vector3D40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D12.add(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D12.scalarMultiply((double) 1L);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double51 = vector3D50.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double54 = vector3D53.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.add(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.add(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double60 = vector3D59.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double63 = vector3D62.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.add(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D64.add(vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D48, (double) (short) 0, vector3D57, (-1.0d), vector3D64, (double) (-1.0f), vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D64.negate();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D46, vector3D70);
        double double72 = vector3D46.getDelta();
        double double73 = vector3D46.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation5.applyInverseTo(vector3D46);
        double double75 = vector3D74.getY();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.0947306098283005d) + "'", double75 == (-0.0947306098283005d));
    }

    @Test
    public void test11786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11786");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D3.add(vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D5.negate();
        double double8 = vector3D5.getX();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(vector3D2, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D10.add(vector3D12);
        double double14 = vector3D12.getZ();
        double double15 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D12.negate();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(vector3D16, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D16.scalarMultiply(0.16977589786278138d);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D20.negate();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D5.subtract(vector3D20);
        double double23 = vector3D20.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, 2.162171184425803d, 99.00505037623081d);
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D((double) ' ', 0.5773502691896258d);
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((-0.19151376815678886d), vector3D28, 0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D20.add(vector3D32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) (short) 1, (double) 0.0f, 3.9999999999999982d);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (-2.356194490192345d), (-0.5773502691896261d), (double) ' ');
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder46.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder46.getA1();
        double[] doubleArray50 = rotation45.getAngles(rotationOrder46);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation57.applyTo(rotation63);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) (byte) -1, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation70 = rotation64.applyTo(rotation69);
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder71.getA2();
        double[] doubleArray74 = rotation69.getAngles(rotationOrder71);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder71.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder71.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder71.getA1();
        java.lang.String str78 = rotationOrder71.toString();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, 0.8775825618903732d, 2.0597657905208595d, 140.36381300036012d);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder71.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder71.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D51, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = new org.apache.commons.math.geometry.Vector3D(0.011218123096554091d, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D34.add((-0.7136492029946184d), vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = new org.apache.commons.math.geometry.Vector3D((-0.010308060207285277d), vector3D86);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.16977589786278138d + "'", double23 == 0.16977589786278138d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-2.356194490192345, -0.5773502691896262, 0.5840734641020675]");
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "ZXY" + "'", str78, "ZXY");
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D87);
    }

    @Test
    public void test11787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11787");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double1 = vector3D0.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.add(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D5.add(vector3D6);
        double double8 = vector3D7.getDelta();
        double double9 = vector3D7.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA3();
        double double13 = vector3D12.getAlpha();
        double double14 = vector3D12.getZ();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(vector3D7, vector3D12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder16.getA2();
        java.lang.String str19 = rotationOrder16.toString();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder16.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D7, vector3D22);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.5707963267948966d) + "'", double9 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ZXY" + "'", str19, "ZXY");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
    }

    @Test
    public void test11788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11788");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.019348715309642568d, 1.3834364814420919d, 1.3061290504076808d, 2.042774094458282d, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D6.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double27 = vector3D26.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double30 = vector3D29.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.add(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation25.applyTo(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double35 = vector3D34.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double38 = vector3D37.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.add(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double43 = vector3D42.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D42);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder50.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D49.add(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D37, (double) 100, vector3D42, (double) 1.0f, vector3D47, (double) 10L, vector3D52);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D53, (double) 1.0f);
        double double56 = vector3D53.getY();
        double double57 = org.apache.commons.math.geometry.Vector3D.angle(vector3D31, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D12.subtract(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D6.add(2.9566862711546698d, vector3D31);
        double double60 = vector3D6.getX();
        double double61 = vector3D6.getDelta();
        double double62 = vector3D6.getAlpha();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-99.0d) + "'", double56 == (-99.0d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.4955786422231264d) + "'", double60 == (-0.4955786422231264d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.8209131287900484d) + "'", double61 == (-0.8209131287900484d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-2.384930042660514d) + "'", double62 == (-2.384930042660514d));
    }

    @Test
    public void test11789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11789");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.9994070475860579d, (-0.9253293489463692d), (-0.6666666666666669d), 1.5480028924187785d, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D6.add(vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double16 = vector3D15.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double19 = vector3D18.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.add(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double24 = vector3D23.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D30.add(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D18, (double) 100, vector3D23, (double) 1.0f, vector3D28, (double) 10L, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double39 = vector3D38.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double42 = vector3D41.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.add(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D43.add(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double48 = vector3D47.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double51 = vector3D50.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.add(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D52.add(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D36, (double) (short) 0, vector3D45, (-1.0d), vector3D52, (double) (-1.0f), vector3D56);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D6, vector3D11, vector3D23, vector3D57);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D11, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, 1.8523263596154362d);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D63);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, 3.9999999999999982d, (-2.356194490192345d), (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder65.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder65.getA2();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (-0.06295712545445845d), 1.3834364814420919d, 1.5077857260490912d);
        java.lang.String str77 = rotationOrder65.toString();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder65.getA2();
        double[] doubleArray79 = rotation64.getAngles(rotationOrder65);
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder80.getA2();
        java.lang.String str82 = rotationOrder80.toString();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder80.getA2();
        double[] doubleArray84 = rotation64.getAngles(rotationOrder80);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation5.applyInverseTo(rotation64);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "YXY" + "'", str77, "YXY");
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "ZXY" + "'", str82, "ZXY");
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(rotation85);
    }

    @Test
    public void test11790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11790");
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double6 = vector3D5.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double9 = vector3D8.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.add(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D10.add(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double15 = vector3D14.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double18 = vector3D17.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.add(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.add(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D3, (double) (short) 0, vector3D12, (-1.0d), vector3D19, (double) (-1.0f), vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double28 = vector3D27.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double31 = vector3D30.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.add(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double36 = vector3D35.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D35);
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder39.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D42.add(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D30, (double) 100, vector3D35, (double) 1.0f, vector3D40, (double) 10L, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double50 = vector3D49.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, vector3D19, (double) 10, vector3D30, 1.0d, vector3D49);
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D49.subtract(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.scalarMultiply(0.647536017209422d);
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((-0.9253293489463692d), (-0.42073549240394825d), (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D61.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) (byte) 0);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(vector3D65, (-0.0927489957179025d));
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D65.negate();
        double double69 = vector3D65.getDelta();
        double double70 = org.apache.commons.math.geometry.Vector3D.angle(vector3D62, vector3D65);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D62, 1.707013912709816d);
        double double73 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D57, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D(0.6608286241333786d, vector3D57);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.6558604987035976d + "'", double70 == 1.6558604987035976d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.6171119089645615d) + "'", double73 == (-0.6171119089645615d));
    }

    @Test
    public void test11791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11791");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException(throwable0);
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException1);
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException2);
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException2);
        java.lang.Class<?> wildcardClass5 = mathException2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test11792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11792");
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder3, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation13.applyTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyInverseTo(rotation26);
        double double35 = rotation26.getQ1();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation7.applyTo(rotation26);
        double[][] doubleArray37 = rotation26.getMatrix();
        java.lang.Throwable throwable40 = null;
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", throwable40);
        java.lang.Object[] objArray42 = mathException41.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException43 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", objArray42);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("Cardan angles singularity", (java.lang.Object[]) doubleArray37, (java.lang.Throwable) notARotationMatrixException43);
        java.lang.Throwable[] throwableArray45 = mathException44.getSuppressed();
        java.lang.Throwable throwable48 = null;
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("hi!", throwable48);
        java.lang.Object[] objArray50 = mathException49.getArguments();
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException51);
        java.lang.Throwable throwable55 = null;
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("hi!", throwable55);
        java.lang.Object[] objArray57 = mathException56.getArguments();
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException58);
        mathException52.addSuppressed((java.lang.Throwable) mathException59);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation68.applyTo(rotation74);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation88 = rotation81.applyTo(rotation87);
        org.apache.commons.math.geometry.Rotation rotation89 = rotation75.applyInverseTo(rotation81);
        double double90 = rotation89.getQ2();
        double[][] doubleArray91 = rotation89.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException92 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray91);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException93 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Object[]) doubleArray91);
        mathException52.addSuppressed((java.lang.Throwable) notARotationMatrixException93);
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) throwableArray45, (java.lang.Throwable) mathException52);
        org.apache.commons.math.MathException mathException96 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) mathException95);
        org.apache.commons.math.MathException mathException97 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException96);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.5773502691896258d + "'", double35 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.577350269189626d + "'", double90 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test11793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11793");
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double7 = vector3D6.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.add(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D18.add(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D6, (double) 100, vector3D11, (double) 1.0f, vector3D16, (double) 10L, vector3D21);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D22, (double) 1.0f);
        double double25 = vector3D22.getY();
        double double26 = vector3D22.getY();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double33 = vector3D32.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double36 = vector3D35.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.add(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D37.add(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double42 = vector3D41.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double45 = vector3D44.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.add(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D46.add(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D30, (double) (short) 0, vector3D39, (-1.0d), vector3D46, (double) (-1.0f), vector3D50);
        double double52 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double56 = vector3D55.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double59 = vector3D58.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.add(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double64 = vector3D63.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D63);
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder67.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D70.add(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D58, (double) 100, vector3D63, (double) 1.0f, vector3D68, (double) 10L, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D30.add((double) (short) -1, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D63.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D76.scalarMultiply(1.3834364814420919d);
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D(0.031397298386422245d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D22.subtract(9.799851417283954E-4d, vector3D78);
        double double81 = vector3D22.getY();
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.plusK;
        double double83 = org.apache.commons.math.geometry.Vector3D.angle(vector3D22, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D(1.6093339001265161d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D(0.4620469383190093d, vector3D82);
        org.apache.commons.math.geometry.RotationOrder rotationOrder86 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder86.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder86.getA3();
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(rotationOrder86, 0.6245426019590317d, (double) (-1L), (-0.9386072654111782d));
        java.lang.String str93 = rotationOrder86.toString();
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotationOrder86.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D85.add(vector3D94);
        double double96 = vector3D95.getDelta();
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-99.0d) + "'", double25 == (-99.0d));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-99.0d) + "'", double26 == (-99.0d));
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-99.0d) + "'", double81 == (-99.0d));
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.5707963267948966d + "'", double83 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "XZX" + "'", str93, "XZX");
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.43282687775975853d + "'", double96 == 0.43282687775975853d);
    }

    @Test
    public void test11794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11794");
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double7 = vector3D6.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.add(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D18.add(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D6, (double) 100, vector3D11, (double) 1.0f, vector3D16, (double) 10L, vector3D21);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D22, (double) 1.0f);
        double double25 = rotation24.getQ1();
        double[][] doubleArray26 = rotation24.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException27 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: ", (java.lang.Object[]) doubleArray26);
        java.lang.Throwable[] throwableArray28 = notARotationMatrixException27.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException29 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: YZY", (java.lang.Object[]) throwableArray28);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-0.0d) + "'", double25 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(throwableArray28);
    }

    @Test
    public void test11795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11795");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D2.add(vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D4.negate();
        double double7 = vector3D4.getX();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D1, vector3D4);
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, 1.3834364814420919d, (-0.32355350711941916d), 1.5707963267948966d);
        double[] doubleArray14 = rotation8.getAngles(rotationOrder9);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation8.getAxis();
        double[][] doubleArray16 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(doubleArray16, 0.5773502691896257d);
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((-0.7297276562269664d), (-0.5773502691896261d));
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D22.negate();
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D((-0.046357877526357234d), 1.2309594173407747d);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D22, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D(4.147143657260655d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation18.applyTo(vector3D26);
        java.lang.Class<?> wildcardClass30 = vector3D26.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 1.5707963267948963, 0.0]");
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test11796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11796");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double2 = vector3D1.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double5 = vector3D4.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.add(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D6.add(vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double11 = vector3D10.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double14 = vector3D13.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.add(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double19 = vector3D18.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D25.add(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D13, (double) 100, vector3D18, (double) 1.0f, vector3D23, (double) 10L, vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D7, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D32.add(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D7.add((double) (byte) 0, vector3D35);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D7.add(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D7.scalarMultiply((double) 1L);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D41.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((-99.0d), vector3D44);
        double double46 = vector3D45.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D45.scalarMultiply((double) (short) 0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.0d) + "'", double46 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D48);
    }

    @Test
    public void test11797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11797");
        java.lang.Throwable throwable6 = null;
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("hi!", throwable6);
        java.lang.Object[] objArray8 = mathException7.getArguments();
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("YXZ", (java.lang.Throwable) mathException9);
        java.lang.Throwable throwable12 = null;
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", throwable12);
        java.lang.Object[] objArray14 = mathException13.getArguments();
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException13);
        mathException9.addSuppressed((java.lang.Throwable) mathException15);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("");
        mathException9.addSuppressed((java.lang.Throwable) mathException18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("YXY", (java.lang.Throwable) mathException18);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException18);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException21);
        java.lang.Throwable[] throwableArray23 = mathException21.getSuppressed();
        java.lang.Throwable[] throwableArray24 = mathException21.getSuppressed();
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Throwable) mathException21);
        java.lang.String str26 = mathException21.getPattern();
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    }

    @Test
    public void test11798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11798");
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!");
        java.lang.Object[] objArray5 = mathException4.getArguments();
        java.lang.Throwable throwable8 = null;
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("hi!", throwable8);
        java.lang.Object[] objArray10 = mathException9.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", objArray10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException((java.lang.Throwable) notARotationMatrixException11);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str15 = cardanEulerSingularityException14.getPattern();
        java.lang.Throwable throwable18 = null;
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", throwable18);
        java.lang.Object[] objArray20 = mathException19.getArguments();
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException21);
        java.lang.Throwable throwable25 = null;
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", throwable25);
        java.lang.Object[] objArray27 = mathException26.getArguments();
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException28);
        mathException22.addSuppressed((java.lang.Throwable) mathException29);
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) mathException22);
        java.lang.String str32 = mathException22.getPattern();
        mathException12.addSuppressed((java.lang.Throwable) mathException22);
        mathException4.addSuppressed((java.lang.Throwable) mathException12);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException12);
        java.lang.Object[] objArray36 = mathException35.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException37 = new org.apache.commons.math.geometry.NotARotationMatrixException("", objArray36);
        java.lang.String str38 = notARotationMatrixException37.getPattern();
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: XZX", (java.lang.Throwable) notARotationMatrixException37);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Throwable) notARotationMatrixException37);
        java.lang.Object[] objArray41 = notARotationMatrixException37.getArguments();
        java.lang.Throwable throwable50 = null;
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("hi!", throwable50);
        java.lang.Object[] objArray52 = mathException51.getArguments();
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray52);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("YXZ", (java.lang.Throwable) mathException53);
        java.lang.Throwable throwable56 = null;
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("hi!", throwable56);
        java.lang.Object[] objArray58 = mathException57.getArguments();
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException57);
        mathException53.addSuppressed((java.lang.Throwable) mathException59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("Cardan angles singularity", (java.lang.Throwable) mathException59);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity", (java.lang.Throwable) mathException59);
        java.lang.String str63 = mathException62.getPattern();
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException62);
        java.lang.Throwable[] throwableArray65 = mathException62.getSuppressed();
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("Cardan angles singularity", (java.lang.Object[]) throwableArray65);
        java.lang.Throwable[] throwableArray67 = mathException66.getSuppressed();
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity", (java.lang.Throwable) mathException66);
        notARotationMatrixException37.addSuppressed((java.lang.Throwable) mathException66);
        java.lang.Throwable[] throwableArray70 = notARotationMatrixException37.getSuppressed();
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Cardan angles singularity" + "'", str15, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str32, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity" + "'", str63, "org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(throwableArray70);
    }

    @Test
    public void test11799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11799");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.07661628235531008d), 0.7088611841255448d);
    }

    @Test
    public void test11800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11800");
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation9.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation22.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation16.applyInverseTo(rotation22);
        double double31 = rotation30.getQ2();
        double[][] doubleArray32 = rotation30.getMatrix();
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray32);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException34 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray32);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException35 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", (java.lang.Object[]) doubleArray32);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(doubleArray32, (double) 0L);
        double[][] doubleArray38 = rotation37.getMatrix();
        double[][] doubleArray39 = rotation37.getMatrix();
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) doubleArray39);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.577350269189626d + "'", double31 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test11801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11801");
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double5 = vector3D4.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double8 = vector3D7.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.add(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.add(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D7, (double) 100, vector3D12, (double) 1.0f, vector3D17, (double) 10L, vector3D22);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D23, (double) 1.0f);
        double double26 = rotation25.getQ1();
        double[][] doubleArray27 = rotation25.getMatrix();
        java.lang.Throwable throwable29 = null;
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", throwable29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray27, (java.lang.Throwable) mathException30);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(doubleArray27, (double) 0);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException34 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: ZXZ", (java.lang.Object[]) doubleArray27);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(doubleArray27, 0.46591287509064955d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException37 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: Cardan angles singularity", (java.lang.Object[]) doubleArray27);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-0.0d) + "'", double26 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray27);
    }

    @Test
    public void test11802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11802");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA3();
        double double7 = vector3D6.getNorm();
        double double8 = vector3D6.getNorm();
        double double9 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D4, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D6.negate();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "XZX" + "'", str3, "XZX");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
    }

    @Test
    public void test11803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11803");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1), 0.5773502691896258d, 3.141592653589793d, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double7 = vector3D6.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.add(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation5.applyInverseTo(vector3D11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        double double15 = vector3D14.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation5.applyInverseTo(vector3D14);
        double[][] doubleArray17 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D18.orthogonal();
        double double20 = vector3D18.getNorm();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation27.applyTo(rotation33);
        double double35 = rotation27.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation27.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double42 = vector3D41.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double45 = vector3D44.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.add(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D46.add(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double51 = vector3D50.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double54 = vector3D53.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.add(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.add(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D39, (double) (short) 0, vector3D48, (-1.0d), vector3D55, (double) (-1.0f), vector3D59);
        double double61 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double65 = vector3D64.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double68 = vector3D67.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.add(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double73 = vector3D72.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D72);
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder76.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder80.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D79.add(vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D67, (double) 100, vector3D72, (double) 1.0f, vector3D77, (double) 10L, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D39.add((double) (short) -1, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D72.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D85.scalarMultiply(1.3834364814420919d);
        org.apache.commons.math.geometry.Vector3D vector3D88 = new org.apache.commons.math.geometry.Vector3D(0.42073549240394825d, vector3D36, (double) 100L, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D88.orthogonal();
        double double90 = vector3D88.getX();
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D88);
        org.apache.commons.math.geometry.Rotation rotation92 = rotation91.revert();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.9999999999999999d + "'", double20 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 3.141592653589793d + "'", double35 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.2429117497970493d) + "'", double90 == (-0.2429117497970493d));
        org.junit.Assert.assertNotNull(rotation92);
    }

    @Test
    public void test11804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11804");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.47163985337222414d, 1.6471600810786846d, 2.073048418254255d);
    }

    @Test
    public void test11805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11805");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.45623967291561024d), 1.5697862261284274d, (-0.010308060207285277d));
    }

    @Test
    public void test11806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11806");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation19.applyTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation13.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation19.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray30 = rotation19.getAngles(rotationOrder29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder29.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double34 = vector3D33.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double37 = vector3D36.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.add(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.add(vector3D39);
        double double41 = vector3D40.getDelta();
        double double42 = vector3D40.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((-0.8662263958472479d), vector3D31, (-0.023823288661546024d), vector3D40);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D31, 99.00000000000017d);
        double double46 = vector3D31.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D31.negate();
        double double48 = vector3D31.getDelta();
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-1.5707963267948966d) + "'", double42 == (-1.5707963267948966d));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.5707963267948966d + "'", double48 == 1.5707963267948966d);
    }

    @Test
    public void test11807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11807");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder3.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D5.scalarMultiply((double) (short) 10);
        double double8 = org.apache.commons.math.geometry.Vector3D.angle(vector3D2, vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.5707963267948966d + "'", double8 == 1.5707963267948966d);
    }

    @Test
    public void test11808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11808");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) (byte) -1, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation12.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder19.getA2();
        double[] doubleArray22 = rotation17.getAngles(rotationOrder19);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D23.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double27 = vector3D26.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D26.normalize();
        double double30 = org.apache.commons.math.geometry.Vector3D.angle(vector3D23, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation17.applyInverseTo(vector3D26);
        double double32 = vector3D26.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.scalarMultiply(0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D34.negate();
        double double36 = vector3D35.getX();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.5707963267948966d + "'", double30 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.0d) + "'", double36 == (-0.0d));
    }

    @Test
    public void test11809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11809");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) -1, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        java.lang.String str7 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 3.0616423777021167d, 1.5480028924187785d, 0.004275838381611715d);
        java.lang.Class<?> wildcardClass12 = rotationOrder0.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ZYX" + "'", str7, "ZYX");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test11810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11810");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D13.add(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation12.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D18.orthogonal();
        double double20 = vector3D19.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D17.subtract(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double25 = vector3D24.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double28 = vector3D27.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.add(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double33 = vector3D32.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D39.add(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D27, (double) 100, vector3D32, (double) 1.0f, vector3D37, (double) 10L, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D32.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D21.add((double) ' ', vector3D45);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder48.getA2();
        double double51 = vector3D50.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.negate();
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D(0.42073549240394825d, vector3D46, (-0.0927489957179025d), vector3D50);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D53, 0.647536017209422d);
        double double56 = org.apache.commons.math.geometry.Vector3D.angle(vector3D5, vector3D53);
        double double57 = vector3D53.getY();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "XZX" + "'", str3, "XZX");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.5707766465570878d + "'", double56 == 1.5707766465570878d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-1345.9337537615413d) + "'", double57 == (-1345.9337537615413d));
    }

    @Test
    public void test11811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11811");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation19.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation6.applyTo(rotation34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray37 = rotation35.getAngles(rotationOrder36);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (-1.0d), (double) '4', (double) 'a');
        double[] doubleArray47 = rotation35.getAngles(rotationOrder38);
        double[][] doubleArray48 = rotation35.getMatrix();
        java.lang.Throwable throwable51 = null;
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("hi!", throwable51);
        java.lang.Object[] objArray53 = mathException52.getArguments();
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException54);
        java.lang.Throwable throwable58 = null;
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("hi!", throwable58);
        java.lang.Object[] objArray60 = mathException59.getArguments();
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray60);
        java.lang.Object[] objArray62 = mathException61.getArguments();
        java.lang.String str63 = mathException61.getPattern();
        mathException54.addSuppressed((java.lang.Throwable) mathException61);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("YZY", (java.lang.Object[]) doubleArray48, (java.lang.Throwable) mathException61);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(doubleArray48, 2.56094043263594d);
        double double68 = rotation67.getAngle();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation67.revert();
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.7853981633974483, 1.9106332362490182, 2.356194490192345]");
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[2.034443935795702, -0.7297276562269669, 2.034443935795702]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str63, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 3.141592653589793d + "'", double68 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotation69);
    }

    @Test
    public void test11812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11812");
        java.lang.Throwable throwable3 = null;
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("hi!", throwable3);
        java.lang.Object[] objArray5 = mathException4.getArguments();
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray5);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("YXZ", (java.lang.Throwable) mathException6);
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", throwable9);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException10);
        mathException6.addSuppressed((java.lang.Throwable) mathException12);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("");
        mathException6.addSuppressed((java.lang.Throwable) mathException15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException6);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException6);
        java.lang.Object[] objArray19 = mathException6.getArguments();
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
    }

    @Test
    public void test11813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11813");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.4651641724698114d), 1.9184977310046263d, 100.00499987500626d);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyInverseTo(rotation25);
        double double41 = rotation25.getQ1();
        double double42 = rotation25.getQ2();
        double double43 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation5.applyTo(rotation25);
        double double45 = rotation5.getQ3();
        double double46 = rotation5.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.5773502691896258d + "'", double12 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1.0000000000000002d) + "'", double43 == (-1.0000000000000002d));
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.03699410820048005d) + "'", double45 == (-0.03699410820048005d));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.883119989427291d + "'", double46 == 1.883119989427291d);
    }

    @Test
    public void test11814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11814");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D2.add(vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D4.negate();
        double double7 = vector3D4.getX();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D1, vector3D4);
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, 1.3834364814420919d, (-0.32355350711941916d), 1.5707963267948966d);
        double[] doubleArray14 = rotation8.getAngles(rotationOrder9);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation8.getAxis();
        double[][] doubleArray16 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(doubleArray16, 0.5773502691896257d);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation18.revert();
        double double20 = rotation19.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 1.5707963267948963, 0.0]");
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    }

    @Test
    public void test11815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11815");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.009999666686665238d, (double) (-1.0f), 31990.023343686935d, (-0.479425538604203d), false);
        double double6 = rotation5.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.479425538604203d) + "'", double6 == (-0.479425538604203d));
    }

    @Test
    public void test11816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11816");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 3.9999999999999982d, (-2.356194490192345d), (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        java.lang.String str8 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA2();
        java.lang.String str11 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "YXY" + "'", str8, "YXY");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "YXY" + "'", str11, "YXY");
    }

    @Test
    public void test11817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11817");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D1 = vector3D0.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D0.scalarMultiply((double) (short) -1);
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation9.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation22.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation35.applyTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation29.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation15.applyTo(rotation43);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        double[] doubleArray46 = rotation43.getAngles(rotationOrder45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation43.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D0.subtract(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D(3199.0023343686935d, 1.3957812166567987d);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.add(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D47.negate();
        double double54 = vector3D53.getZ();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[2.034443935795702, -0.7297276562269669, 2.034443935795702]");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.5773502691896258d + "'", double54 == 0.5773502691896258d);
    }

    @Test
    public void test11818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11818");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA2();
        double[] doubleArray29 = rotation18.getAngles(rotationOrder27);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, 3.9999999999999982d, (-100.0d), (-2.2835928143980874E-4d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, 3.9999999999999982d, (-2.356194490192345d), (double) (short) 100);
        java.lang.String str39 = rotationOrder34.toString();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder34.getA2();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (-0.47037064010186347d), (-1.1071487177940904d), 0.479425538604203d);
        double[] doubleArray45 = rotation33.getAngles(rotationOrder34);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, 0.4153930032513889d, 0.5365234859057819d, (-2.7755575615628926E-17d));
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder34.getA2();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-2.0344439357957027, 0.7297276562269666, -2.0344439357957027]");
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "YXY" + "'", str39, "YXY");
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.9109152665853141, 2.1695933797106317, -1.9833037838551173]");
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D51);
    }

    @Test
    public void test11819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11819");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double double6 = rotation5.getQ0();
        double double7 = rotation5.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation25.applyInverseTo(rotation31);
        double double40 = rotation31.getQ1();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyTo(rotation31);
        double double42 = rotation41.getQ3();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation5.applyInverseTo(rotation41);
        double double44 = rotation5.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D();
        double double46 = vector3D45.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D45.scalarMultiply(1.3834364814420919d);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation5.applyInverseTo(vector3D48);
        double double50 = rotation5.getQ0();
        double double51 = rotation5.getQ0();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5773502691896258d + "'", double7 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.5773502691896258d + "'", double40 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.4231361643575562d) + "'", double42 == (-0.4231361643575562d));
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.5773502691896258d + "'", double44 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
    }

    @Test
    public void test11820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11820");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((-0.0927489957179025d), vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D5.add(vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D7.negate();
        double double10 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double16 = vector3D15.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.add(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.add(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double22 = vector3D21.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double25 = vector3D24.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.add(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double30 = vector3D29.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D29);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D36.add(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D24, (double) 100, vector3D29, (double) 1.0f, vector3D34, (double) 10L, vector3D39);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D7.add((double) 100.0f, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D3.subtract(vector3D7);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation49.applyTo(rotation55);
        double double57 = rotation55.getQ3();
        double double58 = rotation55.getAngle();
        double double59 = rotation55.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = null;
        double[] doubleArray61 = rotation55.getAngles(rotationOrder60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation55.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D3.subtract(vector3D62);
        double double64 = vector3D3.getX();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.5773502691896258d + "'", double57 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 3.141592653589793d + "'", double58 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.5773502691896258d + "'", double59 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
    }

    @Test
    public void test11821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11821");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-1000.0d), (-0.14884238826640267d));
        double double3 = vector3D2.getY();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-0.81773706976439d) + "'", double3 == (-0.81773706976439d));
    }

    @Test
    public void test11822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11822");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation19.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation40.applyTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyInverseTo(rotation53);
        double double62 = rotation61.getAngle();
        double[][] doubleArray63 = rotation61.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation19.applyInverseTo(rotation61);
        double[][] doubleArray65 = rotation61.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(doubleArray65, 1.0d);
        double double68 = rotation67.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder69, 99.0d, (double) (short) 0, 0.4153930032513889d);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder69.getA1();
        java.lang.String str75 = rotationOrder69.toString();
        double[] doubleArray76 = rotation67.getAngles(rotationOrder69);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder69.getA3();
        double double78 = vector3D77.getDelta();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5773502691896258d + "'", double6 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 3.141592653589793d + "'", double62 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 4.80740671595891E-17d + "'", double68 == 4.80740671595891E-17d);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "XYZ" + "'", str75, "XYZ");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-2.0344439357957027, 0.7297276562269664, -2.0344439357957027]");
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.5707963267948966d + "'", double78 == 1.5707963267948966d);
    }

    @Test
    public void test11823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11823");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D2 = vector3D1.negate();
        double double3 = vector3D2.getNorm();
        double double4 = vector3D2.getZ();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-0.0d) + "'", double4 == (-0.0d));
    }

    @Test
    public void test11824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11824");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyTo(rotation39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        double[] doubleArray42 = rotation39.getAngles(rotationOrder41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder41.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder41.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder41.getA3();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[2.034443935795702, -0.7297276562269669, 2.034443935795702]");
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
    }

    @Test
    public void test11825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11825");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation18.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray29 = rotation18.getAngles(rotationOrder28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (-0.7297276562269664d), (-0.5773502691896258d), (double) (short) 1);
        java.lang.String str35 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, 1.9184977310046263d, 1.8171966110024502d, 0.8497129515397744d);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (-1.2853901849197045d), 100.00499987500626d, 0.04528040795134451d);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder28.getA2();
        java.lang.String str46 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D47.orthogonal();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "XZX" + "'", str35, "XZX");
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "XZX" + "'", str46, "XZX");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
    }

    @Test
    public void test11826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11826");
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation9.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation22.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation16.applyInverseTo(rotation22);
        double double31 = rotation30.getQ2();
        double[][] doubleArray32 = rotation30.getMatrix();
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", (java.lang.Object[]) doubleArray32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("Euler angles singularity", (java.lang.Object[]) doubleArray32);
        java.lang.Throwable throwable39 = null;
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("hi!", throwable39);
        java.lang.Object[] objArray41 = mathException40.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException42 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", objArray41);
        java.lang.Throwable throwable45 = null;
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("hi!", throwable45);
        java.lang.Object[] objArray47 = mathException46.getArguments();
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray47);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException48);
        java.lang.Throwable throwable52 = null;
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("hi!", throwable52);
        java.lang.Object[] objArray54 = mathException53.getArguments();
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray54);
        java.lang.Object[] objArray56 = mathException55.getArguments();
        java.lang.String str57 = mathException55.getPattern();
        mathException48.addSuppressed((java.lang.Throwable) mathException55);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException55);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("ZXY", objArray41, (java.lang.Throwable) mathException59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("ZXY", objArray41);
        java.lang.Throwable[] throwableArray62 = mathException61.getSuppressed();
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("XYZ", (java.lang.Object[]) doubleArray32, (java.lang.Throwable) mathException61);
        java.lang.Throwable throwable67 = null;
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("hi!", throwable67);
        java.lang.Object[] objArray69 = mathException68.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException70 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", objArray69);
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException((java.lang.Throwable) notARotationMatrixException70);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Throwable) notARotationMatrixException70);
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) doubleArray32, (java.lang.Throwable) notARotationMatrixException70);
        java.lang.String str74 = notARotationMatrixException70.getPattern();
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.577350269189626d + "'", double31 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str57, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "YXZ" + "'", str74, "YXZ");
    }

    @Test
    public void test11827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11827");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double2 = vector3D1.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double5 = vector3D4.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.add(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D6.add(vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double11 = vector3D10.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double14 = vector3D13.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.add(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double19 = vector3D18.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D25.add(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D13, (double) 100, vector3D18, (double) 1.0f, vector3D23, (double) 10L, vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D7, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D32.add(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D7.add((double) (byte) 0, vector3D35);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D7.add(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D7.scalarMultiply((double) 1L);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D0.add(vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D42.negate();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D50.add(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation49.applyInverseTo(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D55.orthogonal();
        double double57 = vector3D56.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D54.subtract(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double62 = vector3D61.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double65 = vector3D64.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.add(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double70 = vector3D69.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D69);
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder73.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder77.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D76.add(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D64, (double) 100, vector3D69, (double) 1.0f, vector3D74, (double) 10L, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D69.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D58.add((double) ' ', vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double87 = vector3D86.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D88 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D82.subtract((double) (short) 0, vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D82.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D43.add(vector3D90);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
    }

    @Test
    public void test11828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11828");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D12.add(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation11.applyInverseTo(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D17.orthogonal();
        double double19 = vector3D18.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D16.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double24 = vector3D23.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double27 = vector3D26.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.add(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double32 = vector3D31.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder39.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D38.add(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D26, (double) 100, vector3D31, (double) 1.0f, vector3D36, (double) 10L, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D31.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D20.add((double) ' ', vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double49 = vector3D48.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D44.subtract((double) (short) 0, vector3D50);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D44, (double) (byte) -1);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation5.applyTo(rotation53);
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, (-99.0d), (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation5.applyInverseTo(vector3D58);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder67.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D66.add(vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation65.applyInverseTo(vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D71.orthogonal();
        double double73 = vector3D72.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D70.subtract(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation5.applyTo(vector3D72);
        double double76 = rotation5.getQ2();
        double double77 = rotation5.getQ2();
        double double78 = rotation5.getQ2();
        double double79 = rotation5.getAngle();
        double double80 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation81 = rotation5.revert();
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.9994070475860579d + "'", double76 == 0.9994070475860579d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9994070475860579d + "'", double77 == 0.9994070475860579d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.9994070475860579d + "'", double78 == 0.9994070475860579d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 3.1216041798823833d + "'", double79 == 3.1216041798823833d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.031397298386422245d + "'", double80 == 0.031397298386422245d);
        org.junit.Assert.assertNotNull(rotation81);
    }

    @Test
    public void test11829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11829");
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation8.applyTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation15.applyInverseTo(rotation21);
        double double30 = rotation29.getQ2();
        double[][] doubleArray31 = rotation29.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException32 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray31);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException33 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Object[]) doubleArray31);
        java.lang.Throwable throwable38 = null;
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("hi!", throwable38);
        java.lang.Object[] objArray40 = mathException39.getArguments();
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray40);
        java.lang.Object[] objArray42 = mathException41.getArguments();
        java.lang.Throwable throwable44 = null;
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("hi!", throwable44);
        java.lang.Object[] objArray46 = mathException45.getArguments();
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException45);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("hi!", objArray42, (java.lang.Throwable) mathException47);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation55.applyTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation68.applyTo(rotation74);
        org.apache.commons.math.geometry.Rotation rotation76 = rotation62.applyInverseTo(rotation68);
        double[][] doubleArray77 = rotation62.getMatrix();
        java.lang.Throwable throwable79 = null;
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("hi!", throwable79);
        java.lang.Object[] objArray81 = mathException80.getArguments();
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException80);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) doubleArray77, (java.lang.Throwable) mathException82);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray42, (java.lang.Throwable) mathException83);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: Cardan angles singularity", (java.lang.Object[]) doubleArray31, (java.lang.Throwable) mathException83);
        java.lang.String str86 = mathException85.getPattern();
        java.lang.String str87 = mathException85.getPattern();
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.577350269189626d + "'", double30 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "org.apache.commons.math.MathException: Cardan angles singularity" + "'", str86, "org.apache.commons.math.MathException: Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "org.apache.commons.math.MathException: Cardan angles singularity" + "'", str87, "org.apache.commons.math.MathException: Cardan angles singularity");
    }

    @Test
    public void test11830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11830");
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation8.applyTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation34.applyTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation47.applyTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation41.applyInverseTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation27.applyTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation14.applyInverseTo(rotation56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double60 = vector3D59.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double63 = vector3D62.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.add(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double68 = vector3D67.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D67);
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder75.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D74.add(vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D62, (double) 100, vector3D67, (double) 1.0f, vector3D72, (double) 10L, vector3D77);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(vector3D78, (double) 1.0f);
        double double81 = rotation80.getQ1();
        double[][] doubleArray82 = rotation80.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation83 = rotation14.applyInverseTo(rotation80);
        double[][] doubleArray84 = rotation83.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(doubleArray84, 3.141592653589793d);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException", (java.lang.Object[]) doubleArray84);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", (java.lang.Throwable) mathException87);
        java.lang.Object[] objArray89 = mathException87.getArguments();
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("XYX", objArray89);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.0d) + "'", double81 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[[0.38087988791588456, 0.6666666666666667, 0.6406918655147255], [0.9211821937840243, -0.33333333333333326, -0.2007791192931712], [0.07971120897612771, 0.6666666666666669, -0.7410814251613109]]");
    }

    @Test
    public void test11831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11831");
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation9.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation22.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation16.applyInverseTo(rotation22);
        double[][] doubleArray31 = rotation16.getMatrix();
        java.lang.Throwable throwable33 = null;
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", throwable33);
        java.lang.Object[] objArray35 = mathException34.getArguments();
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException34);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) doubleArray31, (java.lang.Throwable) mathException36);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Throwable) mathException36);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException38);
        java.lang.Throwable[] throwableArray40 = mathException38.getSuppressed();
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", (java.lang.Object[]) throwableArray40);
        java.lang.Object[] objArray42 = mathException41.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException43 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", objArray42);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
    }

    @Test
    public void test11832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11832");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double1 = vector3D0.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.add(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D5.add(vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.add(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double18 = vector3D17.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D24.add(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D12, (double) 100, vector3D17, (double) 1.0f, vector3D22, (double) 10L, vector3D27);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D6, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D31.add(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D6.add((double) (byte) 0, vector3D34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D6.add(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D6.scalarMultiply((double) 1L);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D40.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D43.negate();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        double double52 = rotation51.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D53.add(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation51.applyTo(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D43.subtract(0.23216520467998758d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((-1.5707963267948966d), 0.6358754505939606d, 0.4546487134128409d);
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D(2.77555756156289E-17d, 2.05109822686088d, 1.5707963267948966d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder67, 3.9999999999999982d, (-2.356194490192345d), (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder67.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder67.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D75.normalize();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D43, vector3D62, vector3D66, vector3D75);
        org.apache.commons.math.geometry.Rotation rotation78 = rotation77.revert();
        org.apache.commons.math.geometry.Rotation rotation79 = rotation77.revert();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.031397298386422245d + "'", double52 == 0.031397298386422245d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(rotation79);
    }

    @Test
    public void test11833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11833");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation18);
        double double27 = rotation18.getQ1();
        double double28 = rotation18.getQ3();
        double double29 = rotation18.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (byte) 1, (double) (-1L), Double.NaN);
        double[] doubleArray35 = rotation18.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder30.getA2();
        java.lang.String str37 = rotationOrder30.toString();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, 0.9159707243533436d, 0.6469193223286404d, 2.162171184425803d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.5773502691896258d + "'", double27 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.5773502691896258d + "'", double28 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5773502691896258d + "'", double29 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[2.356194490192345, 1.9106332362490184, 0.7853981633974483]");
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "YZY" + "'", str37, "YZY");
    }

    @Test
    public void test11834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11834");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.5707963267948966d), (double) 0L, 0.031397298386422245d, (double) ' ', true);
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        double[] doubleArray9 = rotation5.getAngles(rotationOrder8);
        double double10 = rotation5.getQ0();
        double double11 = rotation5.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder12.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder12.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder12.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder12.getA3();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, 0.7625584504796028d, (-0.004748774471446504d), 0.01934871530964257d);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder12.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder12.getA3();
        double[] doubleArray25 = rotation5.getAngles(rotationOrder12);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9987969075985873d + "'", double6 == 0.9987969075985873d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 9.799851417283954E-4d + "'", double7 == 9.799851417283954E-4d);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[3.0925446379943895, 0.001959970597097145, -0.04904801559540395]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-0.049028328552186334d) + "'", double10 == (-0.049028328552186334d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[3.043496716456538, 9.60940671577312E-5, 0.0019576135174841835]");
    }

    @Test
    public void test11835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11835");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation11.revert();
        double double14 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D(100.49963690658076d, 0.9184977310046263d, (-0.10170265737575321d));
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D18.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation13.applyInverseTo(vector3D19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder21.getA3();
        java.lang.String str24 = rotationOrder21.toString();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder21.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA2();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(vector3D25, vector3D27);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation13.applyTo(rotation28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D30.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D30.scalarMultiply((double) (short) -1);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D34.add(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D36.negate();
        double double39 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D33, vector3D36);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D36, 1.5480028924187776d);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation28.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.scalarMultiply(2.468088770304362d);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D44, 1.032846587087449d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 3.141592653589793d + "'", double14 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "XZX" + "'", str24, "XZX");
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
    }

    @Test
    public void test11836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11836");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 3.9999999999999982d, (-2.356194490192345d), (double) (short) 100);
        java.lang.String str5 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D7.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D7.add(0.0d, vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "YXY" + "'", str5, "YXY");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
    }

    @Test
    public void test11837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11837");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double3 = vector3D2.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double6 = vector3D5.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.add(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double11 = vector3D10.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D17.add(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D5, (double) 100, vector3D10, (double) 1.0f, vector3D15, (double) 10L, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double25 = vector3D24.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double28 = vector3D27.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.add(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double33 = vector3D32.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D39.add(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D27, (double) 100, vector3D32, (double) 1.0f, vector3D37, (double) 10L, vector3D42);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D43, (double) 1.0f);
        double double46 = vector3D43.getY();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D5.subtract(0.577350269189626d, vector3D43);
        double double48 = vector3D43.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D43.negate();
        double double50 = vector3D43.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D43, 0.9987969075985873d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA3();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(rotationOrder53, (-0.6247425573712423d), 0.30362589664978323d, 0.9994070475860579d);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation58.getAxis();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation52.applyInverseTo(rotation58);
        double[][] doubleArray61 = rotation58.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException62 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: YZY", (java.lang.Object[]) doubleArray61);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-99.0d) + "'", double46 == (-99.0d));
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 99.0d + "'", double48 == 99.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-1.5707963267948966d) + "'", double50 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(doubleArray61);
    }

    @Test
    public void test11838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11838");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation11.revert();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation38.applyTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation32.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation19.applyTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation11.applyTo(rotation48);
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.YZX;
        double[] doubleArray51 = rotation48.getAngles(rotationOrder50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, 0.0d, (-0.0927489957179025d), 0.7950731247900203d);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, 10.262275260334876d, 0.8818536098126042d, (-0.029800997754107505d));
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder50.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder50.getA1();
        double double65 = vector3D64.getX();
        double double66 = vector3D64.getNorm();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-2.034443935795702, 0.7297276562269669, -2.034443935795702]");
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
    }

    @Test
    public void test11839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11839");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.4231361643575562d), (double) 100.0f, 0.7853981633974482d, 2.162171184425803d, false);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation24.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation37.applyTo(rotation43);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation31.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation17.applyTo(rotation45);
        double double47 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation5.applyTo(rotation17);
        double double49 = rotation17.getAngle();
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.5773502691896258d + "'", double47 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 3.141592653589793d + "'", double49 == 3.141592653589793d);
    }

    @Test
    public void test11840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11840");
        java.lang.Throwable throwable4 = null;
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("hi!", throwable4);
        java.lang.Object[] objArray6 = mathException5.getArguments();
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray6);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("", objArray6);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("", objArray6);
        java.lang.Throwable[] throwableArray10 = notARotationMatrixException9.getSuppressed();
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException((java.lang.Throwable) notARotationMatrixException9);
        java.lang.Object[] objArray12 = notARotationMatrixException9.getArguments();
        java.lang.String str13 = notARotationMatrixException9.getPattern();
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test11841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11841");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) (byte) -1, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation12.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder19.getA2();
        double[] doubleArray22 = rotation17.getAngles(rotationOrder19);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D23.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double27 = vector3D26.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D26.normalize();
        double double30 = org.apache.commons.math.geometry.Vector3D.angle(vector3D23, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation17.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation17.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double37 = vector3D36.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double40 = vector3D39.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.add(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double45 = vector3D44.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D44);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D51.add(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D39, (double) 100, vector3D44, (double) 1.0f, vector3D49, (double) 10L, vector3D54);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D55, (double) 1.0f);
        double double58 = vector3D55.getY();
        double double59 = vector3D55.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D62);
        double double64 = vector3D63.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder65.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D63, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D55.add(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation32.applyInverseTo(vector3D67);
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA2();
        java.lang.String str73 = rotationOrder71.toString();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder71.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation32.applyTo(vector3D74);
        double double76 = rotation32.getQ0();
        java.lang.Class<?> wildcardClass77 = rotation32.getClass();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.5707963267948966d + "'", double30 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-99.0d) + "'", double58 == (-99.0d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-99.0d) + "'", double59 == (-99.0d));
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.5707963267948966d + "'", double64 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ZYX" + "'", str73, "ZYX");
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test11842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11842");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D2);
        double double4 = vector3D3.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D8);
        double double10 = vector3D9.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D9, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D3.subtract((double) 'a', vector3D13);
        double double16 = vector3D15.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D19);
        double double21 = vector3D20.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder22.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D20, vector3D24);
        double double26 = vector3D24.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double28 = vector3D27.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double31 = vector3D30.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.add(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D32.add(vector3D33);
        double double35 = vector3D34.getDelta();
        double double36 = vector3D34.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation43.applyTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation56.applyTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation76 = rotation69.applyTo(rotation75);
        org.apache.commons.math.geometry.Rotation rotation77 = rotation63.applyInverseTo(rotation69);
        org.apache.commons.math.geometry.Rotation rotation78 = rotation49.applyTo(rotation77);
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        double[] doubleArray80 = rotation77.getAngles(rotationOrder79);
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder81.getA2();
        double[] doubleArray84 = rotation77.getAngles(rotationOrder81);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder81.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D85.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D(1.4278296224057285d, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D34.subtract(vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D((-0.3744172556977022d), (-0.19151376815678886d), 100.0d);
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(vector3D15, vector3D24, vector3D34, vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D92.scalarMultiply(1.5707766465570878d);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.5707963267948966d + "'", double4 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.5707963267948966d + "'", double10 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 3.141592653589793d + "'", double16 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.5707963267948966d + "'", double21 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-1.5707963267948966d) + "'", double36 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[2.034443935795702, -0.7297276562269669, 2.034443935795702]");
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.7853981633974483, 1.9106332362490182, 2.356194490192345]");
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D95);
    }

    @Test
    public void test11843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11843");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.789299696561481E-17d, 0.4497012550087643d, 103.1621711844258d, 0.591570012377459d, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation29.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation23.applyInverseTo(rotation29);
        double double38 = rotation37.getQ2();
        double[][] doubleArray39 = rotation37.getMatrix();
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException41 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException", (java.lang.Object[]) doubleArray39);
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", throwable49);
        java.lang.Object[] objArray51 = mathException50.getArguments();
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray51);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("YXZ", (java.lang.Throwable) mathException52);
        java.lang.Throwable throwable55 = null;
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("hi!", throwable55);
        java.lang.Object[] objArray57 = mathException56.getArguments();
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException56);
        mathException52.addSuppressed((java.lang.Throwable) mathException58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("Cardan angles singularity", (java.lang.Throwable) mathException58);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity", (java.lang.Throwable) mathException58);
        java.lang.String str62 = mathException61.getPattern();
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("ZYX", (java.lang.Object[]) doubleArray39, (java.lang.Throwable) mathException61);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(doubleArray39, 0.8775825618903732d);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(doubleArray39, 1.0000000000000002d);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation5.applyTo(rotation67);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.577350269189626d + "'", double38 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity" + "'", str62, "org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity");
        org.junit.Assert.assertNotNull(rotation68);
    }

    @Test
    public void test11844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11844");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YZY;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (byte) 10, 1.5707963267948966d, (double) 'a');
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation29.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation23.applyInverseTo(rotation29);
        double double38 = rotation37.getQ2();
        double[][] doubleArray39 = rotation37.getMatrix();
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException41 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException42 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ZXZ", (java.lang.Object[]) doubleArray7, (java.lang.Throwable) notARotationMatrixException42);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(doubleArray7, 1.036785914315164d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(doubleArray7, (-0.3570629469016354d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YZY" + "'", str2, "YZY");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.577350269189626d + "'", double38 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test11845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11845");
        java.lang.Throwable throwable2 = null;
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException("hi!", throwable2);
        java.lang.Object[] objArray4 = mathException3.getArguments();
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray4);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException5);
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", throwable9);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException12);
        mathException6.addSuppressed((java.lang.Throwable) mathException13);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation22.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation35.applyTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation29.applyInverseTo(rotation35);
        double double44 = rotation43.getQ2();
        double[][] doubleArray45 = rotation43.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException46 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException47 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Object[]) doubleArray45);
        mathException6.addSuppressed((java.lang.Throwable) notARotationMatrixException47);
        java.lang.Object[] objArray49 = mathException6.getArguments();
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.577350269189626d + "'", double44 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
    }

    @Test
    public void test11846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11846");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) 'a', (-0.5773502691896258d), (double) (-1.0f));
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder4.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D3.add(vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D(0.6547497597813873d, (double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double14 = vector3D13.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double17 = vector3D16.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.add(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.add(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double23 = vector3D22.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double26 = vector3D25.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.add(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double31 = vector3D30.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D30);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D37.add(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D25, (double) 100, vector3D30, (double) 1.0f, vector3D35, (double) 10L, vector3D40);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(vector3D19, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D44.add(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D19.add((double) (byte) 0, vector3D47);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D19.add(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double53 = vector3D52.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double55 = vector3D54.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double58 = vector3D57.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.add(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D59.add(vector3D60);
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder63.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder63.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.add((double) (short) 1, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D52.subtract(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D50.add(vector3D66);
        double double69 = vector3D68.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D68.negate();
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D(2.789299696561481E-17d, vector3D11, 9.046294128343966E-4d, vector3D68);
        double double72 = org.apache.commons.math.geometry.Vector3D.angle(vector3D7, vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.42053433528396517d + "'", double69 == 0.42053433528396517d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.1495870178580607d + "'", double72 == 1.1495870178580607d);
    }

    @Test
    public void test11847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11847");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.004748774471446504d), 0.0d);
    }

    @Test
    public void test11848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11848");
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation9.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation22.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation16.applyInverseTo(rotation22);
        double double31 = rotation30.getQ2();
        double[][] doubleArray32 = rotation30.getMatrix();
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray32);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException34 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray32);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException35 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", (java.lang.Object[]) doubleArray32);
        java.lang.String str36 = notARotationMatrixException35.getPattern();
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity", (java.lang.Throwable) notARotationMatrixException35);
        java.lang.String str38 = mathException37.toString();
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.577350269189626d + "'", double31 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "YXZ" + "'", str36, "YXZ");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity" + "'", str38, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity");
    }

    @Test
    public void test11849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11849");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double7 = vector3D6.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.add(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D8.add(vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double16 = vector3D15.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.add(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.add(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D1, (double) (short) 0, vector3D10, (-1.0d), vector3D17, (double) (-1.0f), vector3D21);
        double double23 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double27 = vector3D26.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double30 = vector3D29.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.add(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double35 = vector3D34.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D41.add(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D29, (double) 100, vector3D34, (double) 1.0f, vector3D39, (double) 10L, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D1.add((double) (short) -1, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D34.normalize();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) 1);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation49.revert();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation49.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder52.getA3();
        java.lang.String str55 = rotationOrder52.toString();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder52.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.scalarMultiply((-1.5707963267948966d));
        double double59 = vector3D56.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D56, 2.8292366954514296d);
        double double62 = rotation61.getQ3();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation49.applyInverseTo(rotation61);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "XZX" + "'", str55, "XZX");
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.0d) + "'", double62 == (-0.0d));
        org.junit.Assert.assertNotNull(rotation63);
    }

    @Test
    public void test11850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11850");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyTo(rotation39);
        double double41 = rotation11.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation11.getAxis();
        double double43 = rotation11.getAngle();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, (-2.356194490192345d), (double) '#', (double) 10L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation67 = rotation60.applyTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation80 = rotation73.applyTo(rotation79);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation67.applyInverseTo(rotation73);
        double double82 = rotation73.getQ1();
        org.apache.commons.math.geometry.Rotation rotation83 = rotation54.applyTo(rotation73);
        double double84 = rotation73.getAngle();
        double double85 = rotation73.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation73.getAxis();
        org.apache.commons.math.geometry.Rotation rotation87 = rotation49.applyInverseTo(rotation73);
        org.apache.commons.math.geometry.Rotation rotation88 = rotation11.applyTo(rotation87);
        double[][] doubleArray89 = rotation11.getMatrix();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.5773502691896258d + "'", double41 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 3.141592653589793d + "'", double43 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.5773502691896258d + "'", double82 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 3.141592653589793d + "'", double84 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.5773502691896258d + "'", double85 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(doubleArray89);
    }

    @Test
    public void test11851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11851");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(1.8416665868305766d, (-0.004857450672863166d), 0.9529576786363508d, (-0.2132212001811628d), false);
    }

    @Test
    public void test11852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11852");
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation8.applyTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation15.applyInverseTo(rotation21);
        double double30 = rotation29.getQ2();
        double[][] doubleArray31 = rotation29.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException32 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray31);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException33 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Object[]) doubleArray31);
        java.lang.Throwable throwable38 = null;
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("hi!", throwable38);
        java.lang.Object[] objArray40 = mathException39.getArguments();
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray40);
        java.lang.Object[] objArray42 = mathException41.getArguments();
        java.lang.Throwable throwable44 = null;
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("hi!", throwable44);
        java.lang.Object[] objArray46 = mathException45.getArguments();
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException45);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("hi!", objArray42, (java.lang.Throwable) mathException47);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation55.applyTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation68.applyTo(rotation74);
        org.apache.commons.math.geometry.Rotation rotation76 = rotation62.applyInverseTo(rotation68);
        double[][] doubleArray77 = rotation62.getMatrix();
        java.lang.Throwable throwable79 = null;
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("hi!", throwable79);
        java.lang.Object[] objArray81 = mathException80.getArguments();
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException80);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) doubleArray77, (java.lang.Throwable) mathException82);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray42, (java.lang.Throwable) mathException83);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: Cardan angles singularity", (java.lang.Object[]) doubleArray31, (java.lang.Throwable) mathException83);
        java.lang.Throwable[] throwableArray86 = mathException83.getSuppressed();
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.577350269189626d + "'", double30 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertNotNull(throwableArray86);
    }

    @Test
    public void test11853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11853");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.006107378283948792d, 0.013538571429055098d);
    }

    @Test
    public void test11854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11854");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.005773438543149319d, (-20.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder3, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder3, 1.9825499883321898d, 0.8993270887478315d, 0.26237485370392877d);
        double double13 = rotation12.getQ1();
        double double14 = rotation12.getQ0();
        double double15 = rotation12.getQ1();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation12.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder17.getA1();
        double[] doubleArray23 = rotation16.getAngles(rotationOrder17);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder17.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D2.subtract(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.29605345686120393d + "'", double13 == 0.29605345686120393d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.5365234859057819d + "'", double14 == 0.5365234859057819d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.29605345686120393d + "'", double15 == 0.29605345686120393d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[2.1919175437518517, 1.7725888167401944, 2.976129876668926]");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
    }

    @Test
    public void test11855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11855");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation10.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation23.applyTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation17.applyInverseTo(rotation23);
        double double32 = rotation23.getQ1();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation4.applyTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation33.revert();
        double double35 = rotation33.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder36.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder36.getA2();
        java.lang.String str41 = rotationOrder36.toString();
        double[] doubleArray42 = rotation33.getAngles(rotationOrder36);
        java.lang.String str43 = rotationOrder36.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5773502691896258d + "'", double32 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.5480028924187776d + "'", double35 == 1.5480028924187776d);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ZYX" + "'", str41, "ZYX");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.1219587296945104, -0.07979586378305215, 1.178733300026532]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ZYX" + "'", str43, "ZYX");
    }

    @Test
    public void test11856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11856");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation7.applyTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation20.applyTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation14.applyInverseTo(rotation20);
        double double29 = rotation28.getQ2();
        double[][] doubleArray30 = rotation28.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException31 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray30);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException32 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Object[]) doubleArray30);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(doubleArray30, (double) 1);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(doubleArray30, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(doubleArray30, 0.06635788207052921d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.577350269189626d + "'", double29 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray30);
    }

    @Test
    public void test11857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11857");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyTo(rotation39);
        double[][] doubleArray41 = rotation40.getMatrix();
        double[][] doubleArray42 = rotation40.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(doubleArray42, 0.9998127960852804d);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(doubleArray42, 0.7639315552794123d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test11858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11858");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(1.236449095044592d, (-0.7904232467282607d), (-0.09274899571790256d));
    }

    @Test
    public void test11859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11859");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation10.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation23.applyTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation17.applyInverseTo(rotation23);
        double double32 = rotation23.getQ1();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation4.applyTo(rotation23);
        double double34 = rotation23.getAngle();
        double double35 = rotation23.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation23.getAxis();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation42.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation55.applyTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation49.applyInverseTo(rotation55);
        double double64 = rotation63.getQ2();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        double double71 = rotation70.getQ1();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation63.applyInverseTo(rotation70);
        double double73 = rotation63.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double75 = vector3D74.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double78 = vector3D77.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D74.add(0.0d, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D79.add(vector3D80);
        double double82 = vector3D81.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation63.applyInverseTo(vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D36.subtract(vector3D81);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5773502691896258d + "'", double32 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 3.141592653589793d + "'", double34 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.5773502691896258d + "'", double35 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.577350269189626d + "'", double64 == 0.577350269189626d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.031397298386422245d + "'", double71 == 0.031397298386422245d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.577350269189626d + "'", double73 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
    }

    @Test
    public void test11860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11860");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double3 = vector3D2.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double6 = vector3D5.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.add(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double11 = vector3D10.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D17.add(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D5, (double) 100, vector3D10, (double) 1.0f, vector3D15, (double) 10L, vector3D20);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D21, (double) 1.0f);
        double double24 = vector3D21.getY();
        double double25 = vector3D21.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D28);
        double double30 = vector3D29.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder31.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D29, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D21.add(vector3D33);
        double double36 = vector3D35.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D35.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double47 = vector3D46.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double50 = vector3D49.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.add(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double55 = vector3D54.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D54);
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder58.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D61.add(vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D49, (double) 100, vector3D54, (double) 1.0f, vector3D59, (double) 10L, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double69 = vector3D68.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double72 = vector3D71.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D68.add(0.0d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double77 = vector3D76.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D76);
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder80.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder84 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder84.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D83.add(vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D71, (double) 100, vector3D76, (double) 1.0f, vector3D81, (double) 10L, vector3D86);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D87, (double) 1.0f);
        double double90 = vector3D87.getY();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D49.subtract(0.577350269189626d, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D93 = new org.apache.commons.math.geometry.Vector3D(99.0d, vector3D42, (double) 1.0f, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D42.negate();
        org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation(vector3D37, vector3D42);
        double double96 = vector3D37.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D97 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D37);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-99.0d) + "'", double24 == (-99.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-99.0d) + "'", double25 == (-99.0d));
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.5707963267948966d + "'", double30 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 99.00505037623081d + "'", double36 == 99.00505037623081d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(rotationOrder84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-99.0d) + "'", double90 == (-99.0d));
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 1.0d + "'", double96 == 1.0d);
    }

    @Test
    public void test11861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11861");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation18.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray29 = rotation18.getAngles(rotationOrder28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (-0.7297276562269664d), (-0.5773502691896258d), (double) (short) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (-1.0d), (double) '4', (double) 'a');
        java.lang.String str44 = rotationOrder35.toString();
        double[] doubleArray45 = rotation34.getAngles(rotationOrder35);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, 3.9999999999999982d, 0.012096560836528858d, (-0.14055002628904184d));
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation49.getAxis();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ZYX" + "'", str44, "ZYX");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-0.45199330443110336, -0.37241979250068413, 0.3568502654612301]");
        org.junit.Assert.assertNotNull(vector3D50);
    }

    @Test
    public void test11862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11862");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation7.applyTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation20.applyTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation14.applyInverseTo(rotation20);
        double double29 = rotation28.getQ2();
        double[][] doubleArray30 = rotation28.getMatrix();
        double double31 = rotation28.getQ1();
        double[][] doubleArray32 = rotation28.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException33 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", (java.lang.Object[]) doubleArray32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Throwable) notARotationMatrixException33);
        java.lang.String str35 = notARotationMatrixException33.getPattern();
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.577350269189626d + "'", double29 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.577350269189626d + "'", double31 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity" + "'", str35, "org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity");
    }

    @Test
    public void test11863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11863");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str7 = cardanEulerSingularityException6.getPattern();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", objArray8);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZX", objArray8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str14 = cardanEulerSingularityException13.getPattern();
        java.lang.Throwable throwable17 = null;
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("hi!", throwable17);
        java.lang.Object[] objArray19 = mathException18.getArguments();
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException20);
        java.lang.Throwable throwable24 = null;
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", throwable24);
        java.lang.Object[] objArray26 = mathException25.getArguments();
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException27);
        mathException21.addSuppressed((java.lang.Throwable) mathException28);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) mathException21);
        java.lang.Throwable throwable32 = null;
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("hi!", throwable32);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) mathException33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("ZXY", (java.lang.Throwable) mathException33);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation45.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation58.applyTo(rotation64);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation52.applyInverseTo(rotation58);
        double double67 = rotation66.getQ2();
        double[][] doubleArray68 = rotation66.getMatrix();
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray68);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException70 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray68);
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray68);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) doubleArray68);
        mathException33.addSuppressed((java.lang.Throwable) mathException72);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", objArray8, (java.lang.Throwable) mathException72);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: XYZ", objArray8);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException", objArray8);
        java.lang.String str77 = mathException76.getPattern();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Cardan angles singularity" + "'", str7, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Cardan angles singularity" + "'", str14, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.577350269189626d + "'", double67 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.MathException" + "'", str77, "org.apache.commons.math.MathException: org.apache.commons.math.MathException");
    }

    @Test
    public void test11864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11864");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation24.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyTo(rotation33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray36 = rotation34.getAngles(rotationOrder35);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (-1.0d), (double) '4', (double) 'a');
        double[] doubleArray46 = rotation34.getAngles(rotationOrder37);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder37.getA1();
        java.lang.String str48 = rotationOrder37.toString();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, 0.2919265817264289d, (-0.9386072654111782d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, 0.2737243725398427d, 0.5309649148733837d, (-0.4202664047308571d));
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, 7.774799409995024d, 0.7057413361155259d, 0.35250513772530045d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.7853981633974483, 1.9106332362490182, 2.356194490192345]");
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[2.034443935795702, -0.7297276562269669, 2.034443935795702]");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ZYX" + "'", str48, "ZYX");
        org.junit.Assert.assertNotNull(vector3D53);
    }

    @Test
    public void test11865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11865");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, 0.7950731247900203d, (double) 10, 1.6950289842361217d, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation7.applyInverseTo(rotation13);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(rotation14);
    }

    @Test
    public void test11866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11866");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation19.applyTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation13.applyInverseTo(rotation19);
        double double28 = rotation27.getQ2();
        double[][] doubleArray29 = rotation27.getMatrix();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray29);
        java.lang.String str31 = mathException30.getPattern();
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException30);
        java.lang.Throwable[] throwableArray33 = mathException30.getSuppressed();
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.577350269189626d + "'", double28 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(throwableArray33);
    }

    @Test
    public void test11867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11867");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation18.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray29 = rotation18.getAngles(rotationOrder28);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 0, (double) 'a', (double) (byte) 10);
        double double34 = rotation33.getQ1();
        double double35 = rotation33.getAngle();
        double[][] doubleArray36 = rotation33.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(doubleArray36, (-0.13730108468358246d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.18551215211325933d) + "'", double34 == (-0.18551215211325933d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 3.0317837108771113d + "'", double35 == 3.0317837108771113d);
        org.junit.Assert.assertNotNull(doubleArray36);
    }

    @Test
    public void test11868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11868");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YZY;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (byte) 10, 1.5707963267948966d, (double) 'a');
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation29.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation23.applyInverseTo(rotation29);
        double double38 = rotation37.getQ2();
        double[][] doubleArray39 = rotation37.getMatrix();
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException41 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException42 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ZXZ", (java.lang.Object[]) doubleArray7, (java.lang.Throwable) notARotationMatrixException42);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException((java.lang.Throwable) notARotationMatrixException42);
        java.lang.String str45 = mathException44.getPattern();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YZY" + "'", str2, "YZY");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.577350269189626d + "'", double38 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "YXZ" + "'", str45, "YXZ");
    }

    @Test
    public void test11869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11869");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D12.add(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation11.applyInverseTo(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D17.orthogonal();
        double double19 = vector3D18.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D16.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double24 = vector3D23.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double27 = vector3D26.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.add(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double32 = vector3D31.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder39.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D38.add(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D26, (double) 100, vector3D31, (double) 1.0f, vector3D36, (double) 10L, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D31.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D20.add((double) ' ', vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double49 = vector3D48.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D44.subtract((double) (short) 0, vector3D50);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D44, (double) (byte) -1);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation5.applyTo(rotation53);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation54.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D55.negate();
        double double57 = vector3D55.getDelta();
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.026999457735999394d) + "'", double57 == (-0.026999457735999394d));
    }

    @Test
    public void test11870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11870");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.5707963267948966d), (double) 0L, 0.031397298386422245d, (double) ' ', true);
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        double[] doubleArray9 = rotation5.getAngles(rotationOrder8);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder8.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder11.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.scalarMultiply((double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D10.subtract(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D17.negate();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9987969075985873d + "'", double6 == 0.9987969075985873d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 9.799851417283954E-4d + "'", double7 == 9.799851417283954E-4d);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[3.0925446379943895, 0.001959970597097145, -0.04904801559540395]");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
    }

    @Test
    public void test11871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11871");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (-0.47036844160641855d), (-0.577350269189626d), (double) 10L, false);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation11.revert();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double16 = vector3D15.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double19 = vector3D18.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.add(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double24 = vector3D23.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D30.add(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D18, (double) 100, vector3D23, (double) 1.0f, vector3D28, (double) 10L, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D23.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D37.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D37.scalarMultiply((double) (short) -1);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation46.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation59.applyTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation79 = rotation72.applyTo(rotation78);
        org.apache.commons.math.geometry.Rotation rotation80 = rotation66.applyInverseTo(rotation72);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation52.applyTo(rotation80);
        org.apache.commons.math.geometry.RotationOrder rotationOrder82 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        double[] doubleArray83 = rotation80.getAngles(rotationOrder82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation80.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D37.subtract(vector3D84);
        double double86 = org.apache.commons.math.geometry.Vector3D.angle(vector3D36, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation11.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D88 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double89 = vector3D88.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D91 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double92 = vector3D91.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D88.add(0.0d, vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D87.subtract(vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation5.applyTo(vector3D94);
        double double96 = vector3D94.getDelta();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(rotationOrder82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[2.034443935795702, -0.7297276562269669, 2.034443935795702]");
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.5707963267948966d + "'", double86 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + (-0.7267208212438774d) + "'", double96 == (-0.7267208212438774d));
    }

    @Test
    public void test11872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11872");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation44.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation38.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation24.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation11.applyInverseTo(rotation53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double57 = vector3D56.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double60 = vector3D59.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.add(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double65 = vector3D64.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D64);
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder68.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder72.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D71.add(vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D59, (double) 100, vector3D64, (double) 1.0f, vector3D69, (double) 10L, vector3D74);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D75, (double) 1.0f);
        double double78 = rotation77.getQ1();
        double[][] doubleArray79 = rotation77.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation80 = rotation11.applyInverseTo(rotation77);
        double double81 = rotation11.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation11.getAxis();
        java.lang.Class<?> wildcardClass83 = vector3D82.getClass();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.0d) + "'", double78 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test11873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11873");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double7 = vector3D6.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.add(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D8.add(vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double16 = vector3D15.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.add(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.add(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D1, (double) (short) 0, vector3D10, (-1.0d), vector3D17, (double) (-1.0f), vector3D21);
        double double23 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double27 = vector3D26.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double30 = vector3D29.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.add(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double35 = vector3D34.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D41.add(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D29, (double) 100, vector3D34, (double) 1.0f, vector3D39, (double) 10L, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D1.add((double) (short) -1, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D34.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double50 = vector3D49.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double53 = vector3D52.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.add(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double58 = vector3D57.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D57);
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D64.add(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D52, (double) 100, vector3D57, (double) 1.0f, vector3D62, (double) 10L, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D57.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D34.subtract(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D70.normalize();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D70, (-0.049028328552186334d));
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D70.scalarMultiply(2.162171184425803d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder79.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D80);
        double double82 = vector3D81.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder83 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder83.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder83.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D81, vector3D85);
        double double87 = vector3D85.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D85.scalarMultiply(0.7080734182735712d);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D76.add((-0.0927489957179025d), vector3D89);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.5707963267948966d + "'", double82 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
    }

    @Test
    public void test11874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11874");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.33333333333333315d, (-0.0d));
    }

    @Test
    public void test11875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11875");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA2();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D6);
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder8.getA3();
        java.lang.String str11 = rotationOrder8.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA2();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(vector3D12, vector3D14);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation7.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation27.applyTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation40.applyTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation34.applyInverseTo(rotation40);
        double double49 = rotation40.getQ1();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation21.applyTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation50.revert();
        double[][] doubleArray52 = rotation51.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation51.getAxis();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation7.applyInverseTo(rotation51);
        java.lang.Class<?> wildcardClass55 = rotation7.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "XZX" + "'", str3, "XZX");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "XZX" + "'", str11, "XZX");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.5773502691896258d + "'", double49 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test11876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11876");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.add(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.add(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double19 = vector3D18.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double22 = vector3D21.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.add(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.add(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D7, (double) (short) 0, vector3D16, (-1.0d), vector3D23, (double) (-1.0f), vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double32 = vector3D31.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double35 = vector3D34.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.add(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double40 = vector3D39.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D46.add(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D34, (double) 100, vector3D39, (double) 1.0f, vector3D44, (double) 10L, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double54 = vector3D53.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, vector3D23, (double) 10, vector3D34, 1.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D3.subtract((double) (byte) -1, vector3D34);
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D57, 0.006182565282665363d);
        double[][] doubleArray61 = rotation60.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException62 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: XZX", (java.lang.Object[]) doubleArray61);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
    }

    @Test
    public void test11877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11877");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        double[][] doubleArray13 = rotation11.getMatrix();
        double double14 = rotation11.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        double double16 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.revert();
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) '#', (double) 1.0f, 0.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder22.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder22.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder22.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D21.add(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D29.add(vector3D31);
        double double33 = vector3D31.getDelta();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation39.applyTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation45.revert();
        double double48 = rotation47.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str50 = rotationOrder49.toString();
        java.lang.String str51 = rotationOrder49.toString();
        double[] doubleArray52 = rotation47.getAngles(rotationOrder49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder49.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double56 = vector3D55.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double59 = vector3D58.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.add(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D60.add(vector3D61);
        double double63 = vector3D62.getZ();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(vector3D31, vector3D53, vector3D54, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D28.add(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D65.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D66, 0.2862647032613221d);
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((-0.7297276562269664d), (-0.5773502691896261d));
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((double) '4', vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double75 = vector3D74.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double77 = vector3D76.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double80 = vector3D79.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D76.add(0.0d, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D81.add(vector3D82);
        org.apache.commons.math.geometry.RotationOrder rotationOrder85 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder85.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder85.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D83.add((double) (short) 1, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D74.subtract(vector3D88);
        double double90 = vector3D88.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D72.subtract(vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D72.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D66.subtract(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D66.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation17.applyTo(vector3D66);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 3.141592653589793d + "'", double48 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ZXZ" + "'", str50, "ZXZ");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ZXZ" + "'", str51, "ZXZ");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[2.356194490192345, 1.9106332362490184, 0.7853981633974483]");
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(rotationOrder85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
    }

    @Test
    public void test11878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11878");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation7.applyTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation20.applyTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation33.applyTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation46.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation40.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation26.applyTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation13.applyInverseTo(rotation55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double59 = vector3D58.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double62 = vector3D61.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.add(0.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double67 = vector3D66.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D66);
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder70.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder74.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D73.add(vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D61, (double) 100, vector3D66, (double) 1.0f, vector3D71, (double) 10L, vector3D76);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D77, (double) 1.0f);
        double double80 = rotation79.getQ1();
        double[][] doubleArray81 = rotation79.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation82 = rotation13.applyInverseTo(rotation79);
        double[][] doubleArray83 = rotation82.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(doubleArray83, 3.141592653589793d);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException", (java.lang.Object[]) doubleArray83);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray83);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(doubleArray83, (-0.005831576379010748d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-0.0d) + "'", double80 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(doubleArray83);
    }

    @Test
    public void test11879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11879");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(1.5707766465570878d, 1.403118815274519d, (-99.0d));
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D((-0.13072609979939226d), vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D6.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D6.scalarMultiply((double) (short) -1);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double15 = vector3D14.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.add(0.0d, vector3D14);
        double double17 = vector3D11.getZ();
        double double18 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D11.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D6.add(0.796254828148588d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D4.subtract(vector3D20);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
    }

    @Test
    public void test11880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11880");
        java.lang.Throwable throwable6 = null;
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("hi!", throwable6);
        java.lang.Object[] objArray8 = mathException7.getArguments();
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray8);
        java.lang.Object[] objArray10 = mathException9.getArguments();
        java.lang.Throwable throwable12 = null;
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", throwable12);
        java.lang.Object[] objArray14 = mathException13.getArguments();
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException13);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", objArray10, (java.lang.Throwable) mathException15);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation23.applyTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation36.applyTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation30.applyInverseTo(rotation36);
        double[][] doubleArray45 = rotation30.getMatrix();
        java.lang.Throwable throwable47 = null;
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("hi!", throwable47);
        java.lang.Object[] objArray49 = mathException48.getArguments();
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException48);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) doubleArray45, (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray10, (java.lang.Throwable) mathException51);
        java.lang.Throwable[] throwableArray53 = mathException51.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException54 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) throwableArray53);
        java.lang.Throwable throwable60 = null;
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("hi!", throwable60);
        java.lang.Object[] objArray62 = mathException61.getArguments();
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray62);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("", objArray62);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException65 = new org.apache.commons.math.geometry.NotARotationMatrixException("", objArray62);
        java.lang.Throwable[] throwableArray66 = notARotationMatrixException65.getSuppressed();
        java.lang.Throwable[] throwableArray67 = notARotationMatrixException65.getSuppressed();
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity", (java.lang.Object[]) throwableArray67);
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: XYX", (java.lang.Object[]) throwableArray53, (java.lang.Throwable) mathException68);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(throwableArray67);
    }

    @Test
    public void test11881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11881");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1), 0.5773502691896258d, 3.141592653589793d, true);
        double double6 = rotation5.getQ1();
        double double7 = rotation5.getAngle();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA1();
        double[] doubleArray11 = rotation5.getAngles(rotationOrder9);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, 0.6245426019590317d, (-0.002862639213094621d), 0.027770636593421036d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, 1.3834364814420919d, (-0.32355350711941916d), 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, 1.5077857260490912d, 0.16527500348741267d, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation15.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation28.revert();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(0.0d, (-0.6154797086703874d), 0.30290544652768625d, 0.6486695111439883d, false);
        double double36 = rotation35.getQ1();
        double double37 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.applyTo(rotation35);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.2862647032613221d) + "'", double6 == (-0.2862647032613221d));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 2.56094043263594d + "'", double7 == 2.56094043263594d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 2.56094043263594d + "'", double8 == 2.56094043263594d);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[2.3098248068755094, 2.467820091963933, 2.9261629491074794]");
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.6154797086703874d) + "'", double36 == (-0.6154797086703874d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
    }

    @Test
    public void test11882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11882");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double1 = vector3D0.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.add(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D5.add(vector3D6);
        double double8 = vector3D7.getDelta();
        double double9 = vector3D7.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA3();
        double double13 = vector3D12.getAlpha();
        double double14 = vector3D12.getZ();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(vector3D7, vector3D12);
        double double16 = vector3D12.getDelta();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.5707963267948966d) + "'", double9 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.5707963267948966d + "'", double16 == 1.5707963267948966d);
    }

    @Test
    public void test11883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11883");
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation8.applyTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation15.applyInverseTo(rotation21);
        double[][] doubleArray30 = rotation15.getMatrix();
        java.lang.Throwable throwable32 = null;
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("hi!", throwable32);
        java.lang.Object[] objArray34 = mathException33.getArguments();
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException33);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) doubleArray30, (java.lang.Throwable) mathException35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Throwable) mathException35);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException37);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException38);
        java.lang.String str40 = mathException38.getPattern();
        java.lang.Object[] objArray41 = mathException38.getArguments();
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: YXZ" + "'", str40, "org.apache.commons.math.geometry.NotARotationMatrixException: YXZ");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
    }

    @Test
    public void test11884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11884");
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double[][] doubleArray10 = rotation9.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", (java.lang.Object[]) doubleArray10);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException12 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ZXY", (java.lang.Object[]) doubleArray10);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double17 = vector3D16.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double20 = vector3D19.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.add(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double25 = vector3D24.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D31.add(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D19, (double) 100, vector3D24, (double) 1.0f, vector3D29, (double) 10L, vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D35, (double) 1.0f);
        double double38 = rotation37.getQ1();
        double[][] doubleArray39 = rotation37.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(doubleArray39, 3.9999999999999982d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException42 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Object[]) doubleArray39);
        java.lang.Throwable throwable46 = null;
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("hi!", throwable46);
        java.lang.Object[] objArray48 = mathException47.getArguments();
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("YXZ", (java.lang.Throwable) mathException49);
        java.lang.Throwable throwable52 = null;
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("hi!", throwable52);
        java.lang.Object[] objArray54 = mathException53.getArguments();
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException53);
        mathException49.addSuppressed((java.lang.Throwable) mathException55);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("");
        mathException49.addSuppressed((java.lang.Throwable) mathException58);
        java.lang.Throwable throwable62 = null;
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("hi!", throwable62);
        java.lang.Object[] objArray64 = mathException63.getArguments();
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray64);
        java.lang.Object[] objArray66 = mathException65.getArguments();
        java.lang.Throwable throwable68 = null;
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("hi!", throwable68);
        java.lang.Object[] objArray70 = mathException69.getArguments();
        mathException65.addSuppressed((java.lang.Throwable) mathException69);
        mathException58.addSuppressed((java.lang.Throwable) mathException65);
        java.lang.Throwable[] throwableArray73 = mathException65.getSuppressed();
        notARotationMatrixException42.addSuppressed((java.lang.Throwable) mathException65);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", (java.lang.Throwable) mathException65);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("YZY");
        mathException65.addSuppressed((java.lang.Throwable) mathException77);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("XZX", (java.lang.Object[]) doubleArray10, (java.lang.Throwable) mathException65);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException80 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: YZY", (java.lang.Object[]) doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.0d) + "'", double38 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(throwableArray73);
    }

    @Test
    public void test11885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11885");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, (-0.5773502691896261d));
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.normalize();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation24.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation18.applyInverseTo(rotation24);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        double double40 = rotation39.getQ1();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation32.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA2();
        double[] doubleArray44 = rotation39.getAngles(rotationOrder42);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) (byte) 100, (-2.356194490192345d), 0.8775825618903732d);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, 1.5480028924187779d, (-1.5707963267948966d), (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder42.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder42.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder42.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder42.getA1();
        double double57 = vector3D56.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D3.subtract((-0.029800997754107505d), vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D3.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((-0.0744258244122507d), vector3D59);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.577350269189626d + "'", double33 == 0.577350269189626d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.031397298386422245d + "'", double40 == 0.031397298386422245d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[3.078582052843988, 0.019349922785144295, 3.120983474296034]");
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.5707963267948966d + "'", double57 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
    }

    @Test
    public void test11886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11886");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.5707963267948966d), (double) 0L, 0.031397298386422245d, (double) ' ', true);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation29.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation23.applyInverseTo(rotation29);
        double double38 = rotation37.getQ2();
        double[][] doubleArray39 = rotation37.getMatrix();
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException41 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException42 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(doubleArray39, (double) 10);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation5.applyTo(rotation45);
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder47.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder47.getA3();
        double[] doubleArray51 = rotation45.getAngles(rotationOrder47);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, 0.7000932401827162d, (-0.7071067811865476d), 0.21628976149721438d);
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder47.getA3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9987969075985873d + "'", double6 == 0.9987969075985873d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.577350269189626d + "'", double38 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-2.0344439357957027, 0.7297276562269664, -2.0344439357957027]");
        org.junit.Assert.assertNotNull(vector3D56);
    }

    @Test
    public void test11887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11887");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        java.lang.String str2 = rotationOrder0.toString();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA1();
        double double7 = vector3D6.getNorm();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D6);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((double) (short) 1, (-0.046357877526357234d), 0.8818536098126042d, 0.031397298386422245d, true);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation34.applyTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation47.applyTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation41.applyInverseTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation27.applyTo(rotation55);
        double double57 = rotation27.getQ2();
        double double58 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation14.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation8.applyTo(rotation59);
        double double61 = rotation60.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXY" + "'", str2, "ZXY");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXY" + "'", str3, "ZXY");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.5773502691896258d + "'", double57 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.5880651248785075d) + "'", double61 == (-0.5880651248785075d));
    }

    @Test
    public void test11888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11888");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1), 0.5773502691896258d, 3.141592653589793d, true);
        double double6 = rotation5.getQ1();
        double double7 = rotation5.getAngle();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA1();
        double[] doubleArray11 = rotation5.getAngles(rotationOrder9);
        java.lang.String str12 = rotationOrder9.toString();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA2();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, 1.3061290504076808d, (-2.0000000000000018d), (-0.14055002628904184d));
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, (double) (byte) 100, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.add(vector3D24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (-1.0d), (double) '4', (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder27.getA3();
        double double37 = vector3D36.getY();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D44.add(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation43.applyInverseTo(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D49.orthogonal();
        double double51 = vector3D50.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D48.subtract(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double56 = vector3D55.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double59 = vector3D58.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.add(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double64 = vector3D63.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D63);
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder67.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D70.add(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D58, (double) 100, vector3D63, (double) 1.0f, vector3D68, (double) 10L, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D63.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D52.add((double) ' ', vector3D76);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D36, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D24.add(10.262275260334876d, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D79.scalarMultiply(0.46788534931107656d);
        double double82 = vector3D81.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D13.add(vector3D81);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.2862647032613221d) + "'", double6 == (-0.2862647032613221d));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 2.56094043263594d + "'", double7 == 2.56094043263594d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 2.56094043263594d + "'", double8 == 2.56094043263594d);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[2.3098248068755094, 2.467820091963933, 2.9261629491074794]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "YZY" + "'", str12, "YZY");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 3.196193937992947E-4d + "'", double82 == 3.196193937992947E-4d);
        org.junit.Assert.assertNotNull(vector3D83);
    }

    @Test
    public void test11889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11889");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation19.applyTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation13.applyInverseTo(rotation19);
        double[][] doubleArray28 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(doubleArray28, (-0.0d));
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation30.getAxis();
        // The following exception was thrown during execution in test generation
        try {
            double double32 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D0, vector3D31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(vector3D31);
    }

    @Test
    public void test11890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11890");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, 2.7693182255331603d, 0.16977589786278133d, 1.5707963267948963d, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.add(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.add(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double19 = vector3D18.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double22 = vector3D21.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.add(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.add(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D7, (double) (short) 0, vector3D16, (-1.0d), vector3D23, (double) (-1.0f), vector3D27);
        double double29 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double33 = vector3D32.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double36 = vector3D35.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.add(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double41 = vector3D40.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D47.add(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D35, (double) 100, vector3D40, (double) 1.0f, vector3D45, (double) 10L, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D7.add((double) (short) -1, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D40.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D53.scalarMultiply(1.3834364814420919d);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder58.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D57.add(vector3D59);
        double double61 = vector3D59.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D53.subtract(1.3834364814420919d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D(0.5034691428069196d, 0.02980099775410749d, 0.7814733857778859d);
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((-0.4231361643575562d), 99.00505037623081d);
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D(1.4388425871203865d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D66.add(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D53.subtract(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation5.applyTo(vector3D70);
        double double75 = vector3D70.getX();
        double double76 = vector3D70.getY();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.04090973012375851d + "'", double75 == 0.04090973012375851d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.018423264732948107d) + "'", double76 == (-0.018423264732948107d));
    }

    @Test
    public void test11891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11891");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation7.applyTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation20.applyTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation14.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation20.revert();
        double[][] doubleArray30 = rotation29.getMatrix();
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: YXZ", (java.lang.Object[]) doubleArray30);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException32 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXY", (java.lang.Object[]) doubleArray30);
        java.lang.Object[] objArray33 = notARotationMatrixException32.getArguments();
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[[-0.33333333333333315, 0.6666666666666669, 0.6666666666666669], [0.6666666666666669, -0.33333333333333315, 0.6666666666666669], [0.6666666666666669, 0.6666666666666669, -0.33333333333333315]]");
    }

    @Test
    public void test11892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11892");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.9253293489463692d), (double) 10, (-0.16192227763965086d));
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.negate();
        org.junit.Assert.assertNotNull(vector3D4);
    }

    @Test
    public void test11893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11893");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation19.applyTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyTo(rotation40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        double[] doubleArray43 = rotation40.getAngles(rotationOrder42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder42.getA1();
        java.lang.String str45 = rotationOrder42.toString();
        java.lang.String str46 = rotationOrder42.toString();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder42.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder42.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D(0.9987969075985873d, vector3D48);
        double double50 = vector3D48.getX();
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[2.034443935795702, -0.7297276562269669, 2.034443935795702]");
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "YXZ" + "'", str45, "YXZ");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "YXZ" + "'", str46, "YXZ");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
    }

    @Test
    public void test11894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11894");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        double double2 = vector3D1.getNorm();
        double double3 = vector3D1.getAlpha();
        double double4 = vector3D1.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double9 = vector3D8.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.add(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.add(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double18 = vector3D17.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double21 = vector3D20.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.add(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D22.add(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D6, (double) (short) 0, vector3D15, (-1.0d), vector3D22, (double) (-1.0f), vector3D26);
        double double28 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double32 = vector3D31.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double35 = vector3D34.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.add(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double40 = vector3D39.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D46.add(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D34, (double) 100, vector3D39, (double) 1.0f, vector3D44, (double) 10L, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D6.add((double) (short) -1, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D39.normalize();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D52, (double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D52.orthogonal();
        double double56 = org.apache.commons.math.geometry.Vector3D.angle(vector3D1, vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.5707963267948966d + "'", double56 == 1.5707963267948966d);
    }

    @Test
    public void test11895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11895");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyTo(rotation39);
        double[][] doubleArray41 = rotation40.getMatrix();
        double[][] doubleArray42 = rotation40.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D45);
        double double47 = vector3D46.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder48.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D46, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation40.applyTo(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D53.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double57 = vector3D56.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D56.normalize();
        double double60 = org.apache.commons.math.geometry.Vector3D.angle(vector3D53, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D52.subtract(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double63 = vector3D62.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double66 = vector3D65.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.add(0.0d, vector3D65);
        double double68 = vector3D62.getY();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D53, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D62.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((-0.14055002628904184d), 0.8775825618903728d, 2.6779450445889874d);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D74.scalarMultiply(0.9553166181245092d);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D62.add(vector3D76);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.5707963267948966d + "'", double47 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.5707963267948966d + "'", double60 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-1.0d) + "'", double68 == (-1.0d));
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
    }

    @Test
    public void test11896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11896");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation19.applyTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyTo(rotation40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        double[] doubleArray43 = rotation40.getAngles(rotationOrder42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder42.getA1();
        java.lang.String str45 = rotationOrder42.toString();
        java.lang.String str46 = rotationOrder42.toString();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder42.getA2();
        java.lang.String str48 = rotationOrder42.toString();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder42.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D49.negate();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D49.negate();
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D51);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[2.034443935795702, -0.7297276562269669, 2.034443935795702]");
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "YXZ" + "'", str45, "YXZ");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "YXZ" + "'", str46, "YXZ");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "YXZ" + "'", str48, "YXZ");
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
    }

    @Test
    public void test11897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11897");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double7 = vector3D6.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.add(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D8.add(vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double16 = vector3D15.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.add(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double21 = vector3D20.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D27.add(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D15, (double) 100, vector3D20, (double) 1.0f, vector3D25, (double) 10L, vector3D30);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(vector3D9, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D34.add(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D9.add((double) (byte) 0, vector3D37);
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder39.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D9.add(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D9.scalarMultiply((double) 1L);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double48 = vector3D47.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double51 = vector3D50.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.add(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D52.add(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double57 = vector3D56.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double60 = vector3D59.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.add(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D61.add(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D45, (double) (short) 0, vector3D54, (-1.0d), vector3D61, (double) (-1.0f), vector3D65);
        double double67 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double71 = vector3D70.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double74 = vector3D73.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D70.add(0.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double79 = vector3D78.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D78);
        org.apache.commons.math.geometry.RotationOrder rotationOrder82 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder82.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder86 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder86.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D85.add(vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D73, (double) 100, vector3D78, (double) 1.0f, vector3D83, (double) 10L, vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D45.add((double) (short) -1, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D9.add(vector3D78);
        double double92 = vector3D91.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D93 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D93.scalarMultiply((-0.6916803607181152d));
        double double96 = vector3D93.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(rotationOrder86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue(Double.isNaN(double96));
    }

    @Test
    public void test11898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11898");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.47036844160641833d, 1.5647034811595735d);
    }

    @Test
    public void test11899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11899");
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: Cardan angles singularity");
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException2);
        java.lang.Object[] objArray4 = mathException2.getArguments();
        java.lang.Throwable[] throwableArray5 = mathException2.getSuppressed();
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", throwable13);
        java.lang.Object[] objArray15 = mathException14.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException16 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", objArray15);
        java.lang.Throwable throwable18 = null;
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", throwable18);
        java.lang.Object[] objArray20 = mathException19.getArguments();
        java.lang.Object[] objArray21 = mathException19.getArguments();
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray15, (java.lang.Throwable) mathException19);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation30.applyTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation43.applyTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation37.applyInverseTo(rotation43);
        double double52 = rotation51.getQ2();
        double[][] doubleArray53 = rotation51.getMatrix();
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray53);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException55 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray53);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("", objArray15, (java.lang.Throwable) notARotationMatrixException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("Cardan angles singularity", (java.lang.Throwable) notARotationMatrixException55);
        java.lang.Object[] objArray58 = mathException57.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException59 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: ", objArray58);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException60 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", objArray58);
        mathException2.addSuppressed((java.lang.Throwable) notARotationMatrixException60);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException2);
        java.lang.Throwable[] throwableArray63 = mathException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException64 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity", (java.lang.Object[]) throwableArray63);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.577350269189626d + "'", double52 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(throwableArray63);
    }

    @Test
    public void test11900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11900");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(0.16977589786278138d, 0.42487699275774343d, (-0.8610036570415699d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D6.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D7.normalize();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation14.applyTo(rotation20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double23 = vector3D22.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double26 = vector3D25.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.add(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation21.applyTo(vector3D27);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation35.applyTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation48.applyTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation61.applyTo(rotation67);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation55.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation70 = rotation41.applyTo(rotation69);
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        double[] doubleArray72 = rotation69.getAngles(rotationOrder71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder71.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D27.add(3.141592653589793d, vector3D73);
        double double75 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D8, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D(0.577350269189626d, vector3D4, (-20.0d), vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D(0.0d, 0.005773438543149319d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D80.scalarMultiply(0.9197526302254424d);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D82.scalarMultiply(0.6438988987070706d);
        double double85 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D76, vector3D82);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[2.034443935795702, -0.7297276562269669, 2.034443935795702]");
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-1.0d) + "'", double75 == (-1.0d));
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-0.10490011441120128d) + "'", double85 == (-0.10490011441120128d));
    }

    @Test
    public void test11901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11901");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
    }

    @Test
    public void test11902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11902");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyTo(rotation39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        double[] doubleArray42 = rotation39.getAngles(rotationOrder41);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder43.getA2();
        double[] doubleArray46 = rotation39.getAngles(rotationOrder43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder43.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder43.getA3();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[2.034443935795702, -0.7297276562269669, 2.034443935795702]");
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.7853981633974483, 1.9106332362490182, 2.356194490192345]");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
    }

    @Test
    public void test11903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11903");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.13728560338240123d, 2.202710639169968d);
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(vector3D2, 0.6288258696746416d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D5.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D5.scalarMultiply((double) (short) -1);
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) 1L, (double) (short) -1, (double) (-1L));
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D5.add((double) (byte) 100, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D2.add(vector3D5);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
    }

    @Test
    public void test11904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11904");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double7 = vector3D6.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.add(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D8.add(vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double16 = vector3D15.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.add(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.add(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D1, (double) (short) 0, vector3D10, (-1.0d), vector3D17, (double) (-1.0f), vector3D21);
        double double23 = vector3D22.getX();
        double double24 = vector3D22.getY();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D22.orthogonal();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
    }

    @Test
    public void test11905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11905");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D2.scalarMultiply(1.0000000000000009d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D(1.4278296224057285d, 3.9999999999999982d, (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D9.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double15 = vector3D14.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double18 = vector3D17.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.add(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.add(vector3D20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder23.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.add((double) (short) 1, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.minusK;
        double double28 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D25, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D12.subtract(0.2737243725398427d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.normalize();
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D4.add(1.0001301092007409d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.scalarMultiply((-0.16977589786278144d));
        double double36 = vector3D30.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D30.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
    }

    @Test
    public void test11906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11906");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) (byte) -1, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation12.applyTo(rotation17);
        double double19 = rotation17.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double25 = vector3D24.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double28 = vector3D27.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.add(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D29.add(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double34 = vector3D33.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double37 = vector3D36.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.add(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.add(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D22, (double) (short) 0, vector3D31, (-1.0d), vector3D38, (double) (-1.0f), vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double47 = vector3D46.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double50 = vector3D49.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.add(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double55 = vector3D54.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D54);
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder58.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D61.add(vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D49, (double) 100, vector3D54, (double) 1.0f, vector3D59, (double) 10L, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double69 = vector3D68.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, vector3D38, (double) 10, vector3D49, 1.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation17.applyInverseTo(vector3D38);
        double double73 = rotation17.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder74.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder74.getA2();
        java.lang.String str77 = rotationOrder74.toString();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(rotationOrder74, 1.5707963267948966d, (-0.5773502691896258d), (-0.2465752951392704d));
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder74.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder74.getA2();
        double[] doubleArray84 = rotation17.getAngles(rotationOrder74);
        java.lang.String str85 = rotationOrder74.toString();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.3834364814420919d + "'", double19 == 1.3834364814420919d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.7701511529340699d + "'", double73 == 0.7701511529340699d);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "ZYX" + "'", str77, "ZYX");
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-0.9999999999999999, 1.0, 0.0]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "ZYX" + "'", str85, "ZYX");
    }

    @Test
    public void test11907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11907");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) (byte) -1, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation12.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder19.getA2();
        double[] doubleArray22 = rotation17.getAngles(rotationOrder19);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D23.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double27 = vector3D26.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D26.normalize();
        double double30 = org.apache.commons.math.geometry.Vector3D.angle(vector3D23, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation17.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation17.applyInverseTo(rotation32);
        double double35 = rotation32.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder36.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder36.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder36.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D41.scalarMultiply(0.5403023058681398d);
        double double44 = vector3D43.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation32.applyTo(vector3D43);
        double double46 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double49 = vector3D48.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double52 = vector3D51.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.add(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D53.add(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double58 = vector3D57.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double61 = vector3D60.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.add(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double66 = vector3D65.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D65);
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder73.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D72.add(vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D60, (double) 100, vector3D65, (double) 1.0f, vector3D70, (double) 10L, vector3D75);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D54, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder80.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D79.add(vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D54.add((double) (byte) 0, vector3D82);
        org.apache.commons.math.geometry.RotationOrder rotationOrder84 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder84.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D54.add(vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D54.scalarMultiply((double) 1L);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D47.add(vector3D54);
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D54, (-0.0927489957179025d));
        double double92 = rotation91.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation91.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D93.scalarMultiply(0.7950731247900203d);
        org.apache.commons.math.geometry.Vector3D vector3D96 = vector3D93.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D97 = rotation32.applyInverseTo(vector3D93);
        double double98 = vector3D97.getNorm();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.5707963267948966d + "'", double30 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.5403023058681398d + "'", double44 == 0.5403023058681398d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(rotationOrder84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-0.046357877526357234d) + "'", double92 == (-0.046357877526357234d));
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 1.0d + "'", double98 == 1.0d);
    }

    @Test
    public void test11908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11908");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 0.02212368408061431d, 0.1275131864534447d, 0.5458056146732426d);
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ZXY", (java.lang.Object[]) doubleArray9);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(doubleArray9, 0.9948868990275592d);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray9);
    }

    @Test
    public void test11909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11909");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation18.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray29 = rotation18.getAngles(rotationOrder28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, 0.4546487134128409d, (double) 0.0f, (-0.003851265208173721d));
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder28.getA2();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
    }

    @Test
    public void test11910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11910");
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation8.applyTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation15.applyInverseTo(rotation21);
        double double30 = rotation29.getQ2();
        double[][] doubleArray31 = rotation29.getMatrix();
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray31);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException33 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray31);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException34 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", (java.lang.Object[]) doubleArray31);
        java.lang.String str35 = notARotationMatrixException34.toString();
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.577350269189626d + "'", double30 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: YXZ" + "'", str35, "org.apache.commons.math.geometry.NotARotationMatrixException: YXZ");
    }

    @Test
    public void test11911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11911");
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("hi!", throwable5);
        java.lang.String str7 = mathException6.getPattern();
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException6);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation15.applyTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation28.applyTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation22.applyInverseTo(rotation28);
        double double37 = rotation36.getQ2();
        double[][] doubleArray38 = rotation36.getMatrix();
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray38);
        java.lang.String str40 = mathException39.getPattern();
        mathException6.addSuppressed((java.lang.Throwable) mathException39);
        java.lang.Object[] objArray42 = mathException39.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException43 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", objArray42);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: Euler angles singularity", objArray42);
        java.lang.Throwable[] throwableArray45 = mathException44.getSuppressed();
        java.lang.Throwable[] throwableArray46 = mathException44.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException47 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: ZYZ", (java.lang.Object[]) throwableArray46);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", (java.lang.Object[]) throwableArray46);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.577350269189626d + "'", double37 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[[-0.3333333333333329, 0.6666666666666671, 0.6666666666666671], [0.6666666666666671, -0.3333333333333329, 0.6666666666666671], [0.6666666666666671, 0.6666666666666671, -0.3333333333333329]]");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray46);
    }

    @Test
    public void test11912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11912");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) (byte) -1, 1.0d, 0.0d);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(doubleArray7, (double) 10);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: YZY", (java.lang.Object[]) doubleArray7);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: hi!", (java.lang.Object[]) doubleArray7);
        java.lang.Throwable[] throwableArray12 = mathException11.getSuppressed();
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test11913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11913");
        java.lang.Throwable throwable6 = null;
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("hi!", throwable6);
        java.lang.Object[] objArray8 = mathException7.getArguments();
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray8);
        java.lang.Object[] objArray10 = mathException9.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: hi!", objArray10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("", objArray10);
        java.lang.Throwable throwable17 = null;
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("hi!", throwable17);
        java.lang.Object[] objArray19 = mathException18.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException20 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", objArray19);
        java.lang.Throwable throwable22 = null;
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", throwable22);
        java.lang.Object[] objArray24 = mathException23.getArguments();
        java.lang.Object[] objArray25 = mathException23.getArguments();
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray19, (java.lang.Throwable) mathException23);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation34.applyTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation47.applyTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation41.applyInverseTo(rotation47);
        double double56 = rotation55.getQ2();
        double[][] doubleArray57 = rotation55.getMatrix();
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray57);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException59 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray57);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("", objArray19, (java.lang.Throwable) notARotationMatrixException59);
        java.lang.Object[] objArray61 = mathException60.getArguments();
        mathException12.addSuppressed((java.lang.Throwable) mathException60);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("ZXY", (java.lang.Throwable) mathException60);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ZYX", (java.lang.Throwable) mathException60);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException64);
        java.lang.String str66 = mathException65.getPattern();
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.577350269189626d + "'", double56 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "org.apache.commons.math.MathException: ZYX" + "'", str66, "org.apache.commons.math.MathException: ZYX");
    }

    @Test
    public void test11914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11914");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double double7 = rotation6.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation13.applyTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation6.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation41.applyTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation54.applyTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation48.applyInverseTo(rotation54);
        double double63 = rotation62.getAngle();
        double[][] doubleArray64 = rotation62.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation20.applyInverseTo(rotation62);
        double[][] doubleArray66 = rotation62.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(doubleArray66, 1.0d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException69 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", (java.lang.Object[]) doubleArray66);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(doubleArray66, 0.9980162325105295d);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation84 = rotation77.applyTo(rotation83);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation83.revert();
        double double86 = rotation83.getAngle();
        org.apache.commons.math.geometry.Rotation rotation87 = rotation71.applyInverseTo(rotation83);
        double double88 = rotation83.getQ2();
        double double89 = rotation83.getQ3();
        org.apache.commons.math.geometry.Rotation rotation90 = rotation83.revert();
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation90.getAxis();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5773502691896258d + "'", double7 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 3.141592653589793d + "'", double63 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 3.141592653589793d + "'", double86 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.5773502691896258d + "'", double88 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.5773502691896258d + "'", double89 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertNotNull(vector3D91);
    }

    @Test
    public void test11915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11915");
        org.apache.commons.math.geometry.Vector3D vector3D1 = null;
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D4.add(vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double14 = vector3D13.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double17 = vector3D16.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.add(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double22 = vector3D21.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D28.add(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D16, (double) 100, vector3D21, (double) 1.0f, vector3D26, (double) 10L, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double37 = vector3D36.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double40 = vector3D39.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.add(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D41.add(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double46 = vector3D45.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double49 = vector3D48.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.add(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.add(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D34, (double) (short) 0, vector3D43, (-1.0d), vector3D50, (double) (-1.0f), vector3D54);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D9, vector3D21, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D21.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) 100L, vector3D21);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder66.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D65.add(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation64.applyInverseTo(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D70.orthogonal();
        double double72 = vector3D71.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D69.subtract(vector3D71);
        double double74 = org.apache.commons.math.geometry.Vector3D.angle(vector3D58, vector3D71);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D(0.2982632101214523d, vector3D1, 0.0d, vector3D71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.5707963267948966d + "'", double74 == 1.5707963267948966d);
    }

    @Test
    public void test11916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11916");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation18.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray29 = rotation18.getAngles(rotationOrder28);
        java.lang.String str30 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, 0.3179376822545062d, 1.5480028924187763d, (-5.373643377032895E-17d));
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "XZX" + "'", str30, "XZX");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
    }

    @Test
    public void test11917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11917");
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation8.applyTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation15.applyInverseTo(rotation21);
        double[][] doubleArray30 = rotation15.getMatrix();
        java.lang.Throwable throwable32 = null;
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("hi!", throwable32);
        java.lang.Object[] objArray34 = mathException33.getArguments();
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException33);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) doubleArray30, (java.lang.Throwable) mathException35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Throwable) mathException35);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException37);
        java.lang.Throwable[] throwableArray39 = mathException37.getSuppressed();
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", (java.lang.Object[]) throwableArray39);
        java.lang.Object[] objArray41 = mathException40.getArguments();
        java.lang.Object[] objArray42 = mathException40.getArguments();
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
    }

    @Test
    public void test11918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11918");
        java.lang.Throwable throwable4 = null;
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("hi!", throwable4);
        java.lang.Object[] objArray6 = mathException5.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException7 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", objArray6);
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", throwable9);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        java.lang.Object[] objArray12 = mathException10.getArguments();
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray6, (java.lang.Throwable) mathException10);
        java.lang.Throwable throwable19 = null;
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", throwable19);
        java.lang.Object[] objArray21 = mathException20.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException22 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", objArray21);
        java.lang.Throwable throwable24 = null;
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", throwable24);
        java.lang.Object[] objArray26 = mathException25.getArguments();
        java.lang.Object[] objArray27 = mathException25.getArguments();
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray21, (java.lang.Throwable) mathException25);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation36.applyTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation49.applyTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation43.applyInverseTo(rotation49);
        double double58 = rotation57.getQ2();
        double[][] doubleArray59 = rotation57.getMatrix();
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray59);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException61 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray59);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("", objArray21, (java.lang.Throwable) notARotationMatrixException61);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("", (java.lang.Throwable) notARotationMatrixException61);
        mathException10.addSuppressed((java.lang.Throwable) notARotationMatrixException61);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity", (java.lang.Throwable) mathException10);
        java.lang.String str66 = mathException65.getPattern();
        java.lang.Throwable[] throwableArray67 = mathException65.getSuppressed();
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException65);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.577350269189626d + "'", double58 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity" + "'", str66, "org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray67);
    }

    @Test
    public void test11919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11919");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((-0.5773502691896258d), 1.5480028924187779d, 1.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA2();
        java.lang.String str8 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder6.getA2();
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D9.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((-0.6154797086703874d), vector3D4, (-0.5840734641020676d), vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXY" + "'", str8, "ZXY");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
    }

    @Test
    public void test11920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11920");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation15.applyTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation28.applyTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation22.applyInverseTo(rotation28);
        double double37 = rotation28.getQ1();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation9.applyTo(rotation28);
        double double39 = rotation38.getAngle();
        double double40 = rotation38.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D(0.8610036570415694d, (-0.7297276562269664d), (double) (byte) 10);
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double50 = vector3D49.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double53 = vector3D52.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.add(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.add(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double59 = vector3D58.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double62 = vector3D61.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.add(0.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double67 = vector3D66.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D66);
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder70.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder74.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D73.add(vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D61, (double) 100, vector3D66, (double) 1.0f, vector3D71, (double) 10L, vector3D76);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D55, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D80.add(vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D55.add((double) (byte) 0, vector3D83);
        org.apache.commons.math.geometry.RotationOrder rotationOrder85 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder85.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D55.add(vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D55.scalarMultiply((double) 1L);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D48.add(vector3D55);
        double double91 = vector3D55.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D47.add(vector3D55);
        double double93 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D44, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation38.applyTo(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D95 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D4, vector3D94);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXY" + "'", str3, "ZXY");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.5773502691896258d + "'", double37 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.5480028924187776d + "'", double39 == 1.5480028924187776d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.4231361643575562d) + "'", double40 == (-0.4231361643575562d));
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(rotationOrder85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.0d + "'", double91 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-0.14884238826640267d) + "'", double93 == (-0.14884238826640267d));
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
    }

    @Test
    public void test11921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11921");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) (-1L));
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double5 = vector3D4.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double8 = vector3D7.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.add(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.add(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D7, (double) 100, vector3D12, (double) 1.0f, vector3D17, (double) 10L, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D12.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D25.scalarMultiply((double) 1.0f);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double34 = vector3D33.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double37 = vector3D36.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.add(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.add(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double43 = vector3D42.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double46 = vector3D45.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.add(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D47.add(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D31, (double) (short) 0, vector3D40, (-1.0d), vector3D47, (double) (-1.0f), vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D(10.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D25.subtract(0.031397298386422245d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.scalarMultiply(1.3834364814420919d);
        double double57 = vector3D54.getNorm();
        double double58 = org.apache.commons.math.geometry.Vector3D.angle(vector3D2, vector3D54);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D2, 1.0000000000000009d);
        double double61 = rotation60.getQ0();
        double[][] doubleArray62 = rotation60.getMatrix();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 99.96860270161358d + "'", double57 == 99.96860270161358d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2.042774094458282d + "'", double58 == 2.042774094458282d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.8775825618903725d + "'", double61 == 0.8775825618903725d);
        org.junit.Assert.assertNotNull(doubleArray62);
    }

    @Test
    public void test11922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11922");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.8610036570415693d, 0.5458056146732427d, 0.3990323165141316d, (-0.48592410736728125d), true);
    }

    @Test
    public void test11923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11923");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA2();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, 1.3061290504076808d, (-2.0000000000000018d), (-0.14055002628904184d));
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, (double) (byte) 100, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.add(vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double17 = vector3D16.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double20 = vector3D19.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.add(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double25 = vector3D24.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D31.add(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D19, (double) 100, vector3D24, (double) 1.0f, vector3D29, (double) 10L, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D29.negate();
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D(1.5480028924187779d, (-0.2862647032613221d), (-0.9253293489463692d));
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D43.add(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.negate();
        double double48 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double51 = vector3D50.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double54 = vector3D53.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.add(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.add(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double60 = vector3D59.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double63 = vector3D62.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.add(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double68 = vector3D67.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D67);
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder75.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D74.add(vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D62, (double) 100, vector3D67, (double) 1.0f, vector3D72, (double) 10L, vector3D77);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D56, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D45.add((double) 100.0f, vector3D56);
        double double81 = vector3D56.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D13, 0.09274899571790257d, vector3D29, 4.813711930563787d, vector3D41, (double) 1.0f, vector3D56);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D82, (-0.8414709848078965d));
        double[][] doubleArray85 = rotation84.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException86 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray85);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-1.5707963267948966d) + "'", double81 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test11924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11924");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation18.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray29 = rotation18.getAngles(rotationOrder28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (-0.7297276562269664d), (-0.5773502691896258d), (double) (short) 1);
        java.lang.String str35 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, 1.9184977310046263d, 1.8171966110024502d, 0.8497129515397744d);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (-1.2853901849197045d), 100.00499987500626d, 0.04528040795134451d);
        double[][] doubleArray45 = rotation44.getMatrix();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "XZX" + "'", str35, "XZX");
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test11925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11925");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D0.add(vector3D2);
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double6 = vector3D5.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D7 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.add(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double18 = vector3D17.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D24.add(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D12, (double) 100, vector3D17, (double) 1.0f, vector3D22, (double) 10L, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double33 = vector3D32.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double36 = vector3D35.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.add(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D37.add(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double42 = vector3D41.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double45 = vector3D44.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.add(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D46.add(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D30, (double) (short) 0, vector3D39, (-1.0d), vector3D46, (double) (-1.0f), vector3D50);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D0, vector3D5, vector3D17, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation52.getAxis();
        double[][] doubleArray54 = rotation52.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation52.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D55, vector3D58);
        double[][] doubleArray60 = rotation59.getMatrix();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(doubleArray60);
    }

    @Test
    public void test11926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11926");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException(throwable0);
        java.lang.String str2 = mathException1.getPattern();
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test11927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11927");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.08768191567246301d, (-0.27679646376951794d), 0.22313242151855506d, (-0.6009052459085858d), false);
        double double6 = rotation5.getQ2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.22313242151855506d + "'", double6 == 0.22313242151855506d);
    }

    @Test
    public void test11928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11928");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D11.add(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation10.applyInverseTo(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D16.orthogonal();
        double double18 = vector3D17.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D15.subtract(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D15.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D4, vector3D15);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation29.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation35.revert();
        double double38 = rotation37.getAngle();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation44.applyTo(rotation50);
        double double52 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation37.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1), 0.5773502691896258d, 3.141592653589793d, true);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double61 = vector3D60.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double64 = vector3D63.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.add(0.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation59.applyInverseTo(vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation50.applyInverseTo(vector3D65);
        double double68 = vector3D67.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D67.negate();
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, vector3D15, 1.3061290504076808d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D(0.25159761627788696d, vector3D70, (double) (-1L), vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D70.scalarMultiply(0.2919265817264289d);
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) (byte) 100);
        double double79 = vector3D78.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D80.add(vector3D82);
        double double84 = vector3D82.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D78.add(vector3D82);
        double double86 = vector3D82.getY();
        org.apache.commons.math.geometry.Vector3D vector3D90 = new org.apache.commons.math.geometry.Vector3D((double) '4', (-0.42073549240394825d));
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D90.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D82.add(0.8610036570415694d, vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D82.negate();
        org.apache.commons.math.geometry.Vector3D vector3D94 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D75, vector3D82);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.141592653589793d + "'", double38 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.5773502691896258d + "'", double52 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.7297276562269664d) + "'", double68 == (-0.7297276562269664d));
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.0d + "'", double86 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
    }

    @Test
    public void test11929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11929");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.3834364814420919d, (-0.32355350711941916d), 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.5077857260490912d, 0.16527500348741267d, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation11.getAxis();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation19.applyTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation25.revert();
        double double28 = rotation27.getAngle();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation34.applyTo(rotation40);
        double double42 = rotation40.getQ3();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation27.applyInverseTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1), 0.5773502691896258d, 3.141592653589793d, true);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double51 = vector3D50.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double54 = vector3D53.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.add(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation49.applyInverseTo(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation40.applyInverseTo(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double63 = vector3D62.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double66 = vector3D65.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.add(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D67.add(vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double72 = vector3D71.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double75 = vector3D74.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.add(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D76.add(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D60, (double) (short) 0, vector3D69, (-1.0d), vector3D76, (double) (-1.0f), vector3D80);
        double double82 = vector3D76.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D(0.7071067811865476d, vector3D55, 1.9184977310046263d, vector3D76);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D12, vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 3.141592653589793d + "'", double28 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.5773502691896258d + "'", double42 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-1.5707963267948966d) + "'", double82 == (-1.5707963267948966d));
    }

    @Test
    public void test11930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11930");
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double5 = vector3D4.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double8 = vector3D7.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.add(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.add(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D7, (double) 100, vector3D12, (double) 1.0f, vector3D17, (double) 10L, vector3D22);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D23, (double) 1.0f);
        double double26 = rotation25.getQ1();
        double[][] doubleArray27 = rotation25.getMatrix();
        java.lang.Throwable throwable29 = null;
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", throwable29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray27, (java.lang.Throwable) mathException30);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException32 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Object[]) doubleArray27);
        java.lang.String str33 = notARotationMatrixException32.getPattern();
        java.lang.Throwable[] throwableArray34 = notARotationMatrixException32.getSuppressed();
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("ZYZ", (java.lang.Object[]) throwableArray34);
        java.lang.Object[] objArray36 = mathException35.getArguments();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-0.0d) + "'", double26 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: YXZ" + "'", str33, "org.apache.commons.math.geometry.NotARotationMatrixException: YXZ");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
    }

    @Test
    public void test11931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11931");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) (byte) -1, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation12.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder19.getA2();
        double[] doubleArray22 = rotation17.getAngles(rotationOrder19);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder19.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder19.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder19.getA1();
        java.lang.String str26 = rotationOrder19.toString();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, 0.8775825618903732d, 2.0597657905208595d, 140.36381300036012d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) (byte) -1, 1.0d, 0.0d);
        double[][] doubleArray36 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(doubleArray36, (double) 1);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation30.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) (byte) 100);
        double double45 = vector3D44.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D46.add(vector3D48);
        double double50 = vector3D48.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D44.add(vector3D48);
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder53.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double61 = vector3D60.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double64 = vector3D63.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.add(0.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D65.add(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double70 = vector3D69.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double73 = vector3D72.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.add(0.0d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D74.add(vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D58, (double) (short) 0, vector3D67, (-1.0d), vector3D74, (double) (-1.0f), vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D74.negate();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D55.add((double) (byte) 1, vector3D80);
        org.apache.commons.math.geometry.RotationOrder rotationOrder83 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder83.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder83.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder83.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder83.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder83.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D89 = new org.apache.commons.math.geometry.Vector3D((-0.5773502691896261d), vector3D48, 0.45262919047801364d, vector3D80, 0.019348715309642568d, vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D90 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D89);
        double double91 = vector3D89.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation39.applyInverseTo(vector3D89);
        double double93 = rotation39.getAngle();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ZXY" + "'", str26, "ZXY");
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(rotationOrder83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + (-1.4168873294310442d) + "'", double91 == (-1.4168873294310442d));
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2.9114851388003267d + "'", double93 == 2.9114851388003267d);
    }

    @Test
    public void test11932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11932");
        java.lang.Throwable throwable4 = null;
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("hi!", throwable4);
        java.lang.Object[] objArray6 = mathException5.getArguments();
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray6);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("YXZ", (java.lang.Throwable) mathException7);
        java.lang.String str9 = mathException8.getPattern();
        java.lang.Throwable[] throwableArray10 = mathException8.getSuppressed();
        java.lang.Throwable throwable14 = null;
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", throwable14);
        java.lang.Object[] objArray16 = mathException15.getArguments();
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException17);
        java.lang.Throwable throwable21 = null;
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", throwable21);
        java.lang.Object[] objArray23 = mathException22.getArguments();
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray23);
        java.lang.Object[] objArray25 = mathException24.getArguments();
        java.lang.String str26 = mathException24.getPattern();
        mathException17.addSuppressed((java.lang.Throwable) mathException24);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException17);
        java.lang.Object[] objArray29 = mathException28.getArguments();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("Cardan angles singularity", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) mathException28);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException28);
        java.lang.Object[] objArray32 = mathException31.getArguments();
        java.lang.Object[] objArray33 = mathException31.getArguments();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation42.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation55.applyTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation49.applyInverseTo(rotation55);
        double double64 = rotation63.getQ2();
        double[][] doubleArray65 = rotation63.getMatrix();
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray65);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException67 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray65);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException68 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", (java.lang.Object[]) doubleArray65);
        java.lang.Throwable throwable72 = null;
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("hi!", throwable72);
        java.lang.Object[] objArray74 = mathException73.getArguments();
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray74);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("YXZ", (java.lang.Throwable) mathException75);
        java.lang.Throwable throwable78 = null;
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("hi!", throwable78);
        java.lang.Object[] objArray80 = mathException79.getArguments();
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException79);
        mathException75.addSuppressed((java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("");
        mathException75.addSuppressed((java.lang.Throwable) mathException84);
        notARotationMatrixException68.addSuppressed((java.lang.Throwable) mathException84);
        mathException31.addSuppressed((java.lang.Throwable) mathException84);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "YXZ" + "'", str9, "YXZ");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str26, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.577350269189626d + "'", double64 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
    }

    @Test
    public void test11933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11933");
        org.apache.commons.math.geometry.Vector3D vector3D1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(3199.0021713435813d, vector3D1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11934");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D(1.230959417340775d, vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
    }

    @Test
    public void test11935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11935");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double5 = vector3D4.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double8 = vector3D7.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.add(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D9.add(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double14 = vector3D13.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double17 = vector3D16.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.add(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.add(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D2, (double) (short) 0, vector3D11, (-1.0d), vector3D18, (double) (-1.0f), vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D(10.0d, vector3D2);
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (-0.475113181854622d), 6.280483446148484E-4d);
        double double30 = org.apache.commons.math.geometry.Vector3D.angle(vector3D24, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D24.negate();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.1272557246371404d + "'", double30 == 1.1272557246371404d);
        org.junit.Assert.assertNotNull(vector3D31);
    }

    @Test
    public void test11936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11936");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation18.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray29 = rotation18.getAngles(rotationOrder28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder28.getA1();
        java.lang.String str31 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(vector3D32, 1.6126664157399304d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "XZX" + "'", str31, "XZX");
        org.junit.Assert.assertNotNull(vector3D32);
    }

    @Test
    public void test11937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11937");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.5565514292469029d), 0.5930129834791575d, (-2.4051549007682744E-4d));
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D3, (-0.41939638214411645d));
        double double6 = rotation5.getQ1();
        double double7 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1), 0.5773502691896258d, 3.141592653589793d, true);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double15 = vector3D14.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double18 = vector3D17.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.add(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation13.applyInverseTo(vector3D19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        double double23 = vector3D22.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation13.applyInverseTo(vector3D22);
        double[][] doubleArray25 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation13.getAxis();
        double double27 = rotation13.getQ1();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation5.applyTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((-0.8775825618903728d), 0.7950731247900203d, (double) 100.0f, 3.141592653589793d, false);
        double[][] doubleArray35 = rotation34.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation13.applyTo(rotation34);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.14245435706306606d) + "'", double6 == (-0.14245435706306606d));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9780937852383372d + "'", double7 == 0.9780937852383372d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.2862647032613221d) + "'", double27 == (-0.2862647032613221d));
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(rotation36);
    }

    @Test
    public void test11938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11938");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 1.3061290504076808d, (-2.0000000000000018d), (-0.14055002628904184d));
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, (double) (byte) 100, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.add(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D14.add(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D16.negate();
        double double19 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double22 = vector3D21.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double25 = vector3D24.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.add(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D26.add(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double31 = vector3D30.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double34 = vector3D33.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.add(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double39 = vector3D38.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D45.add(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D33, (double) 100, vector3D38, (double) 1.0f, vector3D43, (double) 10L, vector3D48);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(vector3D27, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D16.add((double) 100.0f, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, 1.5480028924187785d, 99.0d);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.add(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D(6.92820323027551d, vector3D12, 0.07457697061274195d, vector3D56);
        double double58 = vector3D12.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D(0.6245426019590317d, 0.9530206138714226d, 99.96860270161358d);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D12.subtract((-2.2842998762515682E-6d), vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D12.scalarMultiply(0.9997402409212464d);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 100.60318086422517d + "'", double58 == 100.60318086422517d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
    }

    @Test
    public void test11939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11939");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation18.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray29 = rotation18.getAngles(rotationOrder28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, 1.4278296224057285d, 1.0d, 0.0d);
        java.lang.String str35 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, 0.9999875148453954d, 0.6438988987070706d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, 0.0d, (-0.10409679898968999d), 0.9249511183386776d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "XZX" + "'", str35, "XZX");
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
    }

    @Test
    public void test11940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11940");
        java.lang.Throwable throwable6 = null;
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("hi!", throwable6);
        java.lang.Object[] objArray8 = mathException7.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", objArray8);
        java.lang.Throwable throwable11 = null;
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", throwable11);
        java.lang.Object[] objArray13 = mathException12.getArguments();
        java.lang.Object[] objArray14 = mathException12.getArguments();
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray8, (java.lang.Throwable) mathException12);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation23.applyTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation36.applyTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation30.applyInverseTo(rotation36);
        double double45 = rotation44.getQ2();
        double[][] doubleArray46 = rotation44.getMatrix();
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray46);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray46);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("", objArray8, (java.lang.Throwable) notARotationMatrixException48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("Cardan angles singularity", (java.lang.Throwable) notARotationMatrixException48);
        java.lang.Object[] objArray51 = mathException50.getArguments();
        java.lang.String str52 = mathException50.getPattern();
        java.lang.Object[] objArray53 = mathException50.getArguments();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double58 = vector3D57.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double61 = vector3D60.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.add(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double66 = vector3D65.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D65);
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder73.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D72.add(vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D60, (double) 100, vector3D65, (double) 1.0f, vector3D70, (double) 10L, vector3D75);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D76, (double) 1.0f);
        double double79 = rotation78.getQ1();
        double[][] doubleArray80 = rotation78.getMatrix();
        java.lang.Throwable throwable82 = null;
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("hi!", throwable82);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray80, (java.lang.Throwable) mathException83);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Throwable) mathException83);
        java.lang.Throwable[] throwableArray86 = mathException85.getSuppressed();
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: YZX", objArray53, (java.lang.Throwable) mathException85);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.577350269189626d + "'", double45 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Cardan angles singularity" + "'", str52, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.0d) + "'", double79 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(throwableArray86);
    }

    @Test
    public void test11941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11941");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.5707963267948966d), (double) 0L, 0.031397298386422245d, (double) ' ', true);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation29.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation23.applyInverseTo(rotation29);
        double double38 = rotation37.getQ2();
        double[][] doubleArray39 = rotation37.getMatrix();
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException41 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException42 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(doubleArray39, (double) 10);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation5.applyTo(rotation45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double49 = vector3D48.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double52 = vector3D51.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.add(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double57 = vector3D56.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D56);
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder64.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D63.add(vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D51, (double) 100, vector3D56, (double) 1.0f, vector3D61, (double) 10L, vector3D66);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(vector3D67, (double) 1.0f);
        double double70 = rotation69.getQ2();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation45.applyInverseTo(rotation69);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation71.revert();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9987969075985873d + "'", double6 == 0.9987969075985873d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.577350269189626d + "'", double38 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.479425538604203d + "'", double70 == 0.479425538604203d);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
    }

    @Test
    public void test11942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11942");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double1 = vector3D0.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.add(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D5.add(vector3D6);
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.add((double) (short) 1, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        double double14 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D11, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double20 = vector3D19.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double23 = vector3D22.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.add(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D24.add(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double29 = vector3D28.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double32 = vector3D31.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.add(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.add(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D17, (double) (short) 0, vector3D26, (-1.0d), vector3D33, (double) (-1.0f), vector3D37);
        double double39 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double43 = vector3D42.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double46 = vector3D45.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.add(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double51 = vector3D50.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D50);
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder58.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D57.add(vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D45, (double) 100, vector3D50, (double) 1.0f, vector3D55, (double) 10L, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D17.add((double) (short) -1, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D17.negate();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double66 = vector3D65.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double69 = vector3D68.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.add(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D70.add(vector3D71);
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder74.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder74.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.add((double) (short) 1, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D17.subtract((double) (byte) 0, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D76.negate();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D11.subtract((double) (short) 10, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D11.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D(0.0d, 9.799851417283954E-4d);
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D11, vector3D84);
        double double86 = vector3D85.getZ();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
    }

    @Test
    public void test11943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11943");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.8610036570415698d), (-1.5725491049951956d), 0.0d, (-1.1071487177940904d), false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D13.add(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation12.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D18.orthogonal();
        double double20 = vector3D19.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D17.subtract(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double25 = vector3D24.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double28 = vector3D27.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.add(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double33 = vector3D32.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D39.add(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D27, (double) 100, vector3D32, (double) 1.0f, vector3D37, (double) 10L, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D32.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D21.add((double) ' ', vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double50 = vector3D49.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D45.subtract((double) (short) 0, vector3D51);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D45, (double) (byte) -1);
        double double55 = rotation54.getQ0();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation5.applyInverseTo(rotation54);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.8610036570415698d) + "'", double6 == (-0.8610036570415698d));
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.8775825618903728d + "'", double55 == 0.8775825618903728d);
        org.junit.Assert.assertNotNull(rotation56);
    }

    @Test
    public void test11944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11944");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        java.lang.String str4 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.1697758978627814d, (-0.046357877526357234d), (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.8662263958472479d, 4.0d, (-0.46047562575558015d));
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder0.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YZY" + "'", str2, "YZY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "YZY" + "'", str4, "YZY");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
    }

    @Test
    public void test11945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11945");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.479425538604203d), 0.8775825618903725d, 0.9184977310046263d, 0.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double18 = vector3D17.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double21 = vector3D20.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.add(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double26 = vector3D25.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D32.add(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D20, (double) 100, vector3D25, (double) 1.0f, vector3D30, (double) 10L, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double40 = vector3D39.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double43 = vector3D42.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.add(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double48 = vector3D47.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D47);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D54.add(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D42, (double) 100, vector3D47, (double) 1.0f, vector3D52, (double) 10L, vector3D57);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D58, (double) 1.0f);
        double double61 = vector3D58.getY();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D20.subtract(0.577350269189626d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D(99.0d, vector3D13, (double) 1.0f, vector3D20);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D64, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D64.scalarMultiply(99.00000000000017d);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D68.scalarMultiply((-0.004748774471446504d));
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (-0.32355350711941916d));
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D75.scalarMultiply((-0.6916803607181152d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder78.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder78.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder78.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder78.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D75.subtract(vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D68.add(vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D((double) '4', vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D6.subtract(0.07130383924600521d, vector3D85);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-99.0d) + "'", double61 == (-99.0d));
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D86);
    }

    @Test
    public void test11946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11946");
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double double10 = rotation9.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation29.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation23.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation9.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation44.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation57.applyTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation51.applyInverseTo(rotation57);
        double double66 = rotation65.getAngle();
        double[][] doubleArray67 = rotation65.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation23.applyInverseTo(rotation65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double70 = vector3D69.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double73 = vector3D72.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.add(0.0d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D74.add(vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation23.applyInverseTo(vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D77.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D(0.8775825618903732d, vector3D78);
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder81.getA2();
        java.lang.String str84 = rotationOrder81.toString();
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(rotationOrder81, 1.5707963267948966d, (-0.5773502691896258d), (-0.2465752951392704d));
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotationOrder81.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D89.scalarMultiply((-0.046357877526357234d));
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, vector3D78, (-0.479425538604203d), vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D93 = new org.apache.commons.math.geometry.Vector3D((-3.119974310172809d), vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D93.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D95 = new org.apache.commons.math.geometry.Vector3D(0.2829140881455825d, vector3D94);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.5773502691896258d + "'", double10 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 3.141592653589793d + "'", double66 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "ZYX" + "'", str84, "ZYX");
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D94);
    }

    @Test
    public void test11947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11947");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation7.applyTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation20.applyTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation33.applyTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation46.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation40.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation26.applyTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation13.applyInverseTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation55.revert();
        double double58 = rotation55.getQ0();
        double[][] doubleArray59 = rotation55.getMatrix();
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException", (java.lang.Object[]) doubleArray59);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("hi!", throwable64);
        java.lang.Object[] objArray66 = mathException65.getArguments();
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException65);
        java.lang.Object[] objArray68 = mathException67.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException69 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: YXZ", objArray68);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException70 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ZXY", objArray68);
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) doubleArray59, (java.lang.Throwable) notARotationMatrixException70);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1.0000000000000004d) + "'", double58 == (-1.0000000000000004d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
    }

    @Test
    public void test11948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11948");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double1 = vector3D0.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.add(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D5.add(vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.add(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double18 = vector3D17.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D24.add(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D12, (double) 100, vector3D17, (double) 1.0f, vector3D22, (double) 10L, vector3D27);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D6, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D31.add(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D6.add((double) (byte) 0, vector3D34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D6.add(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D6.scalarMultiply((double) 1L);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D40.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D43.negate();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        double double52 = rotation51.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D53.add(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation51.applyTo(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D43.subtract(0.23216520467998758d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((-1.5707963267948966d), 0.6358754505939606d, 0.4546487134128409d);
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D(2.77555756156289E-17d, 2.05109822686088d, 1.5707963267948966d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder67, 3.9999999999999982d, (-2.356194490192345d), (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder67.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder67.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D75.normalize();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D43, vector3D62, vector3D66, vector3D75);
        org.apache.commons.math.geometry.Rotation rotation78 = rotation77.revert();
        double double79 = rotation78.getQ3();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.031397298386422245d + "'", double52 == 0.031397298386422245d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.8488558726255111d) + "'", double79 == (-0.8488558726255111d));
    }

    @Test
    public void test11949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11949");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.4617775530898647d), 0.23742361854115038d, 0.4703706401018637d, 65.0d, false);
    }

    @Test
    public void test11950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11950");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(100.0d, (double) (byte) 0, (-0.2862647032613221d));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation9.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation22.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation16.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation16.revert();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation16.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D3.add(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D3.normalize();
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
    }

    @Test
    public void test11951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11951");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation7.applyTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation20.applyTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation14.applyInverseTo(rotation20);
        double double29 = rotation28.getQ2();
        double[][] doubleArray30 = rotation28.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException31 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray30);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(doubleArray30, (double) 10.0f);
        java.lang.Throwable throwable36 = null;
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("hi!", throwable36);
        java.lang.Object[] objArray38 = mathException37.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException39 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", objArray38);
        java.lang.String str40 = notARotationMatrixException39.getPattern();
        java.lang.Throwable throwable43 = null;
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("hi!", throwable43);
        java.lang.Object[] objArray45 = mathException44.getArguments();
        java.lang.Object[] objArray46 = mathException44.getArguments();
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException44);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) mathException44);
        notARotationMatrixException39.addSuppressed((java.lang.Throwable) mathException48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) doubleArray30, (java.lang.Throwable) mathException48);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(doubleArray30, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation71 = rotation64.applyTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation84 = rotation77.applyTo(rotation83);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation71.applyInverseTo(rotation77);
        org.apache.commons.math.geometry.Rotation rotation86 = rotation71.revert();
        org.apache.commons.math.geometry.Rotation rotation87 = rotation58.applyTo(rotation86);
        double double88 = rotation58.getQ2();
        org.apache.commons.math.geometry.Rotation rotation89 = rotation52.applyInverseTo(rotation58);
        double double90 = rotation58.getQ2();
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.577350269189626d + "'", double29 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.5773502691896258d + "'", double88 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.5773502691896258d + "'", double90 == 0.5773502691896258d);
    }

    @Test
    public void test11952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11952");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation19.applyInverseTo(rotation25);
        double double34 = rotation25.getQ1();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation6.applyTo(rotation25);
        double[][] doubleArray36 = rotation25.getMatrix();
        java.lang.Throwable throwable39 = null;
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("hi!", throwable39);
        java.lang.Object[] objArray41 = mathException40.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException42 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", objArray41);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("Cardan angles singularity", (java.lang.Object[]) doubleArray36, (java.lang.Throwable) notARotationMatrixException42);
        java.lang.Throwable[] throwableArray44 = mathException43.getSuppressed();
        java.lang.Throwable throwable47 = null;
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("hi!", throwable47);
        java.lang.Object[] objArray49 = mathException48.getArguments();
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray49);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException50);
        java.lang.Throwable throwable54 = null;
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("hi!", throwable54);
        java.lang.Object[] objArray56 = mathException55.getArguments();
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException57);
        mathException51.addSuppressed((java.lang.Throwable) mathException58);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation67.applyTo(rotation73);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation87 = rotation80.applyTo(rotation86);
        org.apache.commons.math.geometry.Rotation rotation88 = rotation74.applyInverseTo(rotation80);
        double double89 = rotation88.getQ2();
        double[][] doubleArray90 = rotation88.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException91 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray90);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException92 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Object[]) doubleArray90);
        mathException51.addSuppressed((java.lang.Throwable) notARotationMatrixException92);
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) throwableArray44, (java.lang.Throwable) mathException51);
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException94);
        java.lang.String str96 = mathException95.toString();
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.5773502691896258d + "'", double34 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.577350269189626d + "'", double89 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "org.apache.commons.math.MathException: ZXZ" + "'", str96, "org.apache.commons.math.MathException: ZXZ");
    }

    @Test
    public void test11953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11953");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double7 = vector3D6.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.add(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D8.add(vector3D9);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder12.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.add((double) (short) 1, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.minusK;
        double double17 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D14, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D1.subtract(0.2737243725398427d, vector3D14);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation24.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation30.revert();
        double double33 = rotation32.getAngle();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation39.applyTo(rotation45);
        double double47 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation32.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1), 0.5773502691896258d, 3.141592653589793d, true);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double56 = vector3D55.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double59 = vector3D58.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.add(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation54.applyInverseTo(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation45.applyInverseTo(vector3D60);
        double double63 = vector3D62.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D14, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D64.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D65.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 3.141592653589793d + "'", double33 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.5773502691896258d + "'", double47 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.7297276562269664d) + "'", double63 == (-0.7297276562269664d));
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
    }

    @Test
    public void test11954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11954");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1), 0.5773502691896258d, 3.141592653589793d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, 1.3834364814420919d, (-0.32355350711941916d), 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, 1.5077857260490912d, 0.16527500348741267d, Double.NaN);
        java.lang.String str18 = rotationOrder6.toString();
        double[] doubleArray19 = rotation5.getAngles(rotationOrder6);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder23.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder23.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder23.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder23.getA3();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, 0.7625584504796028d, (-0.004748774471446504d), 0.01934871530964257d);
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder23.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D(1.0000000000000002d, (double) (short) 1, (-1.1071487177940904d));
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D34.add(1.2831853071795876d, vector3D39);
        double double41 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D21.subtract((double) 10, vector3D39);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D21, (-1.1504440784612406d));
        double double45 = rotation44.getQ3();
        double double46 = rotation44.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "YZY" + "'", str18, "YZY");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[2.3098248068755094, 2.467820091963933, 2.9261629491074794]");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0000000000000002d + "'", double41 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
    }

    @Test
    public void test11955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11955");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, 2.162171184425803d, 99.00505037623081d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) ' ', 0.5773502691896258d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((-0.19151376815678886d), vector3D7, 0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.scalarMultiply((-0.8662263958472479d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder15.getA2();
        double double19 = vector3D18.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double22 = vector3D21.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D21.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder26.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double34 = vector3D33.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double37 = vector3D36.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.add(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.add(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double43 = vector3D42.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double46 = vector3D45.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.add(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D47.add(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D31, (double) (short) 0, vector3D40, (-1.0d), vector3D47, (double) (-1.0f), vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D47.negate();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D28.add((double) (byte) 1, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D21.add((double) 1, vector3D28);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D2, vector3D12, vector3D18, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D18.scalarMultiply(0.019719451425794062d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D58);
    }

    @Test
    public void test11956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11956");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.884098232924101d), 1.821977809728579d, 0.7071067811865476d, 0.9998559713293932d, false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str8 = rotationOrder7.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder7.getA2();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, 1.036785914315164d, (-0.3652032069396147d), 0.704041030906696d);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray14 = rotation5.getAngles(rotationOrder7);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Cardan angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "YXZ" + "'", str8, "YXZ");
        org.junit.Assert.assertNotNull(vector3D9);
    }

    @Test
    public void test11957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11957");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(99.00000000000017d, 1.0000000000000009d);
        double double3 = vector3D2.getAlpha();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-1.5309649148732132d) + "'", double3 == (-1.5309649148732132d));
    }

    @Test
    public void test11958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11958");
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation10.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation23.applyTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation17.applyInverseTo(rotation23);
        double double32 = rotation31.getQ2();
        double[][] doubleArray33 = rotation31.getMatrix();
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray33);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException35 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray33);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException36 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", (java.lang.Object[]) doubleArray33);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(doubleArray33, (double) 0L);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException39 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray33);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(doubleArray33, 0.47037064010186347d);
        java.lang.Throwable throwable48 = null;
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("hi!", throwable48);
        java.lang.Object[] objArray50 = mathException49.getArguments();
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("YXZ", (java.lang.Throwable) mathException51);
        java.lang.Throwable throwable54 = null;
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("hi!", throwable54);
        java.lang.Object[] objArray56 = mathException55.getArguments();
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException55);
        mathException51.addSuppressed((java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("Cardan angles singularity", (java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity", (java.lang.Throwable) mathException57);
        java.lang.Object[] objArray61 = mathException60.getArguments();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation76 = rotation69.applyTo(rotation75);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation89 = rotation82.applyTo(rotation88);
        org.apache.commons.math.geometry.Rotation rotation90 = rotation76.applyInverseTo(rotation82);
        double double91 = rotation90.getQ2();
        double[][] doubleArray92 = rotation90.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException93 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray92);
        java.lang.String str94 = notARotationMatrixException93.getPattern();
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) notARotationMatrixException93);
        org.apache.commons.math.MathException mathException96 = new org.apache.commons.math.MathException("YXZ", objArray61, (java.lang.Throwable) mathException95);
        org.apache.commons.math.MathException mathException97 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException95);
        org.apache.commons.math.MathException mathException98 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", (java.lang.Object[]) doubleArray33, (java.lang.Throwable) mathException95);
        java.lang.String str99 = mathException95.toString();
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.577350269189626d + "'", double32 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.577350269189626d + "'", double91 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "Cardan angles singularity" + "'", str94, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.MathException: " + "'", str99, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: ");
    }

    @Test
    public void test11959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11959");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-2.37665256894172d), (-0.5746389659402151d));
        double double4 = vector3D3.getY();
        double double5 = vector3D3.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D((-2.8706458032513726d), vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-0.5812713741723026d) + "'", double4 == (-0.5812713741723026d));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-2.37665256894172d) + "'", double5 == (-2.37665256894172d));
    }

    @Test
    public void test11960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11960");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double9 = vector3D8.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.add(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.add(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double18 = vector3D17.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double21 = vector3D20.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.add(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double26 = vector3D25.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D32.add(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D20, (double) 100, vector3D25, (double) 1.0f, vector3D30, (double) 10L, vector3D35);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D14, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D39.add(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D14.add((double) (byte) 0, vector3D42);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D14.add(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D14.scalarMultiply((double) 1L);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double53 = vector3D52.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double56 = vector3D55.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.add(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D57.add(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double62 = vector3D61.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double65 = vector3D64.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.add(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D66.add(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D50, (double) (short) 0, vector3D59, (-1.0d), vector3D66, (double) (-1.0f), vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D66.negate();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D48, vector3D72);
        double double74 = vector3D48.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation5.applyInverseTo(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D75.normalize();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D76, 1.628661748532675d);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D76.negate();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5773502691896258d + "'", double6 == 0.5773502691896258d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 3.141592653589793d + "'", double7 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D79);
    }

    @Test
    public void test11961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11961");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        double double6 = vector3D5.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.5707963267948966d + "'", double6 == 1.5707963267948966d);
    }

    @Test
    public void test11962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11962");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyTo(rotation39);
        double double41 = rotation40.getAngle();
        double[][] doubleArray42 = rotation40.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray44 = rotation40.getAngles(rotationOrder43);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test11963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11963");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) 'a', (double) (short) -1, (double) (short) 0);
        double double7 = rotation6.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        double double14 = rotation13.getQ1();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyTo(rotation13);
        double[][] doubleArray16 = rotation15.getMatrix();
        java.lang.Throwable throwable22 = null;
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", throwable22);
        java.lang.Object[] objArray24 = mathException23.getArguments();
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("YXZ", (java.lang.Throwable) mathException25);
        java.lang.Throwable throwable28 = null;
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("hi!", throwable28);
        java.lang.Object[] objArray30 = mathException29.getArguments();
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException29);
        mathException25.addSuppressed((java.lang.Throwable) mathException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("Cardan angles singularity", (java.lang.Throwable) mathException31);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("ZYZ", (java.lang.Throwable) mathException31);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) doubleArray16, (java.lang.Throwable) mathException34);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException36 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: YXZ", (java.lang.Object[]) doubleArray16);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(doubleArray16, 1.6471426215471108d);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.8610036570415694d + "'", double7 == 0.8610036570415694d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.031397298386422245d + "'", double14 == 0.031397298386422245d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
    }

    @Test
    public void test11964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11964");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.6443138049601829d), 0.7701511529340701d, 0.4794255386042032d, 0.9991123001277266d, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D8.add(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D10.negate();
        double double13 = vector3D10.getX();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D7, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, 1.3834364814420919d, (-0.32355350711941916d), 1.5707963267948966d);
        double[] doubleArray20 = rotation14.getAngles(rotationOrder15);
        double double21 = rotation14.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation5.applyInverseTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D35.add(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation34.applyInverseTo(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D40.orthogonal();
        double double42 = vector3D41.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D39.subtract(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double47 = vector3D46.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double50 = vector3D49.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.add(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double55 = vector3D54.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D54);
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder58.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D61.add(vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D49, (double) 100, vector3D54, (double) 1.0f, vector3D59, (double) 10L, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D54.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D43.add((double) ' ', vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double72 = vector3D71.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D67.subtract((double) (short) 0, vector3D73);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D67, (double) (byte) -1);
        org.apache.commons.math.geometry.Rotation rotation77 = rotation28.applyTo(rotation76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation77.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D78.negate();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D78.scalarMultiply((-0.9102811658176736d));
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D81.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation22.applyInverseTo(vector3D82);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 1.5707963267948963, 0.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.7071067811865475d) + "'", double21 == (-0.7071067811865475d));
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
    }

    @Test
    public void test11965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11965");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation19.applyTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation13.applyInverseTo(rotation19);
        double[][] doubleArray28 = rotation13.getMatrix();
        java.lang.Throwable throwable33 = null;
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", throwable33);
        java.lang.Object[] objArray35 = mathException34.getArguments();
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException36);
        java.lang.Throwable throwable40 = null;
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", throwable40);
        java.lang.Object[] objArray42 = mathException41.getArguments();
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray42);
        java.lang.Object[] objArray44 = mathException43.getArguments();
        java.lang.String str45 = mathException43.getPattern();
        mathException36.addSuppressed((java.lang.Throwable) mathException43);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException36);
        java.lang.Object[] objArray48 = mathException47.getArguments();
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity", objArray48);
        java.lang.Object[] objArray50 = mathException49.getArguments();
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("ZXY", (java.lang.Object[]) doubleArray28, (java.lang.Throwable) mathException49);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation61.applyTo(rotation67);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation74.applyTo(rotation80);
        org.apache.commons.math.geometry.Rotation rotation82 = rotation68.applyInverseTo(rotation74);
        double double83 = rotation82.getQ2();
        double[][] doubleArray84 = rotation82.getMatrix();
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray84);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException86 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray84);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("YXZ", (java.lang.Object[]) doubleArray84);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException88 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXZ", (java.lang.Object[]) doubleArray84);
        mathException51.addSuppressed((java.lang.Throwable) notARotationMatrixException88);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str45, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.577350269189626d + "'", double83 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray84);
    }

    @Test
    public void test11966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11966");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D4.scalarMultiply((-1.5707963267948966d));
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D6, 0.9724711741591723d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 1L, (-1.0000000000000004d), (double) ' ', true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder15.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder15.getA2();
        double[] doubleArray20 = rotation14.getAngles(rotationOrder15);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder15.getA1();
        double[] doubleArray22 = rotation8.getAngles(rotationOrder15);
        double double23 = rotation8.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "XZX" + "'", str3, "XZX");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0882830317724195, 0.08431492297770622, 2.6590793585673165]");
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[3.141592653589793, 0.9724711741591723, 3.141592653589793]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.46730109623291294d + "'", double23 == 0.46730109623291294d);
    }

    @Test
    public void test11967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11967");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation18);
        double double27 = rotation26.getQ2();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        double double34 = rotation33.getQ1();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation26.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA2();
        double[] doubleArray38 = rotation33.getAngles(rotationOrder36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder36.getA1();
        java.lang.String str40 = rotationOrder36.toString();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, 99.0d, (double) (short) 1, 3.9999999999999982d);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder36.getA2();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, 100.00499987500626d, 1.5309649148733837d, 0.005773438543149319d);
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder36.getA2();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, 0.9724711741591723d, 100.49963690658076d, 0.8507875925362643d);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder36.getA1();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.577350269189626d + "'", double27 == 0.577350269189626d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.031397298386422245d + "'", double34 == 0.031397298386422245d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[3.078582052843988, 0.019349922785144295, 3.120983474296034]");
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ZYX" + "'", str40, "ZYX");
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D55);
    }

    @Test
    public void test11968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11968");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double3 = vector3D2.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double6 = vector3D5.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.add(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double11 = vector3D10.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D17.add(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D5, (double) 100, vector3D10, (double) 1.0f, vector3D15, (double) 10L, vector3D20);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D21, (double) 1.0f);
        double double24 = rotation23.getQ1();
        double[][] doubleArray25 = rotation23.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(doubleArray25, 0.21664530235664914d);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(doubleArray25, 0.2862647032613221d);
        double[][] doubleArray30 = rotation29.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(doubleArray30, 0.10978572574699574d);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: Cardan angles singularity", (java.lang.Object[]) doubleArray30);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-0.0d) + "'", double24 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray30);
    }

    @Test
    public void test11969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11969");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '#', 99.96860270161358d, (double) 1L, (-0.5773502691896261d), true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((-1.5707963267948966d), (double) 0L, 0.031397298386422245d, (double) ' ', true);
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double16 = vector3D15.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double19 = vector3D18.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.add(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double24 = vector3D23.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D30.add(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D18, (double) 100, vector3D23, (double) 1.0f, vector3D28, (double) 10L, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D23.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation11.applyInverseTo(vector3D37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation5.applyInverseTo(rotation11);
        double[][] doubleArray40 = rotation11.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 'a', (double) (short) -1, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation71 = rotation64.applyTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation58.applyInverseTo(rotation64);
        double double73 = rotation64.getQ1();
        org.apache.commons.math.geometry.Rotation rotation74 = rotation45.applyTo(rotation64);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation74.revert();
        double double76 = rotation74.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder77.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder77.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder77.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder77.getA2();
        java.lang.String str82 = rotationOrder77.toString();
        double[] doubleArray83 = rotation74.getAngles(rotationOrder77);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(rotationOrder77, 100.0d, 0.2737243725398427d, 0.7853981633974482d);
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder77.getA2();
        java.lang.String str89 = rotationOrder77.toString();
        double[] doubleArray90 = rotation11.getAngles(rotationOrder77);
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(rotationOrder77, 0.06903193193969676d, 0.8507875925362643d, 3.1027608203094017d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.9987969075985873d + "'", double12 == 0.9987969075985873d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.5773502691896258d + "'", double73 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.5480028924187776d + "'", double76 == 1.5480028924187776d);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "ZYX" + "'", str82, "ZYX");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.1219587296945104, -0.07979586378305215, 1.178733300026532]");
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "ZYX" + "'", str89, "ZYX");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[3.043496716456538, 9.60940671577312E-5, 0.0019576135174841835]");
    }

    @Test
    public void test11970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11970");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.8775825618903732d, (double) (byte) -1, 0.479425538604203d);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyTo(rotation22);
        double double24 = rotation16.getAngle();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((-0.6154797086703874d), (-0.0d), 0.16977589786278138d, (-2.2835928143980874E-4d), true);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation16.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation10.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation10.revert();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation33.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 3.141592653589793d + "'", double24 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(vector3D34);
    }

    @Test
    public void test11971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11971");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        double double7 = vector3D6.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.5707963267948966d + "'", double7 == 1.5707963267948966d);
    }

    @Test
    public void test11972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11972");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation19.applyTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyTo(rotation40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation41.applyTo(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double49 = vector3D48.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double52 = vector3D51.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.add(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D53.add(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double58 = vector3D57.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double61 = vector3D60.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.add(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D62.add(vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D46, (double) (short) 0, vector3D55, (-1.0d), vector3D62, (double) (-1.0f), vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D62.negate();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D42.subtract((double) 1.0f, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D(0.2737243725398427d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D70.normalize();
        double double72 = vector3D71.getX();
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
    }

    @Test
    public void test11973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11973");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D1 = vector3D0.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D0.scalarMultiply((double) (short) -1);
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation9.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation22.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation35.applyTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation29.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation15.applyTo(rotation43);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        double[] doubleArray46 = rotation43.getAngles(rotationOrder45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation43.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D0.subtract(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D(3199.0023343686935d, 1.3957812166567987d);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.add(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D53.add(vector3D55);
        double double57 = vector3D55.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D55.normalize();
        double double59 = vector3D58.getDelta();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation65.applyTo(rotation71);
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(rotationOrder73, (double) (byte) -1, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation78 = rotation72.applyTo(rotation77);
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder79.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder79.getA2();
        double[] doubleArray82 = rotation77.getAngles(rotationOrder79);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder79.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder79.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder79.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D58.subtract(vector3D85);
        // The following exception was thrown during execution in test generation
        try {
            double double87 = org.apache.commons.math.geometry.Vector3D.angle(vector3D52, vector3D86);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null norm");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[2.034443935795702, -0.7297276562269669, 2.034443935795702]");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
    }

    @Test
    public void test11974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11974");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.3061290504076808d, (-2.0000000000000018d), (-0.14055002628904184d));
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyTo(rotation17);
        double[][] doubleArray19 = rotation17.getMatrix();
        double[][] doubleArray20 = rotation17.getMatrix();
        double double21 = rotation17.getAngle();
        double double22 = rotation17.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation29.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation42.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation55.applyTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation49.applyInverseTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation35.applyTo(rotation63);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        double[] doubleArray66 = rotation63.getAngles(rotationOrder65);
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder67.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder67.getA2();
        double[] doubleArray70 = rotation63.getAngles(rotationOrder67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder67.getA2();
        double[] doubleArray72 = rotation23.getAngles(rotationOrder67);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation5.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(0.4027175614403479d, 0.0d, 1.5480028924187776d, 0.6623004870541636d, true);
        org.apache.commons.math.geometry.Rotation rotation80 = rotation5.applyInverseTo(rotation79);
        double double81 = rotation80.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 3.141592653589793d + "'", double21 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.5773502691896258d + "'", double22 == 0.5773502691896258d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[2.034443935795702, -0.7297276562269669, 2.034443935795702]");
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.7853981633974483, 1.9106332362490182, 2.356194490192345]");
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.310419365073761d + "'", double81 == 0.310419365073761d);
    }

    @Test
    public void test11975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11975");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D12.add(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation11.applyInverseTo(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D17.orthogonal();
        double double19 = vector3D18.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D16.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double24 = vector3D23.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double27 = vector3D26.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.add(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double32 = vector3D31.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder39.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D38.add(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D26, (double) 100, vector3D31, (double) 1.0f, vector3D36, (double) 10L, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D31.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D20.add((double) ' ', vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double49 = vector3D48.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D44.subtract((double) (short) 0, vector3D50);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D44, (double) (byte) -1);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation5.applyTo(rotation53);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation54.getAxis();
        double double56 = rotation54.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder57, (double) (short) 1, (double) 0.0f, 3.9999999999999982d);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder57, (-2.356194490192345d), (-0.5773502691896261d), (double) ' ');
        double[] doubleArray66 = rotation54.getAngles(rotationOrder57);
        java.lang.String str67 = rotationOrder57.toString();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder57.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder57.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder57.getA2();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder57, 0.5063656411097588d, (-0.4231361643575562d), 0.644673805255843d);
        double double75 = rotation74.getQ0();
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.8818536098126042d + "'", double56 == 0.8818536098126042d);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[3.1097336084616667, -0.9803290969923704, 3.104576761375578]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ZYX" + "'", str67, "ZYX");
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.8811220913027799d + "'", double75 == 0.8811220913027799d);
    }

    @Test
    public void test11976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11976");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.2737243725398427d, (-1.2853901849197045d), (-64.00000000000006d), 0.6245426019590317d, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test11977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11977");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double1 = vector3D0.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.add(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D5.add(vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.add(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double18 = vector3D17.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D24.add(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D12, (double) 100, vector3D17, (double) 1.0f, vector3D22, (double) 10L, vector3D27);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D6, vector3D28);
        double double30 = rotation29.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA3();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (-1.5725491049951956d), 0.9999999999999999d, 0.5063656411097588d);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder31.getA1();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray38 = rotation29.getAngles(rotationOrder31);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D37);
    }

    @Test
    public void test11978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11978");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) -1, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D();
        double double9 = vector3D8.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D8.scalarMultiply(1.3834364814420919d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D6.add(0.7139148112028642d, vector3D11);
        double double13 = vector3D6.getZ();
        double double14 = vector3D6.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test11979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11979");
        java.lang.Throwable throwable2 = null;
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException("hi!", throwable2);
        java.lang.Object[] objArray4 = mathException3.getArguments();
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray4);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException5);
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", throwable9);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray11);
        java.lang.Object[] objArray13 = mathException12.getArguments();
        java.lang.String str14 = mathException12.getPattern();
        mathException5.addSuppressed((java.lang.Throwable) mathException12);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation23.applyTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation36.applyTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation30.applyInverseTo(rotation36);
        double double45 = rotation44.getQ2();
        double[][] doubleArray46 = rotation44.getMatrix();
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("YXZ", (java.lang.Throwable) mathException47);
        mathException12.addSuppressed((java.lang.Throwable) mathException48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException48);
        java.lang.Object[] objArray51 = mathException48.getArguments();
        java.lang.Throwable[] throwableArray52 = mathException48.getSuppressed();
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str14, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.577350269189626d + "'", double45 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(throwableArray52);
    }

    @Test
    public void test11980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11980");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation18);
        double double27 = rotation26.getQ2();
        double[][] doubleArray28 = rotation26.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(doubleArray28, 1.0000000000000009d);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(doubleArray28, 1.6950289842361217d);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation38.applyTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation45.applyInverseTo(rotation51);
        double double60 = rotation59.getQ2();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        double double67 = rotation66.getQ1();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation59.applyInverseTo(rotation66);
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA2();
        double[] doubleArray71 = rotation66.getAngles(rotationOrder69);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(rotationOrder69, (double) (byte) 100, (-2.356194490192345d), 0.8775825618903732d);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(rotationOrder69, 1.5480028924187779d, (-1.5707963267948966d), (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder69.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder69.getA1();
        double[] doubleArray82 = rotation32.getAngles(rotationOrder69);
        double double83 = rotation32.getQ3();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.577350269189626d + "'", double27 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.577350269189626d + "'", double60 == 0.577350269189626d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.031397298386422245d + "'", double67 == 0.031397298386422245d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[3.078582052843988, 0.019349922785144295, 3.120983474296034]");
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[2.0344439357957027, -0.7297276562269664, 2.0344439357957027]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.5773502691896258d + "'", double83 == 0.5773502691896258d);
    }

    @Test
    public void test11981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11981");
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation9.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation22.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation16.applyInverseTo(rotation22);
        double double31 = rotation30.getQ2();
        double[][] doubleArray32 = rotation30.getMatrix();
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("YXZ", (java.lang.Throwable) mathException33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: Cardan angles singularity", (java.lang.Throwable) mathException33);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException33);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.577350269189626d + "'", double31 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray32);
    }

    @Test
    public void test11982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11982");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(3.141592653589793d, 1.5707963267948963d, (-0.9386072654111782d), 99.00505037623081d, true);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D7.add(vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double17 = vector3D16.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double20 = vector3D19.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.add(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double25 = vector3D24.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D31.add(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D19, (double) 100, vector3D24, (double) 1.0f, vector3D29, (double) 10L, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double40 = vector3D39.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double43 = vector3D42.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.add(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D44.add(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double49 = vector3D48.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double52 = vector3D51.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.add(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D53.add(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D37, (double) (short) 0, vector3D46, (-1.0d), vector3D53, (double) (-1.0f), vector3D57);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D7, vector3D12, vector3D24, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D24.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) 100L, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D(99.0d, (-99.0d), (double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D61, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation5.applyTo(vector3D66);
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder68.getA3();
        java.lang.String str70 = rotationOrder68.toString();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder68.getA1();
        double[] doubleArray72 = rotation5.getAngles(rotationOrder68);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder68.getA3();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ZXY" + "'", str70, "ZXY");
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-3.078460788204133, -0.019942124283410023, -0.031099256471449115]");
        org.junit.Assert.assertNotNull(vector3D73);
    }

    @Test
    public void test11983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11983");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D1 = vector3D0.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D0.scalarMultiply((double) (short) -1);
        double double4 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D3, 0.7297276562269664d);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 3.141592653589793d, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.add(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation18.applyInverseTo(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.orthogonal();
        double double26 = vector3D25.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D23.subtract(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double31 = vector3D30.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double34 = vector3D33.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.add(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double39 = vector3D38.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D45.add(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D33, (double) 100, vector3D38, (double) 1.0f, vector3D43, (double) 10L, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.scalarMultiply((double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D27.add((double) ' ', vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double56 = vector3D55.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D51.subtract((double) (short) 0, vector3D57);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D51, (double) (byte) -1);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation12.applyTo(rotation60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation61.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D62.scalarMultiply((-0.0927489957179025d));
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D62);
        double double66 = rotation65.getQ1();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation65.revert();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-0.0d) + "'", double4 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(rotation67);
    }

    @Test
    public void test11984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11984");
        java.lang.Throwable throwable4 = null;
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", throwable4);
        java.lang.Object[] objArray6 = mathException5.getArguments();
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("ZXY", objArray6);
        java.lang.Throwable[] throwableArray8 = mathException7.getSuppressed();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation29.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation23.applyInverseTo(rotation29);
        double double38 = rotation37.getQ2();
        double[][] doubleArray39 = rotation37.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(doubleArray39, 1.0000000000000009d);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation50.applyTo(rotation56);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation70 = rotation63.applyTo(rotation69);
        org.apache.commons.math.geometry.Rotation rotation71 = rotation57.applyInverseTo(rotation63);
        double double72 = rotation71.getQ2();
        double[][] doubleArray73 = rotation71.getMatrix();
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray73);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException75 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray73);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("YXZ", (java.lang.Object[]) doubleArray73);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray39, (java.lang.Throwable) mathException76);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(doubleArray39, (double) 100L);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: Cardan angles singularity", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: XYZ", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) mathException80);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException82 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", (java.lang.Object[]) throwableArray8);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.577350269189626d + "'", double38 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.577350269189626d + "'", double72 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test11985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11985");
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation9.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation22.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation16.applyInverseTo(rotation22);
        double double31 = rotation30.getQ2();
        double[][] doubleArray32 = rotation30.getMatrix();
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray32);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException34 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray32);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException35 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", (java.lang.Object[]) doubleArray32);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(doubleArray32, (double) 0L);
        java.lang.Throwable throwable42 = null;
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("hi!", throwable42);
        java.lang.Object[] objArray44 = mathException43.getArguments();
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray44);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException45);
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", throwable49);
        java.lang.Object[] objArray51 = mathException50.getArguments();
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray51);
        java.lang.Object[] objArray53 = mathException52.getArguments();
        java.lang.String str54 = mathException52.getPattern();
        mathException45.addSuppressed((java.lang.Throwable) mathException52);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException45);
        java.lang.Object[] objArray57 = mathException56.getArguments();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double61 = vector3D60.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double64 = vector3D63.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.add(0.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double69 = vector3D68.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D68);
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder72.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder76.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D75.add(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D63, (double) 100, vector3D68, (double) 1.0f, vector3D73, (double) 10L, vector3D78);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(vector3D79, (double) 1.0f);
        double double82 = rotation81.getQ1();
        double[][] doubleArray83 = rotation81.getMatrix();
        java.lang.Throwable throwable85 = null;
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("hi!", throwable85);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray83, (java.lang.Throwable) mathException86);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity", objArray57, (java.lang.Throwable) mathException87);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) doubleArray32, (java.lang.Throwable) mathException87);
        java.lang.String str90 = mathException87.getPattern();
        java.lang.String str91 = mathException87.toString();
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.577350269189626d + "'", double31 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str54, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.0d) + "'", double82 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "org.apache.commons.math.MathException: " + "'", str91, "org.apache.commons.math.MathException: ");
    }

    @Test
    public void test11986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11986");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double1 = vector3D0.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.add(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D5.add(vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.add(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double18 = vector3D17.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D24.add(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D12, (double) 100, vector3D17, (double) 1.0f, vector3D22, (double) 10L, vector3D27);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D6, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D31.add(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D6.add((double) (byte) 0, vector3D34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D6.add(vector3D37);
        double double39 = vector3D6.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D6.negate();
        org.apache.commons.math.geometry.Vector3D vector3D41 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double42 = org.apache.commons.math.geometry.Vector3D.angle(vector3D40, vector3D41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
    }

    @Test
    public void test11987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11987");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double[][] doubleArray8 = rotation7.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", (java.lang.Object[]) doubleArray8);
        java.lang.Throwable[] throwableArray10 = notARotationMatrixException9.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ", (java.lang.Object[]) throwableArray10);
        java.lang.String str12 = notARotationMatrixException11.getPattern();
        java.lang.Throwable throwable19 = null;
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", throwable19);
        java.lang.Object[] objArray21 = mathException20.getArguments();
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("Cardan angles singularity", objArray21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("YXZ", (java.lang.Throwable) mathException22);
        java.lang.Throwable throwable25 = null;
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", throwable25);
        java.lang.Object[] objArray27 = mathException26.getArguments();
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException26);
        mathException22.addSuppressed((java.lang.Throwable) mathException28);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("Cardan angles singularity", (java.lang.Throwable) mathException28);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: Cardan angles singularity", (java.lang.Throwable) mathException28);
        java.lang.Object[] objArray32 = mathException31.getArguments();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation40.applyTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyInverseTo(rotation53);
        double double62 = rotation61.getQ2();
        double[][] doubleArray63 = rotation61.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException64 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray63);
        java.lang.String str65 = notARotationMatrixException64.getPattern();
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) notARotationMatrixException64);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("YXZ", objArray32, (java.lang.Throwable) mathException66);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException66);
        notARotationMatrixException11.addSuppressed((java.lang.Throwable) mathException68);
        java.lang.String str70 = notARotationMatrixException11.getPattern();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: " + "'", str12, "org.apache.commons.math.geometry.NotARotationMatrixException: ");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.577350269189626d + "'", double62 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Cardan angles singularity" + "'", str65, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: " + "'", str70, "org.apache.commons.math.geometry.NotARotationMatrixException: ");
    }

    @Test
    public void test11988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11988");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (-1L), (-0.6154797086703874d), (-1.0d));
        double double9 = rotation8.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D(4.80740671595891E-17d, 0.024200751848868333d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation8.applyTo(vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double15 = vector3D14.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double18 = vector3D17.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.add(0.0d, vector3D17);
        double double20 = vector3D14.getZ();
        double double21 = vector3D14.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D14.normalize();
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double26 = vector3D25.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double29 = vector3D28.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.add(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double34 = vector3D33.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D40.add(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D28, (double) 100, vector3D33, (double) 1.0f, vector3D38, (double) 10L, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D28.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) ' ', 0.5773502691896258d);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(vector3D12, vector3D22, vector3D45, vector3D48);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str52 = rotationOrder51.toString();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (double) 100.0f, 10.0d, (-0.0d));
        org.apache.commons.math.geometry.Rotation rotation57 = rotation56.revert();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation57.revert();
        double double59 = rotation57.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, 1.3834364814420919d, (-0.32355350711941916d), 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder60.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder60.getA3();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, 0.031397298386422245d, 3199.0023343686935d, 0.22313242151855506d);
        java.lang.String str71 = rotationOrder60.toString();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation57.applyTo(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D48.subtract((-0.7853981633974482d), vector3D72);
        double double75 = vector3D72.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "XZX" + "'", str3, "XZX");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2.0597657905208595d + "'", double9 == 2.0597657905208595d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "YXZ" + "'", str52, "YXZ");
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0744258244122507d + "'", double59 == 0.0744258244122507d);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "YZY" + "'", str71, "YZY");
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
    }

    @Test
    public void test11989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11989");
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation8.applyTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation15.applyInverseTo(rotation21);
        double[][] doubleArray30 = rotation15.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(doubleArray30, (-0.0d));
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation40.applyTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyInverseTo(rotation53);
        double double62 = rotation61.getQ2();
        double[][] doubleArray63 = rotation61.getMatrix();
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray63);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("YXZ", (java.lang.Throwable) mathException64);
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("Cardan angles singularity", (java.lang.Object[]) doubleArray30, (java.lang.Throwable) mathException64);
        java.lang.Object[] objArray67 = mathException66.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException68 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: ", objArray67);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException69 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", objArray67);
        java.lang.Throwable throwable70 = null;
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException(throwable70);
        notARotationMatrixException69.addSuppressed((java.lang.Throwable) mathException71);
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException((java.lang.Throwable) notARotationMatrixException69);
        java.lang.String str74 = notARotationMatrixException69.getPattern();
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.577350269189626d + "'", double62 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[[1.0000000000000009, 0.0, 0.0], [0.0, 1.0000000000000009, 0.0], [0.0, 0.0, 1.0000000000000009]]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: YXZ" + "'", str74, "org.apache.commons.math.geometry.NotARotationMatrixException: YXZ");
    }

    @Test
    public void test11990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11990");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) 0.0f, 9.799851417283954E-4d);
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(vector3D2, 0.2987679718243112d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) (byte) 1, (double) (-1L), Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder5.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder5.getA2();
        double double12 = vector3D11.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation4.applyInverseTo(vector3D11);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.5707963267948966d + "'", double12 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D13);
    }

    @Test
    public void test11991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11991");
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("");
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException4);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException", (java.lang.Throwable) mathException4);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: Euler angles singularity", (java.lang.Throwable) mathException6);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException6);
    }

    @Test
    public void test11992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11992");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        double double7 = rotation6.getQ0();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation13.applyTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation6.applyTo(rotation20);
        double double36 = rotation35.getQ1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation42.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation55.applyTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation49.applyInverseTo(rotation55);
        double double64 = rotation63.getQ2();
        double[][] doubleArray65 = rotation63.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(doubleArray65, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation68 = rotation35.applyInverseTo(rotation67);
        double[][] doubleArray69 = rotation67.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(doubleArray69, 0.2987679718243112d);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) doubleArray69);
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException72);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.577350269189626d) + "'", double36 == (-0.577350269189626d));
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.577350269189626d + "'", double64 == 0.577350269189626d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(doubleArray69);
    }

    @Test
    public void test11993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11993");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.5707963267948966d, (-0.5773502691896258d), (-0.2465752951392704d));
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZYX" + "'", str3, "ZYX");
        org.junit.Assert.assertNotNull(vector3D8);
    }

    @Test
    public void test11994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11994");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double5 = vector3D4.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double8 = vector3D7.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.add(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D9.add(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double14 = vector3D13.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double17 = vector3D16.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.add(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.add(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) 1L, vector3D2, (double) (short) 0, vector3D11, (-1.0d), vector3D18, (double) (-1.0f), vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double27 = vector3D26.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double30 = vector3D29.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.add(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double35 = vector3D34.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D41.add(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D29, (double) 100, vector3D34, (double) 1.0f, vector3D39, (double) 10L, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double49 = vector3D48.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, vector3D18, (double) 10, vector3D29, 1.0d, vector3D48);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D18, 1.0d);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation53.revert();
        double double55 = rotation54.getQ0();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.8775825618903728d) + "'", double55 == (-0.8775825618903728d));
    }

    @Test
    public void test11995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11995");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.577350269189626d, (-98.13936627634533d), 0.36923013130206433d);
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D3, (-2.0000000000000018d));
        double double6 = vector3D3.getNorm();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 98.1417590903376d + "'", double6 == 98.1417590903376d);
    }

    @Test
    public void test11996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11996");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.0927489957179025d), 0.6443809087574279d);
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(vector3D2, 1.6126664157399304d);
        double double5 = vector3D2.getAlpha();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-0.0927489957179025d) + "'", double5 == (-0.0927489957179025d));
    }

    @Test
    public void test11997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11997");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) (byte) -1, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation12.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder19.getA2();
        double[] doubleArray22 = rotation17.getAngles(rotationOrder19);
        java.lang.String str23 = rotationOrder19.toString();
        java.lang.String str24 = rotationOrder19.toString();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) (short) 1, (-0.47036844160641855d), (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, 0.03996449200510904d, (-0.3553802936803052d), (-135257.02641416987d));
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder19.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D33.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double42 = vector3D41.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double45 = vector3D44.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.add(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double50 = vector3D49.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D49);
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder57.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D56.add(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D44, (double) 100, vector3D49, (double) 1.0f, vector3D54, (double) 10L, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double63 = vector3D62.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double66 = vector3D65.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.add(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.minusJ;
        double double71 = vector3D70.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D70);
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder74.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder78.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D77.add(vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D65, (double) 100, vector3D70, (double) 1.0f, vector3D75, (double) 10L, vector3D80);
        double double82 = org.apache.commons.math.geometry.Vector3D.angle(vector3D44, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D37.subtract((double) (byte) 0, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D33, vector3D37);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 1.0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ZXY" + "'", str23, "ZXY");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ZXY" + "'", str24, "ZXY");
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
    }

    @Test
    public void test11998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11998");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation11.revert();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation38.applyTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation32.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation19.applyTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation11.applyTo(rotation48);
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.YZX;
        double[] doubleArray51 = rotation48.getAngles(rotationOrder50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, 0.0d, (-0.0927489957179025d), 0.7950731247900203d);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder50.getA3();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation71 = rotation64.applyTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 100, (double) 100.0f, (double) 100, true);
        org.apache.commons.math.geometry.Rotation rotation84 = rotation77.applyTo(rotation83);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation71.applyInverseTo(rotation77);
        org.apache.commons.math.geometry.Rotation rotation86 = rotation77.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder87 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray88 = rotation77.getAngles(rotationOrder87);
        java.lang.String str89 = rotationOrder87.toString();
        java.lang.String str90 = rotationOrder87.toString();
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotationOrder87.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D57.add(140.36381300036012d, vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D91.negate();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-2.034443935795702, 0.7297276562269669, -2.034443935795702]");
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertNotNull(rotationOrder87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[0.7853981633974483, 1.9106332362490184, 2.356194490192345]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "XZX" + "'", str89, "XZX");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "XZX" + "'", str90, "XZX");
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
    }

    @Test
    public void test11999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11999");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(1.4388425871203874d, (-0.7297276562269664d), 0.8818536098126042d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = new org.apache.commons.math.geometry.Vector3D(0.16977589786278138d, 0.42487699275774343d, (-0.8610036570415699d));
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.add(vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D3.negate();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D3, 3.6348058759900104d);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(0.07221594935178252d, 0.3288648599220874d, 1.8659899592204094d, 0.07548436372071674d, false);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyTo(rotation17);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotation18);
    }

    @Test
    public void test12000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test12000");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.922605457442905d), (-0.6995232749458042d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        double double8 = vector3D7.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZYZ" + "'", str2, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }
}

